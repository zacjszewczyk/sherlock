name: T1588.003: Code Signing Certificates
id: 5b99b3e1-58a4-4a8e-8a1a-3e83d8a7c2f1
description: This playbook helps determine if an adversary is acquiring and using stolen or deceptively obtained code signing certificates. It provides investigative steps to detect malware signed with known-bad certificates, identify executables signed with deceptive or typosquatted certificate subjects, find statistically rare certificates that might indicate targeted attacks, uncover unauthorized installation of root certificates into system stores, and spot anomalous network traffic related to certificate validation services like CRL and OCSP.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are any running processes or loaded modules signed with a certificate known to be malicious?
  context: This question aims to detect the direct use of compromised or maliciously acquired code signing certificates. Adversaries use these to sign their malware, helping it to bypass basic security controls and appear legitimate. By correlating certificate details (thumbprint, serial number, issuer) from every executed process against a threat intelligence feed of known-bad indicators, analysts can identify malware masquerading as signed, trusted software. A match is a high-confidence indicator of a malicious executable on the host.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - Domain Controllers
  - End-user Workstations
  - Application Servers
  - Network Egress Points
  - SIEM/Log Aggregator
  - Threat Intelligence Platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process_creation or image_load event:
        EXTRACT certificate_thumbprint, certificate_serial, certificate_issuer
        IF certificate_thumbprint OR certificate_serial OR certificate_issuer IN known_bad_cert_list:
          ALERT high_severity
- question: Are there any new or rare certificate issuers appearing in the environment on a very small number of hosts?
  context: This question helps detect targeted attacks where an adversary uses a unique or newly acquired code signing certificate for a specific campaign. Widespread legitimate software is typically signed by a common, established issuer. By baselining the certificate issuers seen over a long period (e.g., 90 days) and then identifying new issuers that appear on a small fraction of hosts, analysts can uncover potentially malicious software that has not been widely distributed.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - Domain Controllers
  - End-user Workstations
  - Application Servers
  - Network Egress Points
  - SIEM/Log Aggregator
  - Threat Intelligence Platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE_ISSUERS = get_unique_issuers(time_range='-90d')
      RECENT_ISSUERS = get_unique_issuers_per_host(time_range='-24h')
      FOR issuer, hosts in RECENT_ISSUERS:
        IF issuer NOT IN BASELINE_ISSUERS:
          prevalence = count(hosts) / total_enterprise_hosts
          IF prevalence < 0.005:
            FLAG issuer for investigation
- question: Can machine learning models identify signed executables that exhibit features characteristic of malware?
  context: This question explores a proactive, machine learning-based approach to detecting malicious signed binaries. Traditional signature and reputation methods can be bypassed. By training a classification model on features extracted from a certificate (e.g., string entropy, validity duration, key size, self-signed status), it is possible to identify malicious files that might otherwise appear legitimate. This allows analysts to investigate executables that the model flags with a high probability of being malicious, even without prior threat intelligence.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - Domain Controllers
  - End-user Workstations
  - Application Servers
  - Network Egress Points
  - SIEM/Log Aggregator
  - Threat Intelligence Platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new_signed_executable:
        EXTRACT certificate_features (entropy, validity, key_size, etc.)
        probability_score = classification_model.predict(certificate_features)
        IF probability_score > 0.85:
          FLAG executable for investigation
- question: Is any software signed by a certificate with a typosquatted subject name or an unexpected Certificate Authority (CA)?
  context: This question seeks to identify deceptive code signing certificates. Adversaries may use a subject name that is a common misspelling of a legitimate company (e.g., 'Mircosoft') or obtain a certificate for a legitimate-sounding name from a low-reputation or unexpected CA. By using regular expressions for typosquatting and maintaining a mapping of trusted publishers to their authorized CAs, analysts can detect these fraudulent certificates that are designed to trick users and security tools.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - All Endpoints
  - Public-Facing Web Servers
  - Software Distribution Points
  - DNS Servers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process_execution event with a certificate:
        EXTRACT subject_name, issuer_ca
        IF subject_name MATCHES typosquatting_regex_list:
          ALERT 'Typosquatted Subject Name'
        IF subject_name IN trusted_publishers AND issuer_ca NOT IN authorized_ca_map[subject_name]:
          ALERT 'Unexpected Certificate Authority'
- question: Are there any executables signed with a certificate whose subject name is very similar, but not identical, to a known brand or project name?
  context: This question uses string similarity algorithms to find subtle instances of typosquatting that regular expressions might miss. By calculating the Damerau-Levenshtein distance between a new certificate's subject and a list of high-value names, analysts can flag certificates that are only one or two characters different. Combining this with the rarity of the issuing CA provides a powerful signal for detecting targeted, deceptive malware.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - All Endpoints
  - Public-Facing Web Servers
  - Software Distribution Points
  - DNS Servers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new_certificate_subject:
        FOR each brand_name in high_value_brand_list:
          distance = DamerauLevenshtein(new_certificate_subject, brand_name)
          IF distance > 0 AND distance <= 2:
            rarity_score = get_issuer_rarity(certificate.issuer)
            IF rarity_score is high:
              FLAG certificate for review
- question: Can a 'deception score' generated by an NLP model identify malicious certificate strings?
  context: This question proposes using a sophisticated, machine learning-based method to evaluate the legitimacy of certificate subject and issuer strings. An NLP model can be trained to recognize patterns associated with deception, such as high entropy, unusual character ratios, or n-gram frequencies common in malicious naming schemes. By scoring all new certificates, analysts can automatically surface the most suspicious ones for investigation, especially when a high deception score is combined with low environmental prevalence.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - All Endpoints
  - Public-Facing Web Servers
  - Software Distribution Points
  - DNS Servers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new_certificate:
        deception_score = nlp_model.predict(certificate.subject + certificate.issuer)
        prevalence = get_host_prevalence(certificate)
        IF deception_score > threshold AND prevalence < low_prevalence_threshold:
          ALERT 'High Deception Score Certificate'
- question: Are any executables signed by a known low-reputation or free Certificate Authority?
  context: This question helps identify software that, while technically signed, does not meet enterprise standards for trust. Adversaries can easily obtain certificates from free or low-cost CAs to sign malware. While some legitimate tools might use these, their presence in an enterprise context is often anomalous. By maintaining a list of these CAs and alerting on signed executables from them, analysts can focus on potentially unwanted or malicious software.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - Log Management Platform (for baselining)
  - All Enterprise Endpoints and Servers
  - Network Egress/Ingress Points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      LOW_REP_CA_LIST = ['Let\'s Encrypt', 'Sectigo EssentialSSL', ...]
      FOR each process_creation event with a certificate:
        IF certificate.issuer IN LOW_REP_CA_LIST:
          ALERT 'Executable signed by low-reputation CA'
- question: Are any executables signed by a certificate with a statistically rare issuer/subject or an outlier validity period?
  context: This question focuses on identifying anomalous certificate attributes relative to an environmental baseline. Adversaries often use certificates that are unique to their campaign, making their issuer and subject names rare. They may also use unusually short or long validity periods. By establishing a statistical baseline of these attributes, analysts can automatically detect outliers that deviate significantly from normal activity, which can be strong indicators of malicious software.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - Log Management Platform (for baselining)
  - All Enterprise Endpoints and Servers
  - Network Egress/Ingress Points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE rarity distribution of issuers/subjects over 30 days.
      BASELINE statistical distribution of validity periods.
      FOR each new executable:
        IF issuer_rarity < 0.1% OR subject_rarity < 0.1%:
          ALERT 'Statistically rare certificate attribute'
        IF validity_period is outlier (e.g., > 3 std dev from mean):
          ALERT 'Anomalous certificate validity period'
- question: Has there been an anomalous spike in the number of new, unique certificate issuers observed in the environment?
  context: This question uses time-series analysis to detect a potential campaign at a macro level. A sudden, sharp increase in the variety of new certificate issuers seen across the enterprise can indicate that an adversary is deploying malware signed with many different, freshly acquired certificates. By monitoring the daily count of new issuers and applying an anomaly detection algorithm, security teams can get an early warning of a widespread attack and begin investigating the executables contributing to the spike.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Windows AppLocker Event ID 8002
  - Windows Code Integrity Event ID 3076
  - Zeek ssl.log
  - Log Management Platform (for baselining)
  - All Enterprise Endpoints and Servers
  - Network Egress/Ingress Points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR daily_count of new_unique_issuers.
      APPLY time-series anomaly detection model.
      IF anomaly is detected:
        TRIGGER investigation into the new issuers and associated executables from that day.
- question: Has a certificate been added to a system's certificate store by an unauthorized process?
  context: This question targets a key persistence and defense evasion technique: installing a malicious root certificate. If an adversary can add their own certificate to a trusted store, they can sign malware that the system will implicitly trust. This analytic focuses on detecting the act of installation itself by monitoring for certificate store modification events and alerting when the process performing the action is not on an approved allowlist (e.g., a browser, command prompt, or script instead of a standard system utility).
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 16
  - Microsoft-Windows-CAPI2/Operational Event ID 41
  - Windows Security Event ID 4673
  - Domain Controllers
  - Certificate Authority Servers
  - Critical Application Servers
  - Developer Workstations
  - Change Management Database/System
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      PROCESS_ALLOWLIST = ['mmc.exe', 'gpupdate.exe', ...]
      FOR each cert_store_modification_event:
        GET parent_process_name and command_line
        IF parent_process_name NOT IN PROCESS_ALLOWLIST:
          ALERT 'Unauthorized process modified certificate store'
        IF process is 'certutil.exe' AND command_line contains '-addstore':
          ALERT 'Direct certificate store addition detected'
- question: Has a certificate installation been performed by a statistically rare user or process for that type of system?
  context: This question adds behavioral context to certificate installation events. Legitimate installations are typically performed by specific users (like system administrators) or processes (like Group Policy) on specific types of machines. By creating a baseline of 'who does what where', analysts can detect anomalous behavior, such as a standard user account or a service account installing a certificate on a workstation, which is highly suspicious and could indicate a compromised account being used to establish trust for malware.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 16
  - Microsoft-Windows-CAPI2/Operational Event ID 41
  - Windows Security Event ID 4673
  - Domain Controllers
  - Certificate Authority Servers
  - Critical Application Servers
  - Developer Workstations
  - Change Management Database/System
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE frequency of user/process pairs performing cert installs per asset type.
      FOR each cert_install_event (user, process, asset_type):
        IF frequency of (user, process) on asset_type is statistically rare:
          ALERT 'Anomalous certificate installation by rare user/process pair'
- question: Was a certificate installation part of an anomalous chain of process events?
  context: This question uses graph-based analysis to model the entire sequence of events leading to a certificate installation. Legitimate installations follow predictable process chains (e.g., a Group Policy update). Malicious installations often originate from unusual parents, such as a user opening a document in Microsoft Word which then spawns a command shell to install a certificate. By identifying process execution paths that deviate from learned, legitimate graphs, analysts can detect these malicious event chains with high confidence.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 16
  - Microsoft-Windows-CAPI2/Operational Event ID 41
  - Windows Security Event ID 4673
  - Domain Controllers
  - Certificate Authority Servers
  - Critical Application Servers
  - Developer Workstations
  - Change Management Database/System
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL legitimate process chains leading to cert installation as a graph.
      FOR each new process chain ending in cert installation:
        IF chain_path deviates from the learned legitimate graph:
          ALERT 'Anomalous process chain led to certificate installation'
- question: Is there network traffic to CRL or OCSP endpoints that are not on an established environmental allowlist?
  context: This question helps detect when a malicious tool attempts to validate a custom or fraudulent certificate. Such certificates will have CRL (Certificate Revocation List) or OCSP (Online Certificate Status Protocol) endpoints that are not associated with legitimate CAs used in the enterprise. By creating a dynamic allowlist of known-good validation domains and alerting on any traffic to endpoints not on this list, analysts can identify suspicious network activity related to certificate validation.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek dns.log
  - Firewall Logs
  - Proxy Logs
  - Network Egress Points
  - DNS Servers
  - Web Proxies
  - DNS Resolver Logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ALLOWLIST = get_crl_ocsp_domains_from_known_certs(time_range='-30d')
      FOR each outbound DNS query or HTTP connection:
        IF destination is a CRL/OCSP endpoint AND destination NOT IN ALLOWLIST:
          ALERT 'Connection to unapproved CRL/OCSP endpoint'
- question: Have there been DNS requests for low-frequency or high-entropy CRL/OCSP domains?
  context: This question provides two methods for finding suspicious certificate validation traffic. First, by looking for requests to very rare CRL/OCSP domains, it can uncover attacker infrastructure that is not widely used. Second, by checking for high-entropy domain names, it can detect the use of Domain Generation Algorithms (DGAs), which are sometimes used by malware to create pseudo-random domains for C2 and other infrastructure, including potentially fake validation endpoints.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek dns.log
  - Firewall Logs
  - Proxy Logs
  - Network Egress Points
  - DNS Servers
  - Web Proxies
  - DNS Resolver Logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE frequency distribution of CRL/OCSP domains over 30 days.
      FOR each DNS request for a CRL/OCSP domain:
        IF domain_frequency is in bottom 0.5%:
          ALERT 'Request to rare CRL/OCSP domain'
        IF entropy(domain_name) is high:
          ALERT 'High entropy CRL/OCSP domain requested (possible DGA)'
- question: Is there a coordinated anomaly across multiple network indicators related to certificate validation?
  context: This question uses a multivariate approach to increase detection confidence. A single indicator might be noisy, but a simultaneous anomaly across several related metrics is a strong signal of malicious activity. This analytic tracks the volume of requests to new CRL/OCSP domains, the count of unique server IPs for these services, and the connection failure rate. A coordinated spike—for instance, in new domains that are also failing to connect—strongly suggests a malicious tool is attempting to use fake or revoked certificates.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Zeek dns.log
  - Firewall Logs
  - Proxy Logs
  - Network Egress Points
  - DNS Servers
  - Web Proxies
  - DNS Resolver Logs
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MODEL time-series for:
      1. volume_of_requests_to_new_crl_ocsp_domains
      2. daily_count_of_unique_crl_ocsp_ips
      3. ratio_of_failed_to_successful_connections
      IF coordinated anomaly is detected across multiple features:
        ALERT 'Multivariate anomaly in certificate validation traffic'