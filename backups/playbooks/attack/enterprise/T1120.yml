name: T1120: Peripheral Device Discovery
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has initiated peripheral device discovery. This involves detecting the use of known malicious discovery tools, the anomalous execution of built-in system utilities (e.g., 'systeminfo', 'Get-PnpDevice') by non-administrative users or from unusual parent processes, a statistically significant volume of discovery commands from a single host, or discovery activity occurring as part of a broader suspicious sequence, such as following a remote login and preceding access to a removable drive. The goal is to identify reconnaissance activity aimed at understanding connected hardware and storage devices.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a known malicious peripheral device discovery tool been executed?
    context: This question aims to detect the use of specific, known-bad tools (like Seatbelt or SharpHound) for device discovery. Matching file hashes or script block content against a threat intelligence feed provides a high-confidence indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - "Critical Servers (e.g., Domain Controllers, Application Servers)"
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: SEARCH process_creation_logs (EventID 4688) OR powershell_script_block_logs (EventID 4104) WHERE file_hash IN known_malicious_hashes OR script_block_hash IN known_malicious_hashes
  - question: Has a process been executed with an unusually complex or obfuscated command line, potentially indicating a hidden discovery tool?
    context: Adversaries may obfuscate their commands to evade simple signature-based detection. This question uses Shannon entropy to measure the randomness or complexity of command lines. A significant deviation from a user's or host's normal command-line entropy baseline can indicate obfuscation attempts.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - "Critical Servers (e.g., Domain Controllers, Application Servers)"
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each process_execution | CALCULATE command_line_entropy | COMPARE with historical_baseline (99th percentile) for user/host | ALERT if entropy > baseline_threshold
  - question: Does a process execution exhibit characteristics of a malicious discovery tool based on a machine learning model?
    context: This question leverages a machine learning model to provide a more nuanced detection method than simple signatures or statistical thresholds. By analyzing multiple features (parent process, arguments, user context), the model can identify novel or polymorphic threats that evade other detection methods.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - "Critical Servers (e.g., Domain Controllers, Application Servers)"
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each process_execution | EXTRACT features (parent_process, command_args, file_hash, user) | SCORE with classification_model | ALERT if score > high_probability_threshold
  - question: Has a non-administrative user executed a built-in utility or PowerShell cmdlet for peripheral device discovery?
    context: Legitimate system utilities are often abused by adversaries for "living off the land." This question focuses on identifying when these tools (e.g., 'systeminfo', 'Get-PnpDevice') are used by standard users who typically have no reason to perform such discovery tasks, which is a strong indicator of misuse.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - Domain Controllers
      - File Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: SEARCH process_creation_logs OR powershell_script_block_logs WHERE command IN discovery_command_watchlist AND user NOT IN IT_admin_group
  - question: Has a user or host executed an unusual volume of peripheral device discovery commands?
    context: While a single execution of a discovery command might be benign, a sudden burst of such activity from a single user or host is highly anomalous. This question establishes a baseline of normal execution frequency and alerts when that baseline is significantly exceeded, pointing to potential automated reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - Domain Controllers
      - File Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each user/host | COUNT discovery_command_executions in last 24h | COMPARE with historical_baseline (95th percentile) | ALERT if count > baseline_threshold
  - question: Does the execution of a peripheral device discovery command deviate from the established normal behavior for that user or host?
    context: This question uses an unsupervised machine learning model to detect anomalies without relying on pre-defined rules or signatures. It learns the "normal" context of command executions (user, host, time, parent process) and flags any execution that is a statistical outlier, which can uncover novel or subtle abuse of legitimate tools.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - Domain Controllers
      - File Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each discovery_command_execution | EXTRACT features (command, user, host, time, parent_process) | SCORE with anomaly_detection_model | ALERT if anomaly_score is high
  - question: Was a peripheral device discovery command spawned by an unusual parent process like a browser or office application?
    context: Legitimate discovery commands are typically run from an interactive shell or administrative script, not from applications like Microsoft Word or Chrome. This question looks for forbidden parent-child process relationships, which are a strong indicator that an initial access vector (e.g., a malicious document or drive-by download) is being used to initiate reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Web Servers
      - Application Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: SEARCH process_creation_logs WHERE child_process is_discovery_command AND parent_process IN forbidden_parent_list (e.g., WINWORD.EXE, CHROME.EXE)
  - question: Has a peripheral device discovery command been executed from a statistically rare parent process?
    context: This question moves beyond a static list of "bad" parents and instead uses historical data to determine what is normal. By identifying parent-child process pairs that have never or rarely been seen before, it can detect novel attack techniques or unusual administrative actions that warrant investigation.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Web Servers
      - Application Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each discovery_command_execution | LOOKUP probability of (parent_process, child_process) pair in historical_data | ALERT if probability < low_probability_threshold (e.g., 0.01)
  - question: Does the process execution chain leading to a peripheral device discovery command appear anomalous?
    context: Attacks often involve a sequence of process executions. This question uses sequence analysis models to learn what normal process chains look like. It can then identify when a discovery command appears in an abnormal sequence (e.g., browser.exe -> powershell.exe -> systeminfo.exe), which would be flagged as a high-risk anomaly, even if each individual step is not inherently malicious.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Web Servers
      - Application Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each process_chain ending in discovery_command | CALCULATE likelihood_score using sequence_model (HMM, LSTM) | ALERT if score is low or reconstruction_error is high
  - question: Has a single host or user generated a high volume of peripheral device discovery commands in a short time?
    context: This question aims to detect automated or scripted reconnaissance activity by setting a simple, hard threshold. A host rapidly querying for devices locally or scanning multiple remote hosts for device information within a few minutes is a strong signal of an adversary attempting to quickly map the environment.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek dce_rpc.log
      - Zeek conn.log
      - User Workstations
      - Domain Controllers
      - "Network Segments (monitored by Zeek)"
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: COUNT distinct discovery_commands from source_host in 5_minutes | ALERT if count > 10 OR COUNT distinct remote_hosts_targeted with RPC_enumeration in 5_minutes > 5
  - question: Is the rate of peripheral device discovery commands from a single host statistically anomalous compared to its baseline?
    context: This question uses a statistical approach (Z-score) to dynamically identify spikes in activity relative to the host's own normal behavior. This is more robust than a fixed threshold, as it can adapt to different host roles (e.g., an administrator's workstation vs. a standard user's) and flag significant deviations for any of them.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek dce_rpc.log
      - Zeek conn.log
      - User Workstations
      - Domain Controllers
      - "Network Segments (monitored by Zeek)"
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each host | COUNT discovery_commands in 1_minute_bins | CALCULATE Z-score against 30-day baseline (mean, stddev) | ALERT if Z-score > 3
  - question: Does the volume of peripheral device discovery activity from a host exceed the forecasted normal level?
    context: This question employs a time-series forecasting model to predict the expected volume of discovery activity for a host. It can account for seasonality or other periodic patterns (e.g., regular maintenance scripts). An alert is generated when the actual activity significantly diverges from the prediction, indicating an unexpected event that is not part of the normal operational rhythm.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Zeek dce_rpc.log
      - Zeek conn.log
      - User Workstations
      - Domain Controllers
      - "Network Segments (monitored by Zeek)"
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each host | FORECAST expected_activity_volume using time_series_model (SARIMA, Prophet) | COMPARE observed_volume with forecast_interval | ALERT if observed_volume > forecast_upper_bound
  - question: Did peripheral device discovery occur as part of a suspicious sequence, such as following a remote login and preceding access to a removable drive?
    context: Individual events can seem benign in isolation, but their combination in a specific sequence can be highly indicative of an attack. This question uses a stateful rule to look for a classic attack pattern an adversary logs in remotely, discovers available drives, and then attempts to access a removable drive, likely for data exfiltration or staging.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers
      - "User Workstations with removable media access"
      - File Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: CORRELATE events for same user/host within 30_minutes (1) remote_login (EventID 4624, Logon Type 3/10) -> (2) drive_discovery_command (EventID 4688) -> (3) removable_drive_access (EventID 4663)
  - question: Has a user or host accumulated a high behavioral risk score from a sequence of related suspicious activities?
    context: This question moves beyond a rigid sequence and uses a scoring system to quantify risk. Different suspicious actions are assigned points, and the cumulative score for a user/host is tracked. This allows for more flexible detection of malicious behavior, as an alert can trigger from various combinations of actions that, when summed, pass a risk threshold.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers
      - "User Workstations with removable media access"
      - File Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: FOR each user/host | SUM risk_scores of events (remote_login, discovery_command, removable_media_write) in 1_hour_window | ALERT if total_score > risk_threshold (99th percentile)
  - question: Does the interaction between users, hosts, and processes match a known malicious activity graph?
    context: This question represents the most advanced approach, modeling the entire environment as a graph of interconnected entities. By applying graph neural networks or subgraph matching, it can identify complex, multi-stage attack patterns that might be missed by other methods. It looks for the emergence of structures in the graph that match known malicious TTPs, such as reconnaissance followed by lateral movement and exfiltration.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers
      - "User Workstations with removable media access"
      - File Servers
    range: Last 90 days
    queries:
      - type: Pseudocode
        query: CONSTRUCT entity_interaction_graph from logs | SEARCH for subgraphs matching known_malicious_patterns (e.g., Remote Logon -> Device Discovery -> Data Staging) using GNN or subgraph_matching | ALERT on match