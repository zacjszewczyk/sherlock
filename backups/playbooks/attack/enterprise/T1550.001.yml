name: 'T1550.001: Application Access Token'
id: 'f7b3b3e0-1a2c-4d5e-8f6a-9b8c7d6e5f4a'
description: 'This playbook focuses on detecting adversaries using stolen or forged application access tokens to evade defenses and move laterally within a network. It addresses the unauthorized use of tokens for API authentication from malicious sources, the execution of token theft tools on endpoints, anomalous API access patterns indicative of stolen tokens (like impossible travel), unauthorized token generation from cloud identity services, and the use of tokens to pivot between internal resources or escalate privileges.'
type: 'technique'
related:
- 'TA0005: Defense Evasion'
- 'TA0008: Lateral Movement'
contributors:
- 'Zachary Szewczyk'
- 'Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: 'Are API calls originating from IP addresses or using User-Agent strings known to be associated with malicious activity?'
  context: 'This question aims to identify straightforward attacks where an adversary uses known malicious infrastructure or tools to authenticate with a stolen token. Matching API access logs against high-confidence threat intelligence feeds is a direct way to detect these known threats.'
  answer_sources:
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Threat Intelligence Feed'
  - 'Internet gateway'
  - 'Cloud provider network edge'
  - 'VPN concentrators'
  - 'Web Application Firewalls'
  range: 'last 90 days'
  queries:
  - 'SEARCH API_logs | JOIN source_ip, user_agent WITH threat_intelligence_feed ON ip_address, user_agent | WHERE match_found'
- question: 'Are there any successful API authentications using abnormally rare User-Agent strings or originating from infrequent Autonomous System Numbers (ASNs)?'
  context: "Adversaries may use custom tools or less common infrastructure that results in rare User-Agent strings or ASN origins. By baselining normal activity and flagging authentications that are statistical outliers (e.g., appearing less than 1% of the time over 30 days), we can uncover potentially malicious activity that isn't yet on a threat intelligence feed."
  answer_sources:
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Threat Intelligence Feed'
  - 'Internet gateway'
  - 'Cloud provider network edge'
  - 'VPN concentrators'
  - 'Web Application Firewalls'
  range: 'last 30 days'
  queries:
  - 'SEARCH API_logs | CALCULATE frequency of user_agent, source_asn over 30d | WHERE frequency < 1%'
- question: 'Can machine learning models identify anomalous or outlier API authentication events based on features like User-Agent, source IP/ASN, and requested URI?'
  context: 'This question leverages machine learning to build a sophisticated model of "normal" API authentication behavior. By training a model like a one-class SVM or isolation forest, it can learn complex patterns and detect novel or subtle anomalies in real-time that simple rule-based detections might miss, providing a more robust defense against evolving threats.'
  answer_sources:
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Threat Intelligence Feed'
  - 'Internet gateway'
  - 'Cloud provider network edge'
  - 'VPN concentrators'
  - 'Web Application Firewalls'
  range: 'last 90 days'
  queries:
  - 'SCORE API_authentication_events using ML_model (features: user_agent, source_ip, source_asn, uri, time) | WHERE score is "anomaly"'
- question: 'Has a process associated with token theft (e.g., Mimikatz, Rubeus, browser credential dumping) been executed on a host, followed by an outbound API call?'
  context: 'This question seeks to connect the act of token theft with its potential use. By monitoring for the execution of known credential dumping tools or techniques and correlating that with subsequent outbound API activity from the same host, analysts can detect the full chain of an attack, from compromise to exploitation.'
  answer_sources:
  - 'Windows Event ID 4688'
  - 'Windows Event ID 4663'
  - 'User workstations'
  - 'Developer endpoints'
  - 'Critical application servers'
  - 'Domain Controllers'
  range: 'last 90 days'
  queries:
  - 'SEARCH process_creation_events WHERE process_name matches (token_theft_tools) OR command_line matches (credential_stores) | CORRELATE by host with outbound_api_calls within 10 minutes'
- question: 'Is there a sudden increase in the command-line entropy for common scripting processes like powershell.exe or cscript.exe on any given host?'
  context: 'Adversaries often use obfuscation to hide their commands within legitimate scripting engines. A sharp increase in command-line entropy is a strong indicator of obfuscation techniques. This question helps detect these attempts by baselining normal command complexity for each host and alerting on significant deviations.'
  answer_sources:
  - 'Windows Event ID 4688'
  - 'Windows Event ID 4663'
  - 'User workstations'
  - 'Developer endpoints'
  - 'Critical application servers'
  - 'Domain Controllers'
  range: 'last 30 days'
  queries:
  - 'SEARCH process_creation_events (powershell.exe, cscript.exe) | CALCULATE entropy of command_line per host | COMPARE with 30d_baseline | WHERE entropy > (baseline_mean + 3 * baseline_stddev)'
- question: 'Can a supervised machine learning model classify process creation events as benign or potential token theft attempts?'
  context: 'This question proposes using a supervised ML model to proactively identify malicious process activity. By training on labeled data, the model can learn the nuanced characteristics of token theft attempts—such as parent process, command line length, and specific keywords—to provide a predictive classification for new, unseen events.'
  answer_sources:
  - 'Windows Event ID 4688'
  - 'Windows Event ID 4663'
  - 'User workstations'
  - 'Developer endpoints'
  - 'Critical application servers'
  - 'Domain Controllers'
  range: 'last 90 days'
  queries:
  - 'SCORE process_creation_events using ML_model (features: parent_process, cmd_length, cmd_entropy, keywords) | WHERE classification is "suspicious"'
- question: 'Has a user authenticated with a token under suspicious circumstances, such as impossible travel, a new User-Agent, and no recent interactive logon from the source IP?'
  context: "This question combines multiple weak signals into a strong indicator of a compromised token. An adversary using a stolen token is unlikely to match the victim's location, device, or recent logon behavior. By creating a rule that triggers on a combination of these anomalies (e.g., impossible travel, new device, no prior logon), we can significantly increase detection confidence."
  answer_sources:
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Windows Event ID 4624'
  - 'Geolocation Database'
  - 'Domain Controllers'
  - 'Authentication servers'
  - 'Internet gateway'
  - 'SaaS application front-ends'
  range: 'last 8 hours'
  queries:
  - 'SEARCH successful_token_auth | CHECK for impossible_travel, new_user_agent, no_interactive_logon (type 2 or 10) from source_ip in last 8h | ALERT if >= 2 conditions are true'
- question: "Has a recent token-based authentication event accumulated a high risk score based on deviations from the user's established behavioral profile (e.g., source country, ISP, User-Agent, login hours)?"
  context: "This question aims to detect compromised tokens by building a detailed, multi-faceted profile of normal user behavior and scoring any deviations. Instead of relying on a single indicator, this method aggregates risk across several vectors (geography, device, time). An authentication event that is anomalous in multiple ways will receive a high score, flagging it as a likely compromise."
  answer_sources:
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Windows Event ID 4624'
  - 'Geolocation Database'
  - 'Domain Controllers'
  - 'Authentication servers'
  - 'Internet gateway'
  - 'SaaS application front-ends'
  range: 'last 90 days'
  queries:
  - 'FOR each successful_token_auth | CALCULATE risk_score based on deviations from user_profile (source_country, user_agent, login_hours) | WHERE risk_score > 95th_percentile'
- question: "Is a user's current API access session showing significant deviation from their historically normal sequence of API calls, request frequency, or data volumes?"
  context: "This question uses advanced time-series analysis to model the *behavior* of a user's API session, not just the initial authentication. An adversary, even with a valid token, is likely to interact with the API differently than the legitimate user. An LSTM autoencoder can learn the user's normal interaction patterns and flag sessions with a high reconstruction error, indicating behavior that is inconsistent with the user's past activity."
  answer_sources:
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Windows Event ID 4624'
  - 'Geolocation Database'
  - 'Domain Controllers'
  - 'Authentication servers'
  - 'Internet gateway'
  - 'SaaS application front-ends'
  range: 'last 90 days'
  queries
  - 'MODEL user_api_sessions with LSTM_autoencoder | SCORE new_session | WHERE reconstruction_error is high'
- question: 'Has a sensitive cloud identity API call, such as for token generation, been made by a user or from an IP address that is not on an approved allow-list?'
  context: 'This question focuses on protecting high-privilege operations in cloud environments. Access to APIs that can generate new tokens or federation sessions is extremely sensitive. By restricting these calls to a small, pre-defined set of trusted users and locations (an allow-list), any attempt from an unauthorized source can be immediately flagged as a high-severity incident.'
  answer_sources:
  - 'AWS CloudTrail logs'
  - 'Azure AD Sign-in logs'
  - 'Google Cloud Audit Logs'
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Cloud identity service endpoints'
  - 'Cloud provider management consoles'
  - 'Egress points to the internet'
  range: 'last 90 days'
  queries:
  - 'SEARCH cloud_audit_logs for sensitive_api_calls (GetFederationToken, generateAccessToken) | WHERE source_user OR source_ip NOT IN allow_list'
- question: 'Is a user or role generating tokens at an unusually high frequency, or is a user attempting to assume a cloud role they have never assumed before?'
  context: 'This question aims to detect abuse of cloud identity mechanisms through behavioral baselining. A sudden spike in token generation requests or a user attempting to access a new, unfamiliar role can be an indicator of an adversary trying to escalate privileges or establish persistence. This helps detect misuse even by an authenticated principal.'
  answer_sources:
  - 'AWS CloudTrail logs'
  - 'Azure AD Sign-in logs'
  - 'Google Cloud Audit Logs'
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Cloud identity service endpoints'
  - 'Cloud provider management consoles'
  - 'Egress points to the internet'
  range: 'last 90 days'
  queries:
  - 'SEARCH cloud_audit_logs for token_generation_events | 1. ALERT if frequency > 3 * stddev from baseline per user/role. 2. ALERT if (user, assumed_role) pair is new.'
- question: 'Can unsupervised machine learning identify outlier clusters in cloud identity API calls, representing anomalous combinations of user, source IP, requested role, and time?'
  context: "This question applies unsupervised learning to discover previously unknown patterns of malicious activity. Clustering algorithms like DBSCAN can group similar identity API calls together based on multiple features. Small, isolated clusters (outliers) often represent rare and suspicious events, such as a production service account being used from a developer's IP at midnight, which might not violate a specific rule but is highly anomalous in context."
  answer_sources:
  - 'AWS CloudTrail logs'
  - 'Azure AD Sign-in logs'
  - 'Google Cloud Audit Logs'
  - 'Zeek http.log'
  - 'Zeek conn.log'
  - 'Cloud identity service endpoints'
  - 'Cloud provider management consoles'
  - 'Egress points to the internet'
  range: 'last 90 days'
  queries:
  - 'CLUSTER cloud_identity_logs using DBSCAN (features: principal, source_ip, role, time) | IDENTIFY and investigate outlier clusters'
- question: 'Is an internal cloud resource that recently triggered a high-severity security alert now making outbound API calls, especially to known malicious destinations?'
  context: 'This question focuses on post-compromise activity, specifically lateral movement or C2 communication. A resource that is already flagged as suspicious (e.g., for a malware infection or intrusion attempt) should be heavily scrutinized. Any subsequent outbound API call could be the adversary using a stolen token to pivot, exfiltrate data, or contact a C2 server. This provides critical context by linking a new event to a prior alert.'
  answer_sources:
  - 'Zeek conn.log'
  - 'Zeek http.log'
  - 'AWS VPC Flow Logs'
  - 'Azure Network Watcher flow logs'
  - 'VPC/VNet flow logs'
  - 'Network taps between cloud subnets'
  - 'Internal API gateways'
  range: 'last 24 hours'
  queries:
  - 'SEARCH outbound_api_calls | WHERE source_resource has high_severity_alert in last 24h | JOIN destination_ip with threat_feed'
- question: 'Has an internal cloud resource initiated a network connection to another resource or API endpoint for the very first time?'
  context: "This question models the internal network as a graph to detect novel communication pathways, which are often indicative of lateral movement. In stable environments, servers communicate in predictable patterns. A resource suddenly connecting to a new destination (a 'new edge' in the graph) is anomalous and could represent an adversary exploring the network or moving to their next target."
  answer_sources:
  - 'Zeek conn.log'
  - 'Zeek http.log'
  - 'AWS VPC Flow Logs'
  - 'Azure Network Watcher flow logs'
  - 'VPC/VNet flow logs'
  - 'Network taps between cloud subnets'
  - 'Internal API gateways'
  range: 'last 90 days'
  queries:
  - 'BUILD communication_graph from historical flow_logs | FOR new_connection | IF connection represents a new_edge in graph THEN ALERT'
- question: 'Can a graph-based machine learning model detect anomalous new connections that structurally change the network communication graph, such as by linking previously separate resource clusters?'
  context: "This question applies advanced graph-based ML to detect sophisticated lateral movement. Adversaries might try to pivot between different segments of a cloud environment (e.g., from a web server cluster to a database cluster). A GraphSAGE model can learn the typical structure of the network graph and flag new connections that are topologically significant, such as those that bridge distinct communities, which is a strong sign of lateral movement."
  answer_sources:
  - 'Zeek conn.log'
  - 'Zeek http.log'
  - 'AWS VPC Flow Logs'
  - 'Azure Network Watcher flow logs'
  - 'VPC/VNet flow logs'
  - 'Network taps between cloud subnets'
  - 'Internal API gateways'
  range: 'last 90 days'
  queries:
  - 'SCORE new_connections using GraphSAGE_model on communication_graph | ALERT on high anomaly_score (e.g., bridging communities)'
- question: 'After receiving an inbound API call, did a host almost immediately execute a process associated with local reconnaissance or lateral movement?'
  context: "This question aims to detect the immediate aftermath of exploiting a web application or API. An adversary who gains execution through a vulnerable API will often quickly run commands like `nltest` or `net user` to understand the environment. Correlating an inbound API connection with the subsequent execution of these tools within a short time window is a strong indicator of a successful initial compromise."
  answer_sources:
  - 'Windows Event ID 4688'
  - 'Zeek conn.log'
  - 'Windows Firewall Log'
  - 'Internal-facing web servers'
  - 'API gateway servers'
  - 'Application servers'
  range: 'last 5 minutes'
  queries:
  - 'SEARCH for inbound_api_connection | CORRELATE by host with process_creation_event (recon/lateral_movement_tools) within 5 minutes'
- question: 'Is the service account for an API host executing command shells like cmd.exe or powershell.exe at an anomalously high rate?'
  context: "Web service accounts should typically not be executing interactive shells. This question establishes a baseline for this rare, but sometimes legitimate, behavior. A sudden spike in shell execution by a service account strongly suggests that an attacker has compromised the application and is using its privileges to run commands on the underlying server, a common step after exploiting a vulnerability."
  answer_sources:
  - 'Windows Event ID 4688'
  - 'Zeek conn.log'
  - 'Windows Firewall Log'
  - 'Internal-facing web servers'
  - 'API gateway servers'
  - 'Application servers'
  range: 'last 90 days'
  queries:
  - 'SEARCH process_creation_events (cmd.exe, powershell.exe) by api_service_account | CALCULATE frequency per 10min window | ALERT if frequency > 99th_percentile_baseline'
- question: 'Has a sequence of events occurred on an API host (e.g., inbound connection followed by process creation) that is highly improbable based on historical patterns?'
  context: "This question uses sequence analysis to understand the 'story' of events on a host. A Hidden Markov Model can learn the normal sequences, such as 'API call -> log write -> database query'. An anomalous sequence, like 'API call -> `net user` execution', would have a very low probability under the model and be flagged as suspicious, detecting malicious cause-and-effect chains."
  answer_sources:
  - 'Windows Event ID 4688'
  - 'Zeek conn.log'
  - 'Windows Firewall Log'
  - 'Internal-facing web servers'
  - 'API gateway servers'
  - 'Application servers'
  range: 'last 90 days'
  queries:
  - 'MODEL event_sequences (network, process) with HMM | SCORE new_sequences | ALERT if probability is low'
- question: 'Has a network logon (Logon Type 3) to a critical internal server, like a domain controller, originated from a source IP or hostname that is not on the approved allow-list?'
  context: 'This question implements a zero-trust principle for critical assets. Access to servers like Domain Controllers should be tightly controlled and predictable. By maintaining a strict allow-list of authorized sources, any network logon attempt from an unapproved system is immediately treated as a high-severity security event, indicating potential lateral movement by an adversary.'
  answer_sources:
  - 'Windows Event ID 4624'
  - 'Zeek conn.log'
  - 'Zeek dns.log'
  - 'Domain controllers'
  - 'File servers'
  - 'Database servers'
  - 'Cloud resource network interfaces'
  range: 'last 90 days'
  queries:
  - 'SEARCH network_logons (Logon Type 3) to critical_assets | WHERE source_ip NOT IN logon_allow_list'
- question: 'Has a network logon occurred involving a combination of source IP, destination host, and user account that has never been observed before?'
  context: "This question identifies novel lateral movement by baselining legitimate network logon patterns. Most internal access follows predictable pathways (e.g., a specific admin's workstation logging into a specific server with their admin account). A new, never-before-seen combination of source, destination, and account (a new triplet) is a strong signal of anomalous activity, such as an attacker using a compromised account to access a new machine."
  answer_sources:
  - 'Windows Event ID 4624'
  - 'Zeek conn.log'
  - 'Zeek dns.log'
  - 'Domain controllers'
  - 'File servers'
  - 'Database servers'
  - 'Cloud resource network interfaces'
  range: 'last 30 days'
  queries:
  - 'SEARCH network_logons (Logon Type 3) | CREATE triplets (source_ip, dest_host, account) | ALERT if triplet is new or frequency < 0.1%'
- question: 'Has a recent network logon created a connection between two groups of computers that do not normally interact with each other?'
  context: "This question applies graph theory to discover significant lateral movement events. Internal networks often have distinct 'communities' of machines (e.g., HR workstations, developer servers, finance databases). A logon that connects a machine from one community to another (e.g., an HR laptop logging into a developer server) is highly unusual and can indicate an adversary pivoting across departmental boundaries within the network."
  answer_sources:
  - 'Windows Event ID 4624'
  - 'Zeek conn.log'
  - 'Zeek dns.log'
  - 'Domain controllers'
  - 'File servers'
  - 'Database servers'
  - 'Cloud resource network interfaces'
  range: 'last 90 days'
  queries:
  - 'BUILD logon_graph from network_logons | DETECT communities (e.g., Louvain) | ALERT if new_logon_edge bridges two separate communities'
- question: 'Has a high-impact or destructive API call, such as creating a new user or changing IAM policies, been executed in the cloud environment?'
  context: "This question provides a straightforward, high-fidelity detection for the most dangerous types of actions. Certain API calls (like `CreateUser`, `setIamPolicy`) are inherently risky and can lead to immediate privilege escalation or persistence. By explicitly defining and alerting on every instance of these calls, security teams can ensure that any potentially catastrophic change is immediately investigated."
  answer_sources:
  - 'AWS CloudTrail logs'
  - 'Azure Audit Logs'
  - 'Google Cloud Audit Logs'
  - 'Cloud provider API endpoints'
  - 'Web Application Firewalls'
  - 'Cloud provider audit log aggregators'
  range: 'last 90 days'
  queries:
  - 'SEARCH cloud_audit_logs | WHERE api_call IN (high_impact_list) | ALERT'
- question: 'Is a cloud user or role suddenly performing a much wider and more varied set of API actions than they typically do?'
  context: "This question aims to detect an adversary exploring capabilities after compromising a cloud principal. A legitimate user or service usually performs a predictable, limited set of API calls. An attacker, however, might enumerate permissions or try different actions, leading to a sudden increase in the variety (and thus, entropy) of API calls. This behavioral shift is a strong indicator of compromise."
  answer_sources:
  - 'AWS CloudTrail logs'
  - 'Azure Audit Logs'
  - 'Google Cloud Audit Logs'
  - 'Cloud provider API endpoints'
  - 'Web Application Firewalls'
  - 'Cloud provider audit log aggregators'
  range: 'last 90 days'
  queries:
  - 'FOR each principal | CALCULATE shannon_entropy of api_calls over time | ALERT if entropy > 99th_percentile_baseline'
- question: 'Can a supervised machine learning model assign a risk score to cloud API calls to proactively identify malicious activity?'
  context: "This question proposes a predictive approach to cloud security. By training a model like XGBoost on labeled historical data, it can learn the complex interplay of features that indicate risk (e.g., the principal's role, the specific action, the target resource, the source IP). The model can then score new, live API calls, allowing analysts to prioritize the highest-risk events for immediate investigation."
  answer_sources:
  - 'AWS CloudTrail logs'
  - 'Azure Audit Logs'
  - 'Google Cloud Audit Logs'
  - 'Cloud provider API endpoints'
  - 'Web Application Firewalls'
  - 'Cloud provider audit log aggregators'
  range: 'last 90 days'
  queries:
  - 'SCORE cloud_api_calls using XGBoost_model (features: principal_role, action, resource, source_ip, time) | WHERE risk_score is "high"'