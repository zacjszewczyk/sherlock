name: T1127.003: JamPlus
id: 9e1c3b0a-7d2e-4f8a-9b1c-0d9e8f7a6b5c
description: This playbook helps investigate whether an adversary is using the JamPlus build utility to evade defenses and execute malicious code. Detections focus on identifying JamPlus executions that match known-malicious hashes or communicate with C2 infrastructure, originate from unusual file paths or non-developer hosts, are spawned by anomalous parent processes like Microsoft Office applications, spawn suspicious child processes like PowerShell, or exhibit network traffic patterns indicative of C2 communication such as periodic beaconing.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a JamPlus process execution or its associated network traffic matching known indicators of compromise?
  context: This question aims to detect the most straightforward signs of malicious activity by checking if the JamPlus executable itself or the network destinations it communicates with are already flagged as malicious by threat intelligence feeds. A match provides a high-confidence signal of a compromise.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Zeek ssl.log
  - Developer Workstations, CI/CD Build Servers, Network Egress Points, DNS Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH process creation events for 'jam.exe' or 'JamPlus.exe'. COMPUTE file hash. SEARCH network logs for connections from the host. JOIN process events with network events. COMPARE file hash, destination IP, domain, URL against threat intelligence.
- question: Is a JamPlus process making DNS queries for domains that are rare or have suspicious-looking names?
  context: Adversaries often use newly registered or algorithmically generated domains for C2 communication. These domains typically have low query counts across an enterprise and high lexical entropy (random-looking names). Identifying such domains queried by JamPlus can uncover novel C2 infrastructure not yet present in threat intelligence feeds.
  answer_sources:
  - Windows Event ID 4688
  - Zeek dns.log
  - Developer Workstations, CI/CD Build Servers, Network Egress Points, DNS Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH JamPlus process executions. CORRELATE with DNS queries from the same host. For each domain, CALCULATE rarity and lexical entropy. SCORE and ALERT on high-score domains.
- question: Can machine learning classify network sessions initiated by JamPlus as malicious based on a combination of process and network features?
  context: This question uses a machine learning model to perform a more nuanced detection that considers multiple factors simultaneously. By training on known good and bad examples, the model can learn complex patterns indicative of malicious behavior that are difficult to express in simple rules, such as subtle variations in command-line arguments, TLS fingerprints (JA3/JA3S), and connection patterns.
  answer_sources:
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek ssl.log
  - Developer Workstations, CI/CD Build Servers, Network Egress Points, DNS Servers
  range: last 90 days
  queries:
  - pseudocode: FOR new JamPlus network sessions, EXTRACT features (parent process, cmdline entropy, JA3/JA3S, IP reputation, port, byte ratio, duration). APPLY pre-trained classification model. ALERT on malicious classifications.
- question: Is JamPlus being executed from an unauthorized file path or on a non-standard host?
  context: Legitimate developer tools are typically installed in standard locations (like Program Files) and used on specific machines (developer workstations, build servers). An adversary might place a malicious version of JamPlus in a temporary or user-writable directory on any compromised machine. This check verifies that the tool's usage aligns with established corporate policy and asset roles.
  answer_sources:
  - Windows Event ID 4688
  - General User Endpoints, File Servers, Domain Controllers, Asset Management Systems
  range: last 90 days
  queries:
  - pseudocode: SEARCH JamPlus process executions. CHECK if execution path is in the approved list. CHECK if hostname has 'developer' or 'build-server' tag in asset inventory. ALERT if either check fails.
- question: Is JamPlus running from a directory path that is statistically rare across the enterprise?
  context: This question provides a data-driven way to find unusual execution locations without relying on a pre-defined list of approved paths. By baselining normal activity, it can automatically flag executions from novel or seldom-used directories, which are common locations for attacker-placed tools.
  answer_sources:
  - Windows Event ID 4688
  - General User Endpoints, File Servers, Domain Controllers, Asset Management Systems
  range: last 90 days
  queries:
  - pseudocode: BUILD frequency distribution of JamPlus execution paths over 90 days. FOR each new execution, CHECK its path's frequency. ALERT if frequency is in the bottom 5th percentile.
- question: Does a JamPlus execution deviate from the normal profile of development activity when considering user, host, and time-based context?
  context: This question uses an unsupervised machine learning model to build a holistic profile of "normal" JamPlus usage. It can detect anomalies that might seem benign in isolation but are suspicious in context, such as a user from the finance department running JamPlus at 3 AM on a file server. This helps find insider threats or compromised accounts being used in unusual ways.
  answer_sources:
  - Windows Event ID 4688
  - General User Endpoints, File Servers, Domain Controllers, Asset Management Systems
  range: last 90 days
  queries:
  - pseudocode: FOR each JamPlus execution, EXTRACT features (user role, host role, time of day, path). APPLY pre-trained anomaly detection model (e.g., Isolation Forest). ALERT on high anomaly scores.
- question: Was JamPlus launched by a process not typically associated with development, such as an Office application or web browser?
  context: Developers usually launch build tools from a command prompt, an IDE, or an automated script. A parent process like Microsoft Word, Outlook, or a browser is highly irregular and strongly suggests a user was tricked into opening a malicious document or link that launched the malicious JamPlus executable.
  answer_sources:
  - Windows Event ID 4688
  - General User Endpoints, Developer Workstations, CI/CD Build Servers
  range: last 90 days
  queries:
  - pseudocode: SEARCH for 'jam.exe' or 'JamPlus.exe' process creation. CHECK if parent process is in ('winword.exe', 'outlook.exe', 'wscript.exe', etc.). ALERT if parent is on the blocklist.
- question: Is the parent-child process relationship for a JamPlus execution statistically rare or novel for the environment?
  context: This question moves beyond a static blocklist of bad parents and instead learns what is normal for the specific environment. By baselining all parent-child relationships involving JamPlus, it can detect any new or infrequent pairing, which could indicate a novel attack vector or a compromised legitimate process being used to launch the tool.
  answer_sources:
  - Windows Event ID 4688
  - General User Endpoints, Developer Workstations, CI/CD Build Servers
  range: last 90 days
  queries:
  - pseudocode: GENERATE baseline of parent-child process pairs for JamPlus over 30 days. For new executions, CHECK if the parent-child pair is new or has a frequency <1%. ALERT if true.
- question: Can a machine learning model predict if a parent-child process pair involving JamPlus is malicious?
  context: This approach uses a predictive model trained on known malicious and benign parent-child relationships. It can generalize from the training data to assess the risk of new, unseen pairs. For example, even if 'outlook.exe -> jam.exe' was never seen, the model might infer it's malicious because it has learned that 'outlook.exe' spawning any command-line build tool is suspicious.
  answer_sources:
  - Windows Event ID 4688
  - General User Endpoints, Developer Workstations, CI/CD Build Servers
  range: last 90 days
  queries:
  - pseudocode: FOR new JamPlus process creation, EXTRACT parent and child process names. APPLY pre-trained classification model. ALERT if malicious probability exceeds threshold (e.g., >0.8).
- question: Is JamPlus spawning child processes that are not compilers or linkers, but are instead suspicious utilities like PowerShell or certutil?
  context: The legitimate purpose of JamPlus is to orchestrate a build by calling compilers, linkers, and other build tools. If it is observed launching processes like 'powershell.exe', 'rundll32.exe', or 'certutil.exe', it is a strong indicator that it is being abused for post-exploitation activities, such as executing arbitrary commands, downloading additional payloads, or evading defenses.
  answer_sources:
  - Windows Event ID 4688
  - Developer Workstations, CI/CD Build Servers, General User Endpoints
  range: last 90 days
  queries:
  - pseudocode: SEARCH for process creation events where parent is 'jam.exe' or 'JamPlus.exe'. CHECK if child process is in a watchlist ('powershell.exe', 'cmd.exe', 'certutil.exe', etc.). ALERT if true.
- question: Does a child process spawned by JamPlus have unusually complex or random-looking command-line arguments?
  context: Adversaries often use obfuscation or encoding (like Base64) to hide malicious commands passed via the command line, particularly with tools like PowerShell. These encoded commands have high entropy (randomness) compared to normal, human-readable commands. Detecting high-entropy command lines for children of JamPlus can reveal the execution of obfuscated code.
  answer_sources:
  - Windows Event ID 4688
  - Developer Workstations, CI/CD Build Servers, General User Endpoints
  range: last 90 days
  queries:
  - pseudocode: FOR each child process of JamPlus, CALCULATE entropy of its command-line arguments. ESTABLISH baseline entropy from historical data. ALERT if entropy exceeds 95th percentile of baseline.
- question: Is JamPlus spawning a child process that is an outlier compared to the typical set of child processes and their command-line characteristics?
  context: This question uses clustering to group normal build activities together based on the child process name and its command-line features. Any activity that doesn't fit into a "normal" cluster is flagged as an outlier or noise. This is effective for finding novel or rare malicious activity that doesn't match a predefined rule but clearly deviates from the established norm.
  answer_sources:
  - Windows Event ID 4688
  - Developer Workstations, CI/CD Build Servers, General User Endpoints
  range: last 90 days
  queries:
  - pseudocode: FOR child processes of JamPlus, EXTRACT features (process name, cmdline length, cmdline entropy). APPLY clustering algorithm (e.g., DBSCAN). ALERT on processes classified as outliers/noise.
- question: Is JamPlus or its child processes communicating with known malicious infrastructure or using suspicious TLS certificates?
  context: This is a fundamental check to see if network traffic associated with a JamPlus build process is going to destinations already identified as malicious. Additionally, adversaries often use self-signed TLS certificates for their C2 servers to encrypt traffic without the cost or scrutiny of obtaining a legitimate certificate. Detecting these certificates provides another strong signal of compromise.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Zeek dns.log
  - Zeek ssl.log
  - Network Egress Points, DNS Servers, Developer Workstations
  range: last 90 days
  queries:
  - pseudocode: CORRELATE JamPlus process with network connections. CHECK destination IP/domain against threat intel. CHECK TLS certificate issuer in SSL logs. ALERT on match or self-signed cert.
- question: Is network traffic from JamPlus or its children exhibiting a regular, periodic 'heartbeat' pattern indicative of C2 beaconing?
  context: Malware often communicates with its C2 server at regular intervals (e.g., every 5 minutes) to check for new commands. This results in highly consistent time intervals between connections. By calculating the standard deviation of these time deltas, we can statistically identify this machine-like regularity, which is distinct from the more variable patterns of human-generated or legitimate application traffic.
  answer_sources:
  - Zeek conn.log
  - Windows Event ID 4688
  - Network Egress Points, DNS Servers, Developer Workstations
  range: last 90 days
  queries:
  - pseudocode: GROUP network connections by destination from JamPlus process. CALCULATE time deltas between connections. COMPUTE standard deviation of deltas. ALERT if standard deviation is below a set threshold.
- question: Does a network flow from a JamPlus process appear anomalous when compared to a machine learning model of legitimate build-related network traffic?
  context: This question uses an advanced anomaly detection model (like an autoencoder) to learn the intricate characteristics of normal network flows during a build process. The model is trained to "reconstruct" legitimate flows accurately. When a malicious flow with different properties (e.g., unusual duration, byte ratio, or TLS fingerprint) is fed to the model, it will fail to reconstruct it well, resulting in a high "reconstruction error" and triggering an alert. This can detect novel C2 channels that evade other methods.
  answer_sources:
  - Zeek conn.log
  - Zeek ssl.log
  - Windows Event ID 4688
  - Network Egress Points, DNS Servers, Developer Workstations
  range: last 90 days
  queries:
  - pseudocode: FOR network flows from JamPlus, EXTRACT features (duration, bytes, port, JA3 hash). INPUT to pre-trained autoencoder model. CALCULATE reconstruction error. ALERT on high error scores.