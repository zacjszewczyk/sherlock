name: T1219.002: Remote Desktop Software
id: e5a9a5d0-9a3d-4c1c-9b8e-7e9f8f3a3b2c
description: This playbook helps determine if an adversary is establishing command and control using remote desktop software. It provides investigative questions to detect this activity by analyzing various data sources for signs of malicious use. These signs include outbound network connections to known malicious C2 infrastructure or unsanctioned remote desktop services; anomalous process executions of remote desktop software, such as from non-standard file paths or by unusual parent processes; process creations with command-line arguments indicating silent installation or unattended access configuration; correlated event sequences of software download, execution, and subsequent network connection; network traffic with outlier characteristics like unusually long duration or high data volume; and anomalous remote interactive logons that deviate from a user's established behavioral baseline in terms of time, source location, or workstation.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts connecting to known malicious C2 domains/IPs or unsanctioned remote desktop services?
    context: This question checks for direct connections to known-bad infrastructure or unauthorized remote access tools by querying network logs against threat intelligence feeds. A match is a high-confidence indicator of a C2 channel being established via remote desktop software.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Corporate network egress points (firewalls, proxies)
      - DNS resolvers
      - network sensor grid
    range: Last 90 days
    queries:
      - pseudocode: Query Zeek DNS logs for requests to domains on threat intel feeds. Query Zeek connection logs for connections to IPs on threat intel feeds. Alert on match.
  - question: Are hosts querying for algorithmically generated subdomains associated with remote desktop services?
    context: This question aims to detect Domain Generation Algorithms (DGA) used by malware to locate C2 servers. High entropy in subdomains of legitimate services (e.g., AnyDesk, TeamViewer) can indicate an attempt to hide C2 communications within seemingly normal traffic.
    answer_sources:
      - Zeek dns.log
      - Corporate network egress points (firewalls, proxies)
      - DNS resolvers
      - network sensor grid
    range: Last 90 days
    queries:
      - pseudocode: For domains associated with remote desktop services, calculate Shannon entropy of the subdomain. Alert if entropy exceeds a dynamic baseline or static threshold.
  - question: Can we identify malicious C2 traffic disguised as legitimate network connections using machine learning?
    context: This question uses a Random Forest model to classify new, long-lived network connections based on their characteristics (duration, bytes transferred, protocol). It helps find novel or unknown C2 channels that evade signature-based detection by learning the features of malicious connections from historical data.
    answer_sources:
      - Zeek conn.log
      - Corporate network egress points (firewalls, proxies)
      - DNS resolvers
      - network sensor grid
    range: Last 90 days
    queries:
      - pseudocode: Train Random Forest model on labeled historical connection data. Classify new, long-lived connections. Alert if classified as 'malicious' with high confidence.
  - question: Is remote desktop software being executed from a non-standard file path?
    context: This question identifies attempts to run portable versions of remote desktop tools or place them in unusual directories to evade detection. Legitimate software is typically installed in standard 'Program Files' directories, so execution from other locations is suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) agents on workstations and servers
      - SIEM log collectors for Windows Event Logs
    range: Last 90 days
    queries:
      - pseudocode: Query Windows Event ID 4688 for remote desktop process names. Alert if executable path is not in 'C:\Program Files\*' or 'C:\Program Files (x86)\*'.
  - question: Is remote desktop software being launched by an unusual parent process?
    context: This question looks for anomalous parent-child process relationships. Malware often uses legitimate system processes (like wscript.exe or wmiprvse.exe) to launch malicious tools, a behavior that deviates from normal user-initiated execution patterns.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) agents on workstations and servers
      - SIEM log collectors for Windows Event Logs
    range: Last 90 days
    queries:
      - pseudocode: Baseline parent-child process relationships over 30 days. Alert if a remote desktop process is spawned by a parent that is in a low-frequency percentile for that child.
  - question: Can we detect anomalous executions of remote desktop software using a one-class SVM model?
    context: This question uses machine learning to identify outlier executions based on a profile of legitimate activity. It can flag suspicious executions based on a combination of features like user context, parent process, and file path, even if each feature alone isn't suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Endpoint Detection and Response (EDR) agents on workstations and servers
      - SIEM log collectors for Windows Event Logs
    range: Last 90 days
    queries:
      - pseudocode: Train one-class SVM on legitimate remote desktop executions using features like user context and parent process. Use model to identify and alert on new executions that are outliers.
  - question: Is remote desktop software being installed or configured for unattended access via command-line arguments?
    context: This question looks for specific command-line flags used to silently install remote desktop tools, set a password, or configure them to start automatically. These actions are highly indicative of an adversary setting up persistent remote access.
    answer_sources:
      - Windows Event ID 4688
      - All Windows endpoints (workstations and servers) forwarding process creation logs (Event ID 4688)
    range: Last 90 days
    queries:
      - pseudocode: Use regex to search CommandLine in Event ID 4688 for flags like '--silent', '--set-password', or '--start-with-win'. Alert on any match.
  - question: Are statistically rare command-line arguments being used with remote desktop applications?
    context: This question identifies the use of uncommon command-line arguments that may correspond to malicious or unauthorized activity. While some arguments might be legitimate, their rarity across the enterprise can be a strong signal for investigation.
    answer_sources:
      - Windows Event ID 4688
      - All Windows endpoints (workstations and servers) forwarding process creation logs (Event ID 4688)
    range: Last 90 days
    queries:
      - pseudocode: Calculate enterprise-wide frequency of command-line arguments for authorized RDP apps. Alert on use of arguments with a frequency below a rarity threshold (e.g., <1%).
  - question: Can we identify malicious command-line usage for remote desktop tools using topic modeling?
    context: This question uses Latent Dirichlet Allocation (LDA) to group command-line arguments into "topics". By identifying topics associated with malicious configuration (e.g., silent installation, password setting), new process executions can be scored and flagged if their arguments align with a malicious topic.
    answer_sources:
      - Windows Event ID 4688
      - All Windows endpoints (workstations and servers) forwarding process creation logs (Event ID 4688)
    range: Last 90 days
    queries:
      - pseudocode: Apply LDA to tokenized command-line arguments. Identify malicious topics. Score new RDP process executions and alert if they have a high probability of belonging to a malicious topic.
  - question: Has a remote desktop executable been downloaded, executed, and then initiated an outbound network connection in a short time window?
    context: This question correlates multiple events (file download, process execution, network connection) to build a high-fidelity alert for a full remote desktop tool deployment sequence. This chain of events is a strong indicator of an adversary establishing a foothold.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Zeek conn.log
      - User workstations
      - Network egress points (firewall, proxy)
      - DNS resolvers
      - EDR-enabled endpoints
    range: Last 90 days
    queries:
      - pseudocode: Create correlation rule for a single host: file download (exe from RDP domain) -> process execution (matching filename) -> outbound connection (to RDP service IP), all within 10 minutes. Alert on trigger.
  - question: Is a download-execute-connect sequence for a remote desktop tool rare for a specific host or for the entire organization?
    context: This question adds a statistical layer to sequence detection. If a host performs this sequence for the first time, or if the sequence is rare across the entire enterprise, it is more likely to be unauthorized or malicious activity rather than a standard user action.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Zeek conn.log
      - User workstations
      - Network egress points (firewall, proxy)
      - DNS resolvers
      - EDR-enabled endpoints
    range: Last 90 days
    queries:
      - pseudocode: Flag the first-time observation of a download-execute-connect sequence for a host. If this sequence has been seen on fewer than 1% of all endpoints, elevate the event to an alert.
  - question: Can a sequence analysis model detect the malicious installation of remote desktop software based on real-time event streams?
    context: This question uses advanced sequence analysis models (like RNN or HMM) to learn the patterns of both benign and malicious event sequences. The model can then monitor live event streams from hosts and predict the probability that a host is transitioning into a 'malicious RDP install' state.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Zeek conn.log
      - User workstations
      - Network egress points (firewall, proxy)
      - DNS resolvers
      - EDR-enabled endpoints
    range: Last 90 days
    queries:
      - pseudocode: Train RNN/HMM on benign and malicious event sequences. Feed real-time events into the model. Alert when probability of a host being in 'malicious RDP install' state exceeds a threshold.
  - question: Are there any unusually long-lived network connections to remote desktop services or connections showing signs of tunneling?
    context: This question sets a simple, static threshold to catch extremely long connections (e.g., >24 hours) that could indicate a persistent C2 channel. It also checks the Zeek connection history string for patterns that suggest data tunneling, a common C2 technique.
    answer_sources:
      - Zeek conn.log
      - Network flow collectors (e.g., Zeek sensors) at network egress points and internal network chokepoints
    range: Last 90 days
    queries:
      - pseudocode: Alert on connections in Zeek conn.log to RDP services with duration > 24 hours. Alert if Zeek 'history' field indicates tunneling (e.g., 'ShADadFf').
  - question: Are there any outbound connections to remote desktop services that have an anomalous duration or data volume for a specific host?
    context: This question establishes a dynamic baseline of normal connection behavior (duration, data volume) for each host. It then alerts on new connections that deviate significantly from this personal baseline, which is more effective at catching anomalies than a single, global threshold.
    answer_sources:
      - Zeek conn.log
      - Network flow collectors (e.g., Zeek sensors) at network egress points and internal network chokepoints
    range: Last 90 days
    queries:
      - pseudocode: Establish a 30-day rolling baseline of outbound data volume and connection duration for each host's RDP sessions. Alert when a new session exceeds the 95th percentile for either metric.
  - question: Can we detect anomalous traffic patterns within an active remote desktop session using a time-series model?
    context: This question analyzes the traffic patterns within a session (e.g., bytes-per-second). An LSTM autoencoder can learn the rhythm of normal interactive use and flag sessions where the traffic pattern changes, which could indicate non-interactive C2 activity like large file exfiltration.
    answer_sources:
      - Zeek conn.log
      - Network flow collectors (e.g., Zeek sensors) at network egress points and internal network chokepoints
    range: Last 90 days
    queries:
      - pseudocode: Train LSTM autoencoder on benign RDP session traffic patterns. Alert when the model's reconstruction error for a live session spikes significantly, indicating a pattern deviation.
  - question: Has a remote interactive logon occurred from a user or host that is not on the authorized allow-list?
    context: This question enforces a strict access control policy. By maintaining an explicit list of which users are allowed to log in remotely to which machines, any logon from an unapproved user-host combination can be immediately flagged as a high-priority security event.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - RADIUS/authentication servers
      - endpoint logs from user workstations and servers
    range: Last 90 days
    queries:
      - pseudocode: Maintain user-to-host allow-list for remote access. Alert on any remote logon (Event ID 4624, Logon Type 10) where the user/host pair is not on the list.
  - question: Has a remote interactive logon occurred that deviates from the user's established behavioral patterns?
    context: This question profiles each user's normal logon behavior (time, source IP, source host). It then scores new logons based on how much they deviate from this established 'pattern of life'. A logon at an unusual time from a new location would receive a high risk score and trigger an alert.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - RADIUS/authentication servers
      - endpoint logs from user workstations and servers
    range: Last 90 days
    queries:
      - pseudocode: Profile user logon behavior (hour, source IP subnet, source host) over 30 days. Score new logons based on deviation from profile. Alert if risk score exceeds threshold.
  - question: Can we identify anomalous remote logons that do not fit any established 'pattern of life' clusters for a user?
    context: This question uses a clustering algorithm like DBSCAN to automatically identify a user's normal logon routines. Any logon event that doesn't fit into one of these known clusters is flagged as an anomaly, providing a powerful way to detect novel or unexpected access patterns.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Domain Controllers
      - RADIUS/authentication servers
      - endpoint logs from user workstations and servers
    range: Last 90 days
    queries:
      - pseudocode: Use DBSCAN to cluster user logon events based on features like time, day, and source ASN. Classify new logons that do not fall into any cluster as outliers and alert.