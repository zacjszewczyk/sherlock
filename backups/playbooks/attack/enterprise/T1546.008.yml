name: "T1546.008: Accessibility Features"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook focuses on detecting adversaries who establish persistence or escalate privileges by hijacking accessibility features. This involves two main stages: the initial compromise and the subsequent abuse. The compromise is typically achieved by replacing an accessibility feature binary (e.g., sethc.exe, utilman.exe) with a malicious file, or by modifying its Image File Execution Options (IFEO) registry key to point to a malicious debugger. The abuse stage involves the adversary triggering the now-hijacked accessibility feature (e.g., from the login screen) to execute code with elevated privileges, often to spawn a command shell, create new users, or establish a command and control channel."
type: "technique"
related:
  - "TA0003: Persistence"
  - "TA0004: Privilege Escalation"
contributors:
  - "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Has an accessibility feature binary been replaced with a known malicious file or has its IFEO registry key been modified to point to a malicious debugger?"
    context: "This question checks for the most direct method of hijacking, where an adversary either replaces a legitimate accessibility binary (e.g., sethc.exe) with a malicious one or uses the Image File Execution Options (IFEO) registry key to redirect its execution to a debugger. A match against a known malicious file hash or a known malicious debugger path is a high-fidelity indicator of this persistence technique."
    answer_sources:
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 13"
      - "Windows Event ID 4663"
      - "Windows Event ID 4657"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          # Query for malicious file replacement
          SEARCH file_creation_events
          WHERE target_filename IN ['sethc.exe', 'utilman.exe', 'osk.exe'] AND target_directory = 'C:\Windows\System32\'
          COMPARE file_hash with known_malicious_hashes_feed
          ALERT on match

          # Query for malicious IFEO debugger
          SEARCH registry_set_events
          WHERE registry_key_path CONTAINS 'Image File Execution Options\' AND registry_value_name = 'Debugger'
          COMPARE new_registry_value with known_malicious_paths
          ALERT on match
  - question: "Has a rare or previously unseen debugger been registered for an accessibility feature's IFEO key across the enterprise?"
    context: "Instead of relying on known-bad signatures, this question uses statistical analysis to find anomalies. A debugger path that is present on a very small percentage of machines is highly suspicious, as legitimate debuggers are typically deployed more widely or follow predictable patterns. This approach helps detect novel or targeted attacks that do not use known malware."
    answer_sources:
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 13"
      - "Windows Event ID 4663"
      - "Windows Event ID 4657"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH registry_set_events
          WHERE registry_key_path CONTAINS 'Image File Execution Options\' AND registry_value_name = 'Debugger'
          GROUP BY new_registry_value
          CALCULATE frequency_of_each_value_across_all_endpoints
          ALERT if frequency < threshold (e.g., present on <0.1% of endpoints)
  - question: "Can machine learning models classify file or registry modifications related to accessibility features as malicious?"
    context: "This question proposes a proactive, machine learning-based approach. By training a model on features from both file and registry events (like parent process, file signature, hash entropy, and user context), the system can learn to distinguish between benign activities (like system patching) and malicious hijacking attempts with a higher degree of accuracy and automation."
    answer_sources:
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 13"
      - "Windows Event ID 4663"
      - "Windows Event ID 4657"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          INPUT file_and_registry_modification_events
          EXTRACT features (parent_process, signature_status, hash_entropy, user_context, etc.)
          APPLY trained_classification_model (e.g., XGBoost)
          ALERT if prediction is 'malicious'
  - question: "Has an accessibility feature binary been modified shortly after its ownership or permissions were changed?"
    context: "Adversaries must first take ownership (e.g., via takeown.exe) and change permissions (e.g., via icacls.exe) of protected system files before they can replace them. This question looks for this specific, suspicious sequence of events occurring in a short time window (e.g., 5 minutes), which is a strong indicator of manual or scripted tampering."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Windows Event ID 4670"
      - "Windows Event ID 4663"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          CORRELATE process_creation_events (for takeown.exe, icacls.exe) with file_write_events
          WHERE target_file is_accessibility_binary
          AND events_occur_within 5 minutes of each other
          AND events_share_the_same_host_and_logon_session
          ALERT on correlated sequence
  - question: "Is there an anomalous spike in permission changes for accessibility feature binaries on a specific host?"
    context: "This approach uses behavioral analysis to detect deviations from a host's normal activity. A sudden burst of permission changes on sensitive accessibility files, exceeding a statistically defined baseline (e.g., 3 standard deviations above the mean), suggests an unusual and potentially malicious event, even without knowing the exact commands used."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Windows Event ID 4670"
      - "Windows Event ID 4663"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          FOR each_host:
            CALCULATE baseline_rate (mean, stddev) of permission_change_events on System32 files
            MONITOR count of permission_changes on accessibility_binaries in a 5-minute window
            ALERT if count > (mean + 3 * stddev)
  - question: "Does the sequence of file system operations performed on an accessibility binary deviate from learned, normal patterns?"
    context: "This advanced question uses a sequence analysis model (like an LSTM) to understand the 'grammar' of legitimate system operations. The model learns what normal sequences look like during events like software updates. An attack sequence, such as takeown -> icacls -> write on sethc.exe outside of a known maintenance window, would be flagged as a grammatical anomaly, indicating a likely attack."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Windows Event ID 4670"
      - "Windows Event ID 4663"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          INPUT sequence_of_filesystem_events (process_create, permission_change, file_write) on system binaries
          APPLY trained_sequence_model (e.g., LSTM)
          ALERT if sequence involving an accessibility binary is flagged as anomalous
  - question: "Was an accessibility feature binary or its IFEO key modified by a process not on the approved allowlist of system maintenance tools?"
    context: "System files should only be modified by a small, predictable set of trusted processes, like TrustedInstaller.exe or msiexec.exe. This question leverages an allowlist to create a high-fidelity alert. Any process, such as powershell.exe or a Microsoft Office application, attempting to modify these sensitive assets is immediately flagged as suspicious."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 13"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH file_write_events OR registry_set_events on accessibility_assets
          WHERE parent_process_name NOT IN (allowlist: 'TrustedInstaller.exe', 'msiexec.exe', 'svchost.exe', ...)
          ALERT on event
  - question: "Has a statistically rare parent process initiated a modification to an accessibility feature or its IFEO key?"
    context: "This question uses enterprise-wide statistical analysis to find unusual parent-child process relationships. While an allowlist is effective, it requires maintenance. This method dynamically identifies suspicious activity by flagging parent processes that are rarely seen modifying system files, pointing to potential attacker TTPs without prior knowledge."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 13"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH events modifying accessibility_assets
          GROUP BY parent_process_name
          CALCULATE frequency_of_each_parent_process across enterprise for this type of modification
          ALERT if frequency is below threshold (e.g., in 1st percentile)
  - question: "Can a machine learning classifier distinguish between benign system activity and suspicious user-driven modifications of accessibility features?"
    context: "This question aims to automate the detection of unauthorized modifications using a classification model. By training on features like process names, command lines, and user context, a model (like a random forest) can learn the complex patterns that differentiate legitimate system updates from malicious, user-initiated changes, providing a more nuanced detection capability."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 11"
      - "Sysmon Event ID 13"
      - "Domain Controllers, Critical Application Servers, Standard User Workstations, Privileged User Workstations"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          INPUT process_creation_events that lead to system modifications
          EXTRACT features (parent_process, command_line, user_context, integrity_level, etc.)
          APPLY trained_classifier_model (e.g., Random Forest)
          ALERT if prediction is 'suspicious-user-driven-modification'
  - question: "Did a hijacked accessibility feature spawn a shell with a command line containing known malicious patterns?"
    context: "Once an accessibility feature is hijacked, adversaries often use it to spawn a command shell (cmd.exe) to execute commands. This question looks for the direct aftermath of the hijack by searching for specific, high-confidence malicious commands (e.g., related to Mimikatz, reverse shells, or user creation) in the command line of processes spawned by accessibility binaries."
    answer_sources:
      - "Sysmon Event ID 1"
      - "All Windows Endpoints (Workstations and Servers), especially Domain Controllers and Remote Desktop Gateway Servers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH process_creation_events
          WHERE parent_process_name IS an accessibility_binary
          AND child_process_command_line MATCHES regex_patterns ('mimikatz', 'iex(new-object net.webclient)', 'net user /add', 'whoami /all')
          ALERT on match
  - question: "Is the command line of a shell spawned by an accessibility feature unusually complex or random, suggesting obfuscation?"
    context: "Adversaries often obfuscate their commands (e.g., using Base64 encoding) to evade simple keyword-based detection. This question uses Shannon entropy to measure the randomness of the command line string. A high entropy score, compared to a baseline of normal commands, is a strong indicator of obfuscation and warrants investigation."
    answer_sources:
      - "Sysmon Event ID 1"
      - "All Windows Endpoints (Workstations and Servers), especially Domain Controllers and Remote Desktop Gateway Servers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH process_creation_events
          WHERE parent_process_name IS an accessibility_binary
          CALCULATE shannon_entropy of child_process_command_line
          ALERT if entropy > 95th_percentile_of_baseline
  - question: "Can an NLP model classify command lines executed by hijacked accessibility features as malicious, even if they use novel syntax?"
    context: "This question proposes using advanced NLP models (like transformers) to understand the semantic meaning of command lines, rather than just matching keywords or measuring entropy. By fine-tuning a model on a dataset of malicious and benign commands, it can learn to detect new and evolving attack syntax, providing a more robust defense against sophisticated adversaries."
    answer_sources:
      - "Sysmon Event ID 1"
      - "All Windows Endpoints (Workstations and Servers), especially Domain Controllers and Remote Desktop Gateway Servers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          FOR each_command_line spawned from an accessibility_binary:
            APPLY fine_tuned_NLP_model
            ALERT if classification is 'malicious'
  - question: "Was a new user created and added to a privileged group shortly after a shell was spawned by an accessibility feature?"
    context: "This is a classic privilege escalation pattern. An attacker uses the hijacked feature (running as SYSTEM) to spawn a shell, create a new user account, and then add that account to a powerful group like 'Administrators'. This question uses event correlation to detect this specific, high-confidence sequence of actions occurring in a tight timeframe."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Windows Event ID 4720"
      - "Windows Event ID 4732"
      - "Windows Event ID 4728"
      - "Windows Event ID 4756"
      - "Logon screens of all Windows systems, Domain Controllers, Active Directory databases"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          CORRELATE (process_creation from accessibility_binary) -> (user_creation event) -> (add_to_privileged_group event)
          WHERE events_occur_within 2 minutes on the same host/session
          ALERT on correlated sequence
  - question: "Did user creation or privilege group modification occur suspiciously fast after a shell was spawned from an accessibility feature?"
    context: "Automated attack scripts execute commands much faster than a human administrator. This question focuses on the timing between events. A very short delay (e.g., less than 5 seconds) between a shell spawning and subsequent user/group management actions is a strong anomaly, suggesting a scripted attack rather than legitimate administrative work."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Windows Event ID 4720"
      - "Windows Event ID 4732"
      - "Windows Event ID 4728"
      - "Windows Event ID 4756"
      - "Logon screens of all Windows systems, Domain Controllers, Active Directory databases"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          FOR each (shell_spawn_from_accessibility_binary) event:
            FIND subsequent (user_creation OR group_add) event on same host
            CALCULATE time_delta
            ALERT if time_delta < 5 seconds (or is in lowest percentile)
  - question: "Did an accessibility feature binary directly spawn a command shell, scripting interpreter, or remote access tool?"
    context: "There is virtually no legitimate reason for an accessibility program like sethc.exe or utilman.exe to directly launch a command shell (cmd.exe, powershell.exe) or scripting engine. This behavior is a very high-fidelity indicator of an active attack, warranting an immediate, high-severity alert."
    answer_sources:
      - "Sysmon Event ID 1"
      - "All Windows Endpoints (Workstations and Servers), Remote Desktop Gateway Servers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH process_creation_events
          WHERE parent_process_name IN {'sethc.exe', 'utilman.exe', 'osk.exe', 'magnify.exe', 'narrator.exe', 'DisplaySwitch.exe', 'atbroker.exe'}
          AND child_process_name IN {'cmd.exe', 'powershell.exe', 'pwsh.exe', 'wscript.exe', 'cscript.exe', 'mshta.exe'}
          ALERT with high severity
  - question: "Has a rare or never-before-seen child process been spawned by an accessibility feature?"
    context: "This question uses statistical rarity to uncover novel attacks. By baselining all parent-child process relationships across the environment, any new or extremely infrequent pairing (e.g., osk.exe spawning ftp.exe) can be flagged as a suspicious anomaly, even if the child process itself is not inherently malicious."
    answer_sources:
      - "Sysmon Event ID 1"
      - "All Windows Endpoints (Workstations and Servers), Remote Desktop Gateway Servers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          BASELINE all parent-child process pairs across enterprise
          SEARCH for new process_creation_events where parent is an accessibility_binary
          CALCULATE frequency of the (parent, child) pair
          ALERT if frequency is below a low threshold (e.g., < 5 occurrences enterprise-wide)
  - question: "Did a process spawned by an accessibility feature initiate an outbound network connection to a known malicious IP address?"
    context: "After gaining execution, adversaries often establish a command and control (C2) channel. This question correlates process activity with network logs to see if a process spawned by a hijacked accessibility feature is connecting to an IP address on a threat intelligence feed. This is a strong indicator of an active C2 or reverse shell."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Network egress points, Firewall and proxy servers, Remote Desktop Gateway Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          CORRELATE (process_spawned_by_accessibility_binary) with (network_connection_from_child_process)
          WHERE destination_ip IN known_malicious_ip_feed
          ALERT on correlation
  - question: "Is a process spawned by an accessibility feature connecting to a rare destination IP, domain, port, or using a rare JA3/JA3S hash?"
    context: "This question hunts for anomalous network connections without relying on known-bad indicators. By analyzing enterprise-wide network data, it identifies connections to destinations (IPs, domains, ports) or using TLS fingerprints (JA3/JA3S hashes) that are statistically rare. Such rarity is a strong signal of a newly established C2 infrastructure."
    answer_sources:
      - "Sysmon Event ID 1"
      - "Sysmon Event ID 3"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Network egress points, Firewall and proxy servers, Remote Desktop Gateway Servers, Domain Controllers"
    range: "last 90 days"
    queries:
      - "search_technology": "pseudocode"
        "query": |
          SEARCH network_connections from processes spawned by accessibility_binaries
          CALCULATE frequency of (destination_ip, domain, port, JA3_hash) across the enterprise
          ALERT if frequency is below rarity_threshold