name: T1189: Drive-by Compromise
id: 5a89c7d0-1b3a-4f8e-8e9f-3d1c5b6a7e21
description: This playbook helps investigate whether an adversary has gained initial access via a drive-by compromise. This involves users visiting a website that contains malicious code, which then exploits a vulnerability in their browser or its plugins to execute code on their system. Key indicators include network traffic to known malicious domains or IPs, HTTP responses containing obfuscated JavaScript or exploit kit signatures, web browsers spawning command-line interpreters like cmd.exe or powershell.exe, browsers creating unexpected child processes or writing executable files to unusual locations, new network connections to suspicious destinations immediately following web activity, and multiple hosts within a group accessing the same newly observed or low-reputation domain, which could indicate a watering hole attack.
type: technique
related:
  - TA0001: Initial Access
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has any endpoint communicated with a domain, URL, or IP address known to be malicious based on threat intelligence feeds?
    context: This question aims to detect the most direct evidence of a drive-by compromise communication with a known-bad destination. Adversaries often use domains and IPs associated with exploit kits, malvertising, or watering holes. Correlating network logs (DNS, HTTP) against high-confidence threat intelligence is a fundamental step in identifying the initial vector of compromise.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise Web Proxy
      - Internet Gateway Firewall
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH network_logs (http, dns) WHERE destination_domain OR destination_url IN threat_intelligence_feed
  - question: Have any users visited domains with a very low reputation score, suggesting they might be newly created or suspicious?
    context: Adversaries frequently use newly registered or obscure domains for malicious campaigns. This question helps identify visits to such domains by calculating a reputation score based on factors like age, registration privacy, and how often it's seen in the organization. A very low score is a strong indicator of risk, even if the domain is not yet on a threat intelligence list.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise Web Proxy
      - Internet Gateway Firewall
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each domain in network_logs, CALCULATE reputation_score; ALERT if score < 5th_percentile_threshold
  - question: Have any endpoints accessed URLs that are lexically suspicious and likely malicious based on machine learning classification?
    context: Malicious URLs often have distinct structural characteristics (e.g., excessive length, high entropy, suspicious keywords) that can be detected by machine learning models. This question uses a classification model to analyze the structure of URLs in HTTP traffic, providing a way to flag potentially malicious URLs that are not yet known to threat intelligence feeds.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Zeek dns.log
      - Enterprise Web Proxy
      - Internet Gateway Firewall
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each url in http_logs, PREDICT maliciousness_score with ML_model; ALERT if score > 0.90
  - question: Did any HTTP responses contain content matching signatures of known exploit kits or common obfuscation techniques?
    context: This question looks for direct evidence of malicious payloads within web traffic. By scanning the content of HTTP responses with YARA rules, analysts can identify specific patterns associated with exploit kits (e.g., Angler, RIG), heap spraying, or known JavaScript obfuscators, confirming that a user was served malicious code.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Enterprise Web Proxy
      - Network Intrusion Detection System (NIDS)
      - Full Packet Capture (PCAP) Storage
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SCAN http_response_bodies with YARA_rules for exploit_kits; ALERT on match
  - question: Has any downloaded JavaScript shown unusually high character entropy, suggesting it has been obfuscated to hide malicious code?
    context: Adversaries heavily obfuscate their malicious scripts to evade signature-based detection. This obfuscation often results in high character entropy (randomness). This question focuses on detecting this anomaly by comparing the entropy of downloaded JavaScript against a baseline of normal scripts. A significant deviation suggests the script is likely packed or obfuscated and warrants investigation.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Enterprise Web Proxy
      - Network Intrusion Detection System (NIDS)
      - Full Packet Capture (PCAP) Storage
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each javascript_file, CALCULATE entropy; ALERT if entropy > (baseline_entropy + 3 * std_dev)
  - question: Does any JavaScript code from recent web traffic contain structural patterns or sequences that a machine learning model identifies as indicative of an exploit?
    context: Beyond simple entropy, the structure of JavaScript code itself can reveal malicious intent. This question involves using a sophisticated sequence model (like an LSTM) to analyze the Abstract Syntax Tree (AST) of the code. This approach can identify complex malicious logic and patterns that are missed by signature or entropy analysis, providing a deeper level of code inspection.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Enterprise Web Proxy
      - Network Intrusion Detection System (NIDS)
      - Full Packet Capture (PCAP) Storage
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each javascript_file, GENERATE AST; CLASSIFY AST with LSTM_model; ALERT if classified as malicious
  - question: Has a web browser process spawned a command-line interpreter (cmd, powershell) or script host (wscript, cscript) with suspicious command-line arguments?
    context: A common post-exploitation step in a drive-by compromise is for the exploited browser to launch a shell or script host to download and execute a second-stage payload. This question looks for this specific, high-fidelity indicator by monitoring for browser processes spawning these child processes, especially when the command line contains known malicious patterns like encoded PowerShell commands or downloader syntax.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) Fleet
      - Terminal Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH process_creation_logs WHERE parent_process is browser AND child_process is (cmd, powershell, wscript, cscript) AND command_line contains (suspicious_strings)
  - question: Are there any instances of a web browser launching a process with command-line arguments that are statistically rare for the organization?
    context: Adversaries may use unusual or unique command-line flags and arguments to execute their tools. This question leverages statistical analysis to find these needles in the haystack. By identifying command-line tokens that are rarely ever seen in the environment, especially when spawned by a browser, analysts can uncover novel or targeted attack techniques.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) Fleet
      - Terminal Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each browser-spawned process, TOKENIZE command_line; CALCULATE token_frequency across enterprise; ALERT if any token_frequency < 0.1%
  - question: Has a machine learning model identified any command lines from browser-spawned processes as having a high probability of being malicious?
    context: This question applies machine learning to score the maliciousness of command lines, similar to how it can be applied to URLs. The model analyzes various features of the command line to produce a risk score. This is particularly effective at detecting obfuscated or complex commands that might evade simple keyword matching, providing a more robust detection method for malicious post-exploitation activity.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) Fleet
      - Terminal Servers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each browser-spawned process command_line, PREDICT maliciousness_score with ML_model; ALERT if score is high
  - question: Has a web browser spawned an unexpected child process or written an executable file to a non-standard location?
    context: Legitimate browser behavior is relatively predictable. They spawn helper processes and write files to specific cache directories. This question aims to detect deviations from this norm. An alert is triggered if a browser spawns a process not on an allowlist (like rundll32.exe) or writes an executable file to a temporary or user-profile directory, which are strong indicators of payload delivery.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - User Workstations
      - Application Servers
      - VDI Fleet
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: SEARCH process_logs WHERE parent is browser AND child NOT IN allowlist; SEARCH file_creation_logs WHERE process is browser AND file_extension is executable AND path is temp/appdata
  - question: Have any statistically rare process creations or file write events originating from a web browser been observed?
    context: This question uses baselining and frequency analysis to detect anomalous browser behavior. By understanding what is normal over a 30-day period (e.g., which child processes are typically spawned, where files are normally written), it becomes possible to flag events that are exceptionally rare. An event in the bottom 1st percentile of frequency is highly suspect and could represent a new or evasive technique.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - User Workstations
      - Application Servers
      - VDI Fleet
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: BASELINE browser process/file activity; ALERT on events with frequency < 1st_percentile
  - question: Can machine learning clustering identify any outlier host events related to browser activity that do not fit into normal patterns of behavior?
    context: This question leverages unsupervised machine learning to find 'unknown unknowns'. By grouping all host events related to browsers into clusters of normal behavior, any event that does not fit into a cluster is flagged as an outlier. These outliers represent novel or rare activities that deviate significantly from the established norm and are strong candidates for malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 11
      - User Workstations
      - Application Servers
      - VDI Fleet
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CLUSTER browser-related host events (process creation, file writes); ALERT on outlier events
  - question: Following a web browsing event, did the same host initiate a new connection to a known-malicious IP or a non-standard port?
    context: After a successful compromise, the malware often 'calls back' to a command-and-control (C2) server. This question seeks to identify this C2 traffic by correlating web browsing activity with subsequent network connections from the same host. A new connection to a malicious IP or an unusual port (like those used by Metasploit) within minutes of a web download is a strong signal of post-compromise C2 communication.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet Gateway Firewall
      - User Workstations
      - Network Core Switches
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each http_request, LOOK for new connection from same source_ip within 5 mins WHERE destination_ip IN threat_feed OR destination_port is non-standard
  - question: Did a user's machine make a network connection to a destination (country, ASN, port) that is highly anomalous for that specific user, shortly after browsing the web?
    context: This question personalizes anomaly detection by creating a behavioral baseline for each user's network traffic. A connection to a country, network (ASN), or port that the user has never or rarely connected to before is highly suspicious, especially after recent web activity. An anomaly score exceeding the 99th percentile indicates a significant deviation from that user's normal behavior.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet Gateway Firewall
      - User Workstations
      - Network Core Switches
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: BASELINE user network behavior (ASN, country, port); FOR new connections post-browsing, CALCULATE anomaly_score; ALERT if score > 99th_percentile
  - question: Did a time-series analysis of a host's outbound network traffic detect an anomaly (e.g., spike in connections or data sent) that correlates with recent web browsing?
    context: Malware C2 traffic can create subtle changes in a host's network patterns, such as periodic beacons or sudden data exfiltration. This question uses time-series analysis to model the normal rhythm of a host's outbound traffic. When the model detects an anomaly (a break in the pattern), correlating it with recent web activity can help pinpoint the moment of compromise and the start of C2 communication.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - Internet Gateway Firewall
      - User Workstations
      - Network Core Switches
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: MODEL host outbound traffic with time-series model; ALERT on detected anomalies; CORRELATE alerts with recent web browsing
  - question: Have multiple hosts from the same network segment all accessed the same newly observed domain within a short period?
    context: This is the classic indicator of a watering hole attack, where an adversary compromises a website frequented by a specific group of people. This question detects this by looking for a cluster of hosts (e.g., from the same department or subnet) suddenly visiting a domain that is new to the entire organization. This synchronized, unusual activity is a high-confidence signal of a targeted attack.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Active Directory
      - Internal DNS Resolvers
      - Enterprise Web Proxy
      - Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: IDENTIFY newly_observed_domains (last 24h); ALERT if >10 hosts from same_subnet access same_new_domain within 1 hour
  - question: Are there any domains that are unusually popular within the organization compared to their global popularity?
    context: This question refines the watering hole detection by creating a 'locality ratio'. A domain that many internal users are visiting but is virtually unknown to the rest of the world is highly suspicious. It could be a targeted phishing site or a compromised niche industry website. A high locality ratio effectively flags domains that are disproportionately interesting to an organization, which is a key attribute of a watering hole.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Active Directory
      - Internal DNS Resolvers
      - Enterprise Web Proxy
      - Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: FOR each domain, CALCULATE (internal_host_count / global_popularity); ALERT if ratio > 95th_percentile
  - question: Can graph analysis reveal a newly formed community of internal hosts all communicating with a specific, small set of external domains?
    context: This question applies graph theory to visualize and analyze relationships between internal hosts and external domains. By using community detection algorithms, analysts can find tightly-knit groups of users who are all visiting the same set of domains. The sudden appearance of a new, dense community clustered around an unknown or suspicious domain is a powerful visual and analytical indicator of a coordinated watering hole attack.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Active Directory
      - Internal DNS Resolvers
      - Enterprise Web Proxy
      - Domain Controllers
    range: last 90 days
    queries:
      - search_technology: pseudocode
        query: CREATE graph of (hosts -> domains); RUN community detection algorithm; ALERT on new, dense communities forming around specific domains