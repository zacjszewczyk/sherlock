name: "T1631.001: Ptrace System Calls"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook helps investigate whether an adversary is using the ptrace system call on a mobile device to elevate privileges or evade defenses. Adversaries may use ptrace to attach to a higher-privileged process (e.g., one running as root or system) and inject malicious code. This technique is also used for defense evasion, allowing malicious code to execute within the context of a legitimate, trusted application process. Evidence is primarily found in Android auditd logs showing ptrace calls (`syscall=101`), which can be correlated with application inventories from MDM solutions and network activity from Zeek logs to identify suspicious or malicious behavior."
type: "technique"
related:
  - "TA0029: Privilege Escalation"
  - "TA0030: Defense Evasion"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Is a known malicious application attempting to use ptrace to attach to a privileged process?"
    context: "This question seeks to identify a clear indicator of compromise by checking if an application, already identified as malicious by threat intelligence, is using the ptrace system call to attach to a root (euid=0) or system (euid=1000) process. A positive match provides high-confidence evidence of a privilege escalation attempt."
    answer_sources:
      - "Android auditd log"
      - "MDM application inventory log"
      - "Central SIEM aggregating Android auditd log streams from managed mobile endpoints; Mobile Device Management (MDM) platform containing application inventories."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH Android auditd logs WHERE syscall=101 AND source_process_hash IN (threat_intel_feed) AND target_process_euid IN (0, 1000)."
  - question: "Is an application not on the approved developer/debugger tool list using ptrace to target privileged processes, or is any application using ptrace at an anomalously high rate?"
    context: "This question aims to detect suspicious ptrace usage from applications that are not known developer or debugging tools, which would be expected to use this function. It establishes a baseline of normal ptrace activity and an allow-list of trusted tools. An alert is generated if an unapproved application targets a privileged process, or if any application exhibits an unusual frequency of ptrace calls, which could indicate malicious activity."
    answer_sources:
      - "Android auditd log"
      - "MDM application inventory log"
      - "Central SIEM aggregating Android auditd log streams from managed mobile endpoints; Mobile Device Management (MDM) platform containing application inventories."
    range: "last 90 days"
    queries:
      - "pseudocode: SEARCH Android auditd logs WHERE syscall=101 AND source_process NOT IN (developer_tool_allowlist) AND target_process_euid IN (0, 1000)."
      - "pseudocode: COMPARE hourly ptrace call count per application/device against 30-day baseline; ALERT if count > 99th percentile."
  - question: "Can a machine learning model identify malicious ptrace system calls based on event features?"
    context: "This question explores a proactive, machine learning-based approach to detection. A Random Forest model is trained to distinguish between benign and malicious ptrace calls by analyzing features like process user IDs, process name entropy, parent process, and time of day. This allows for the real-time scoring of ptrace events, generating high-confidence alerts for activity classified as malicious, especially when targeting privileged processes."
    answer_sources:
      - "Android auditd log"
      - "MDM application inventory log"
      - "Central SIEM aggregating Android auditd log streams from managed mobile endpoints; Mobile Device Management (MDM) platform containing application inventories."
    range: "last 90 days"
    queries:
      - "pseudocode: SCORE Android auditd log events with syscall=101 using Random Forest model; ALERT if prediction is 'malicious' AND probability > 0.90 AND target_process_euid IN (0, 1000)."
  - question: "Is there evidence of a ptrace call followed by network communication with a known malicious C2 server?"
    context: "This question correlates endpoint process activity with network indicators to uncover defense evasion. An adversary might use ptrace to inject code into a legitimate process to bypass endpoint controls and then initiate network connections. This query links a ptrace event on a device with subsequent network traffic (within 5 minutes) from the same device to a known malicious IP or domain, providing strong evidence of a compromise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Android auditd log"
      - "Network sensors at corporate Wi-Fi egress points, VPN concentrators, and DNS resolvers; Central SIEM aggregating network and mobile endpoint logs."
    range: "last 90 days"
    queries:
      - "pseudocode: CORRELATE Android auditd logs (syscall=101) with Zeek logs (conn.log, dns.log) within a 5-minute window on the same source IP; ALERT if Zeek destination IP/domain is in threat_intel_feed."
  - question: "Following a ptrace call, does the device exhibit anomalous network behavior, such as connecting to unusual ports or querying high-entropy domains?"
    context: "This question focuses on detecting post-compromise network activity that may not involve known malicious indicators. It works by establishing a baseline of normal network behavior for each device (e.g., common destination ports, typical DNS query entropy). After a ptrace event is detected, any deviation from this baseline, such as connecting to a new port or making a DNS query for a random-looking domain, is flagged as a medium-severity anomaly warranting investigation."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Android auditd log"
      - "Network sensors at corporate Wi-Fi egress points, VPN concentrators, and DNS resolvers; Central SIEM aggregating network and mobile endpoint logs."
    range: "last 90 days"
    queries:
      - "pseudocode: AFTER Android auditd log event (syscall=101), monitor Zeek logs for 10 minutes from the same source IP; ALERT if destination port is not in 30-day baseline OR DNS query entropy > 95th percentile."
  - question: "Can a time-series anomaly detection model detect malicious network activity following a ptrace system call?"
    context: "This question leverages an advanced unsupervised machine learning model (e.g., LSTM Autoencoder) to detect subtle changes in the pattern of a device's network behavior. After a ptrace event occurs, the device's subsequent network telemetry (e.g., bytes transferred, connection counts) is fed to the model. If the model finds that the new activity does not conform to the device's learned normal patterns (indicated by a high reconstruction error), it signals a high-severity alert, suggesting a significant and potentially malicious deviation."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Android auditd log"
      - "Network sensors at corporate Wi-Fi egress points, VPN concentrators, and DNS resolvers; Central SIEM aggregating network and mobile endpoint logs."
    range: "last 90 days"
    queries:
      - "pseudocode: AFTER Android auditd log event (syscall=101), feed subsequent 1-minute network telemetry aggregates into LSTM Autoencoder; ALERT if reconstruction error > 99th percentile for 3 consecutive intervals."