name: T1653: Power Settings
id: 4d5d9b1a-8c7e-4f6a-9b1d-0c2a3b4d5e6f
description: This playbook helps investigate if an adversary is maintaining persistence by modifying power settings to prevent a system from entering sleep, hibernate, or a locked state. This is often achieved by using command-line utilities like `powercfg.exe` or by directly modifying registry keys. Suspicious indicators include executions of these utilities with unusual arguments, from unexpected parent processes, or followed by the establishment of command-and-control network traffic.
type: technique
related:
  - TA0003: Persistence
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Are there any process creation events where a process hash matches a known-bad hash associated with malware that uses the T1653 technique?
    context: This question aims to detect known malicious tools that modify power settings by comparing file hashes of executed processes against threat intelligence feeds. A match is a high-confidence indicator of compromise, as it confirms the presence of a tool previously identified as malicious.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_events (e.g., WinEventID:4688) | JOIN threat_intelligence_feed ON process_hash | WHERE technique = "T1653" | ALERT
  - question: Have `powercfg.exe` or `reg.exe` been executed by a process with a statistically rare file hash across the enterprise?
    context: This question seeks to identify novel or targeted malware not yet present in threat intelligence feeds. By calculating the prevalence of file hashes for processes that modify power settings, it flags executions where the hash is exceptionally rare (e.g., seen on fewer than 5 hosts), indicating it is not a standard, widely distributed tool.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - statistical: SEARCH process_creation_events | WHERE process_name IN ("powercfg.exe", "reg.exe") AND modifies_power_settings | CALCULATE hash_prevalence | WHERE prevalence < 0.001 | ALERT
  - question: Has a machine learning model identified a process modifying power settings as having a high probability of being malicious?
    context: This question leverages a classification model trained on process features (e.g., parent path, command-line entropy) to score the probability of malice. It is designed to detect sophisticated threats that may evade simpler rules by identifying subtle combinations of suspicious attributes associated with a power setting modification.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - machine_learning: STREAM process_creation_events | APPLY ML_model_T1653 | WHERE probability_malicious > 0.9 AND modifies_power_settings | ALERT
  - question: Has `powercfg.exe` been executed with command-line arguments that disable sleep, hibernation, or set timeouts to zero?
    context: This question looks for the direct, explicit use of `powercfg.exe` to disable power-saving features. These commands (e.g., `/h off`, `/change standby-timeout-ac 0`) are a common and straightforward way for an adversary to ensure a machine remains active for persistent access.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_events (e.g., WinEventID:4688) | WHERE process_name = "powercfg.exe" AND command_line MATCHES REGEX "(h|hibernate) off|timeout 0" | ALERT
  - question: Has `powercfg.exe` been executed with an unusual or rare combination of command-line arguments?
    context: This question aims to identify abnormal usage of `powercfg.exe` by baselining common command-line patterns used by administrators and legitimate software. An execution that deviates from this baseline, especially if initiated by a non-administrative user for the first time, is suspicious and could indicate misuse by an adversary.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - statistical: SEARCH process_creation_events WHERE process_name = "powercfg.exe" | BASELINE command_line_frequency | WHERE frequency IS RARE or user_is_not_admin_first_time | ALERT
  - question: Is there an anomalous spike in the rate of `powercfg.exe` executions on any single host?
    context: This question uses time-series analysis to detect abnormal frequencies of `powercfg.exe` execution. A sudden burst of activity, especially outside of standard maintenance windows, could signal a malicious script or tool running on a loop to ensure power settings are not reverted.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - machine_learning: SEARCH process_creation_events WHERE process_name = "powercfg.exe" | TIMESERIES_ANOMALY_DETECTION count by host | WHERE anomaly_score IS HIGH | ALERT
  - question: Have registry keys related to power settings, screen savers, or hibernation been modified to disable these features?
    context: This question focuses on detecting persistence attempts made by directly manipulating the Windows Registry. Monitoring specific keys (e.g., `HibernateEnabled`, `ScreenSaveActive`) for changes that disable power-saving or locking mechanisms is a key way to spot this technique.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - symbolic: SEARCH registry_events (e.g., WinEventID:4657) OR process_events for "reg.exe" | WHERE registry_key IN ("...HibernateEnabled", "...ScreenSaveActive") AND value_is_disabled | ALERT
  - question: Have power-related registry keys been modified by a statistically rare user or process, or with unusual command-line entropy?
    context: This question seeks to find outliers in registry modification activity. Modifications coming from an unexpected source (a rare user or process) or via a complex, high-entropy command line can indicate an attempt to obfuscate malicious activity from standard monitoring.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - statistical: SEARCH registry_modification_events | CALCULATE source_prevalence, command_line_entropy | WHERE source_is_rare OR entropy_is_outlier | ALERT
  - question: Does a clustering algorithm identify any power-related registry modifications as anomalous outliers?
    context: This question applies unsupervised machine learning to group registry modification events based on their features. Events that do not fit into large, well-defined clusters of normal activity are flagged as anomalies or 'noise', potentially representing novel or evasive malicious behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - All Endpoints (Workstations, Servers), Domain Controllers
    range: last 90 days
    queries:
      - machine_learning: STREAM registry_modification_events | APPLY DBSCAN_clustering | WHERE cluster = "noise" OR cluster_size IS SMALL | ALERT
  - question: Has `powercfg.exe` been launched by an unexpected or non-standard parent process?
    context: This question looks for suspicious process ancestry. Legitimate executions of `powercfg.exe` are typically spawned by shells (`cmd.exe`), administrative tools (`mmc.exe`), or deployment agents. An execution from a parent like an office application (`winword.exe`) or PDF reader is highly irregular and suggests compromise.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Application servers
    range: last 90 days
    queries:
      - symbolic: SEARCH process_creation_events WHERE process_name = "powercfg.exe" | WHERE parent_process NOT IN allowlist ("explorer.exe", "cmd.exe", "powershell.exe") | ALERT
  - question: Has a `powercfg.exe` execution occurred from a parent process with which it has a very low or non-existent historical probability of association?
    context: This question uses statistical analysis of parent-child process relationships across the enterprise to find rare pairings. A `powercfg.exe` execution from a parent that has rarely or never spawned it before is a strong indicator of anomalous activity that deviates from established baselines.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Application servers
    range: last 90 days
    queries:
      - statistical: SEARCH process_creation_events WHERE child_process = "powercfg.exe" | LOOKUP parent_child_probability | WHERE probability < 0.001 | ALERT
  - question: Has a machine learning model classified a parent-child process pair involving `powercfg.exe` as suspicious?
    context: This question employs a supervised model trained to recognize suspicious process lineage. By analyzing features of the parent and child process, the model can score the risk of an execution, catching sophisticated attacks that might use legitimate-looking parent processes in unusual ways to evade detection.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, Application servers
    range: last 90 days
    queries:
      - machine_learning: STREAM process_creation_events WHERE child_process = "powercfg.exe" | APPLY parent_child_ML_model | WHERE risk_score IS HIGH | ALERT
  - question: Was a power setting modification on a host quickly followed by a network connection to a known malicious destination?
    context: This question correlates endpoint and network activity to link a persistence attempt with potential command-and-control (C2) communication. The temporal proximity of these two events strongly suggests the adversary is ensuring the machine stays online specifically to maintain their C2 channel.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - Zeek conn.log
      - All Endpoints (Workstations, Servers), Network Egress/Ingress Points, DNS Servers
    range: last 90 days
    queries:
      - symbolic: CORRELATE (power_setting_modification_event) WITH (network_connection_event) on host WITHIN 10 minutes | WHERE destination_ip IN threat_intelligence_feed | ALERT
  - question: Following a power setting modification, did the host initiate any long-duration, low-volume network connections characteristic of C2 heartbeating?
    context: This question seeks to identify C2 beaconing behavior that begins after a power setting has been altered. By looking for network connections with statistically unusual properties (e.g., lasting for hours but transferring minimal data), analysts can detect stealthy C2 channels established for persistence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - Zeek conn.log
      - All Endpoints (Workstations, Servers), Network Egress/Ingress Points, DNS Servers
    range: last 90 days
    queries:
      - statistical: TRIGGER on power_setting_modification_event | MONITOR subsequent network_connections FOR 1 hour | WHERE connection_duration > 99th_percentile AND total_bytes < 10th_percentile | ALERT
  - question: After a power setting was modified on a host, did a time-series anomaly detection model detect the emergence of a new network beaconing pattern?
    context: This advanced correlation question uses machine learning to first identify a persistence event on the host, and then uses another ML model to detect the subsequent establishment of a new, regular, periodic network connection (beaconing), which is a hallmark of C2.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4657
      - Zeek conn.log
      - All Endpoints (Workstations, Servers), Network Egress/Ingress Points, DNS Servers
    range: last 90 days
    queries:
      - machine_learning: TRIGGER on power_setting_modification_event | MONITOR subsequent network_connections | APPLY beacon_detection_model | WHERE new_beacon_pattern_detected WITH high_anomaly_score | ALERT