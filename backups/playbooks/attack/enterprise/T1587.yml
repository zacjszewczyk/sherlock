name: T1587: Develop Capabilities
id: 15e1a3d0-6258-459d-9d7a-1a892b1e7c4f
description: This playbook helps identify if an adversary has developed and deployed new capabilities within the environment. It focuses on detecting novel malware and tools by analyzing file hashes against threat intelligence, identifying statistically rare executables, and using machine learning for classification. It also looks for custom TLS clients via anomalous JA3/JA3S hashes, suspicious sequences of process behaviors (creation, persistence, C2), unusual network patterns like beaconing or data staging to newly registered domains, and the use of disposable or suspicious self-signed TLS certificates.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are any running processes or transferred files matching known-malicious hashes from our threat intelligence feeds?
    context: This is a high-fidelity symbolic check. By continuously comparing file and process hashes from endpoint and network events against a curated list of hashes known to be malicious (especially those associated with new malware), we can quickly detect the deployment of a known-bad adversary capability. A match should be treated as a critical alert.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Zeek files.log
      - Zeek conn.log
      - Endpoint devices
      - Network egress points
      - Threat intelligence platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN (process_creation_events, file_transfer_events) WITH threat_intel_hash_feed ON file_hash. ALERT on match.
  - question: Have any new, rare executables been observed in the environment?
    context: Adversaries often deploy custom tools that will not have been seen before. This statistical approach identifies executable file hashes that have only appeared on a very small number of hosts. By filtering out known legitimate software (like patches or internal builds), we can isolate potentially malicious files that warrant further investigation due to their low prevalence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Zeek files.log
      - Zeek conn.log
      - Endpoint devices
      - Network egress points
      - Threat intelligence platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          GROUP executable_hashes by hash. COUNT unique endpoints per hash. FLAG hashes WHERE count < threshold AND hash NOT IN (known_good_software_inventory).
  - question: Can we classify newly observed, low-prevalence executables as malicious using their metadata and execution context?
    context: This machine learning approach enhances the low-prevalence analysis. For new, rare executables, a classification model can analyze intrinsic properties (PE headers, entropy, strings) and contextual data (parent process, file path) to predict if the file is benign or malicious. This automates the analysis of suspicious files and helps security teams focus on the highest-risk items.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1
      - Zeek files.log
      - Zeek conn.log
      - Endpoint devices
      - Network egress points
      - Threat intelligence platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_low_prevalence_executable: EXTRACT features (metadata, context). INPUT features into classification_model. PREDICT if malicious.
  - question: Have any TLS connections used a JA3 or JA3S hash that matches a known-malicious tool?
    context: JA3 and JA3S hashes fingerprint the client and server side of a TLS negotiation, respectively. Certain malware families and adversary tools use specific cryptographic libraries that produce a unique, identifiable hash. This symbolic check queries for TLS connections whose JA3/JA3S hash matches a watchlist of known-bad fingerprints, allowing for the detection of specific malicious tools on the network.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points
      - Internal network segments
      - TLS inspection points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SELECT * FROM tls_logs WHERE (ja3_hash IN known_malicious_ja3_list OR ja3s_hash IN known_malicious_ja3s_list). ALERT on match.
  - question: Are there any TLS connections using statistically rare JA3 or JA3S hashes, especially those connecting to suspicious domains?
    context: Adversaries may use custom-built tools that result in JA3/JA3S hashes that are uncommon or unique to the organization. This statistical method identifies these rare hashes by comparing them against a 30-day baseline. The risk is considered higher if these rare TLS sessions are also connecting to newly registered domains or IPs with a poor reputation, suggesting a newly deployed C2 channel.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points
      - Internal network segments
      - TLS inspection points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE frequency of all ja3/ja3s_hashes over 30 days. FOR each new_tls_session: FLAG if hash_frequency < threshold AND destination_reputation is low.
  - question: Can we identify anomalous client behavior by clustering JA3 hashes and connection metadata?
    context: This machine learning approach groups TLS sessions into clusters based on their JA3 hash and other connection features (port, SNI, duration). Legitimate, common applications (like browsers) will form large, dense clusters. Custom adversary tools will likely appear as small, isolated clusters or noise points (outliers). This helps identify non-standard client applications without prior knowledge of their signatures.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network egress points
      - Internal network segments
      - TLS inspection points
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          APPLY clustering_algorithm (DBSCAN) to feature_space (ja3, port, sni, duration). INVESTIGATE small clusters and outliers.
  - question: Has a single process performed a rapid sequence of suspicious activities, such as creating a file, establishing persistence, and making a network connection?
    context: Adversary malware often follows a predictable script upon execution: drop a payload, set up a way to survive a reboot, and then call home. This symbolic correlation rule looks for this exact sequence of events (file creation, registry key modification for persistence, and an outbound connection) originating from the same process within a very short time window (e.g., 60 seconds). This "chain" of behaviors is a strong indicator of a malicious implant.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 7045
      - Zeek conn.log
      - Endpoint devices (workstations and servers)
      - Domain Controllers
      - Active Directory
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE events by process_guid within 60s window: (Sysmon_EID1 -> Sysmon_EID11 -> Sysmon_EID13 -> Zeek_conn_log). ALERT on sequence match.
  - question: Are there any statistically rare parent-child process relationships occurring in the environment?
    context: While many parent-child process relationships are normal (e.g., explorer.exe spawning cmd.exe), adversaries often create unusual ones (e.g., a Microsoft Office application spawning PowerShell). This statistical analysis calculates the frequency of all observed parent-child process relationships. It flags rare combinations for investigation, with risk scores increasing if the child process subsequently performs suspicious actions.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 7045
      - Zeek conn.log
      - Endpoint devices (workstations and servers)
      - Domain Controllers
      - Active Directory
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE frequency of all parent-child_process pairs. FLAG pairs with frequency < threshold. ANALYZE subsequent child_process actions for risk.
  - question: Are there sequences of endpoint events that are highly unlikely based on a model trained on benign behavior?
    context: This machine learning method models the "normal" sequence of operations for applications on an endpoint. A Hidden Markov Model (HMM) or Recurrent Neural Network (RNN) is trained on event sequences from known-good software. When a new sequence of events (e.g., Process Create -> File Write -> Network Connection) is observed, the model calculates the probability of that sequence occurring. Very low probability scores indicate a significant deviation from normal behavior, suggesting a potential malicious actor.
    answer_sources:
      - Windows Event ID 1
      - Windows Event ID 11
      - Windows Event ID 13
      - Windows Event ID 7045
      - Zeek conn.log
      - Endpoint devices (workstations and servers)
      - Domain Controllers
      - Active Directory
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_event_sequence: CALCULATE likelihood_score using trained_model (HMM/RNN). FLAG sequences where score < threshold.
  - question: Is any internal host communicating with a domain that was registered very recently?
    context: Adversaries frequently use newly registered domains (NRDs) for their command and control infrastructure because they have not yet been categorized or blacklisted. This symbolic check correlates internal DNS queries with a threat intelligence feed of NRDs. Any connection to a domain registered within the last few days (e.g., 72 hours) that is not on an explicit allow-list is highly suspicious and warrants an immediate alert.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS servers (recursive resolvers)
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          JOIN dns_logs with newly_registered_domain_feed. ALERT if internal_host resolves a domain registered < 72 hours ago AND domain NOT IN allow_list.
  - question: Is there any network traffic exhibiting beaconing (highly regular connections) or data staging (unusually large uploads)?
    context: This statistical analysis looks for two key C2 communication patterns. Beaconing is identified by finding connections between a source and destination that occur at a very regular interval, resulting in a low standard deviation of time between connections. Data staging is identified by finding connections with an abnormally high ratio of uploaded to downloaded data, especially when the total data uploaded is an outlier for that host and the destination is new or has a low reputation.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS servers (recursive resolvers)
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each src/dst pair: CALCULATE std_dev of time_delta between connections. FLAG if std_dev is near zero. SEPARATELY, FLAG connections with high upload/download ratio AND high total upload volume.
  - question: Are there any hosts whose outbound data volume is anomalously high compared to its own historical forecast?
    context: This machine learning approach models the expected outbound data volume for each host over time. Using a time series model, it creates a forecast with a confidence interval for what "normal" traffic volume should look like. An alert is generated when the actual observed data volume significantly exceeds this forecast, which could indicate unexpected data exfiltration or staging, especially if the traffic is concentrated to a single, previously unseen destination.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - DNS servers (recursive resolvers)
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each host: FORECAST outbound_data_volume using time_series_model. FLAG if actual_volume significantly exceeds forecast_confidence_interval.
  - question: Are there any outbound TLS connections using a self-signed certificate?
    context: While some internal services use self-signed certificates, an internal client making an outbound connection to an external service that uses a self-signed certificate is suspicious. Adversaries often use them for C2 infrastructure because they are free and easy to generate. This symbolic rule detects this by looking for TLS sessions where the certificate's issuer and subject fields are identical, while excluding known, trusted destinations.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - TLS inspection points
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SELECT * FROM tls_logs WHERE certificate_issuer == certificate_subject AND destination_ip NOT IN trusted_allow_list.
  - question: Have we observed any TLS certificates with suspicious attributes like short validity, recent creation, or nonsensical subject names?
    context: Adversaries using TLS for C2 often use "disposable" certificates with characteristics that differ from legitimate commercial certificates. This statistical analysis flags certificates that are very new ('not_before' date is recent), have a very short lifespan (e.g., < 90 days), or have randomly generated subject names (indicated by low Shannon entropy). A combination of these factors creates a high-risk score indicating a likely malicious certificate.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - TLS inspection points
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FROM tls_logs, SCORE certificates based on: (validity_duration < 90 days), (creation_date < 7 days), (shannon_entropy(subject_cn) < threshold). FLAG high scores.
  - question: Can we use machine learning to predict if a TLS certificate is malicious based on its properties?
    context: This machine learning approach formalizes the statistical analysis from the previous question. A classification model is trained on a large dataset of both legitimate (from Certificate Transparency logs) and known-malicious certificates (from threat feeds). The model learns to weigh various features—such as whether it's self-signed, its validity period, entropy, and public key algorithm—to produce a predictive score of maliciousness for newly observed certificates.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - TLS inspection points
      - Network egress points
      - Web proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_certificate: EXTRACT features (is_self_signed, validity_period, entropy, etc.). INPUT features to classification_model. PREDICT if malicious.