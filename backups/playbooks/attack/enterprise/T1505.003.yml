name: T1505.003: Web Shell
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook helps investigate whether an adversary has established persistence by implanting a web shell on a server. It provides guidance on detecting web shells by analyzing inbound network traffic for matches against threat intelligence; inspecting HTTP requests for signs of command execution or obfuscation; monitoring for anomalous child processes spawned by web servers; identifying unusual outbound network connections from web servers; and detecting the creation of web-executable files in web-accessible directories.
type: technique
related:
- TA0003: Persistence
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
investigative_questions:
- question: Are inbound web requests matching known malicious IPs or web shell URIs from threat intelligence feeds?
  context: This question aims to identify direct indicators of compromise by comparing incoming web traffic against a curated list of known malicious actors and web shell signatures. A match provides a high-confidence signal that an adversary is either attempting to exploit a vulnerability or interact with a previously planted web shell.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Search Zeek logs where source IP or request URI matches threat intelligence feed.
- question: Is any source IP exhibiting an anomalously high ratio of POST requests compared to its baseline?
  context: Web shells are often interacted with via POST requests to send commands and receive output. A sudden spike in the POST-to-total-request ratio, especially with a low overall request count, can indicate targeted, non-browser interaction consistent with a web shell, as opposed to normal user browsing.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: For each source IP, calculate POST request ratio. Alert if ratio is in the 95th percentile and total requests are low.
- question: Does a machine learning model classify any inbound web requests as malicious based on their network and URI features?
  context: This question leverages a supervised machine learning model to score the probability of a request being malicious. By analyzing a combination of features like source ASN, geography, User-Agent rarity, and URI structure, the model can detect sophisticated or novel web shell activity that might not match simple signatures.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Score inbound requests with ML model. Alert if malicious probability > 0.9.
- question: Do any HTTP requests contain URI parameters or POST bodies with patterns matching command execution or obfuscation functions?
  context: This question looks for direct evidence of command injection within HTTP traffic. The presence of functions like 'eval()', 'exec()', or obfuscation techniques like 'base64_decode' in a request body or URI is a strong indicator that an attacker is using a web shell to execute commands on the server.
  answer_sources:
  - Zeek http.log
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Scan URI and POST bodies for regex patterns like 'eval(', 'exec(', 'base64_decode'. Alert on match.
- question: Are there any HTTP requests with unusually high entropy in their query parameters or POST bodies for a given URI?
  context: Adversaries often encrypt or obfuscate commands sent to a web shell to evade detection. This process typically increases the randomness, or Shannon entropy, of the data. A request with significantly higher entropy than the historical baseline for that specific URI suggests the presence of obfuscated or encrypted malicious content.
  answer_sources:
  - Zeek http.log
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Calculate Shannon entropy for URI parameters/POST bodies. Alert if entropy exceeds 98th percentile for that URI.
- question: Has an anomaly detection model identified any HTTP requests as significant outliers based on their structural features?
  context: This question uses an unsupervised machine learning model to find requests that deviate from the norm. By modeling normal traffic patterns based on features like URI length, parameter count, and entropy, the model can flag requests that are structurally anomalous, which could represent a novel or unknown web shell variant.
  answer_sources:
  - Zeek http.log
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Use Isolation Forest or similar model to find outliers based on request features (length, count, size, entropy). Flag outliers for review.
- question: Has a web server process spawned a suspicious child process like a command-line interpreter or reconnaissance tool?
  context: Web shells are often used to gain a command-line interface on the compromised server. This question seeks to detect this by monitoring for instances where a web server process (e.g., w3wp.exe, httpd.exe) launches a child process from a blocklist, such as 'cmd.exe', 'powershell.exe', or 'whoami.exe'. Such an event is a very strong indicator of post-exploitation activity.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Monitor process creation events where parent is a web server process and child is on a blocklist (cmd.exe, powershell.exe, etc.). Alert on match.
- question: Did a web server process spawn a child process with an unusually long or complex command line?
  context: Adversaries often execute complex, one-liner commands via a web shell to perform actions while avoiding dropping additional files. These commands can be unusually long or have high character entropy compared to normal, benign process activity. A high Z-score for both length and entropy indicates a statistically significant deviation from the baseline that warrants investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: For child processes of web servers, calculate Z-score for command-line length and entropy. Alert if both scores > 3.
- question: Has an unsupervised clustering model identified any anomalous process creation events originating from a web server?
  context: This question uses machine learning to automatically baseline normal process creation behavior for web servers. By clustering events based on parent process, child process, and command-line arguments, the model can identify any new activity that falls outside of established normal clusters, effectively detecting novel or rare post-exploitation techniques.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Cluster process creation events using DBSCAN. Flag any new event that does not fit into an existing cluster as an anomaly.
- question: Is a web server making outbound connections to known malicious IPs, restricted internal subnets, or non-standard ports?
  context: This question seeks to detect command-and-control (C2) or data exfiltration channels established by a web shell. Web servers typically only communicate on standard ports (80, 443). Outbound connections to suspicious destinations or over unusual ports are highly indicative of malicious activity, such as a reverse shell or data staging.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Analyze outbound connections from web servers. Alert if destination IP is on a threat list, in a restricted subnet, or if destination port is non-standard.
- question: Has a web server initiated an outbound connection using a rare destination port or transferred an anomalously large amount of data?
  context: This question uses statistical analysis to find deviations from a server's normal outbound connection behavior. A connection to a port that is rarely used by that server, or a connection that transfers a volume of data in the 99th percentile, can indicate C2 communication or a large data exfiltration event, respectively.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Profile outbound port usage and data volume per server. Alert on rare ports (<1% frequency) or high data volume (>99th percentile).
- question: Does a time-series model forecast a significant anomaly in the volume of outbound data from a web server?
  context: This question aims to detect subtle C2 communication or data exfiltration that might not trigger simple volume thresholds. By using a time-series model to predict the expected outbound data volume for any given time, it can detect when the actual volume significantly exceeds the forecast, even if the absolute amount isn't massive, pointing to abnormal behavior like periodic C2 heartbeats.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Windows Event ID 5156
  - DMZ Web Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Use a time-series model (e.g., Prophet) on outbound data volume. Alert when observed volume significantly exceeds the forecast.
- question: Has a web server process created a new file with a web-executable extension in a web root directory?
  context: This question targets a key step in web shell deployment the creation of the malicious file on the server. Monitoring for a web server process (like w3wp.exe) writing a new file with an executable extension (like .aspx, .php) directly into a web-accessible folder is a high-fidelity indicator of a successful 'write-and-execute' payload.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Web Server File Systems
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Monitor file creation events in web root directories. Alert if the creating process is a web server and the file has a web-executable extension.
- question: Has a file with a rare or never-before-seen extension been created in a specific web application directory?
  context: Web applications typically use a consistent set of file extensions. The appearance of a file with a rare or entirely new extension (e.g., a .php file in a directory that exclusively contains .html and .js) is a statistical anomaly. This can detect an attacker dropping a web shell with a different technology than the target application, a common tactic.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Web Server File Systems
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: Maintain frequency map of file extensions per directory. Alert on creation of a file with a new or very rare (<0.5%) extension.
- question: Does a machine learning model classify the content of a newly created file as a malicious web shell?
  context: This question provides the most sophisticated level of detection by analyzing the actual content of newly created files. A model trained to distinguish between benign code and malicious web shells can identify threats even if they use common file extensions or are obfuscated, providing a powerful defense against advanced web shell implantation techniques.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Web Server File Systems
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: On file creation, pipe content to a trained CNN model. Alert if the model classifies the file as malicious.