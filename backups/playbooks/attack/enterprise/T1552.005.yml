name: 'T1552.005: Cloud Instance Metadata API'
id: 'a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d'
description: |
  This playbook addresses the threat of an adversary accessing cloud instance metadata to steal credentials or other sensitive data. It covers detection methods for various access patterns, including: Server-Side Request Forgery (SSRF) attacks where a web application is tricked into calling the metadata endpoint; direct command-line invocation of the metadata service from a compromised instance; access by unauthorized processes or users that violate established allowlists; reconnaissance activity characterized by anomalous request patterns, high error rates, or URI enumeration; and the subsequent use of stolen credentials to access other cloud provider APIs.
type: 'technique'
related:
  - 'TA0006: Credential Access'
contributors:
  - 'Zachary Szewczyk'
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags:
  - 'none'
questions:
  - question: 'Has a public-facing web application, after receiving a connection from a known malicious IP, immediately made a connection to the Cloud Instance Metadata API, suggesting a Server-Side Request Forgery (SSRF) attack?'
    context: |
      This question aims to detect a classic SSRF pattern where an attacker exploits a vulnerability in a web app to force it to make internal requests on their behalf. By correlating inbound traffic from a threat intel feed with immediate outbound traffic to the metadata service (169.254.169.254), analysts can identify high-confidence SSRF attempts to steal credentials. The 5-second window is a key heuristic for linking the external trigger to the internal action.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Public-facing web application servers'
      - 'Cloud network flow logs (e.g., VPC Flow Logs)'
      - 'Network traffic logs from virtual network taps'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Correlate inbound Zeek http.log from malicious IPs with outbound Zeek conn.log to 169.254.169.254 within 5 seconds.'
  - question: 'Is a public-facing web server connecting to the Cloud Instance Metadata API at a rate that is anomalously high compared to its established baseline, especially when correlated with traffic from low-reputation IPs?'
    context: |
      This question helps detect SSRF and other metadata abuse by focusing on behavioral anomalies rather than specific signatures. A sudden spike in connection rates, especially one that deviates significantly (e.g., 3 standard deviations) from the norm, is a strong indicator of malicious activity, such as an attacker enumerating metadata paths. Correlating this with low-reputation source IPs adds further confidence.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Public-facing web application servers'
      - 'Cloud network flow logs (e.g., VPC Flow Logs)'
      - 'Network traffic logs from virtual network taps'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Calculate baseline for connections to 169.254.169.254 per server. Alert if connection rate > 3 standard deviations from moving average.'
  - question: 'Can we predict the likelihood of a malicious metadata API access event based on the characteristics of inbound HTTP requests, or detect anomalous spikes in the volume of requests to the metadata API?'
    context: |
      This question leverages machine learning to proactively identify suspicious inbound requests that are likely precursors to metadata abuse. By training a classifier on features of inbound requests (headers, URIs, etc.), analysts can flag potential attacks. Separately, a time-series anomaly detection model can identify unusual spikes in overall request volume to the metadata API, which could indicate a widespread or coordinated attack.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Public-facing web application servers'
      - 'Cloud network flow logs (e.g., VPC Flow Logs)'
      - 'Network traffic logs from virtual network taps'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Use trained ML model on inbound HTTP request features to predict malicious metadata access. Use time-series anomaly detection on metadata API request volume.'
  - question: 'Was a process created on a cloud instance that explicitly used a network utility (like curl, wget, or PowerShell) to query the Cloud Instance Metadata API endpoint?'
    context: |
      This question seeks to find direct, undisguised attempts by an adversary to access the metadata service from the command line. Searching for process creation events (like Windows Event ID 4688) that contain both a common network utility and the metadata IP (169.254.169.254) is a high-fidelity way to detect this technique.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Cloud compute instances (VMs, containers)'
      - 'CI/CD pipeline runners'
      - 'Endpoint Detection and Response (EDR) logs on cloud instances'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Search process creation logs (e.g., Windows Event ID 4688) for command lines containing network utilities and ''169.254.169.254''.'
  - question: 'Has a historically rare process on a specific host or host group been observed making a network connection to the Cloud Instance Metadata API?'
    context: |
      This question aims to identify anomalous processes accessing the metadata service. When a process that rarely or never runs on a system (e.g., its execution frequency is in the bottom 5th percentile) suddenly connects to 169.254.169.254, it is highly suspicious. This could indicate an attacker has introduced a custom tool or is using a legitimate but uncommon utility for their purposes.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Cloud compute instances (VMs, containers)'
      - 'CI/CD pipeline runners'
      - 'Endpoint Detection and Response (EDR) logs on cloud instances'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Baseline common processes per host. Alert if a rare process (e.g., bottom 5th percentile frequency) connects to 169.254.169.254.'
  - question: 'Can a machine learning model classify process creation events involving network connections as benign or suspicious metadata access based on their command-line arguments?'
    context: |
      This question proposes a more sophisticated approach to analyzing command-line activity. By extracting features like argument count, entropy, and the presence of specific keywords, a classification model can learn the subtle differences between benign and malicious invocations. This is more robust than simple keyword matching and can detect obfuscated or novel commands.
    answer_sources:
      - 'Windows Event ID 4688'
      - 'Cloud compute instances (VMs, containers)'
      - 'CI/CD pipeline runners'
      - 'Endpoint Detection and Response (EDR) logs on cloud instances'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Use trained ML model on command-line features to classify network-aware processes as benign or suspicious metadata access.'
  - question: 'Did a process or user account that is not on a pre-defined allowlist initiate a network connection to the Cloud Instance Metadata API?'
    context: |
      This question focuses on policy enforcement to detect unauthorized access. In a well-managed cloud environment, only specific, authorized processes and service accounts should need to access the metadata service. By maintaining role-specific allowlists and alerting on any connection from an entity not on that list, analysts can quickly identify policy violations that may indicate a compromised account or malicious process.
    answer_sources:
      - 'Windows Event ID 5156'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Sysmon Event ID 3'
      - 'Cloud compute instances (VMs, containers)'
      - 'Authentication and identity management servers'
      - 'Host-based firewall logs'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Alert if a network connection to 169.254.169.254 originates from a process or user not on the role-specific allowlist.'
  - question: 'Has the set of unique processes connecting to the metadata API on an instance significantly deviated from its historical baseline?'
    context: |
      This question uses a statistical approach to detect changes in the "population" of processes accessing the metadata service. By profiling the set of normal connecting processes over a baseline period, we can detect when this set changes significantly. A low Jaccard similarity score between the current set and the baseline indicates that new, unknown processes have started accessing the API, which is a strong signal of anomalous activity.
    answer_sources:
      - 'Windows Event ID 5156'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Sysmon Event ID 3'
      - 'Cloud compute instances (VMs, containers)'
      - 'Authentication and identity management servers'
      - 'Host-based firewall logs'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Profile unique processes connecting to metadata API over 30 days. Alert if Jaccard similarity of current processes to baseline drops below a threshold (e.g., < 0.5).'
  - question: 'Can unsupervised clustering identify anomalous processes connecting to the metadata API by grouping them as outliers?'
    context: |
      This question applies unsupervised machine learning to find "unknown unknowns." By clustering processes based on their attributes (name, parent, user, etc.), the model can automatically group normal, recurring activity into dense clusters. Any process that does not fit into these normal clusters is flagged as an outlier worthy of investigation, without needing pre-defined rules or labels.
    answer_sources:
      - 'Windows Event ID 5156'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Sysmon Event ID 3'
      - 'Cloud compute instances (VMs, containers)'
      - 'Authentication and identity management servers'
      - 'Host-based firewall logs'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Use clustering (e.g., DBSCAN) on process features. Flag processes that are classified as noise or outliers as anomalous.'
  - question: 'Is an instance making requests to the metadata API using non-standard HTTP methods or exhibiting a pattern of ''404 Not Found'' errors followed by new requests, indicative of enumeration?'
    context: |
      This question targets the reconnaissance phase, where an attacker tries to discover available metadata endpoints. Legitimate access is almost always via an HTTP GET request. Furthermore, a pattern of receiving 404 errors and then trying slightly different URI paths is a classic sign of brute-force enumeration, where the attacker is probing for valid paths.
    answer_sources:
      - 'Zeek http.log'
      - 'Cloud instance virtual network interfaces (VNICs)'
      - 'Network traffic inspection points (e.g., Zeek sensors)'
      - 'Cloud provider-native traffic mirroring services'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Alert on non-GET requests to 169.254.169.254. Also, alert on a sequence of multiple 404 responses followed by further requests.'
  - question: 'Is an instance accessing an anomalously high number of unique URI paths or are the requested URIs showing abnormally high entropy compared to its baseline?'
    context: |
      This question uses statistical measures to detect reconnaissance. A legitimate application usually accesses a small, predictable set of URI paths. An attacker, however, will likely probe many different paths, leading to a spike in the count of unique URIs. Alerting on deviations from the established norm for these metrics can effectively flag reconnaissance.
    answer_sources:
      - 'Zeek http.log'
      - 'Cloud instance virtual network interfaces (VNICs)'
      - 'Network traffic inspection points (e.g., Zeek sensors)'
      - 'Cloud provider-native traffic mirroring services'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Baseline unique URI paths and Shannon entropy per IP. Alert if unique paths exceed 99th percentile or entropy increases by > 2 standard deviations.'
  - question: 'Does the volume of requests or data transfer size from an instance to the metadata API significantly exceed the forecasted volume based on its historical behavior?'
    context: |
      This question leverages time-series forecasting to detect anomalies in traffic volume. A model can learn the normal daily/weekly patterns of an instance's communication with the metadata service. If the actual traffic volume suddenly and significantly exceeds the model's predicted range, it could indicate a malicious script performing large-scale enumeration or data exfiltration.
    answer_sources:
      - 'Zeek http.log'
      - 'Cloud instance virtual network interfaces (VNICs)'
      - 'Network traffic inspection points (e.g., Zeek sensors)'
      - 'Cloud provider-native traffic mirroring services'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Use a time-series model (e.g., Prophet) to forecast request/data volume. Alert if actual volume significantly exceeds predicted confidence interval.'
  - question: 'After accessing a known IAM credential endpoint in the metadata service, did the same instance immediately initiate an outbound connection to a sensitive cloud provider API?'
    context: |
      This is a critical question for detecting the successful theft and immediate use of credentials. It connects two key events in an attack chain: access to the credential path, and subsequent use of those credentials to connect to a management API. Correlating these two events within a short time window provides a high-confidence alert for credential abuse.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - 'Cloud compute instances (VMs, containers)'
      - 'Egress network gateways'
      - 'DNS resolvers'
      - 'VPC network access control lists (NACLs)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Detect request to ''/iam/security-credentials/''. Search for subsequent outbound connection from same IP to a cloud API endpoint within 5 minutes.'
  - question: 'After accessing the metadata credentials path, did an instance connect to a cloud API endpoint that is rare or has never been contacted by that instance role before?'
    context: |
      This question adds a behavioral baseline to the previous symbolic rule. Each instance role (e.g., 'web-server') should have a predictable pattern of API usage. If, after fetching credentials, an instance connects to an API endpoint that is not part of its normal behavioral profile, it is highly likely that a stolen credential is being used for an unauthorized purpose.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - 'Cloud compute instances (VMs, containers)'
      - 'Egress network gateways'
      - 'DNS resolvers'
      - 'VPC network access control lists (NACLs)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: After metadata credential access, monitor outbound connections. Score risk highly if connection is made to a destination not in the instance role''s baseline.'
  - question: 'Did an instance exhibit a sequence of network connections that deviates from its normal, learned behavioral model, specifically a transition from metadata credential access to a rare or forbidden API action?'
    context: |
      This question applies a more advanced state-based model to detect attack sequences. By modeling an instance's network activity as a series of state transitions (e.g., using a Markov chain), we can learn the probability of moving from one state to another. A transition from 'Accessing Metadata Credentials' to a low-probability or unseen state, like 'Creating a New IAM User', would be a powerful anomaly signal.
    answer_sources:
      - 'Zeek conn.log'
      - 'Zeek dns.log'
      - 'Zeek http.log'
      - 'Cloud compute instances (VMs, containers)'
      - 'Egress network gateways'
      - 'DNS resolvers'
      - 'VPC network access control lists (NACLs)'
    range: 'last 90 days'
    queries:
      - 'pseudocode: Use a state transition model (e.g., Markov chain) trained on normal network sequences. Flag transitions from credential access to a low-probability state.'