name: T1599: Network Boundary Bridging
id: f4b1d3c2-a9e0-4b1a-8f9c-7e6d5a4b3c2d
description: This playbook addresses the adversary technique of bypassing network defenses by creating unauthorized bridges between network segments. It focuses on detecting evidence of network boundary bridging through several key indicators: unauthorized connections to network device management interfaces from malicious IPs or via vulnerability exploits; the use of command-line tools like netsh.exe or PowerShell on multi-homed hosts to programmatically create network bridges; the observation of multi-homed hosts forwarding traffic between different subnets in a manner inconsistent with approved policies; direct violations of network segmentation rules where traffic crosses boundaries it shouldn't; and the correlation of anomalous administrative logins to network devices followed by policy-violating traffic. The goal is to identify when an adversary is attempting to pivot from a less secure network (like a DMZ) to a more secure internal network by turning a compromised, dual-homed machine into a rogue router or proxy.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious IP address attempting to connect to the management interface of a network boundary device?
    context: This action aims to detect direct attacks on network boundary devices from known threat actors. By monitoring management ports (like SSH, Telnet, HTTPS) on critical devices (firewalls, VPNs) for connections from IPs listed on threat intelligence feeds, we can proactively identify attempts to compromise the network perimeter. It also includes checking for known vulnerability signatures against these devices, providing another layer of defense against exploitation.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network Device Syslog
      - Perimeter firewalls
      - VPN concentrators
      - Internal network segmentation gateways (e.g., routers, layer-3 switches)
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: DEFINE boundary_devices = [IPs]; DEFINE mgmt_ports = [22, 23, 443, 8443]; DEFINE threat_feed = [Malicious_IPs]; SEARCH Zeek_conn_logs WHERE destination_ip IN boundary_devices AND destination_port IN mgmt_ports AND source_ip IN threat_feed; SEARCH Zeek_notice_logs WHERE destination_ip IN boundary_devices;
  - question: Has a successful connection to a boundary device's management interface originated from a statistically rare or never-before-seen geographical or network location (ASN)?
    context: This question focuses on identifying anomalous access patterns to critical network devices. Legitimate administrative access typically comes from a predictable set of locations and networks (ASNs). By baselining normal activity over 90 days, we can flag new connections from unusual ASN/country pairs. Such events are suspicious because they deviate from the established norm and could represent an adversary's attempt to gain access from an unfamiliar location to evade detection.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network Device Syslog
      - Perimeter firewalls
      - VPN concentrators
      - Internal network segmentation gateways (e.g., routers, layer-3 switches)
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: BASELINE successful_connections_to_mgmt_ports for 90 days, get ASN/country frequency; ALERT on new successful connection WHERE ASN/country pair is new OR frequency < 5th percentile;
  - question: Is there an anomalous spike in the volume of connection attempts to a network boundary device's management interface?
    context: This question aims to detect brute-force or scanning activity against network infrastructure. Adversaries often probe devices with a high volume of connection attempts to find open ports or guess credentials. By using a time-series model to predict the expected hourly connection volume, we can automatically alert on significant deviations from the norm. An observed volume exceeding the 95% confidence interval of the forecast strongly suggests automated and potentially malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek notice.log
      - Network Device Syslog
      - Perimeter firewalls
      - VPN concentrators
      - Internal network segmentation gateways (e.g., routers, layer-3 switches)
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: TRAIN time-series model on hourly connection attempts to mgmt interfaces; FORECAST expected volume + confidence interval; ALERT when observed hourly volume > 95% confidence interval;
  - question: Has a command been executed on a multi-homed host to create or modify a network bridge using known utilities like `netsh.exe` or PowerShell?
    context: This question seeks to directly detect the act of creating a network bridge on a Windows host. Adversaries may bridge network interfaces on a compromised multi-homed system to pivot from a restricted network segment (like a DMZ) to a more sensitive internal network. Monitoring for specific command-line arguments (`bridge add adapter`) and PowerShell cmdlets (`New-NetAdapter`) provides a high-fidelity indicator of this bridging activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Multi-homed servers (e.g., web servers in a DMZ with an internal management interface)
      - Developer workstations with multiple network adapters (e.g., physical and virtual)
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: SEARCH EventID 4688 WHERE ProcessName is 'netsh.exe' AND CommandLine contains 'bridge' AND 'add' AND 'adapter'; SEARCH EventID 4104 WHERE ScriptBlockText contains 'New-NetAdapter' and bridging functions;
  - question: Has a rare or unusual command-line argument been used with networking utilities on a multi-homed host?
    context: This question aims to find suspicious network configuration changes by focusing on the rarity of the commands used. While administrators use tools like `netsh.exe` and PowerShell for legitimate tasks, adversaries might use uncommon parameters or combinations. By calculating the TF-IDF score for command-line arguments, we can identify those that are rare across the entire environment. A command containing high-scoring (e.g., top 1%) arguments is highly anomalous and warrants investigation as a potential bridging attempt.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Multi-homed servers (e.g., web servers in a DMZ with an internal management interface)
      - Developer workstations with multiple network adapters (e.g., physical and virtual)
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: BASELINE command-line args for netsh.exe and PowerShell networking cmdlets; CALCULATE TF-IDF for all arguments; ALERT on command execution where any argument's TF-IDF score is in the top 1%;
  - question: Does a command executed on a multi-homed host appear malicious based on a machine learning model trained to distinguish between benign and malicious network configurations?
    context: This question leverages machine learning to automatically classify command-line activity as benign or malicious. By training a model on features of known good and bad commands (such as specific keywords, command length, and structure), the system can learn to identify suspicious patterns that may not be captured by simple keyword searches. An alert for a command classified as malicious with high confidence (e.g., >0.90) provides a strong signal of a potential network bridging attempt.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Multi-homed servers (e.g., web servers in a DMZ with an internal management interface)
      - Developer workstations with multiple network adapters (e.g., physical and virtual)
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: TRAIN classification model on labeled command-line strings (benign/malicious); DEPLOY model to classify new commands in real-time; ALERT when command is classified as 'malicious' with confidence > 0.90;
  - question: Is a multi-homed host observed forwarding traffic between different network segments in a way that is not explicitly allowlisted?
    context: This question focuses on detecting the functional behavior of a network bridge or unauthorized proxy. A compromised multi-homed host can be used to relay traffic between isolated networks. This query identifies this behavior by correlating an inbound connection on one interface with a near-simultaneous outbound connection on another interface to a different subnet. If this specific traffic forwarding pattern is not on an allowlist of known, legitimate services (like a sanctioned proxy), it is highly indicative of a malicious network bridge.
    answer_sources:
      - Zeek conn.log
      - Network taps monitoring traffic to/from DMZ segments
      - Core switch SPAN ports
      - Multi-homed servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: DEFINE multi_homed_hosts = [IPs]; FOR each inbound connection to host in multi_homed_hosts, SEARCH for outbound connection from same host within 2 seconds; ALERT if outbound_destination_subnet != inbound_source_subnet AND (inbound_port, outbound_port, protocol) is NOT in allowlist;
  - question: Is a multi-homed host exhibiting anomalous data transfer characteristics during a traffic forwarding session?
    context: This question seeks to identify malicious traffic forwarding by analyzing the data transfer patterns. Legitimate proxy or relay services often have predictable data flow characteristics. By baselining the normal ratio of bytes sent versus received for known relaying behaviors, we can detect significant deviations. A session where the byte ratio is more than three standard deviations from the mean could indicate unusual activity, such as data exfiltration or C2 communication, hidden within a seemingly legitimate channel.
    answer_sources:
      - Zeek conn.log
      - Network taps monitoring traffic to/from DMZ segments
      - Core switch SPAN ports
      - Multi-homed servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: BASELINE byte ratio (orig_bytes / resp_bytes) for relaying connections on multi-homed hosts; CALCULATE mean and stddev per interface pair/protocol; ALERT on new relay session if byte ratio is > 3 stddev from the mean;
  - question: Is there a network connection on a multi-homed host that does not match any established pattern of normal behavior?
    context: This question uses unsupervised machine learning to find novel or anomalous connections. By grouping all connections on multi-homed hosts into clusters based on their attributes (port, protocol, duration, bytes, etc.), we can define what 'normal' looks like. Any connection that does not fit into any of these clusters is flagged as an outlier. These outliers are inherently suspicious because they represent a type of traffic never seen before and could be the first sign of a newly established malicious bridge.
    answer_sources:
      - Zeek conn.log
      - Network taps monitoring traffic to/from DMZ segments
      - Core switch SPAN ports
      - Multi-homed servers
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: CREATE feature vectors for connections (port, proto, duration, bytes, subnet); CLUSTER connections using DBSCAN to define normal behavior groups; ALERT on any connection classified as an outlier/noise by the model;
  - question: Has a network connection occurred that directly violates the defined network segmentation policy?
    context: This is a fundamental security question that directly tests the enforcement of network segmentation. By creating a clear, machine-readable matrix of what traffic is allowed between defined network zones (e.g., workstations cannot talk directly to the database zone), we can monitor network traffic logs and alert on any connection that violates this policy. Such an alert is a high-fidelity indicator of a security control failure, misconfiguration, or a successful adversary pivot.
    answer_sources:
      - Zeek conn.log
      - Network segmentation boundaries (e.g., between PCI and corporate LANs)
      - DMZ perimeter
      - Internet egress/ingress points
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: DEFINE zones by subnet; DEFINE allow_matrix (SrcZone, DstZone, DstPort, Proto); FOR each connection in logs, enrich with SrcZone/DstZone; ALERT if (SrcZone, DstZone, DstPort, Proto) not in allow_matrix;
  - question: Is a host misusing an allowed communication path to scan or connect to an abnormally large number of other hosts?
    context: Adversaries often abuse legitimate, open pathways to perform reconnaissance and move laterally. This question aims to detect such abuse. Even if traffic from workstations to web servers on port 443 is allowed, a single workstation connecting to hundreds of different web servers in an hour is highly abnormal. By baselining the normal 'fan-out' for each allowed path and alerting when a source exceeds the 99th percentile, we can detect potential internal scanning activity hidden within otherwise legitimate traffic.
    answer_sources:
      - Zeek conn.log
      - Network segmentation boundaries (e.g., between PCI and corporate LANs)
      - DMZ perimeter
      - Internet egress/ingress points
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: FOR each allowed inter-zone path, CALCULATE 99th percentile of unique destinations per source per hour; ALERT when a source host exceeds its path-specific threshold;
  - question: Has the volume of expected, normal 'denied' connections at a network boundary dropped to an unusually low level?
    context: This question uses a counter-intuitive approach: looking for the absence of expected events. A healthy network boundary firewall constantly denies a certain background noise of unauthorized connection attempts. A sudden and sustained drop in these denials is highly anomalous. It could mean the firewall was disabled or traffic is being rerouted. By modeling the expected denial rate, we can alert when the observed rate falls significantly below the forecast, indicating a potential compromise of a key network defense.
    answer sources:
      - Zeek conn.log
      - Network segmentation boundaries (e.g., between PCI and corporate LANs)
      - DMZ perimeter
      - Internet egress/ingress points
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: TRAIN time-series model on hourly denied connection counts at a boundary; FORECAST expected denial volume + confidence interval; ALERT when observed hourly volume is below lower confidence bound for > 15 minutes;
  - question: Following a successful administrative login from an unapproved IP, did the associated network device begin passing traffic that violates segmentation policy?
    context: This question creates a high-confidence alert by correlating two suspicious events. First, it identifies a risky action: a successful administrative login to a critical network device from an unauthorized location. Second, it chains that alert to subsequent network behavior, specifically looking for policy-violating traffic from that same device. The combination of an unauthorized login followed by a policy violation within 60 minutes strongly suggests the device was compromised and is now being used to bridge network boundaries.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Network Device Syslog
      - Firewall management interfaces
      - Router and switch management interfaces
      - Configuration management servers
      - Network taps at segmentation boundaries
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: DEFINE admin_ips = [IPs/Subnets]; ALERT on successful login to network device where source_ip NOT IN admin_ips; IF alert fires, TRIGGER high-severity alert for any policy violation associated with that device in the next 60 minutes;
  - question: Has a high-risk administrative login, based on anomalous location or time, been followed by policy-violating traffic from the accessed device?
    context: This question operationalizes a risk-based alerting strategy. It scores every administrative login based on how much its attributes (source country, network, time of day) deviate from the historical norm. A login with a high composite risk score (e.g., in the 95th percentile for rarity) is flagged as high-risk. This flag then triggers a focused, automated investigation, querying all traffic from the associated device for one hour to check for policy violations, allowing for proactive hunting based on probabilistic risk.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Network Device Syslog
      - Firewall management interfaces
      - Router and switch management interfaces
      - Configuration management servers
      - Network taps at segmentation boundaries
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: PROFILE historical admin logins (geolocation, ASN, time); SCORE new logins based on attribute rarity; IF risk score > 95th percentile, FLAG session as high-risk; AUTOMATICALLY query for policy violations on that device for the next 1 hour;
  - question: Has an administrative login session, identified as anomalous by an autoencoder neural network, been observed?
    context: This question applies advanced anomaly detection to administrative sessions. An autoencoder is trained only on legitimate sessions, learning to reconstruct their characteristic feature vectors (location, time, duration, etc.). When a new session deviates significantly from the norm (e.g., a login from a new country at 3 AM), the autoencoder will fail to reconstruct it accurately, resulting in a high reconstruction error. This error serves as a powerful anomaly score, automatically triggering a high-priority SOC investigation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4624
      - Network Device Syslog
      - Firewall management interfaces
      - Router and switch management interfaces
      - Configuration management servers
      - Network taps at segmentation boundaries
    range: last 90 days
    queries:
      - search_technology: Pseudocode
        query: TRAIN autoencoder on feature vectors of legitimate admin sessions; FOR each new session, calculate reconstruction error; IF error is high, FLAG as anomalous and trigger high-priority investigation of device traffic;