name: T1547.010: Port Monitors
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: Adversaries may establish persistence or escalate privileges by creating or modifying Port Monitors. This involves manipulating registry keys under HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors to point to a malicious DLL. The Print Spooler service (spoolsv.exe) then loads this DLL, granting it SYSTEM-level permissions and persistence. Investigations should focus on unusual registry modifications to Print Monitor keys, the loading of rare or suspiciously located DLLs by spoolsv.exe, and anomalous outbound network connections from the Print Spooler service.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a known malicious DLL been registered as a Port Monitor driver?
  context: This question aims to detect the most straightforward persistence mechanism where an adversary registers a DLL with a known malicious hash as a Port Monitor. By correlating registry modifications with file creation events and threat intelligence, we can identify high-confidence threats.
  answer_sources:
  - Sysmon Event ID 13
  - Windows Event ID 4657
  - Sysmon Event ID 11
  - All Windows Endpoints
  - Windows Print Servers
  - Windows Domain Controllers
  - Threat Intelligence Feeds
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH Sysmon Event ID 13 WHERE (TargetObject ENDS_WITH '\Monitors\*' AND TargetObject ENDS_WITH '\Driver')
      EXTRACT FilePath from Details
      JOIN on FilePath with (SEARCH Sysmon Event ID 11) to get FileHash
      MATCH FileHash against ThreatIntelligence.MaliciousHashes
      RETURN Alert
- question: Has a rare or new DLL been registered as a Port Monitor driver across the environment?
  context: Adversaries often use custom or newly compiled malware that won't be in threat intelligence feeds. This question identifies such threats by baselining all Port Monitor DLLs across the enterprise and alerting on outliers. A DLL seen on very few systems is suspicious and warrants investigation.
  answer_sources:
  - Sysmon Event ID 13
  - Windows Event ID 4657
  - All Windows Endpoints
  - Windows Print Servers
  - Windows Domain Controllers
  range: last 30 days
  queries:
  - search_technology: pseudocode
    query: |
      BASELINE all DLL paths from 'HKLM\...\Print\Monitors\*\Driver' registry values over 30 days.
      CALCULATE prevalence for each DLL path.
      SEARCH for new or modified Print Monitor 'Driver' values.
      ALERT if the new DLL path's prevalence is below threshold (e.g., <1%) and not on an allowlist.
- question: Does a newly registered Port Monitor DLL exhibit characteristics of malware based on a risk score?
  context: This question uses a machine learning model to proactively score the risk of a DLL registered as a Port Monitor. It analyzes multiple features like file entropy, digital signature, and prevalence to identify suspicious DLLs that might not be caught by simple signature or prevalence checks, providing a more nuanced detection capability.
  answer_sources:
  - Sysmon Event ID 13
  - Sysmon Event ID 11
  - All Windows Endpoints
  - Windows Print Servers
  - Windows Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each new DLL in a Port Monitor registry key:
        EXTRACT features (entropy, signature, prevalence, creator process info).
        INPUT features into risk classification model.
        ALERT if risk score > threshold (e.g., 0.85).
- question: Was a new Port Monitor registered immediately after its associated DLL was created on the system?
  context: This sequence of events—file creation, new monitor key creation, and driver value set—in a short time window is highly indicative of an automated script or malware installing a persistence mechanism. Legitimate installers might do this, but the tight correlation is suspicious and warrants investigation.
  answer_sources:
  - Sysmon Event ID 12
  - Sysmon Event ID 13
  - Sysmon Event ID 11
  - All Windows Endpoints
  - Windows Print Servers
  range: last 5 minutes
  queries:
  - search_technology: pseudocode
    query: |
      TRIGGER on Sysmon Event ID 12 (RegKey create) under 'HKLM\...\Print\Monitors'.
      CORRELATE with Sysmon Event ID 13 (RegValue set for 'Driver') within 5 mins on same host.
      CORRELATE with Sysmon Event ID 11 (File create) for the DLL from Event 13 within 5 mins on same host.
      ALERT if all three events occur in sequence.
- question: Was a new Port Monitor created with a suspicious or randomly generated name?
  context: Adversaries may use randomly generated names for their malicious Port Monitors to avoid using common names that might be on a blocklist. By baselining known-good monitor names and calculating the entropy of new ones, we can detect these attempts to evade simple name-based detections.
  answer_sources:
  - Sysmon Event ID 12
  - All Windows Endpoints
  - Windows Print Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      BASELINE known-good Port Monitor subkey names.
      FOR each new key creation (Sysmon Event ID 12) under 'HKLM\...\Print\Monitors':
        CALCULATE entropy of the new key name.
        ALERT if name is not in baseline AND entropy > threshold (e.g., 3.5).
- question: Has there been an anomalous spike in the creation of new Port Monitors on any single host?
  context: A sudden increase in the creation of Port Monitors on a host, especially outside of normal maintenance windows, can indicate malicious activity, such as an adversary testing or deploying a persistence mechanism. Time-series analysis helps distinguish this abnormal spike from regular system behavior.
  answer_sources:
  - Sysmon Event ID 12
  - All Windows Endpoints
  - Windows Print Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      AGGREGATE new Port Monitor key creations (Sysmon Event ID 12) per host per hour.
      APPLY time-series anomaly detection model to this data.
      ALERT if the count on a host significantly exceeds the predicted range.
- question: Has the Print Spooler service loaded a DLL from an unusual or user-writable location?
  context: The Print Spooler service (spoolsv.exe) should typically only load DLLs from protected system directories like System32. Loading a DLL from a user-writable directory (like C:\Users, C:\ProgramData, or C:\Windows\Temp) is highly suspicious and a common indicator of a malicious Port Monitor being loaded.
  answer_sources:
  - Sysmon Event ID 7
  - All Windows Endpoints
  - Windows Print Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH Sysmon Event ID 7 WHERE (Image ENDS_WITH '\spoolsv.exe')
      AND (ImageLoaded PATH is in 'C:\Users\*', 'C:\ProgramData\*', 'C:\Windows\Temp\*')
      ALERT on match.
- question: Has the Print Spooler service loaded a rare or unique DLL?
  context: A DLL that is loaded by spoolsv.exe on very few machines in the enterprise is an anomaly and could represent a targeted malicious Port Monitor. This helps catch threats not identified by path or signature alone.
  answer_sources:
  - Sysmon Event ID 7
  - All Windows Endpoints
  - Windows Print Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      BASELINE prevalence of all DLL hashes loaded by 'spoolsv.exe' across the enterprise.
      FOR each new 'spoolsv.exe' image load event (Sysmon Event ID 7):
        ALERT if the loaded DLL's hash prevalence is below threshold (e.g., < 0.1%).
- question: Does a DLL load by the Print Spooler service have anomalous characteristics?
  context: This question applies a machine learning model to identify suspicious DLL loads by spoolsv.exe that might otherwise be missed. By considering a combination of factors like path entropy, signature validity, and prevalence, the model can flag events with a high anomaly score, indicating a likely malicious Port Monitor.
  answer_sources:
  - Sysmon Event ID 7
  - All Windows Endpoints
  - Windows Print Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each 'spoolsv.exe' image load event (Sysmon Event ID 7):
        EXTRACT features (DLL path entropy, signature status, prevalence).
        INPUT features into anomaly detection model (e.g., Isolation Forest).
        ALERT if anomaly score is high.
- question: Is the Print Spooler service communicating with a known command and control (C2) server?
  context: A compromised Print Spooler service, via a malicious Port Monitor, may be used to establish a C2 channel. This question directly checks for outbound connections from spoolsv.exe to destinations listed in threat intelligence feeds as known malicious infrastructure.
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - All Windows Endpoints
  - Network Egress Points (Firewalls/Proxies)
  - DNS Servers
  - Threat Intelligence Feeds
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH Sysmon Event ID 3 WHERE (ProcessImage ENDS_WITH '\spoolsv.exe').
      JOIN with Zeek logs to get destination domain/IP.
      MATCH destination against ThreatIntelligence.C2_Indicators.
      ALERT on match.
- question: Is the Print Spooler service communicating with an unusually rare domain?
  context: Adversaries often use newly registered or obscure domains for C2 communications. This question helps detect such activity by baselining all domains contacted by spoolsv.exe across the enterprise and alerting on connections to very rare or new domains that could signify a C2 channel.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress Points (Firewalls/Proxies)
  - DNS Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      BASELINE all destination FQDNs contacted by 'spoolsv.exe' from Zeek logs.
      CALCULATE prevalence of each TLD and SLD.
      ALERT on new connections from 'spoolsv.exe' to a domain where the TLD or SLD is in the bottom percentile of prevalence.
- question: Is the network traffic from the Print Spooler service exhibiting beaconing or anomalous data transfer patterns?
  context: Malicious Port Monitors may use spoolsv.exe to beacon out to a C2 server at regular intervals or to exfiltrate data. This question uses time-series analysis to detect such patterns, like periodic connections (beaconing) or unusually large data transfers, that deviate from the host's normal network behavior for the spooler service.
  answer_sources:
  - Zeek conn.log
  - All Windows Endpoints
  - Network Egress Points (Firewalls/Proxies)
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each host, model time-series data for 'spoolsv.exe' network traffic (bytes sent, connection frequency, duration).
      APPLY anomaly detection to the time-series.
      ALERT on detection of beaconing patterns or significant data transfer anomalies.
- question: Was a known Port Monitor exploit tool run immediately before a Port Monitor registry key was modified?
  context: This question looks for the specific TTP of using a known exploit tool (like PrintSpoofer) to abuse the Port Monitor mechanism for privilege escalation. Correlating the execution of such a tool with the subsequent modification of a Port Monitor registry key within a short time frame is a high-confidence indicator of an active attack.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - All Windows Endpoints
  - Windows Servers (Non-Domain Controllers)
  range: last 60 seconds
  queries:
  - search_technology: pseudocode
    query: |
      TRIGGER on process creation (Sysmon EID 1) where hash matches known exploit tool (e.g., PrintSpoofer).
      CORRELATE with registry write (Sysmon EID 13) to 'HKLM\...\Print\Monitors\*\Driver' within 60 seconds on the same host.
      ALERT on correlation.
- question: Was a Port Monitor registry key modified by a process with an obfuscated or unusually long command line?
  context: Adversaries often use obfuscated or complex command lines to hide their actions. By analyzing the entropy and length of the command line of the process modifying the registry, we can identify suspicious commands that deviate from the established baseline of normal administrative activity.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 13
  - All Windows Endpoints
  - Windows Servers (Non-Domain Controllers)
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each process modifying a Print Monitor key:
        ANALYZE command line length and entropy.
        BASELINE these metrics for known admin tools.
        ALERT if metrics exceed 2 standard deviations from the baseline.
- question: Has a sequence of events matching a known Port Monitor attack chain occurred on a host?
  context: Port Monitor exploitation often follows a predictable sequence of events. This question uses a sequence analysis model to learn normal host activity and flag event sequences (e.g., shell spawns exploit, exploit creates DLL, DLL is registered as monitor, spooler loads DLL) that are characteristic of an attack.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 7
  - Sysmon Event ID 11
  - Sysmon Event ID 13
  - All Windows Endpoints
  - Windows Servers (Non-Domain Controllers)
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      TRAIN sequence analysis model on normal Sysmon event sequences per host.
      MONITOR for sequences with high reconstruction error.
      ALERT if anomalous sequence matches the pattern: [Cmd -> Exploit -> DLL Create -> Reg Set -> Spooler Load].
- question: Was a Port Monitor registry key modified by an unprivileged user account?
  context: Modifications to the HKLM registry hive, especially for critical components like Port Monitors, should only be performed by highly privileged system or administrative accounts. A write operation from a standard user account is a major red flag for a privilege escalation attempt.
  answer_sources:
  - Sysmon Event ID 13
  - Windows Event ID 4657
  - All Windows Endpoints
  - Domain Controllers (for user context lookup)
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH registry write events (Sysmon EID 13) to 'HKLM\...\Print\Monitors'.
      ALERT if User is NOT 'SYSTEM', 'LOCAL SERVICE', or a member of 'Administrators'.
- question: Was a Port Monitor registry key modified by a process running at a low or medium integrity level?
  context: A process running at a Medium or Low integrity level should not be able to modify HKLM. If such a modification occurs, it strongly implies an exploit was used to bypass security controls, indicating a privilege escalation attempt.
  answer_sources:
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints
  - Domain Controllers (for user context lookup)
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH registry writes (Sysmon EID 13) to 'HKLM\...\Print\Monitors'.
      JOIN with process creation (Sysmon EID 1) to get IntegrityLevel.
      BASELINE IntegrityLevel (expect 'System' or 'High').
      ALERT if IntegrityLevel is 'Medium' or 'Low'.
- question: Does a Port Monitor registry write have a high risk score based on its context (user, integrity, parent process)?
  context: This question leverages a machine learning model to provide a holistic risk assessment of a registry write event. By combining multiple weak signals—such as the user account, process integrity, parent process, and session type—the model can identify sophisticated privilege escalation attempts that might not trigger simpler rules.
  answer_sources:
  - Sysmon Event ID 13
  - Sysmon Event ID 1
  - Windows Event ID 4657
  - Windows Event ID 4688
  - All Windows Endpoints
  - Domain Controllers (for user context lookup)
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      FOR each Print Monitor registry write:
        EXTRACT features (User type, IntegrityLevel, ParentProcess, Session ID).
        INPUT features into risk classification model.
        ALERT if risk score is high.
- question: Was a Port Monitor registry key modified by a process spawned from an interactive shell or an Office application?
  context: Legitimate modifications to Port Monitors are typically handled by trusted system processes. When the modification originates from a process spawned by a command shell or an Office document, it is highly suspicious and suggests an adversary is interactively manipulating the system.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - All Windows Endpoints
  - Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      SEARCH registry writes (Sysmon EID 13) to 'HKLM\...\Print\Monitors'.
      JOIN with process info (Sysmon EID 1) to get ParentProcess.
      ALERT if ParentProcess is in ['cmd.exe', 'powershell.exe', 'winword.exe', 'excel.exe', etc.].
- question: Was a Port Monitor registry key modified via a rare or unusual process ancestry chain?
  context: This question identifies attacks by looking for deviations in the process chain leading to a Port Monitor modification. By baselining the common parent processes (e.g., svchost.exe) that legitimately perform these changes, we can alert on modifications initiated by a rare parent process.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - Sysmon Event ID 13
  - All Windows Endpoints
  - Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      BASELINE frequency of parent processes that modify Print Monitor keys.
      ALERT if a modification is initiated by a parent process not in the top 95% of the baseline.
- question: Does the full process ancestry graph leading to a Port Monitor modification appear anomalous?
  context: This advanced technique models the entire system's process activity as a graph. It can detect sophisticated attacks by identifying not just a suspicious parent process, but an entire chain of execution that is structurally unusual or contains suspicious nodes (e.g., an Office app spawning a shell).
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 13
  - All Windows Endpoints
  - Application Servers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      MODEL process creation events (Sysmon EID 1) in a graph database.
      FOR any process modifying a Print Monitor key:
        ANALYZE its ancestry chain in the graph.
        APPLY graph anomaly detection algorithm.
        ALERT on structurally rare or suspicious chains.
- question: Did the Print Spooler service load a suspicious DLL shortly after a credential access attempt on the same host?
  context: An attempt to access credentials from LSASS followed closely by the loading of a suspicious DLL by the spooler service strongly suggests an attacker has gained initial access, is attempting to harvest credentials, and is installing a persistent, privileged backdoor via a Port Monitor.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - Sysmon Event ID 10
  - All Windows Endpoints
  - Domain Controllers
  range: last 10 minutes
  queries:
  - search_technology: pseudocode
    query: |
      TRIGGER on LSASS access (Sysmon EID 10) from an untrusted source.
      CORRELATE with 'spoolsv.exe' loading an unsigned/low-prevalence DLL (Sysmon EID 7) within 10 minutes on the same host.
      ALERT on correlation.
- question: Did a host with a high-risk score (due to recon/credential access) subsequently have its Print Spooler service load a new DLL?
  context: This question uses a risk-scoring model to track suspicious host behavior. Reconnaissance and credential access attempts increase a host's risk score. If a high-risk host then loads a new DLL into the spooler, it provides contextual evidence that this is likely part of a broader attack.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - Sysmon Event ID 10
  - All Windows Endpoints
  - Domain Controllers
  range: last 1 hour
  queries:
  - search_technology: pseudocode
    query: |
      INCREMENT host risk score for recon commands ('whoami', etc.) and LSASS access.
      IF host risk score > threshold AND 'spoolsv.exe' loads a new DLL within 1 hour:
        GENERATE high-severity alert.
- question: Did a host predicted to be undergoing a privilege escalation attempt then load a new DLL into the Print Spooler service?
  context: This question uses a predictive model to identify hosts where privilege escalation is likely occurring. When the model flags a host and that event is followed by a new DLL being loaded by the spooler, it serves as powerful confirmation of the predicted attack, allowing for a confident response.
  answer_sources:
  - Sysmon Event ID 7
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - Sysmon Event ID 10
  - All Windows Endpoints
  - Domain Controllers
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: |
      USE trained classifier to predict privilege escalation probability per host.
      IF predicted probability > threshold AND 'spoolsv.exe' loads a new DLL within minutes:
        ESCALATE high-confidence alert.