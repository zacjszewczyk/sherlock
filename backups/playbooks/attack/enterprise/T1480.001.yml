name: "T1480.001: Environmental Keying"
id: "f8e3a24e-6e4a-4b0d-854c-1d9c7f9b8a3e"
description: "This playbook helps determine if an adversary is evading defenses using environmental keying. This involves detecting malware that checks its surroundings before executing its main payload. Indicators include processes running a series of host discovery commands before connecting to a malicious C2 server; a specific, ordered sequence of discovery commands matching known malware; an unusually high number or variety of discovery commands from a single process; unsigned or new processes that terminate immediately after creation, suggesting a keying mismatch; and network reconnaissance where a host tries to discover its own internal hostname or external IP address through external services."
type: "technique"
related:
  - "TA0005: Defense Evasion"
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Has a process executed discovery commands and then connected to a known malicious C2 destination?"
    context: "This action looks for a common malware behavior pattern: reconnaissance followed by C2 communication. By correlating host discovery commands with subsequent network connections to malicious IPs/domains, analysts can identify malware that has successfully profiled the system and is now 'phoning home'. This is a high-fidelity indicator of a compromise in progress."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Endpoint devices"
      - "Domain Controllers"
      - "Network egress points (Firewall/Proxy)"
      - "DNS Resolvers"
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH process_creation_events WHERE command_line CONTAINS ('whoami', 'systeminfo', 'ipconfig', 'netsh') | CORRELATE by host_ip with network_connection_logs within 5 minutes | WHERE destination_ip IN c2_threat_feed"
  - question: "Has a process that ran discovery commands connected to a rare or new external destination?"
    context: "This question uses statistical analysis to find anomalies. Instead of relying solely on known bad destinations, it identifies suspicious behavior by baselining normal activity. A process that performs system checks and then connects to an unusual destination (for that host) is a strong indicator of environmental keying, where the malware proceeds only after confirming it's not in a sandbox."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Endpoint devices"
      - "Domain Controllers"
      - "Network egress points (Firewall/Proxy)"
      - "DNS Resolvers"
    range: "last 90 days"
    queries:
      - "Pseudocode: BASELINE process_network_connections for 30 days | SEARCH process_creation_events WHERE command_line CONTAINS discovery_commands | CORRELATE with subsequent network_connections | CALCULATE rarity of process-destination pair | ALERT if rarity > 99th percentile"
  - question: "Does a machine learning model classify a sequence of discovery commands followed by a network connection as malicious?"
    context: "This question leverages machine learning to automate the detection of complex malicious patterns. By training a model on known benign and malicious process/network behaviors, it can identify novel threats that might evade simpler rule-based or statistical methods. A high-confidence classification of malice following discovery commands provides a powerful, data-driven alert for analysts to investigate."
    answer_sources:
      - "Windows Event ID 4688"
      - "Zeek conn.log"
      - "Endpoint devices"
      - "Domain Controllers"
      - "Network egress points (Firewall/Proxy)"
      - "DNS Resolvers"
    range: "last 90 days"
    queries:
      - "Pseudocode: INPUT process_features (name, parent, cmdline) and network_features (dest_ip, port) into ML_model | SEARCH for events where discovery_commands were run | IF ML_model_output == 'malicious' with high_confidence THEN ALERT"
  - question: "Has a specific, ordered sequence of discovery commands, known to be used by malware, been executed by a single process?"
    context: "This is a signature-based approach. Certain malware families use a fixed, hardcoded sequence of commands to check the environment. Detecting this exact sequence within a short time frame from the same process is a very strong indicator that a specific malware tool is active. This question helps analysts hunt for known threats based on their TTPs."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows endpoints and servers"
      - "Active Directory domain controllers"
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH process_creation_events | GROUP by process_id, parent_process_id | LOOK FOR sequence ('wmic csproduct get uuid', 'getmac', 'nltest /domain_trusts') within 30 seconds | ALERT"
  - question: "Has an unusually rare sequence of commands been executed on a host?"
    context: "This question uses n-gram analysis, a technique from computational linguistics, to find anomalous command sequences. Normal user and system behavior often involves predictable command patterns. A sequence with a very low probability of occurring, based on historical data, is suspicious and may indicate an attacker or malware performing an unusual chain of discovery actions."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows endpoints and servers"
      - "Active Directory domain controllers"
    range: "last 90 days"
    queries:
      - "Pseudocode: BASELINE command sequences using n-grams for 30 days | CALCULATE probability of new command sequences | IF sequence_probability < 1st percentile THEN ALERT"
  - question: "Does a sequence-based machine learning model identify a chain of commands as anomalous?"
    context: "This question employs a sophisticated deep learning model (LSTM) to learn the 'grammar' of normal command sequences for a user or system. When a new sequence of commands doesn't fit the learned pattern, the model produces a high 'reconstruction error,' flagging it as an anomaly. This is effective for detecting novel attack patterns that don't match any known signatures or simple statistical deviations."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows endpoints and servers"
      - "Active Directory domain controllers"
    range: "last 90 days"
    queries:
      - "Pseudocode: TRAIN LSTM autoencoder on historical command sequences | INPUT new command sequences into model | IF reconstruction_error > threshold THEN ALERT"
  - question: "Has a single process executed an excessive number of distinct discovery commands in a short time?"
    context: "This is a threshold-based detection. While a single discovery command is common, a rapid-fire series of many different discovery commands from the same process is highly abnormal and characteristic of automated reconnaissance scripts used by attackers. This question helps pinpoint this initial, noisy phase of an attack."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows endpoints and servers"
      - "User workstations"
      - "Critical servers"
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH process_creation_events for discovery_commands | GROUP by process_id | COUNT distinct commands within 60 seconds | IF distinct_command_count > 5 THEN ALERT"
  - question: "Has the variety or frequency of commands on a host suddenly and significantly increased?"
    context: "This question uses information theory (Shannon entropy) to measure the randomness or unpredictability of commands being executed. A stable system has a relatively predictable entropy. A sudden spike indicating an unusual variety of commands ($$ E > \\mu + 3\\sigma $$) is a powerful way to detect a change in system state without knowing the specifics of the commands."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows endpoints and servers"
      - "User workstations"
      - "Critical servers"
    range: "last 90 days"
    queries:
      - "Pseudocode: BASELINE command-line entropy per host | CALCULATE rolling 5-min entropy | IF entropy > (baseline_mean + 3 * baseline_std_dev) THEN ALERT"
  - question: "Does a machine learning model, trained on normal command activity for a specific host profile, classify recent activity as an anomaly?"
    context: "This question focuses on tailored anomaly detection using one-class SVMs. Since 'normal' behavior varies greatly between, for example, a developer's machine and a database server, this approach creates a specific baseline for each profile. Any activity that deviates from this highly specific norm is flagged, providing more accurate and context-aware alerting than a one-size-fits-all approach."
    answer_sources:
      - "Windows Event ID 4688"
      - "All Windows endpoints and servers"
      - "User workstations"
      - "Critical servers"
    range: "last 90 days"
    queries:
      - "Pseudocode: TRAIN One-Class SVM on normal command vectors per host_profile | CLASSIFY new 5-min activity vectors | IF classification == 'anomaly' THEN ALERT"
  - question: "Has an unsigned process from a suspicious location executed and terminated very quickly?"
    context: "This question targets a key indicator of failed environmental keying: a malware executable that runs, fails its checks (e.g., detects it's in a sandbox), and immediately quits. The combination of a short lifespan, lack of a valid digital signature, and execution from a temporary or user-writable directory is highly suspicious and warrants investigation."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4689"
      - "All Windows endpoints and servers, especially user workstations"
    range: "last 90 days"
    queries:
      - "Pseudocode: JOIN process_creation (4688) and process_termination (4689) events | CALCULATE duration = termination_time - creation_time | WHERE duration < 2s AND is_signed == false AND path IN ('%APPDATA%', '%TEMP%') | ALERT"
  - question: "Has a process terminated significantly faster than its historical average execution time?"
    context: "This question uses statistical baselining on process execution duration. Legitimate processes typically have a consistent range of runtimes. A process that suddenly terminates much faster than usual can indicate a crash or, in a security context, a deliberate exit due to a failed environmental check. This method can catch known processes being used in unusual ways."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4689"
      - "All Windows endpoints and servers, especially user workstations"
    range: "last 90 days"
    queries:
      - "Pseudocode: BASELINE execution duration (mean, std_dev) per process_name | SEARCH for process termination events | IF duration < (mean - 2 * std_dev) THEN ALERT"
  - question: "Can unsupervised machine learning group together multiple instances of short-lived, unsigned processes, revealing a common malicious pattern?"
    context: "This question applies unsupervised learning (clustering) to discover previously unknown threats. By grouping processes with similar attributes (short life, no signature, suspicious path, etc.), analysts can identify campaigns or malware families that share characteristics. This is useful for finding 'patient zero' and other related infections without prior signatures."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4689"
      - "All Windows endpoints and servers, especially user workstations"
    range: "last 90 days"
    queries:
      - "Pseudocode: RUN DBSCAN clustering on process_features (duration, parent, path, signature_status) | INVESTIGATE clusters containing short-lived, unsigned processes"
  - question: "Is a host asking an external server for its internal name, or connecting to 'what-is-my-IP' services?"
    context: "This is a straightforward detection for specific, highly suspicious network behaviors. An internal host should ask internal DNS servers about internal names; querying an external server for this is anomalous. Likewise, connections to public IP-checking services are often used by malware to understand its network position before communicating with a C2 server."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Internal DNS servers"
      - "Network egress points (Firewall/Proxy)"
      - "Web Proxies"
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH dns_logs WHERE source_ip=internal AND dest_ip=external AND query=internal_domain | SEARCH network_logs WHERE destination_domain IN ('api.ipify.org', 'ifconfig.me') | ALERT"
  - question: "Is a host connecting to IP-checking services more frequently than its peers, or showing unusual DNS query patterns?"
    context: "This question moves beyond simple lookups to statistical anomaly detection. By comparing a host's behavior to its peers, it can identify outliers. A host that frequently checks its external IP, or suddenly starts querying a strange variety of Top-Level Domains (TLDs) as measured by entropy ($$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_b P(x_i) $$), is deviating from the norm and may be compromised."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Internal DNS servers"
      - "Network egress points (Firewall/Proxy)"
      - "Web Proxies"
    range: "last 90 days"
    queries:
      - "Pseudocode: BASELINE connections to ip-check_services per host | ALERT if frequency > 95th_percentile | BASELINE TLD entropy per host | ALERT on significant entropy spike"
  - question: "Does a machine learning model classify a host's network activity as malicious reconnaissance?"
    context: "This question uses a supervised ML model to analyze a rich set of network features and make a judgment call. The model can learn the subtle differences between benign and malicious traffic that might be missed by rules or statistics alone, such as unusual User-Agent strings, small data transfers to strange ports, or specific DNS query types associated with recon."
    answer_sources:
      - "Zeek dns.log"
      - "Zeek conn.log"
      - "Internal DNS servers"
      - "Network egress points (Firewall/Proxy)"
      - "Web Proxies"
    range: "last 90 days"
    queries:
      - "Pseudocode: INPUT network_features (port, protocol, duration, user_agent) into ML_model | IF ML_model_output == 'reconnaissance' with high_confidence THEN ALERT"