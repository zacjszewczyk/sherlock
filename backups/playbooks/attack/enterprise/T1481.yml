name: T1481: Web Service
id: 3a1e9e2c-8a2b-4f9e-9d3c-1b7a6f0e8d5f
description: This playbook helps investigate whether an adversary is using legitimate external web services (like GitHub, Pastebin, Telegram) for command and control (C2) on mobile devices. It focuses on detecting anomalies that differentiate malicious C2 traffic from normal user activity. Key indicators include automated beaconing behavior characterized by periodic connections with low timing variance and uniform payload sizes; the use of non-browser or script-based User-Agent strings and API-like URI patterns; and a high ratio of DNS queries to subsequent network connections for a specific domain, which suggests a 'canary' or 'check-in' C2 mechanism.
type: technique
related:
  - TA0037: Command and Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a mobile device exhibiting C2 beaconing behavior by making a high volume of small, regular connections to known abused web services?
    context: This question aims to identify command and control (C2) beaconing, a common technique where malware periodically contacts a C2 server. Unlike human browsing, this activity is often automated, resulting in a high frequency of connections (e.g., >50 per hour) with consistently small response payloads (<1KB). Detecting this pattern helps distinguish covert C2 channels from legitimate user traffic on services like Telegram, Pastebin, or GitHub.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Corporate Wi-Fi network segments for mobile devices
      - VPN Concentrators
      - Mobile Device Management (MDM) platform logs
      - Cloud Access Security Broker (CASB) traffic logs
      - Secure Access Service Edge (SASE) platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each device in mobile NAIs, COUNT connections to watchlist domains over 1 hour. IF connection_count > 50 AND average_response_size < 1KB, THEN ALERT.
  - question: Are connections from a mobile device to a web service showing abnormally low variance in timing and payload size, suggesting automated C2 communication?
    context: This question seeks to uncover automated C2 activity by analyzing the statistical properties of network connections. Human-generated traffic is typically random in timing and varies in size. In contrast, automated C2 beacons are highly regular. By calculating the standard deviation of inter-arrival times and the Shannon entropy of response sizes, we can flag connections that are too periodic and uniform to be human-driven, which is a strong indicator of malware.
    answer_sources:
      - Zeek conn.log
      - Corporate Wi-Fi network segments for mobile devices
      - VPN Concentrators
      - Mobile Device Management (MDM) platform logs
      - Cloud Access Security Broker (CASB) traffic logs
      - Secure Access Service Edge (SASE) platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each source_ip/destination_service pair over 24 hours, CALCULATE std_dev(inter_arrival_times) and entropy(response_bytes). IF std_dev < 2s AND entropy is in bottom 5th percentile, THEN ALERT.
  - question: Can we use unsupervised machine learning to identify clusters of mobile devices exhibiting beaconing behavior that deviates from normal traffic patterns?
    context: This question applies unsupervised machine learning (e.g., DBSCAN) to discover hidden C2 channels without relying on predefined rules. By creating features like the standard deviation of connection timing and the entropy of payload sizes, we can group connections into clusters. Anomalous clusters, often characterized by a small number of devices with highly regular and uniform traffic, can reveal coordinated C2 activity that might be missed by simple threshold-based alerts.
    answer_sources:
      - Zeek conn.log
      - Corporate Wi-Fi network segments for mobile devices
      - VPN Concentrators
      - Mobile Device Management (MDM) platform logs
      - Cloud Access Security Broker (CASB) traffic logs
      - Secure Access Service Edge (SASE) platforms
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM conn.log over 24 hours, CREATE features (std_dev_inter_arrival, mean_resp_bytes, entropy_resp_bytes). APPLY DBSCAN clustering. INVESTIGATE clusters with low device count, low time variance, and low size entropy.
  - question: Are mobile devices using non-browser or script-based User-Agents (e.g., 'curl', 'python-requests') to communicate with web services?
    context: Adversaries often use scripting tools and libraries for C2 communication instead of standard web browsers. This question aims to detect such activity by inspecting the User-Agent string in HTTP headers. A User-Agent like 'curl' or 'python-requests' sent from a mobile device to a domain not typically used for APIs is a strong indicator that a script, rather than a user, is initiating the connection.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles)
      - Web Application Firewall (WAF) logs
      - Cloud Access Security Broker (CASB) logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM http.log, SEARCH for user_agents matching deny-list (e.g., '^curl/', '^python-requests'). IF source is mobile NAI AND destination is not an API domain, THEN ALERT.
  - question: Is a mobile device repeatedly accessing the exact same or very similar URIs on a web service, suggesting automated, non-interactive behavior?
    context: This question focuses on identifying automated access patterns by analyzing the diversity of Uniform Resource Identifiers (URIs) requested by a device. A human user typically browses various pages, leading to high URI entropy. In contrast, a C2 script often polls a single, specific endpoint, resulting in very low URI entropy. Flagging devices with unusually low URI entropy compared to peers accessing the same service can uncover this type of automated C2 activity.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles)
      - Web Application Firewall (WAF) logs
      - Cloud Access Security Broker (CASB) logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FOR each destination_host over 24 hours, GROUP by source_ip. CALCULATE entropy(uri) for each source_ip. IF entropy is in bottom 10th percentile for that destination, THEN ALERT.
  - question: Can a machine learning model be used to classify HTTP/S requests from mobile devices as benign or malicious C2 activity in real-time?
    context: This question proposes a more advanced, predictive approach using a supervised machine learning model. By training a model on features extracted from HTTP/S logs (e.g., User-Agent entropy, URI length, TLS JA3 hash rarity), we can learn the subtle characteristics that distinguish malicious C2 requests from legitimate traffic. Once deployed, this model can score new requests in real-time, providing a high-confidence detection mechanism for novel or evasive C2 techniques.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities (e.g., via proxies or MDM profiles)
      - Web Application Firewall (WAF) logs
      - Cloud Access Security Broker (CASB) logs
    range: last 90 days
    queries:
      - technology: pseudocode
        query: EXTRACT features (ua_entropy, uri_length, ja3_rarity) from http/ssl logs. APPLY pre-trained classification model. IF prediction_score > 0.9, THEN ALERT.
  - question: Are mobile devices attempting to resolve DNS queries for domains known to be associated with command and control infrastructure?
    context: This question leverages threat intelligence to provide high-fidelity alerts. By comparing DNS queries originating from mobile devices against a curated list of known malicious C2 domains, we can quickly identify compromised devices. A successful DNS resolution for a domain on such a feed is a strong, actionable indicator of a potential infection that requires immediate investigation.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Protective DNS (PDNS) logs
      - MDM-enforced DNS services
      - Firewall logs that capture both DNS requests and connection attempts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FROM dns.log, CHECK if 'query' matches a known C2 domain from threat intel feed. IF match found from mobile NAI, THEN generate high-priority ALERT.
  - question: Is a mobile device exhibiting an abnormally high ratio of DNS lookups to actual connections for a specific domain, suggesting a 'canary' C2 mechanism?
    context: This question aims to detect a C2 technique where malware uses DNS queries as a 'canary' or check-in mechanism. The malware resolves a domain to see if a task is available but only establishes a full, data-exchanging connection if instructed. This results in a high number of DNS queries with few or no corresponding TCP/UDP connections. By calculating a DNS-to-Connection ratio and flagging significant outliers compared to a baseline, we can uncover this stealthy C2 behavior.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Protective DNS (PDNS) logs
      - MDM-enforced DNS services
      - Firewall logs that capture both DNS requests and connection attempts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: OVER 1-hour window, JOIN dns.log and conn.log. CALCULATE ratio = (unique_dns_queries / unique_connections) per device/domain. IF ratio > 99th percentile of baseline for that domain, THEN ALERT.
  - question: Can a regression model identify anomalous discrepancies between the number of DNS queries and the number of network connections for a mobile device?
    context: This question proposes using a regression model to predict the normal relationship between DNS queries and subsequent connections for a given device and domain. Features like time of day, domain popularity, and historical behavior help establish an expected baseline. When the actual number of DNS queries far exceeds the model's prediction for the observed number of connections (a large positive residual), it signals a significant anomaly. This approach can detect the 'canary' check-in behavior described previously, but with greater statistical rigor than a simple ratio.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers
      - Protective DNS (PDNS) logs
      - MDM-enforced DNS services
      - Firewall logs that capture both DNS requests and connection attempts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: TRAIN regression model to predict connection_count from features (dns_queries, time_of_day, domain_popularity). APPLY model to live data. CALCULATE residual = actual_dns_queries - predicted_dns_queries. INVESTIGATE devices with highest residuals.