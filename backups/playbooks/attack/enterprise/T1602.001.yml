name: T1602.001: SNMP (MIB Dump)
id: f9a1b2c3-d4e5-4f6a-b7c8-d9e0f1a2b3c4
description: This playbook helps to determine if an adversary is collecting network information via SNMP MIB dumps. This malicious activity can be identified through several indicators, including: SNMP sessions crossing the network perimeter (internal to external) or involving IPs on threat intelligence feeds; the use of weak, default, or denylisted community strings from unauthorized hosts; the execution of known SNMP scanning tools (like snmpwalk or nmap) on non-administrative endpoints; a significantly high volume of SNMP requests from one host to another in a short time, indicative of a MIB dump; or a single host scanning many distinct devices with SNMP or requesting an unusually high number of distinct OIDs from a single target.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any SNMP sessions crossing the network perimeter or involving IPs known to be malicious?
    context: This question identifies potentially unauthorized SNMP communication between the internal network and external entities. Such traffic is a strong indicator of either an external adversary attempting to enumerate internal devices or an internal compromised host exfiltrating data or communicating with a C2 server. Correlating with threat intelligence adds confidence by flagging communication with known bad actors.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Threat intelligence feeds
      - Network egress/ingress points (monitored by Zeek)
      - internal network segments (monitored by Zeek)
      - integrated threat intelligence platform data feeds.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "DEFINE internal_ips; SELECT * FROM zeek_conn_logs WHERE proto='udp' AND dest_port=161 AND ((src_ip IN internal_ips AND dest_ip NOT IN internal_ips) OR (src_ip NOT IN internal_ips AND dest_ip IN internal_ips)) OR (src_ip IN threat_intel_feed OR dest_ip IN threat_intel_feed);"
  - question: Is any internal host communicating via SNMP with an anomalously high number of other internal hosts?
    context: This question seeks to detect internal SNMP scanning activity. A compromised host or an insider threat may use SNMP to discover and map other devices on the network. By baselining normal 'fan-out' behavior, we can spot outliers whose activity pattern deviates significantly, suggesting they are acting as a scanner.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Threat intelligence feeds
      - Network egress/ingress points (monitored by Zeek)
      - internal network segments (monitored by Zeek)
      - integrated threat intelligence platform data feeds.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "DEFINE internal_ips; FOR each 24h_window: CALCULATE baseline_fanout_95th_percentile; FOR each src_ip IN internal_ips: COUNT unique dest_ip WHERE dest_ip IN internal_ips; IF count > baseline_fanout_95th_percentile THEN ALERT;"
  - question: Can we use a machine learning model to predict whether a new SNMP connection is malicious based on its characteristics?
    context: This question leverages a supervised machine learning model to proactively identify malicious SNMP traffic. By training on features like connection duration, data volume, and geopolitical/reputational data, the model can learn the subtle patterns that distinguish malicious activity from benign management traffic, allowing for the detection of novel or sophisticated attacks that might evade simpler rules.
    answer_sources:
      - Zeek conn.log
      - Zeek snmp.log
      - Threat intelligence feeds
      - Network egress/ingress points (monitored by Zeek)
      - internal network segments (monitored by Zeek)
      - integrated threat intelligence platform data feeds.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each new snmp_connection: EXTRACT features (duration, bytes, asn, country, threat_intel_flag); SCORE connection with trained_model; IF score > malicious_threshold THEN ALERT;"
  - question: Are any SNMP requests using weak, default, or denylisted community strings, especially from unauthorized hosts?
    context: This question targets a common misconfiguration where devices are left with default community strings like 'public' or 'private'. Adversaries frequently scan for these to gain unauthorized read-only or even read-write access to device configurations and data. Checking if the request originates from a non-authorized management host significantly increases the likelihood of malicious intent.
    answer_sources:
      - Zeek snmp.log
      - Asset inventory of authorized management hosts
      - Centrally located network sensors (e.g., Zeek instances)
      - asset management systems
      - network devices themselves which respond to the requests.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "DEFINE weak_strings; DEFINE authorized_hosts; SELECT * FROM zeek_snmp_logs WHERE community_string IN weak_strings; IF src_ip NOT IN authorized_hosts THEN Escalate Alert;"
  - question: Is any host exhibiting high entropy in its use of SNMP community strings, suggesting a brute-force attack?
    context: This question aims to detect brute-force attempts against SNMP community strings. A legitimate host typically uses a small, fixed set of strings, resulting in low entropy. An attacker trying many different strings in a short period will exhibit high entropy. This statistical measure can uncover attacks without needing a predefined list of weak strings.
    answer_sources:
      - Zeek snmp.log
      - Asset inventory of authorized management hosts
      - Centrally located network sensors (e.g., Zeek instances)
      - asset management systems
      - network devices themselves which respond to the requests.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each 24h_window: CALCULATE baseline_entropy_98th_percentile; FOR each src_ip: CALCULATE shannon_entropy of community_strings; IF entropy > baseline_entropy_98th_percentile THEN ALERT;"
  - question: Can we use unsupervised clustering to identify anomalous groups of SNMP sessions indicative of scanning or brute-forcing?
    context: This question uses unsupervised machine learning to find 'clusters' of suspicious activity without pre-labeled data. By grouping SNMP sessions based on features like the use of weak strings and non-allowlisted sources, the algorithm can automatically isolate groups of activity that represent coordinated, anomalous behavior, such as a single attacker trying weak strings against multiple targets.
    answer_sources:
      - Zeek snmp.log
      - Asset inventory of authorized management hosts
      - Centrally located network sensors (e.g., Zeek instances)
      - asset management systems
      - network devices themselves which respond to the requests.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each snmp_session: EXTRACT features (is_weak_community, is_not_authorized_src, dest_ip); APPLY clustering_model (DBSCAN); ANALYZE clusters for malicious patterns; ALERT on new sessions in bad_clusters;"
  - question: Has a known SNMP scanning or enumeration tool been executed on a host that is not an authorized management station?
    context: This question looks for the direct evidence of an adversary's tools on an endpoint. The execution of processes like 'snmpwalk' or 'nmap' with SNMP flags on a standard user workstation or server is a high-fidelity indicator of compromise, as these tools have no legitimate purpose in such a context. It points to hands-on-keyboard activity or the execution of a malicious script.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Linux auditd logs
      - All endpoints and servers, particularly user workstations, jump servers, developer workstations, and application servers. Exclude pre-approved network management servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "DEFINE snmp_tools_keywords; DEFINE authorized_hosts; SELECT * FROM process_creation_logs WHERE (process_name IN snmp_tools_keywords OR command_line CONTAINS snmp_tools_keywords) AND hostname NOT IN authorized_hosts; IF match THEN ALERT;"
  - question: Has a process associated with SNMP scanning been executed on a host for the very first time?
    context: This question uses the statistical rarity of an event to detect threats. For a given host (e.g., a developer's workstation), the execution of an SNMP tool for the first time in its history is a significant anomaly. This 'first seen' approach is effective at catching the initial stages of reconnaissance without relying on a static list of what is 'bad', instead focusing on what is 'new and unusual'.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Linux auditd logs
      - All endpoints and servers, particularly user workstations, jump servers, developer workstations, and application servers. Exclude pre-approved network management servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each host: MAINTAIN baseline of executed processes; FOR each new_process_event: IF process_name IN snmp_tools_list AND process_name is new for host THEN ALERT;"
  - question: Can a machine learning model classify a new process execution as anomalous based on its context?
    context: This question employs a supervised model to provide a more nuanced detection of malicious process execution. Instead of just looking at the process name, the model considers the full context: who ran it, what parent process spawned it, and the complexity of its command line. This allows it to distinguish between a legitimate administrator running a tool and an adversary using PowerShell to launch the same tool, providing higher-fidelity alerts.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Linux auditd logs
      - All endpoints and servers, particularly user workstations, jump servers, developer workstations, and application servers. Exclude pre-approved network management servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each new_process_event: EXTRACT features (process_name, parent_process, cmd_line_entropy, user_type); SCORE event with trained_model; IF score > anomalous_threshold THEN ALERT;"
  - question: Has any host sent a very large number of SNMP requests to a single destination in a short time frame, exceeding a static threshold?
    context: This question uses a simple, high-volume threshold to detect a potential MIB dump. A full MIB dump involves thousands of requests to walk the entire object tree. While legitimate management tools might do this, it's often periodic. A sudden, high-volume burst, especially from an unexpected source, is suspicious. A static threshold provides a quick and easy way to catch the most egregious cases.
    answer_sources:
      - Zeek snmp.log
      - Network TAPs or SPAN ports feeding Zeek sensors. The targets are network devices (routers, switches) and servers with SNMP enabled.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "DEFINE threshold=1000; FOR each 5m_window: GROUPBY src_ip, dest_ip; COUNT snmp_requests; IF count > threshold THEN ALERT;"
  - question: Has the volume of SNMP requests between any two hosts significantly deviated from its historical baseline?
    context: This question improves upon a static threshold by creating a dynamic baseline for each source-destination pair. Normal management traffic between a monitoring server and a router might be consistently high, while traffic between two workstations should be zero. By alerting on deviations from the specific norm (e.g., 3 standard deviations above the mean), this method reduces false positives from known high-traffic pairs and effectively detects new, unexpected communication patterns.
    answer_sources:
      - Zeek snmp.log
      - Network TAPs or SPAN ports feeding Zeek sensors. The targets are network devices (routers, switches) and servers with SNMP enabled.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each src_ip, dest_ip pair: CALCULATE rolling_baseline (mean, std_dev) of request counts; FOR each 5m_window: GET current_count; IF current_count > (mean + 3*std_dev) THEN ALERT;"
  - question: Is the time-series pattern of SNMP requests to a high-value asset anomalous?
    context: This question applies time-series anomaly detection to protect critical assets. For a core router or domain controller, SNMP traffic should follow a predictable pattern (e.g., polling every 5 minutes). A time-series model (like ARIMA or an LSTM) learns this temporal rhythm. It can then detect disruptions, such as a sudden burst of requests from a MIB dump, which would be a significant deviation from the learned pattern, even if the volume isn't extreme.
    answer_sources:
      - Zeek snmp.log
      - Network TAPs or SPAN ports feeding Zeek sensors. The targets are network devices (routers, switches) and servers with SNMP enabled.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each high_value_asset: TRAIN time_series_model on request volume per minute; FOR each new minute: PREDICT expected_volume; CALCULATE error = |observed_volume - predicted_volume|; IF error > anomaly_threshold THEN ALERT;"
  - question: Has any host scanned a large number of other hosts with SNMP, or tried to dump a large number of OIDs from a single host?
    context: This question uses two distinct thresholds to identify two types of reconnaissance. The first rule detects horizontal scanning, where an attacker probes many hosts to find any that respond to SNMP. The second rule detects deep-diving on a single target, where an attacker requests hundreds of OIDs to map out the device's entire MIB. Both are strong indicators of active reconnaissance.
    answer_sources:
      - Zeek snmp.log
      - Network-wide monitoring sensors (Zeek). Any host on the network can be a source, and any SNMP-enabled device can be a target.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "RULE 1 (Scan): In 10m window, IF a src_ip contacts >20 unique dest_ips on port 161 THEN ALERT; RULE 2 (Dump): In 10m window, IF a src_ip requests >500 unique OIDs from a single dest_ip THEN ALERT;"
  - question: Is any host exhibiting an anomalously high number of unique SNMP destinations or an unusually high entropy of requested OIDs?
    context: This question uses statistical outliers to detect scanning and MIB exploration. Instead of fixed thresholds, it compares each host's behavior to the entire population. A host contacting more unique destinations than 98% of its peers is likely a scanner. A host with higher OID entropy than 98% of its peers is likely exploring a MIB. This adaptive approach is more robust to changes in the network environment.
    answer_sources:
      - Zeek snmp.log
      - Network-wide monitoring sensors (Zeek). Any host on the network can be a source, and any SNMP-enabled device can be a target.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each 10m_window: CALCULATE 98th_percentile for unique_dest_count and oid_entropy; FOR each src_ip: CALCULATE its unique_dest_count and oid_entropy; IF unique_dest_count > percentile_dest OR oid_entropy > percentile_oid THEN ALERT;"
  - question: Can an unsupervised anomaly detection model identify hosts with rare or unusual patterns of SNMP activity?
    context: This question uses a holistic, multi-dimensional approach to find outliers. An Isolation Forest model considers several features at once (total requests, unique destinations, unique community strings, OID entropy) to build a comprehensive picture of 'normal' SNMP behavior. It can then identify hosts that are anomalous across multiple dimensions simultaneously, making it effective at catching sophisticated adversaries who may try to keep individual metrics below simple statistical thresholds.
    answer_sources:
      - Zeek snmp.log
      - Network-wide monitoring sensors (Zeek). Any host on the network can be a source, and any SNMP-enabled device can be a target.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: "FOR each src_ip over 10m_window: CREATE feature_vector (total_req, unique_dest, unique_community, oid_entropy); SCORE vector with IsolationForest_model; IF score indicates anomaly THEN ALERT;"