name: T1610: Deploy Container
id: a8b2c4d5-e6f7-4a8b-9c0d-1e2f3a4b5c6d
description: This playbook helps investigate if an adversary is deploying containers for execution or defense evasion. This includes checking for containers deployed from malicious images, with suspicious command arguments (like reverse shells or host namespace usage), those that initiate C2-like network connections, or are executed by unauthorized users. It also covers defense evasion tactics such as deploying containers with known critical vulnerabilities, excessive permissions, or configurations designed to steal cloud credentials, perform network scanning, or bypass network segmentation.
type: technique
related:
  - TA0002: Execution
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are containers being deployed using image names or tags that are known to be malicious?
    context: This question aims to identify container deployments that use images from a threat intelligence feed of known malicious or dual-use container images. Such images might contain public cryptominers, Command and Control (C2) frameworks, or penetration testing tools. Detecting their deployment is a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Container Registries (internal and external)
      - Docker Hosts
      - Kubernetes Cluster API Server
      - Developer Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs OR container_logs
          WHERE command_line CONTAINS ("docker run" OR "kubectl apply" OR "ctr run")
          EXTRACT image_name FROM command_line
          JOIN image_name WITH threat_intel_feed
          RETURN matching_deployments
  - question: Are there any anomalously rare container images being deployed in the environment?
    context: This question helps detect potential threats by identifying container images that are used infrequently. Adversaries often use unique, custom, or newly created image names to evade signature-based detection methods. Flagging these rare images for review can uncover novel attack tools or techniques.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Container Registries (internal and external)
      - Docker Hosts
      - Kubernetes Cluster API Server
      - Developer Workstations
    range: last 30 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH container_deployment_logs OVER last_30_days
          GROUP BY image_name
          CALCULATE frequency_of_each_image
          IDENTIFY images with frequency < 5th_percentile
          RETURN rare_images
  - question: Can machine learning models identify container images with malicious or algorithmically generated names?
    context: This question explores using a classification model to score new container image names for their likelihood of being malicious. Features such as string length, entropy, n-gram frequency, and character types can help identify names generated by algorithms, which is a common tactic for adversaries.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Container Registries (internal and external)
      - Docker Hosts
      - Kubernetes Cluster API Server
      - Developer Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each new_container_image
          ENGINEER_FEATURES (string_length, entropy, n_grams, etc.)
          SCORE image with pre-trained_classifier_model
          ALERT if score > malicious_threshold
          RETURN high_score_images
  - question: Are container deployment commands invoking suspicious execution patterns like reverse shells or downloaded scripts?
    context: This question looks for specific, high-confidence indicators of malicious activity within container deployment commands. Arguments that invoke shells to run downloaded scripts (e.g., 'curl ... | sh'), create reverse shells, or use host-level namespaces to break out of the container are strong signs of an attack.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Docker Hosts
      - Kubernetes Worker Nodes
      - CI/CD Pipelines
      - Container Orchestration API
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_logs
          WHERE process_name IN ("docker", "kubectl", "ctr")
          PARSE command_line_arguments
          ALERT if arguments MATCH regex ('bash -i', 'nc -e', 'curl...|...sh', '--net=host', '--pid=host')
          RETURN suspicious_commands
  - question: Do any container deployment commands exhibit unusually high character entropy, suggesting obfuscation?
    context: This question aims to find obfuscated or encoded payloads within the command-line arguments of a container deployment. Adversaries may encode commands to bypass simple signature-based detections. A command with significantly higher character entropy than a typical baseline may indicate such obfuscation.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Docker Hosts
      - Kubernetes Worker Nodes
      - CI/CD Pipelines
      - Container Orchestration API
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each container_deployment_command
          CALCULATE entropy of command_line_arguments
          COMPARE entropy to historical_baseline
          ALERT if entropy > (mean + 3 * std_dev)
          RETURN high_entropy_commands
  - question: Is there a sudden spike in the use of suspicious container deployment flags across the environment?
    context: This question uses time-series analysis to detect coordinated campaigns. A sudden, widespread increase in the use of potentially dangerous flags like '--net=host', when compared to a historical baseline, could indicate an attacker deploying malicious containers across multiple systems simultaneously.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Docker Hosts
      - Kubernetes Worker Nodes
      - CI/CD Pipelines
      - Container Orchestration API
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE daily_frequency of suspicious_flags ('--net=host', etc.)
          APPLY time-series_anomaly_detection_model
          ALERT on unexplained_spikes
          RETURN anomalous_time_periods
  - question: Does a host initiate connections to a known C2 domain shortly after deploying a container?
    context: This question correlates container deployment events with subsequent network activity. A host that deploys a container and then immediately connects to a destination on a C2 threat intelligence feed is a very strong indicator that the container is malicious and is 'calling home'.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Zeek dns.log
      - Network Egress Points (Firewalls/Gateways)
      - Docker Hosts
      - DNS Servers
    range: within 10 minutes of a container deployment event
    queries:
      - technology: pseudocode
        query: |
          SEARCH for container_deployment_events
          FOR each event
            SEARCH network_logs from same_host_ip within next 10 minutes
            JOIN destination_ip/domain with C2_threat_intel_feed
            ALERT on match
            RETURN correlated_events
  - question: Is a host exhibiting C2-like 'heartbeat' communication patterns after a container deployment?
    context: This question seeks to identify C2 beaconing activity by its network characteristics. Automated C2 implants often communicate in a periodic 'heartbeat' with low jitter (consistent time between connections) and consistent packet sizes. Detecting this pattern after a container deployment suggests the container is a C2 implant.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Zeek dns.log
      - Network Egress Points (Firewalls/Gateways)
      - Docker Hosts
      - DNS Servers
    range: within 10 minutes of a container deployment event
    queries:
      - technology: pseudocode
        query: |
          FOR each host with a recent container_deployment
            ANALYZE subsequent_connection_logs to a single_destination
            CALCULATE jitter (std_dev of time_delta) and data_volume_std_dev
            ALERT if jitter and volume_deviation are below threshold
            RETURN suspicious_beaconing_activity
  - question: Can a time-series model detect periodic network beaconing from a host following a container deployment?
    context: This question applies a time-series decomposition model to network traffic volume. This technique can programmatically separate a time series into its trend, seasonal (periodic), and residual components. The emergence of a strong, previously unseen periodic component after a container is deployed is a high-fidelity indicator of automated C2 beaconing.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Zeek dns.log
      - Network Egress Points (Firewalls/Gateways)
      - Docker Hosts
      - DNS Servers
    range: within 10 minutes of a container deployment event
    queries:
      - technology: pseudocode
        query: |
          FOR each host with a recent container_deployment
            GET outgoing_network_traffic_volume_time_series
            APPLY Seasonal-Trend-Loess decomposition
            ALERT if a strong, new periodic_component is detected
            RETURN hosts_with_periodic_traffic
  - question: Are container deployments being executed by unauthorized user accounts?
    context: This question verifies that container deployments are performed only by authorized personnel or service accounts. A deployment executed by a standard user account, or by a service account from an interactive logon session, is a major security policy violation and could indicate a compromised account.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Authentication Servers (Active Directory)
      - Docker Hosts
      - Kubernetes Master Nodes
      - CI/CD Runners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for container_deployment_events (EVID 4688)
          ENRICH executing_user with AD_group_membership
          CORRELATE Logon_ID with login_events (EVID 4624) to get Logon_Type
          ALERT if user NOT IN authorized_group OR (account_is_service_account AND Logon_Type is 'Interactive')
          RETURN unauthorized_deployments
  - question: Are containers being deployed by user-host combinations that are historically infrequent or novel?
    context: This question baselines normal activity to find outliers. A container deployment performed by a user from a host they have never used for this action before is anomalous. This could indicate an attacker moving laterally and using a compromised account from an unusual location within the network.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Authentication Servers (Active Directory)
      - Docker Hosts
      - Kubernetes Master Nodes
      - CI/CD Runners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          BUILD baseline of historical (user, source_host) deployment pairs
          FOR each new_deployment
            CALCULATE historical_frequency of the (user, source_host) pair
            ALERT if frequency is zero or < 1st_percentile
            RETURN anomalous_pairs
  - question: Can an anomaly detection model identify unusual container deployment events?
    context: This question uses a one-class machine learning model (like an Isolation Forest) to create a holistic profile of legitimate container deployment activity. The model learns the normal patterns based on features like user, host, and time of day. Any new deployment that deviates significantly from this learned profile is flagged as an outlier for investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Authentication Servers (Active Directory)
      - Docker Hosts
      - Kubernetes Master Nodes
      - CI/CD Runners
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN one-class_SVM or Isolation_Forest on features (user, host, time_of_day) of legitimate_deployments
          FOR each new_deployment_event
            CLASSIFY event as 'inlier' or 'outlier'
            ALERT on 'outlier' events
            RETURN anomalous_events
  - question: Are containers being deployed that have known critical vulnerabilities?
    context: This question aims to detect when an adversary might be intentionally deploying a vulnerable container to exploit it for container escape or privilege escalation. Correlating deployed images with a vulnerability database can reveal attempts to leverage known exploits, such as the 'runc escape' (CVE-2019-5736).
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Container Registries
      - Docker Hosts
      - Vulnerability Scanners/Databases
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH container_deployment_logs
          EXTRACT image_name and tag
          QUERY vulnerability_database_API with image_name
          ALERT if image has a critical_CVE (e.g., for container escape)
          RETURN vulnerable_deployments
  - question: Is the overall vulnerability surface of the container environment increasing sharply?
    context: This question uses a control chart (CUSUM) to monitor the cumulative sum of critical vulnerabilities in the environment. A sharp, sustained increase indicates that new container deployments are introducing vulnerabilities faster than they are being remediated, which could be a sign of a widespread campaign or a breakdown in security hygiene that an attacker could exploit.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Container Registries
      - Docker Hosts
      - Vulnerability Scanners/Databases
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PERIODICALLY scan running_containers for CVEs
          CALCULATE total_critical_CVE_count per host
          INPUT count into CUSUM_control_chart
          ALERT if chart shows a sharp, sustained increase
          RETURN anomalous_vulnerability_trends
  - question: Can a machine learning model predict the risk score of a container image based on its vulnerabilities?
    context: This question involves creating a regression model to assign a risk score to container images. By considering not just the presence of a CVE, but also its severity (CVSS), age, and the availability of public exploits, this model can provide a more nuanced assessment of risk than a simple critical/non-critical flag, helping to prioritize alerts.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Container Registries
      - Docker Hosts
      - Vulnerability Scanners/Databases
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each container_image
            GATHER vulnerability_data (CVSS, age, public_exploit_exists)
            PREDICT risk_score with pre-trained_regression_model
            ALERT if predicted_risk_score > threshold
            RETURN high_risk_images
  - question: Are containers being deployed with excessive permissions like '--privileged' or sensitive host mounts?
    context: This question seeks to identify containers being deployed with dangerous configurations that break container isolation. The '--privileged' flag grants the container root-level access to the host, while mounting sensitive host directories like '/' or '/var/run/docker.sock' can allow an attacker to escape the container and compromise the host.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Docker Hosts
      - Kubernetes Worker Nodes
      - Container Orchestration API
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH container_deployment_logs
          PARSE command_line for flags ('--privileged', '--pid=host') or volume_mounts ('-v /:/host', '-v /var/run/docker.sock:/sock')
          CREATE high-severity alert for any matches
          RETURN privileged_deployments
  - question: Are containers being deployed with rarely used or non-allow-listed privileged configurations?
    context: This question establishes a baseline of approved privileged operations for legitimate applications. Any deployment that uses a privileged flag or mounts a sensitive path that is not on a pre-defined allow-list, or is used very rarely, should be flagged as suspicious and reviewed. This helps separate legitimate administrative use from potential attacks.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Docker Hosts
      - Kubernetes Worker Nodes
      - Container Orchestration API
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE allow_list of (application, privileged_flag, mount_path)
          FOR each container_deployment
            EXTRACT flags and mounts
            ALERT if configuration is not on allow_list
            FLAG for review if configuration frequency is < 1%
            RETURN unapproved_or_rare_configs
  - question: Can a machine learning model classify container configurations as legitimate or suspicious?
    context: This question uses a classification model to automate the detection of suspicious container configurations. By training on features like the presence of privileged flags and the sensitivity of mounted paths, the model can learn to distinguish between normal and potentially malicious deployment patterns, scoring each new deployment for risk.
    answer_sources:
      - Windows Event ID 4688
      - Zeek docker.log
      - Docker Hosts
      - Kubernetes Worker Nodes
      - Container Orchestration API
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN classification_model on features (privileged_flags, mount_counts, path_sensitivity)
          FOR each new_deployment
            SCORE configuration with model
            ALERT if classified as 'suspicious'
            RETURN suspicious_configurations
  - question: Is a container host attempting to steal cloud credentials from the metadata service?
    context: This question checks for a common cloud attack technique. After gaining execution within a container, an attacker may query the cloud provider's metadata service (at 169.254.169.254) to steal the IAM role credentials associated with the instance. This is a direct, high-confidence indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Cloud Instance Metadata Service Endpoint
      - Internal Network Segments
      - Docker Hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH http_logs
          ALERT where destination_ip is '169.254.169.254' AND uri_path contains '/iam/security-credentials/'
          RETURN credential_theft_attempts
  - question: Is a container host performing horizontal network scanning?
    context: This question aims to detect reconnaissance activity originating from a newly deployed container. An attacker will often scan the internal network to find other hosts and services to target. This is characterized by a high volume of connection attempts from a single source to many unique internal IPs over a short time.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Cloud Instance Metadata Service Endpoint
      - Internal Network Segments
      - Docker Hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each source_ip in 5-minute_windows
            CALCULATE count of unique_destination_ips
            COMPARE count to historical_baseline for that host/group
            ALERT if count > 99th_percentile
            RETURN potential_scanners
  - question: Can graph-based anomaly detection identify network scanning from a new container host?
    context: This question models network flows as a graph to find structural anomalies. A network scan from a newly deployed container host creates a distinct 'starburst' pattern in the graph, where a new node rapidly connects to many other existing nodes. Graph-based algorithms are effective at detecting this type of anomalous change in connection patterns.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Cloud Instance Metadata Service Endpoint
      - Internal Network Segments
      - Docker Hosts
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL network_flows as a graph (nodes=hosts, edges=connections)
          FOR each new_container_host_node
            DETECT 'starburst' patterns (rapid creation of many new edges)
            ALERT on anomalous graph structure changes
            RETURN scanning_hosts
  - question: Are containers being deployed with non-standard or unauthorized network modes?
    context: This question checks for attempts to bypass network segmentation controls. Using '--network=host' makes the container share the host's networking namespace, bypassing container network policies entirely. Using a network that is not on an approved list could also be an attempt to connect to a less-monitored segment of the network.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek docker.log
      - Docker Hosts
      - Network Gateways
      - Container Network Interfaces
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE approved_network_list
          SEARCH container_deployment_logs for '--network' flag
          ALERT if network_name is not in approved_list OR network_name is 'host' (and not an approved exception)
          RETURN non-standard_network_deployments
  - question: Are containers exposing ports that are not part of their application's baseline?
    context: This question looks for anomalous port mappings in container deployments. If an application normally exposes port 80, but a new deployment suddenly exposes port 22 (SSH) or 4444 (a common shell port), it could indicate an attacker has modified the deployment to create a backdoor.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek docker.log
      - Docker Hosts
      - Network Gateways
      - Container Network Interfaces
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          DEFINE baseline of exposed_ports for each application
          FOR each new_deployment
            EXTRACT exposed_ports from '-p' flag
            ALERT if any port is not in the application's baseline
            FLAG for review if exposed_port is globally rare (<1st percentile)
            RETURN anomalous_port_exposures
  - question: Can an autoencoder model detect anomalous container network configurations?
    context: This question uses an autoencoder, a type of neural network, to learn a compressed representation of normal network configurations for container deployments. When a new, anomalous configuration is processed (e.g., using '--network=host' for the first time), the model will have a high 'reconstruction error', failing to reproduce it accurately from its learned patterns. This error is a strong indicator of an anomaly.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek docker.log
      - Docker Hosts
      - Network Gateways
      - Container Network Interfaces
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN autoencoder on vectors of normal_network_configurations (network_mode, exposed_ports)
          FOR each new_deployment_configuration
            CALCULATE reconstruction_error using the autoencoder
            ALERT if reconstruction_error > learned_threshold
            RETURN anomalous_network_configs