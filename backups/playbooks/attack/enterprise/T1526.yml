name: T1526: Cloud Service Discovery
id: c3a0b1d2-e4f5-4a6b-8c7d-9e0f1a2b3c4d
description: This playbook helps to identify if an adversary is enumerating cloud services, configurations, or resources. It focuses on detecting malicious discovery activity through several indicators, including requests to cloud provider APIs with malicious User-Agent signatures; anomalous execution of cloud CLI tools with discovery commands; network scanning of cloud service IPs and ports from a single source; unauthorized or unusual access to cloud instance metadata services; and anomalous patterns of discovery-related API calls by a user or service principal.
type: technique
related:
- TA0007: Discovery
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Are there any requests to known cloud provider API endpoints that have a User-Agent matching a known malicious tool signature?
  context: This question aims to detect the use of specific, publicly known cloud-hacking tools like 'Pacu' or 'Stormspotter'. These tools often have unique User-Agent strings that can be identified in web traffic logs, providing a high-fidelity signal of malicious reconnaissance activity.
  answer_sources:
  - Zeek http.log
  - Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.
  range: Last 90 days
  queries:
  - pseudocode: Search Zeek http.log where host matches cloud_api_domains and user_agent matches malicious_tool_signatures.
- question: Are there any requests to cloud API endpoints where the URI or User-Agent strings exhibit unusually high entropy, suggesting randomization or obfuscation?
  context: Adversaries may randomize parts of their requests, such as URIs or User-Agents, to evade simple signature-based detection. Calculating the Shannon entropy of these fields helps quantify their randomness. A sudden spike in entropy for a given source IP compared to its established baseline can indicate an attempt to obfuscate discovery activity.
  answer_sources:
  - Zeek http.log
  - Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.
  range: Last 90 days
  queries:
  - pseudocode: For each source_ip in Zeek http.log to cloud_api_domains, calculate entropy(uri) and entropy(user_agent). Compare to historical baseline for that source_ip. Alert if current entropy > 99th percentile of baseline.
- question: Can we classify requests to cloud API endpoints as malicious discovery activity using a machine learning model?
  context: This question moves beyond simple signatures or statistical anomalies to a more holistic, behavioral approach. By training a classification model on features like request method, URI length, and user agent, it's possible to identify complex patterns indicative of malicious discovery that might be missed by other methods. This provides a more robust and adaptable detection capability.
  answer_sources:
  - Zeek http.log
  - Network egress points, such as firewalls and web proxies, and virtual network taps monitoring traffic to public cloud provider API endpoints.
  range: Last 90 days
  queries:
  - pseudocode: Score http requests to cloud_api_domains using a pre-trained classification model. Investigate requests classified as 'malicious-discovery'.
- question: Have any known malicious cloud discovery tools been executed, or have standard cloud CLIs been used with high-risk discovery commands?
  context: This question focuses on detecting discovery activity directly on endpoints where cloud tools are installed. Monitoring for the execution of known malicious tools or the use of specific, powerful discovery commands within legitimate CLIs (like 'aws.exe' or 'az.cmd') provides a strong indication that an attacker is mapping the cloud environment from a compromised host.
  answer_sources:
  - Windows Event ID 4688
  - Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.
  range: Last 90 days
  queries:
  - pseudocode: Search process creation logs (Event ID 4688) where process_name matches malicious_tool_list OR (process_name matches cloud_cli_list AND command_line contains high_risk_discovery_commands).
- question: Is any user executing an anomalously high ratio of discovery-related cloud CLI commands compared to their normal behavior?
  context: This question aims to identify changes in user behavior on the command line. A legitimate user typically has a stable ratio of operational commands (create, update) to discovery commands (list, get). A significant shift towards discovery commands can signal that the user's account has been compromised and is being used for reconnaissance.
  answer_sources:
  - Windows Event ID 4688
  - Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.
  range: Last 90 days
  queries:
  - pseudocode: For each user, parse command_line from Event ID 4688 over a 1-hour window. Calculate ratio of discovery_commands to total_commands. Alert if ratio > (3 * stddev_of_historical_average).
- question: Are users executing sequences of cloud CLI commands that deviate from their normal, learned workflow?
  context: Adversarial command sequences often differ from legitimate administrative workflows. For example, an attacker might rapidly run 'list' commands across many different services, whereas an administrator's work is typically more focused. A sequence analysis model can learn these normal workflows and flag sessions that have a low probability of being legitimate, indicating a potential compromise.
  answer_sources:
  - Windows Event ID 4688
  - Endpoints such as developer workstations, administrator jump boxes, and servers with cloud SDKs or CLI tools installed.
  range: Last 90 days
  queries:
  - pseudocode: Analyze user command sequences from Event ID 4688 using a sequence model. Flag sessions with a low probability score as anomalous.
- question: Is a single source IP address attempting to connect to an unusually large number of distinct cloud service IP addresses in a short time?
  context: This question addresses horizontal scanning, a common reconnaissance technique. An attacker may scan a range of IP addresses belonging to a cloud provider to identify live services. A simple threshold-based rule, such as alerting when a single source connects to over 20 unique destinations in 5 minutes, is an effective way to detect this brute-force discovery method.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.
  range: Last 90 days
  queries:
  - pseudocode: In Zeek conn.log, group by source_ip over a 5-minute window. Alert if unique_destination_ip_count > 20 within a known cloud_ip_range.
- question: Is any host connecting to a number of unique destination hosts or ports that is anomalous compared to its own historical baseline?
  context: This question refines the simple threshold approach by using a dynamic, per-host baseline. Some hosts, like proxies or NAT gateways, may legitimately connect to many destinations. By comparing a host's current activity to its own past behavior, this method can more accurately identify anomalous scanning while reducing false positives from naturally "noisy" hosts.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.
  range: Last 90 days
  queries:
  - pseudocode: For each source_ip in Zeek conn.log, calculate unique_destination_ip_count and unique_destination_port_count over a 10-minute window. Alert if count > 98th percentile of the host's historical baseline.
- question: Can we identify anomalous scanning activity by finding source IPs that behave differently from the majority of other hosts?
  context: This question uses an unsupervised machine learning approach to find outliers. By clustering hosts based on their network connection behavior (e.g., number of connections, unique destinations), algorithms like DBSCAN can automatically identify hosts that do not fit into any normal cluster. These "noise points" are strong candidates for anomalous scanning activity.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Network sensors at key ingress/egress points, internal network choke points, and virtual network flow logs in cloud environments.
  range: Last 90 days
  queries:
  - pseudocode: From Zeek conn.log over a 5-minute window, create feature vectors for each source_ip. Apply DBSCAN clustering. Flag any source_ip classified as a noise point as a potential scanner.
- question: Is an unauthorized host attempting to access the cloud instance metadata service?
  context: The cloud metadata service (169.254.169.254) is a critical endpoint that can expose instance credentials and configuration data. Access to this service should be tightly controlled. This question aims to detect unauthorized access by checking requests against a predefined allow-list of authorized hosts, providing a high-confidence alert for potential credential theft attempts.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4688
  - Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).
  range: Last 90 days
  queries:
  - pseudocode: In Zeek http.log, search for requests where destination_ip is 169.254.169.254. Alert if source_ip is not in the authorized_host_allowlist.
- question: Is an authorized host accessing the metadata service with an anomalous frequency or volume?
  context: Even authorized hosts typically access the metadata service in a predictable, automated fashion. An attacker who has compromised an authorized host may interact with the service manually or with a script, resulting in unusual access patterns. Monitoring for spikes in request volume or irregular timing can help detect the misuse of a legitimately authorized host.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4688
  - Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).
  range: Last 90 days
  queries:
  - pseudocode: For each authorized host, baseline the volume and inter-arrival time of requests to the metadata service. Alert if current volume > 99th percentile of baseline or inter-arrival time is a statistical outlier.
- question: Can we detect anomalous access to the metadata service and correlate it with subsequent suspicious command-line activity?
  context: This question combines time-series analysis with event correlation for a more powerful detection. A model like ARIMA can learn the normal rhythm of metadata service requests for a host. An alert for anomalous request volume, when followed closely by the execution of cloud CLI tools on the same host, creates a strong, contextualized signal that an attacker has likely stolen credentials from the metadata service and is now using them.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4688
  - Cloud-hosted virtual machines (IaaS), containerized environments, and network sensors monitoring east-west traffic within a Virtual Private Cloud (VPC).
  range: Last 90 days
  queries:
  - pseudocode: Model metadata request volume per host using a time-series model (e.g., ARIMA). Alert on high residual errors. Correlate alert with subsequent cloud CLI process creation events from the same host within 5 minutes.
- question: Is a user or service principal making API calls that are inconsistent with their defined role?
  context: This question uses a role-based access control (RBAC) policy as a detection mechanism. By defining what API calls are considered normal for a given role (e.g., 'Developer', 'CloudAdmin'), it's possible to alert on any activity that violates this policy. This is a straightforward way to detect privilege escalation or lateral movement where a compromised account is used for actions outside its normal function.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.
  range: Last 90 days
  queries:
  - pseudocode: For each API call identified from logs, check the user's role. Alert if the API call is not in the list of allowed calls for that role.
- question: Is a user making an unusual number of discovery-related API calls or interacting with services they don't normally use?
  context: This question focuses on detecting deviations from an individual user's established behavior. Even if an API call is permitted by a user's role, it may be anomalous for that specific user. Baselining each user's activity and alerting when they interact with new services or when their ratio of discovery calls increases significantly helps to detect compromised accounts being used for reconnaissance.
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.
  range: Last 90 days
  queries:
  - pseudocode: For each user, baseline API call services and types over 30 days. Alert if user calls a service not in their top 95% or if the ratio of 'List'/'Describe' calls > (3 * stddev_of_personal_baseline).
- question: Is a user's API call activity anomalous when compared to their peers?
  context: This question uses peer group analysis to identify outliers. Users in similar roles (e.g., all database administrators) tend to have similar API usage patterns. By clustering users and comparing each user to their group's average behavior, this method can spot a compromised account even if its activity isn't a major departure from its own history. It effectively asks, "Is this user behaving like their peers?"
  answer_sources:
  - Windows Event ID 4688
  - Zeek http.log
  - Command-line logs on endpoints and servers, and network traffic captures from API gateways or proxies that terminate TLS for cloud API requests.
  range: Last 90 days
  queries:
  - pseudocode: Group users into peer groups based on API call patterns. For each user, calculate the distance from their peer group's center. Alert on users with a high distance score.