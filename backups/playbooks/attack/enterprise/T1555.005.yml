name: T1555.005: Password Managers
id: a7b1c2d3-e4f5-4a6b-8c7d-0e1f2a3b4c5d
description: This playbook helps identify if an adversary is accessing credentials stored in password managers. It covers techniques such as running known credential theft tools, dumping memory from password manager processes, directly accessing password database files, leveraging anomalous process execution chains, and exfiltrating data after accessing a password vault.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
investigative_questions:
- question: Are known password-stealing tools running on endpoints, or are there network connections to known malicious exfiltration domains?
  context: This question aims to identify straightforward attacks using known malicious tools or infrastructure. By matching process hashes against threat intelligence feeds and network destinations against blocklists, we can detect the presence of recognized password-stealing malware or connections to command-and-control (C2) servers used for data exfiltration. This is a high-confidence, signature-based detection method.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log, Zeek dns.log. Look at user and administrator workstations, network egress points, DNS and proxy servers.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH process_creation_events | JOIN threat_intel_hashes ON file_hash | ALERT if match
  - query_type: pseudocode
    query: SEARCH network_connection_logs | JOIN blocklist_domains_ips ON destination | ALERT if match
- question: Are there any rare, unsigned executables running, or are there DNS requests with high entropy suggesting Domain Generation Algorithm (DGA) activity?
  context: This question seeks to find suspicious activity that may not be caught by known signatures. Rare executables that are not digitally signed by a trusted source are often indicative of custom malware or hacking tools. High Shannon entropy in a domain name is a common characteristic of DGAs, which are used by malware to dynamically generate C2 domains and evade blocklists.
  answer_sources:
  - Windows Event ID 4688, Zeek dns.log. Look at user and administrator workstations, DNS and proxy servers.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH process_creation_events | GROUP BY file_hash | CALCULATE prevalence | ALERT if prevalence < 1% AND is_signed = false
  - query_type: pseudocode
    query: SEARCH dns_logs | CALCULATE shannon_entropy(query_name) | ALERT if entropy > 3.5
- question: Can we predict if a process is malicious based on its characteristics, or detect anomalous spikes in outbound network traffic from any host?
  context: This question leverages machine learning to identify complex, non-obvious threats. A logistic regression model can learn from historical data to classify new processes as malicious based on a combination of features. A time-series model can establish a normal baseline for a host's outbound data volume and flag significant deviations, which could indicate data exfiltration.
  answer_sources:
  - Windows Event ID 4688, Zeek conn.log. Look at user and administrator workstations, network egress points.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: INPUT process_events | PREDICT is_malicious with logistic_regression_model | ALERT if probability > threshold
  - query_type: pseudocode
    query: INPUT outbound_traffic_per_host | FORECAST baseline with ARIMA_model | ALERT if actual_volume > upper_confidence_bound
- question: Is a known memory dumping tool being used to target a running password manager process?
  context: This question looks for direct attempts to steal credentials from a password manager's memory. Adversaries often use utilities like procdump.exe or dump the LSASS process to capture credentials. This query specifically looks for the execution of these tools with command-line arguments that point to a password manager's process, which is a strong indicator of credential theft.
  answer_sources:
  - Windows Event ID 4688. Look at user and administrator workstations.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH process_creation_events | FILTER process_name IN [memory_dumping_tools] AND command_line CONTAINS [password_manager_processes] | ALERT
- question: Are administrative tools being executed with highly unusual command-line arguments?
  context: This question aims to detect abnormal usage of legitimate administrative tools that might be repurposed for malicious activity. By establishing a baseline of normal command-line argument patterns for these tools, we can identify outliers. A low Jaccard similarity score indicates that the arguments used are very different from what's typically seen, suggesting a novel or suspicious use case, such as targeting a password manager.
  answer_sources:
  - Windows Event ID 4688. Look at user and administrator workstations.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH process_creation_events | TOKENIZE command_line | CALCULATE jaccard_similarity(new_tokens, historical_tokens) | ALERT if similarity < 0.2
- question: Can we automatically classify the intent of a command-line string as malicious, or identify outlier commands that don't fit known benign patterns?
  context: This question uses advanced techniques to analyze the command-line itself. A pre-trained NLP model can understand the structure and semantics of command-line arguments to classify intent, even with obfuscation. Alternatively, clustering algorithms like DBSCAN can group similar, benign commands together and automatically identify unique, one-off commands as outliers that warrant investigation.
  answer_sources:
  - Windows Event ID 4688. Look at user and administrator workstations.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: INPUT command_line_string | PREDICT intent with NLP_classifier_model | ALERT if intent = 'malicious'
  - query_type: pseudocode
    query: INPUT command_line_strings | CLUSTER with DBSCAN | ALERT on outlier_points
- question: Is a process other than the legitimate password manager application accessing a password database file?
  context: This question targets unauthorized access to the files where password managers store their encrypted credentials (e.g., .kdbx files). By monitoring file access events (Windows Event ID 4663) and checking the accessing process against an allowlist of known-good password manager executables, we can detect when a different process (like a malicious script or tool) attempts to read, copy, or steal the database.
  answer_sources:
  - Windows Event ID 4663. Look at user workstations, file servers, or shared drives where password databases are stored.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH file_access_events | FILTER file_path ENDSWITH [password_db_extensions] AND process_name NOT IN [allowlisted_pm_executables] | ALERT
- question: Is a very rare process accessing a password database, or is there a sudden burst of access attempts to these files?
  context: This question uses statistical methods to find suspicious file access patterns. An access attempt by a process that has rarely or never accessed password databases before is highly anomalous. Additionally, a rapid succession of access attempts from a single host could indicate an adversary's discovery script searching the file system for valuable password vaults.
  answer_sources:
  - Windows Event ID 4663. Look at user workstations, file servers, or shared drives where password databases are stored.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH file_access_events on password_dbs | CALCULATE process_access_frequency | ALERT if frequency < 1st_percentile
  - query_type: pseudocode
    query: SEARCH file_access_events on password_dbs | COUNT events per host per minute | ALERT if count > 10
- question: Can we detect anomalous file access events for password databases based on multiple contextual features?
  context: This question applies machine learning to build a comprehensive model of normal file access behavior for password databases. By training an Isolation Forest model on features like the process name, its parent, the user context, and the time of day, the system can learn what "normal" looks like and flag any access event that deviates significantly from this learned profile as a potential threat.
  answer_sources:
  - Windows Event ID 4663. Look at user workstations, file servers, or shared drives where password databases are stored.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: INPUT file_access_events | SCORE with isolation_forest_model | ALERT on anomalies
- question: Is a password manager being launched by an unusual parent process (like an Office app), or is a password manager launching a command shell?
  context: This question focuses on detecting suspicious process chains. A legitimate user typically launches a password manager directly. An Office application spawning a password manager could indicate a malicious macro. Conversely, a password manager should not be spawning a command shell like PowerShell, which could be a sign that the password manager process has been compromised and is being used to execute further commands.
  answer_sources:
  - Windows Event ID 4688. Look at user workstations and servers with password managers installed.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH process_creation_events | FILTER (parent_process IN [office_apps] AND child_process IN [pm_apps]) OR (parent_process IN [pm_apps] AND child_process IN [shells]) | ALERT
- question: Has a statistically rare parent-child process relationship involving a password manager occurred?
  context: This question moves beyond pre-defined risky relationships to find any parent-child process pairing involving a password manager that is rare across the entire enterprise. By analyzing historical data to determine common process chains, this approach can flag any new or infrequent combination, which might represent an emerging or custom attack technique.
  answer_sources:
  - Windows Event ID 4688. Look at user workstations and servers with password managers installed.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH process_creation_events | GROUP BY parent_process, child_process | CALCULATE frequency | FILTER child_process IN [pm_apps] OR parent_process IN [pm_apps] | ALERT if frequency < 5
- question: Can we use graph-based analysis to identify anomalous process execution trees involving password managers?
  context: This question treats process activity as a large, interconnected graph where processes are nodes and parent-child relationships are edges. Graph-based anomaly detection algorithms can analyze the structure of this graph to find unusual connections (e.g., a password manager linked to a strange parent) or entire subgraphs (e.g., a password manager spawning an unusual sequence of child processes) that deviate from normal execution patterns.
  answer_sources:
  - Windows Event ID 4688. Look at user workstations and servers with password managers installed.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: BUILD process_ancestry_graph | APPLY GraphSAGE_model | ALERT on anomalous_edges_or_subgraphs
- question: Did a process access a password database and then immediately make a network connection to an unapproved destination?
  context: This question correlates file access with network activity to detect data exfiltration. The logic is that an adversary might grab a password database file and then try to send it to a server they control. By looking for a network connection from the same process within a short time window (5 minutes) after it accessed a password database, and then checking if the destination is on an allowlist of legitimate sync servers, we can spot this "grab and go" behavior.
  answer_sources:
  - Zeek conn.log, Windows Event ID 5156, Windows Event ID 4663. Look at user workstations, network egress points, file servers.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH file_access_events AND network_events | CORRELATE by process_id and hostname within 5min | FILTER file_access is to password_db AND network_destination NOT IN [allowlisted_sync_servers] | ALERT
- question: Did a password manager process transfer an unusually large amount of data, or is the outbound-to-inbound data ratio abnormal?
  context: This question seeks to detect exfiltration by analyzing the volume of network traffic. A legitimate sync operation for a password manager usually involves a small, predictable amount of data. A sudden, large outbound data transfer from a password manager process could indicate that an entire database is being exfiltrated. Similarly, a high ratio of outbound to inbound traffic is suspicious, as a sync should involve some two-way communication, not just a large data dump.
  answer_sources:
  - Zeek conn.log. Look at network egress points.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: SEARCH network_events from pm_processes | CALCULATE baseline_data_volume | ALERT if outbound_bytes > 95th_percentile
  - query_type: pseudocode
    query: CALCULATE outbound_inbound_ratio | ALERT if ratio > 3 * std_dev_from_norm
- question: Can we model legitimate network behavior for password managers to detect outlier connections, or forecast traffic volume to spot anomalous spikes?
  context: This question uses ML for sophisticated network traffic analysis. A one-class SVM can be trained on the features of normal network connections (port, ASN, volume) made by password managers to create a tight boundary of "normal." Any connection falling outside this boundary is flagged as an anomaly. Separately, a time-series forecasting model like Prophet can predict expected daily data volume from a host and alert when the actual volume significantly exceeds the forecast, catching potential large-scale exfiltration events.
  answer_sources:
  - Zeek conn.log. Look at user workstations, network egress points.
  range: Last 90 days
  queries:
  - query_type: pseudocode
    query: INPUT network_connections from pm_processes | SCORE with one_class_SVM_model | ALERT on outliers
  - query_type: pseudocode
    query: INPUT daily_host_volume | FORECAST with Prophet_model | ALERT if actual_volume > forecast_upper_bound