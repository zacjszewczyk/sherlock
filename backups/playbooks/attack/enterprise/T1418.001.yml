name: T1418.001: Security Software Discovery
id: 8f9b5c2a-1e3d-4f6b-8a9c-0d1e2f3a4b5c
description: This playbook helps investigate whether an adversary is attempting to discover security software on managed mobile devices. It focuses on identifying suspicious network behavior shortly after a new application is launched, such as connections to low-prevalence or malicious domains, unusually large data exfiltration via HTTP/S POST requests, and DNS queries with high entropy. Additionally, it addresses the detection of applications that possess permissions or use private APIs to enumerate other installed applications on the device, a common precursor to evading security controls.
type: technique
related:
  - TA0032: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a newly launched application established a network connection with a domain or server known to be malicious?
    context: |
      This question aims to detect initial command-and-control (C2) or data staging connections made by a potentially malicious application immediately after its first execution. By correlating new application launches with network logs and comparing connection artifacts (domain names, TLS fingerprints) against threat intelligence, analysts can quickly identify high-risk activity.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Zeek ssl.log
      - MDM/EMM Application Activity Logs
      - Corporate DNS Resolvers
      - Network Egress Firewalls
      - VPN Concentrators
      - MDM/EMM Platform Servers
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each new_app_launch_event in MDM_logs
            JOIN network_logs ON device_ip within 5_minutes_of_launch
            FOR each dns_query in joined_logs
              IF dns_query.domain in malicious_domain_feed THEN ALERT
            FOR each tls_connection in joined_logs
              IF tls_connection.ja3_hash in malicious_ja3_feed THEN ALERT
  - question: Is a mobile device communicating with an unusually rare or randomly generated domain name?
    context: |
      Adversaries often use Domain Generation Algorithms (DGAs) or newly registered domains for C2 infrastructure to evade blocklists. This question helps detect such activity by identifying DNS queries for domains that are statistically anomalous, either because they are rarely visited across the enterprise (low prevalence) or because their structure appears random (high entropy).
    answer_sources:
      - Zeek dns.log
      - Corporate DNS Resolvers
      - Network Egress Firewalls
      - VPN Concentrators
      - MDM/EMM Platform Servers
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each dns_query from mobile_subnet
            CALCULATE 30_day_prevalence(dns_query.domain)
            IF prevalence < 1st_percentile THEN ALERT
            CALCULATE shannon_entropy(dns_query.domain_name)
            IF entropy > 4.0 THEN ALERT
  - question: Has a device exhibited a statistically significant spike in outbound data transfer immediately following a new application launch?
    context: |
      Initial data exfiltration or payload download by malware can manifest as a sudden, anomalous increase in network traffic. This question uses a time-series model to establish a baseline of normal data transfer for each device and flags significant deviations that occur shortly after a new application is run, providing a high-confidence indicator of suspicious behavior.
    answer_sources:
      - Zeek conn.log
      - MDM/EMM Application Activity Logs
      - Corporate DNS Resolvers
      - Network Egress Firewalls
      - VPN Concentrators
      - MDM/EMM Platform Servers
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each device
            TRAIN time_series_model on historical outbound_data_volume
          FOR each new_app_launch_event
            MONITOR outbound_data_volume for 5_minutes
            IF observed_volume > model_prediction_confidence_interval(99%) THEN ALERT
  - question: Is a mobile device making HTTP/S requests to known C2 servers or using suspicious User-Agent strings?
    context: |
      Malware often communicates over HTTP/S to blend in with normal traffic. This question helps detect this by checking destination hostnames and Server Name Indication (SNI) values against known C2 indicators. It also looks for non-standard User-Agent strings (e.g., curl, Wget), which are uncommon for legitimate mobile apps and often indicate automated scripting or malicious tools.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Network Egress Points
      - Forward Proxies
      - Cloud Access Security Brokers (CASB)
      - VPN Concentrators
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each http_request or tls_session from mobile_devices
            IF request.host in c2_feed OR session.sni in c2_feed THEN ALERT
            IF request.user_agent matches non_browser_pattern AND not in allowlist THEN ALERT
  - question: Has a mobile application sent an unusually large amount of data via an HTTP POST or connected to a new destination server for the first time?
    context: |
      Data exfiltration is often performed via HTTP POST requests. By baselining the normal POST request size for each application, this question can detect anomalous uploads. Similarly, an application suddenly communicating with a new, never-before-seen server (identified by its SNI) can indicate a compromise or a change in behavior worthy of investigation.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - MDM/EMM Application Inventory Logs
      - Network Egress Points
      - Forward Proxies
      - Cloud Access Security Brokers (CASB)
      - VPN Concentrators
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each application
            CREATE baseline of http_post_size and historical_sni_list
          FOR each new http_post_request
            IF request.size > 99th_percentile_of_baseline THEN ALERT
          FOR each new tls_session
            IF session.sni not in historical_sni_list THEN ALERT
  - question: Are there any HTTP/S sessions from mobile devices that are statistically anomalous based on a combination of network features?
    context: |
      Sophisticated adversaries may try to evade simple, single-indicator rules. This question uses an unsupervised machine learning model (Isolation Forest) to identify outliers based on a combination of features (e.g., URI length, request size, TLS fingerprint prevalence). This holistic approach can uncover novel or complex attack patterns that would otherwise be missed.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress Points
      - Forward Proxies
      - Cloud Access Security Brokers (CASB)
      - VPN Concentrators
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          EXTRACT features (uri_length, body_len, user_agent_prevalence, etc.) from http_logs
          TRAIN isolation_forest_model on feature_set
          FOR each new http_session
            CALCULATE anomaly_score with model
            IF score in top 0.5% of outliers THEN ALERT
  - question: Has an application been installed that requests permissions or uses APIs capable of enumerating other installed applications?
    context: |
      Before attempting to exploit or evade security software, an adversary must first discover it. This question focuses on identifying applications that possess the explicit capability to see what other apps are installed on a device. By blocking or alerting on the installation of apps with these permissions/API calls (unless explicitly allow-listed), organizations can proactively prevent this discovery technique.
    answer_sources:
      - MDM/EMM Application Scan Reports
      - Mobile Application Vetting Platform Data
      - Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) Platform
      - Integrated Mobile Threat Defense (MTD) Solution
      - Third-party Application Vetting Service
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          ON new_app_install
            SCAN app_manifest and code
            IF (app uses QUERY_ALL_PACKAGES OR LSApplicationWorkspace) AND (app_hash not in allowlist) THEN
              ALERT or BLOCK
  - question: Are there any non-security applications in our environment that possess rare or statistically improbable combinations of permissions for enumerating installed packages?
    context: |
      While some legitimate apps may need to query installed packages, it's highly unusual for an app in a category like 'Games' or 'Social' to do so, especially in combination with other risky permissions like 'Record Audio'. This question seeks to find these statistical outliers within the existing application inventory, which may indicate a previously undetected malicious or unwanted application.
    answer_sources:
      - MDM/EMM Application Scan Reports
      - Mobile Application Vetting Platform Data
      - Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) Platform
      - Integrated Mobile Threat Defense (MTD) Solution
      - Third-party Application Vetting Service
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          FOR each app_category
            CALCULATE prevalence of QUERY_ALL_PACKAGES permission
          FOR each app in non-security_categories
            IF app has QUERY_ALL_PACKAGES and prevalence < 5th_percentile THEN ALERT
          CALCULATE co-occurrence of (QUERY_ALL_PACKAGES, other_risky_permission)
          IF co-occurrence < 1st_percentile_threshold THEN ALERT
  - question: Which mobile applications in our environment pose the highest risk of performing security software discovery, based on a combination of their permissions, metadata, and reputation?
    context: |
      This question uses a supervised machine learning model to generate a holistic risk score for each application. By training the model on known goodware and malware, it can learn to weigh various features—such as the presence of dangerous permissions, developer reputation, and update frequency—to predict which applications are most likely to be malicious. High-risk apps can then be prioritized for deeper, automated sandbox analysis.
    answer_sources:
      - MDM/EMM Application Scan Reports
      - Mobile Application Vetting Platform Data
      - Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) Platform
      - Integrated Mobile Threat Defense (MTD) Solution
      - Third-party Application Vetting Service
    range: last 90 days
    queries:
      - query_tech: pseudocode
        query: |
          EXTRACT features (permissions, developer_rep, etc.) for all apps
          TRAIN classification_model on labeled (good/bad) app features
          FOR each new or existing app
            CALCULATE risk_score with model
            IF risk_score > high_threshold THEN
              SUBMIT to sandbox for dynamic_analysis
              ALERT