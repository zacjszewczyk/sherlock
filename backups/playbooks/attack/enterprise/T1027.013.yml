name: 'T1027.013: Encrypted-Encoded File'
id: '9e8f1b2a-3c4d-4e5f-a6b7-c8d9e0f1a2b3'
description: 'This playbook helps identify if an adversary is using encrypted or encoded files to evade defenses and conceal malicious activity. It focuses on detecting known malicious file hashes associated with packers; process execution involving decoding utilities (e.g., certutil, openssl) or functions; the use of deceptive filenames with double extensions (e.g., file.pdf.exe); files with unusually high Shannon entropy for their type located in high-risk directories; anomalously long or complex encoded strings in command lines, logs, or network traffic; and correlated event sequences where a high-entropy file is written, followed by a decoding command and subsequent network or executable activity.'
type: 'technique'
related: 'TA0005: Defense Evasion'
contributors: 'Zachary Szewczyk, Ask Sage'
created: '2025-10-01'
modified: '2025-10-01'
version: '1.0'
tags: 'none'
questions:
  - question: 'Has a file with a known malicious hash, associated with encrypted packers or droppers, been observed on the network or created on a host?'
    context: 'This question aims to identify the presence of known malicious files that use encryption or encoding to bypass signature-based defenses. By matching file hashes against a comprehensive threat intelligence database, analysts can detect threats early in the infection lifecycle. This includes symbolic matching for immediate alerts, statistical monitoring of detection rates to spot larger campaigns, and machine learning-based reputation analysis to flag suspicious files that may not have a known hash.'
    answer_sources: 'Zeek files.log, Windows Event ID 4663, Internet gateways, web proxies, email servers, user workstations, file servers, cloud storage synchronization folders'
    range: 'last 90 days'
    queries:
      - search_technology: 'Pseudocode'
        query: |
          FOR each file in (Zeek_files_log, WinEvent_4663):
            CALCULATE hash (MD5, SHA1, SHA256)
            IF hash in malicious_hash_database:
              ALERT "Known malicious file detected"
  - question: 'Has a process been created that uses command-line arguments or script content to decode a file or string?'
    context: 'Adversaries frequently use built-in utilities (like certutil) or scripting functions (like PowerShell''s FromBase64String) to decode malicious payloads on a compromised host. This question focuses on detecting this decoding activity directly. The investigation involves searching for specific command-line patterns, analyzing command-line length and entropy for statistical anomalies, and using machine learning models to score command-line suspiciousness, thereby uncovering attempts to execute obfuscated code.'
    answer_sources: 'Windows Event ID 4688, Windows Event ID 4104, User workstations, application servers, domain controllers, developer environments'
    range: 'last 90 days'
    queries:
      - search_technology: 'Pseudocode'
        query: |
          FOR each process_creation_event (WinEvent_4688, WinEvent_4104):
            SCAN command_line/script_block for decoding_keywords (e.g., 'certutil -decode', 'FromBase64String')
            IF match found:
              ALERT "Potential decoding activity detected"
  - question: 'Has a file been created or transferred with a deceptive filename (e.g., double extension like ''invoice.pdf.exe'') or a manipulated Byte Order Mark (BOM)?'
    context: 'This question addresses the tactic of tricking users or systems into treating a malicious file as a benign document. Adversaries use double extensions to hide the true executable nature of a file. This involves using regular expressions to find these deceptive patterns, statistically analyzing the rarity of file extension combinations, and monitoring for sudden spikes in detections to identify widespread phishing or dropper campaigns.'
    answer_sources: 'Windows Event ID 4663, Zeek files.log, Network shares, user home directories (%USERPROFILE%), email attachment directories, web download folders, removable media'
    range: 'last 90 days'
    queries:
      - search_technology: 'Pseudocode'
        query: |
          FOR each file_event (WinEvent_4663, Zeek_files_log):
            IF filename matches regex /.*\\.(pdf|docx|txt|jpg)\\.(exe|js|vbs|ps1)$/i:
              ALERT "Deceptive double extension detected"
            SCAN first_4_bytes for non-standard_BOM
            IF non-standard_BOM found:
              ALERT "Manipulated BOM detected"
  - question: 'Has a file with unusually high entropy for its type, or a password-protected archive, been found in a high-risk directory like Downloads, Temp, or AppData?'
    context: 'Encrypted or compressed malicious payloads often exhibit high Shannon entropy, making them statistically distinct from normal, uncompressed files of the same type (e.g., a text file). This question helps identify these hidden payloads by analyzing file entropy against established baselines, checking for password protection on archives, and using machine learning models to score files based on a combination of metadata, flagging anomalies for review.'
    answer_sources: 'Windows Event ID 4663, Zeek files.log, User profile temporary directories (e.g., %TEMP%, %LOCALAPPDATA%), web browser cache and download folders, network egress points, email quarantine systems'
    range: 'last 90 days'
    queries:
      - search_technology: 'Pseudocode'
        query: |
          FOR each file_event (WinEvent_4663, Zeek_files_log):
            CALCULATE shannon_entropy
            IF entropy > 3_std_dev_from_baseline_for_filetype:
              ALERT "High entropy file detected"
            IF file_is_archive AND is_password_protected:
              ALERT "Password-protected archive detected"
  - question: 'Has an unusually long or high-entropy encoded string (e.g., Base64, Hex) been observed in process command lines, script logs, or network traffic?'
    context: 'Adversaries use encoding to obfuscate data in transit or in commands, such as for C2 communication or staging payloads. This question seeks to uncover this activity by identifying encoded strings in various data sources and flagging them based on anomalies. This includes looking for strings that are unusually long for their context (e.g., a DNS query) or have high character entropy, and monitoring the volume of encoded data over time to spot deviations from normal patterns.'
    answer_sources: 'Windows Event ID 4688, Windows Event ID 4104, Zeek http.log, Zeek dns.log, Domain Name System (DNS) infrastructure, web proxies and gateways, user workstations, application servers, API gateways'
    range: 'last 90 days'
    queries:
      - search_technology: 'Pseudocode'
        query: |
          FOR each event in (WinEvent_4688, WinEvent_4104, Zeek_http_log, Zeek_dns_log):
            EXTRACT potential_encoded_strings
            FOR each string:
              IF string_length > 99th_percentile_for_context:
                ALERT "Anomalously long encoded string detected"
  - question: 'Has a correlated sequence of events occurred, such as a process creating a high-entropy file, followed by a decoding command, and then a new executable creation or outbound network connection?'
    context: 'This question focuses on detecting a common attack chain by correlating discrete, seemingly benign events that, when combined, strongly indicate malicious activity. By linking file creation, process execution with decoding, and subsequent network or file system actions within a short time window, analysts can identify the full lifecycle of a payload being de-obfuscated and executed. This involves SIEM correlation rules, risk scoring for process sessions, and advanced graph-based analysis.'
    answer_sources: 'Windows Event ID 4663, Windows Event ID 4688, Zeek conn.log, User workstations, critical servers (e.g., Domain Controllers, database servers), network egress points, virtual desktop infrastructure (VDI) environments'
    range: 'last 90 days'
    queries:
      - search_technology: 'Pseudocode'
        query: |
          CORRELATE across (WinEvent_4663, WinEvent_4688, Zeek_conn_log)
          TRIGGER on sequence within 5 minutes:
            1. Process P1 creates high-entropy file F1
            2. P1 or child P2 executes command with decoding keywords
            3. P2 creates new executable OR initiates outbound connection to low-reputation IP
          IF sequence matches:
            ALERT "Malicious payload de-obfuscation sequence detected"