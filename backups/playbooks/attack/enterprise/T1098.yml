name: T1098: Account Manipulation
id: f8e1a6c0-622f-4b9a-8e3d-9c0a1b2c3d4e
description: |
  Investigates whether an adversary is manipulating accounts to maintain persistence or escalate privileges. This involves detecting account modifications originating from malicious IPs, changes to password policies like 'password never expires', activity on dormant accounts, unauthorized or off-hours administrative actions, suspicious additions to privileged groups, and modifications to critical Active Directory security descriptors (e.g., AdminSDHolder).
type: technique
related:
  - TA0003: Persistence
  - TA0004: Privilege Escalation
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are successful account modifications originating from IP addresses known to be malicious?
    context: This question aims to detect account manipulation attempts where the adversary uses compromised infrastructure or anonymizing services (e.g., TOR exit nodes, known C2 servers). Correlating account modification events (like password resets or property changes) with threat intelligence feeds can provide a high-fidelity signal of an external attacker's activity. A match requires immediate investigation into the full scope of network activity from that source IP.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4724
      - Zeek conn.log
      - Domain Controllers
      - Authentication Servers
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH (EventID 4738 OR 4724) | JOIN Source_IP with Threat_Intel_Feed | IF match THEN ALERT and INVESTIGATE Source_IP in conn.log
  - question: Are account modifications being performed from IP addresses that are unusually rare for the target user?
    context: This statistical approach helps identify account takeovers by flagging modifications that deviate from a user's established geographic and network location patterns. An adversary is unlikely to operate from an IP address previously used by the legitimate user. Flagging modifications from IPs in the 99th percentile of rarity for a user can surface sophisticated attackers who are not on standard threat intelligence lists.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4724
      - Zeek conn.log
      - Domain Controllers
      - Authentication Servers
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR EACH User, CALCULATE historical IP frequency | FOR EACH new account modification event, CHECK if Source_IP is in top 1% rarity for that user | IF true THEN ALERT
  - question: Is there an anomalous spike in the overall volume of account modification events?
    context: This machine learning approach uses time-series analysis to detect unusual bursts of account modification activity across the entire organization. Such a spike could indicate a widespread, automated attack, such as a password spraying follow-on or a large-scale persistence-setting campaign. It provides a macro-level view that complements user-specific or IP-specific checks.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4724
      - Zeek conn.log
      - Domain Controllers
      - Authentication Servers
      - Internet Gateway
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MODEL hourly count of events 4738, 4724 with SARIMA | ALERT if current count > 99% confidence interval of forecast
  - question: Are user accounts being modified to have passwords that never expire, especially for privileged or critical accounts?
    context: This question targets a common persistence technique where an adversary removes the password expiration requirement for a compromised account. This allows them to maintain long-term access without being forced to change the password. Detecting this change, particularly on service accounts or members of privileged groups, is a critical finding that points to an adversary attempting to solidify their foothold.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4739
      - Domain Controllers
      - Active Directory Database
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH EventID 4738 WHERE UserAccountControl change adds 'DONT_EXPIRE_PASSWD' flag | IF Target_Account is privileged THEN ALERT
  - question: Is there a statistically significant increase in the number of accounts being set to have non-expiring passwords?
    context: This question looks for broader trends in the use of the 'DONT_EXPIRE_PASSWD' flag. A sudden increase in the number of accounts being configured this way, exceeding a historical baseline, could indicate a large-scale persistence campaign by an adversary rather than isolated administrative actions. It helps distinguish between normal operational changes and potentially malicious, widespread activity.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4739
      - Domain Controllers
      - Active Directory Database
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MONITOR count of new accounts with 'DONT_EXPIRE_PASSWD' | CALCULATE weekly moving average and stdev | ALERT if daily count > (avg + 3*stdev)
  - question: Are there account modifications to set non-expiring passwords that are anomalous compared to normal administrative behavior?
    context: This machine learning approach seeks to identify when the 'DONT_EXPIRE_PASSWD' flag is set in a context that is unusual. An Isolation Forest model can learn the patterns of normal administrative changes (e.g., who makes the change, what kind of account is changed, time of day). It can then flag modifications that are outliers, even if the action itself is not inherently forbidden, pointing to a potential misuse of administrative privileges.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4739
      - Domain Controllers
      - Active Directory Database
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN Isolation Forest on Event 4738 features (attribute, time, day, subject/target groups) | PREDICT anomalies for new 'DONT_EXPIRE_PASSWD' changes | IF anomaly THEN ALERT
  - question: Are dormant accounts (e.g., no logon for 90+ days) suddenly showing activity like logons, password resets, or modifications?
    context: Adversaries often target dormant or disabled accounts (e.g., of former employees) because their reactivation is less likely to be noticed by the legitimate user. Alerting on any activity from an account that has been inactive for an extended period is a high-confidence indicator of compromise. This is a classic persistence and privilege escalation technique.
    answer_sources:
      - Windows Event ID 4724
      - Windows Event ID 4738
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Logs
      - HR System (for termination status)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MAINTAIN list of dormant_accounts (last logon > 90 days) | ALERT if any account in list generates EventID 4624, 4724, or 4738
  - question: Has a user logged in after an unusually long period of inactivity compared to their own history?
    context: This statistical method personalizes the detection of dormant account usage. Instead of a fixed 90-day threshold, it compares the time since a user's last logon to their own historical logon patterns. A logon that occurs after a period of inactivity in the 99th percentile for that specific user is highly suspicious and could indicate an account takeover, even if the dormancy period is less than a global threshold.
    answer_sources:
      - Windows Event ID 4724
      - Windows Event ID 4738
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Logs
      - HR System (for termination status)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR EACH user, calculate historical logon time deltas | FOR EACH new logon (EventID 4624), ALERT if time_since_last_logon > 99th percentile for that user
  - question: Has a user's account abruptly shifted from a low-activity pattern to a high-activity pattern?
    context: This machine learning approach uses clustering to establish baselines of user activity profiles (e.g., 'dormant', 'normal user', 'power user'). An adversary taking over a dormant account will cause a sudden and dramatic shift in its activity profile. Detecting when an account jumps from a 'dormant' cluster to a 'high-activity' cluster can serve as a powerful indicator of compromise.
    answer_sources:
      - Windows Event ID 4724
      - Windows Event ID 4738
      - Windows Event ID 4624
      - Domain Controllers
      - Authentication Logs
      - HR System (for termination status)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CLUSTER users by activity features (logon freq, session duration) using K-Means | ALERT if user moves from 'low-activity' cluster to 'high-activity' cluster
  - question: Are sensitive account modifications being performed by users who are not in an authorized administrative group?
    context: This question enforces a policy of least privilege. Actions like password resets or MFA changes should only be performed by designated personnel (e.g., Helpdesk, Domain Admins). Detecting when such an action is performed by a standard user or an unauthorized administrator is a critical security finding, suggesting either privilege escalation or an insider threat.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4724
      - Windows Event ID 4739
      - Domain Controllers
      - Helpdesk Systems
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: DEFINE authorized_admin_groups | SEARCH Events 4738, 4724 | IF Subject_Account NOT IN authorized_admin_groups THEN ALERT
  - question: Is an administrator performing account modifications at a time of day or week that is unusual for them?
    context: This statistical approach baselines the normal working hours for each individual administrator. An adversary who has compromised an admin account may not be aware of these patterns and may use the account during off-hours. Alerting when an admin performs a sensitive action outside of their typical activity window (e.g., outside the 5th-95th percentile of their historical activity hours) can help detect account misuse.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4724
      - Windows Event ID 4739
      - Domain Controllers
      - Helpdesk Systems
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR EACH admin, build profile of normal activity hours | FOR EACH new modification event, ALERT if timestamp is outside the 5th-95th percentile of that admin's profile
  - question: Can we predictively identify suspicious account modifications based on a combination of contextual factors?
    context: This advanced machine learning approach combines multiple weak signals into a strong predictor of malicious activity. By training a model on features like time of day, source geolocation, group memberships of both the actor and target, and the historical relationship between them, the system can learn to identify complex patterns of abuse that would be missed by simpler rules, flagging them with a high confidence score.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4724
      - Windows Event ID 4739
      - Domain Controllers
      - Helpdesk Systems
      - Privileged Access Workstations (PAWs)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN classifier on features (time, IP geo, subject/target groups) to predict 'suspicious' | ALERT if prediction probability > 0.9
  - question: Has a user been added to a privileged group by an anomalous parent process?
    context: This question aims to detect privilege escalation where the tool used to add a user to a group (e.g., Domain Admins) is not a standard administrative tool. For example, if 'winword.exe' initiates a process that adds a user to a privileged group, it's a strong indicator of compromise, likely via a malicious macro. Correlating the group addition event with the parent process provides crucial context for detection.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Windows Event ID 4688
      - Zeek conn.log
      - Domain Controllers
      - Endpoints
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ON privileged group add (e.g., 4732), get Logon ID | FIND parent process with EventID 4688 using Logon ID | IF process name NOT IN allowlist THEN ALERT
  - question: Is a privileged group addition being initiated by a process that rarely performs such actions?
    context: This statistical approach identifies unusual parent processes for privilege escalation without relying on a fixed allowlist. It maintains a frequency count of all processes that have historically initiated privileged group additions. If a new addition is caused by a process that is statistically rare (e.g., in the bottom 5th percentile of frequency), it is flagged as suspicious, allowing for the discovery of novel attack tools.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Windows Event ID 4688
      - Zeek conn.log
      - Domain Controllers
      - Endpoints
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MAINTAIN frequency count of parent processes for group adds | ON new add, ALERT if parent process is in bottom 5% of historical frequency
  - question: Can we identify central points of malicious activity related to privileged group additions using graph analysis?
    context: This machine learning technique models the relationships between users, processes, and groups as a graph. Anomalies are detected by looking for nodes (like a specific user or process) that gain an unusually high level of influence or centrality in actions related to privileged group changes. This can reveal a compromised account or malicious tool being used as a pivot point for widespread privilege escalation.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Windows Event ID 4688
      - Zeek conn.log
      - Domain Controllers
      - Endpoints
      - Privileged Access Workstations
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: BUILD graph of user-process-group interactions | RUN PageRank or other centrality algorithm | ALERT on nodes with anomalously high scores related to privileged group adds
  - question: Was a newly created account immediately added to a privileged group?
    context: This is a classic adversary tactic known as "Create Account, Add to Privileged Group." An adversary creates a new user and, within moments, elevates its privileges. This two-step process is highly suspicious and almost never occurs during legitimate user provisioning. Detecting this sequence of events within a short time window (e.g., 5 minutes) is a high-fidelity indicator of an active attacker.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Domain Controllers
      - HR Systems (for name validation)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ALERT if EventID 4720 (create account) is followed by EventID 4728/4732/4756 (privileged add) for same Target_SID within 5 minutes
  - question: Is a new, privileged account using a suspicious username, such as one that is random or mimics an existing privileged account?
    context: Adversaries often use randomly generated usernames to avoid detection or use names that are slight misspellings of legitimate admin accounts (typosquatting). This statistical check analyzes the username of any newly created privileged account. High entropy (randomness) or a close Levenshtein distance (similarity) to existing privileged accounts are strong indicators that the new account is malicious.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Domain Controllers
      - HR Systems (for name validation)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ON new privileged account creation, CALCULATE username entropy and Levenshtein distance to other admin names | ALERT if entropy is in top 5% or distance is < 3
  - question: Does the sequence of events following a new account creation deviate from the normal, expected sequence?
    context: This machine learning approach models the entire lifecycle of a new account using a Hidden Markov Model (HMM). The model learns the normal probability of transitioning between states (e.g., 'Created' -> 'Added to Standard Group'). An anomalous sequence, such as an immediate transition from 'Created' to 'Added to Domain Admins', will have a very low probability according to the model and will be flagged as a significant anomaly, indicating likely malicious activity.
    answer_sources:
      - Windows Event ID 4720
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Domain Controllers
      - HR Systems (for name validation)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN HMM on normal event sequences after account creation (EventID 4720) | ALERT if a new sequence (e.g., create -> add to priv group) has a very low probability
  - question: Is an account being added to a privileged group by another account that is not an authorized administrator?
    context: This is a fundamental security check to detect privilege escalation. The act of adding a user to a privileged group like 'Domain Admins' should only be performed by a small, designated set of administrative accounts. If the 'Subject' (the account performing the action) is not on an allowlist of authorized administrators, it signifies a critical security breach, such as a compromised standard account that has somehow gained the rights to modify group memberships.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR every privileged group add (4728, 4732, 4756), CHECK if Subject_Account is in authorized_admin_list | IF false THEN high-severity ALERT
  - question: Is an administrator adding users to privileged groups they do not normally manage?
    context: This statistical approach provides more granular control than a simple authorized admin list. It builds a baseline of which specific admins add users to which specific privileged groups. An alert is triggered if an admin, while authorized in general, performs an action that is rare for them personally (e.g., a helpdesk admin who normally only manages 'Local Admins' suddenly adds a user to 'Enterprise Admins'). This can detect misuse of a compromised, but legitimate, administrative account.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: MAINTAIN baseline matrix of (Admin, Group) add frequencies | ALERT if a new (Admin, Group) pair is new or in the bottom 5% of frequency for that Admin
  - question: Is an administrator's group management activity inconsistent with the behavior of their peers?
    context: This machine learning approach uses clustering to group administrators based on their typical job functions and behaviors (e.g., 'Helpdesk', 'Server Admins', 'Domain Admins'). An alert is generated if an administrator performs a privileged action that is anomalous for their peer group (their cluster). This helps detect when a compromised account is used to perform tasks outside its implicit role, even if the account has the technical permissions to do so.
    answer_sources:
      - Windows Event ID 4728
      - Windows Event ID 4732
      - Windows Event ID 4756
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CLUSTER admins based on action types using DBSCAN | ALERT if an admin performs an action (e.g., privileged group add) that is anomalous for their assigned cluster
  - question: Is the security descriptor being modified on a critical Active Directory object like AdminSDHolder?
    context: This question targets a sophisticated persistence and privilege escalation technique where an adversary modifies the Access Control List (ACL) of a critical AD object. AdminSDHolder, for example, is a template that applies its permissions to all protected accounts and groups. By adding their own account to this object's ACL, an adversary can ensure they maintain privileged access even if they are later removed from a group like Domain Admins. Monitoring for any change to the 'nTSecurityDescriptor' on these objects is critical.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 4670
      - Domain Controllers (specifically the one holding the PDC Emulator FSMO role)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: ALERT ON EventID 5136 WHERE 'Object DN' is on critical_object_watchlist (e.g., AdminSDHolder) AND 'Attribute LDAP Display Name' is 'nTSecurityDescriptor'
  - question: Is there a statistically unusual increase in the number of security descriptor modifications across Active Directory?
    context: While a single modification to AdminSDHolder is critical, a widespread attack might involve changing permissions on many objects at once. This statistical approach monitors the overall rate of 'nTSecurityDescriptor' modifications (Event ID 5136). A sudden spike that exceeds the normal baseline by a significant margin (e.g., 2 standard deviations) could indicate an automated, large-scale permission-altering attack in progress.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 4670
      - Domain Controllers (specifically the one holding the PDC Emulator FSMO role)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRACK rate of EventID 5136 | CALCULATE weekly moving average | ALERT if 24-hour count > (avg + 2*stdev)
  - question: Can we automatically detect malicious permission changes by analyzing the content of the security descriptor?
    context: The 'nTSecurityDescriptor' is stored in a complex format called Security Descriptor Definition Language (SDDL). This machine learning approach involves parsing the SDDL string to extract meaningful features, such as who is being granted access (the trustee), what rights are being granted (e.g., Full Control, Write DACL), and whether it's an allow or deny entry. A model can then be trained to distinguish between benign administrative changes and malicious ones, automating the detection of dangerous permission modifications.
    answer_sources:
      - Windows Event ID 5136
      - Windows Event ID 4670
      - Domain Controllers (specifically the one holding the PDC Emulator FSMO role)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: PARSE SDDL from EventID 5136 | EXTRACT features (trustee, rights, ACE type) | TRAIN classifier to identify malicious changes | ALERT if new change is classified as malicious