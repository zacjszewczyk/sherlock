name: T1665: Hide Infrastructure
id: f1a9c3b1-8e7d-4c6f-9b2a-5d0e3c4f8a1b
description: |
  This playbook helps investigate whether an adversary is using hidden infrastructure for Command and Control. This involves identifying techniques used to obscure C2 channels, such as leveraging threat intelligence matches for known C2 redirectors, proxies, or abused infrastructure; detecting the use of self-signed or free SSL/TLS certificates on non-whitelisted cloud ASNs, often combined with rare JA3/JA3S fingerprints; analyzing DNS queries for suspicious patterns like dynamic DNS usage, high-entropy subdomains (DGA), or large non-standard record types (tunneling); identifying domain fronting through mismatches between TLS SNI and HTTP Host headers or suspicious redirection patterns; detecting periodic C2 beaconing characterized by constant time intervals and low data volumes; and finding fast-flux DNS where a single domain rapidly resolves to a large, diverse set of IP addresses with low TTLs.
type: technique
related:
  - TA0011: Command And Control
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are outbound network connections, DNS queries, or TLS handshakes matching known malicious C2 infrastructure from threat intelligence feeds?
    context: |
      This question aims to perform a direct match against known indicators of compromise (IOCs). By correlating all outbound network traffic (IP addresses), DNS requests (domains), and TLS handshakes (certificate hashes) against subscribed threat intelligence feeds specifically categorized as C2 infrastructure, an organization can quickly identify connections to known adversary-controlled systems. A match provides a high-confidence starting point for an investigation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 3
      - Network egress points (e.g., perimeter firewalls, web proxies), enterprise DNS resolvers, and network sensor tap points.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH network, dns, and ssl logs
          WHERE destination_ip OR destination_domain OR certificate_hash IN threat_intel_feed(category='C2')
          RETURN source_host, destination, indicator, and timestamp
  - question: Are any non-corporate ASNs receiving an unusually high number of connections from distinct internal hosts, with many destinations being categorized as proxies or VPNs?
    context: |
      This question seeks to identify abuse of legitimate infrastructure like VPNs, proxies, or hosting providers, which adversaries use to blend in. By aggregating outbound connections by their destination Autonomous System Number (ASN) and reputation, analysts can find statistical outliers. An ASN that is not part of the organization's own infrastructure but is receiving connections from an abnormally large number of internal hosts, especially if those destinations are known proxies, is highly suspicious and warrants investigation as a potential C2 redirector or aggregator.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 3
      - Network egress points (e.g., perimeter firewalls, web proxies), enterprise DNS resolvers, and network sensor tap points.
    range: last 90 days
    queries:
      - pseudocode: |
          AGGREGATE outbound connections by destination_ASN over 24h
          CALCULATE 95th_percentile for distinct_source_hosts per ASN
          FLAG ASNs where distinct_source_hosts > 95th_percentile AND proportion_of_proxy_ips > 50%
  - question: Can a machine learning model classify network connections as 'suspicious C2' based on features like threat intelligence matches, connection properties, and destination rarity?
    context: |
      This question leverages machine learning to move beyond simple rules and statistics. By training a classifier (e.g., logistic regression) on a rich set of features—including whether an IP is on a threat list, connection details (port, protocol, duration, bytes), and contextual information (rarity of destination's location, IP reputation)—the model can learn the subtle, combined characteristics of malicious C2 traffic. This allows for the detection of novel threats that may not match existing IOCs or simple statistical thresholds.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 3
      - Network egress points (e.g., perimeter firewalls, web proxies), enterprise DNS resolvers, and network sensor tap points.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each network connection
          PREDICT classification using ML_model(features=[ti_match, port, protocol, duration, bytes, geo_rarity, ip_rep, ssl_props])
          CREATE case for connections classified as 'suspicious C2' with high confidence
  - question: Are there any SSL/TLS sessions using self-signed or free certificates to non-whitelisted public cloud ASNs, where the JA3/JA3S hash matches a known C2 fingerprint?
    context: |
      This question uses a multi-faceted rule to find suspicious encrypted traffic. Adversaries often use free (e.g., Let's Encrypt) or self-signed certificates for their C2 infrastructure hosted in public clouds. This rule first identifies such sessions, then filters them to destinations in cloud provider ASNs that are not on an approved list. The final check, matching the session's JA3/JA3S fingerprint against a threat feed of known malicious client signatures, provides a high-fidelity indicator of a specific malware family or C2 tool.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network security monitoring sensors with SSL/TLS visibility (e.g., Zeek), and network egress points with access to connection metadata.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH ssl_logs
          WHERE (issuer is self-signed OR issuer contains 'Let\'s Encrypt')
          AND destination_asn IN non_whitelisted_cloud_providers
          AND (ja3_hash OR ja3s_hash) IN known_c2_fingerprints
  - question: Are any SSL/TLS sessions that use self-signed/free certificates to non-whitelisted cloud ASNs also using a JA3/JA3S hash that is statistically rare within the enterprise?
    context: |
      This question aims to find novel or custom C2 tools that don't have a known fingerprint. It starts with the same criteria as the previous question (free/self-signed cert, non-whitelisted cloud ASN) but instead of matching a known signature, it looks for JA3/JA3S hashes that are statistical anomalies. A rare hash implies that the client application making the connection is uncommon in the environment, which is a key trait of custom malware that hasn't been widely deployed or seen before.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network security monitoring sensors with SSL/TLS visibility (e.g., Zeek), and network egress points with access to connection metadata.
    range: last 90 days
    queries:
      - pseudocode: |
          CALCULATE frequency of all JA3/JA3S hashes over the last 30 days
          SEARCH ssl_logs for sessions with free/self-signed certs to non-whitelisted cloud ASNs
          FLAG sessions where the JA3/JA3S hash frequency is in the bottom 5th percentile
  - question: Can an anomaly detection model identify suspicious SSL/TLS sessions based on features like certificate properties, destination ASN, and JA3/JA3S rarity?
    context: |
      This question applies unsupervised machine learning to detect anomalous encrypted sessions without relying on predefined rules. An Isolation Forest model, for example, can analyze multiple features of an SSL/TLS session simultaneously (certificate validity period, destination port, ASN, rarity of the client fingerprint, etc.) and assign an anomaly score. This approach is powerful for identifying unusual combinations of factors that, while individually benign, are highly suspicious when they occur together, pointing to potential C2 activity.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network security monitoring sensors with SSL/TLS visibility (e.g., Zeek), and network egress points with access to connection metadata.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each SSL/TLS session
          CALCULATE anomaly_score using ML_model(features=[cert_validity, port, is_free_cert, dest_asn, ja3_rarity_score])
          INVESTIGATE sessions with the highest anomaly scores
  - question: Are any internal hosts querying domains associated with dynamic DNS providers?
    context: |
      This question seeks to identify the use of dynamic DNS (DDNS) services, which are frequently abused by adversaries to create resilient and easily updatable C2 infrastructure. By maintaining a list of known DDNS providers (e.g., no-ip.com, duckdns.org), an organization can scan all DNS queries and flag any internal host that attempts to resolve such a domain. Correlating these alerts with endpoint process creation logs can help pinpoint the specific malware or script responsible for the C2 communication.
    answer_sources:
      - Zeek dns.log
      - Windows Event ID 4688
      - Windows DNS Client Analytic Logs
      - Enterprise DNS resolvers, endpoint devices (for process context), and DNS forwarders to external resolvers.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH dns_logs
          WHERE query_domain matches a known dynamic_dns_provider
          CORRELATE on host and timestamp with process_creation_logs to find originating process
  - question: Are there any DNS queries with unusually high subdomain entropy or abnormally large TXT record responses?
    context: |
      This question targets two distinct DNS-based C2 techniques. First, it looks for high character entropy (randomness) in subdomains, which is a classic indicator of Domain Generation Algorithms (DGA) used by malware to locate C2 servers. Second, it analyzes the size of DNS TXT record responses, as adversaries can abuse these records to exfiltrate data or receive commands (DNS tunneling). Flagging queries that exceed statistical norms for either entropy or response size can uncover these covert channels.
    answer_sources:
      - Zeek dns.log
      - Windows Event ID 4688
      - Windows DNS Client Analytic Logs
      - Enterprise DNS resolvers, endpoint devices (for process context), and DNS forwarders to external resolvers.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH dns_logs
          FLAG queries where shannon_entropy(subdomain) > 98th_percentile
          FLAG TXT queries where response_size > (mean_txt_size + 3 * std_dev_txt_size)
  - question: Can a time series model detect hosts making a significantly higher volume of DNS queries than forecasted, potentially indicating DNS tunneling?
    context: |
      This question uses time series forecasting to establish a baseline of normal DNS activity for each host. A model (e.g., SARIMA) learns the typical patterns of query volume over time. When a host's actual query volume dramatically exceeds what the model predicted, it generates an alert. This anomaly is a strong indicator of automated activity, such as DNS tunneling, where malware may be sending many rapid queries to encode exfiltrated data.
    answer_sources:
      - Zeek dns.log
      - Windows Event ID 4688
      - Windows DNS Client Analytic Logs
      - Enterprise DNS resolvers, endpoint devices (for process context), and DNS forwarders to external resolvers.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each host, model DNS query volume over time
          ALERT when observed_volume is significantly greater than forecasted_volume
          ENRICH alerts with entropy and TXT size analysis for the same host
  - question: Is there a mismatch between the TLS Server Name Indication (SNI) and the HTTP Host header in any decrypted web traffic, indicating domain fronting?
    context: |
      This question targets the specific technique of domain fronting. In an environment where TLS traffic can be decrypted (e.g., via a proxy), analysts can compare two key fields: the SNI from the outer TLS handshake and the Host header from the inner HTTP request. In legitimate traffic, these two values should match. A mismatch is a strong, high-confidence indicator that an adversary is hiding their true destination behind a legitimate, high-reputation domain (the SNI) while directing traffic to their malicious server (the Host header).
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ssl.log
      - Decrypting web proxies, network TAPs placed between users and the internet, and network security monitoring sensors.
    range: last 90 days
    queries:
      - pseudocode: |
          JOIN decrypted http_logs and ssl_logs on session_uid
          ALERT where http.host_header != ssl.server_name
  - question: Are any hosts exhibiting a pattern of connecting to a high-reputation CDN followed immediately by a connection to a low-reputation or suspicious destination?
    context: |
      This question provides a way to detect C2 redirectors without needing traffic decryption. Adversaries often use high-reputation Content Delivery Networks (CDNs) or other trusted services as an initial hop. This analysis looks for a sequence of events: a connection to a known CDN, followed within a very short window (e.g., 5 seconds) by a connection to a suspicious destination (e.g., a low-reputation IP, non-corporate ASN). Identifying hosts where this transition pattern is a statistical outlier can uncover the use of redirectors.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ssl.log
      - Decrypting web proxies, network TAPs placed between users and the internet, and network security monitoring sensors.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each host, analyze sequences of connections
          CALCULATE probability of (connection to CDN) -> (connection to low-reputation_IP) within 5 seconds
          FLAG hosts with statistically outlier transition probabilities
  - question: Can a sequence analysis model detect anomalous network session patterns indicative of C2 redirection, such as connecting to a CDN then a rare IP?
    context: |
      This question applies machine learning to sequence analysis to understand normal user browsing patterns. A model like an LSTM (Long Short-Term Memory network) can be trained on sequences of connection metadata (destination IP, domain, ASN, etc.). By learning what constitutes a "normal" sequence, the model can then flag anomalous patterns, such as a user connecting to a trusted CDN and then immediately to a rare, uncategorized IP address. This is a powerful method for detecting sophisticated redirection techniques.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ssl.log
      - Decrypting web proxies, network TAPs placed between users and the internet, and network security monitoring sensors.
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN a sequence model (e.g., LSTM) on normal connection sequences
          SCORE new sequences for anomaly
          FLAG sequences indicative of redirection (e.g., trusted_cdn -> rare_uncategorized_ip)
  - question: Are there any connections from internal hosts to external IP addresses categorized as TOR exit nodes, malicious proxies, or known C2 providers?
    context: |
      This question provides a straightforward method for detecting connections to high-risk infrastructure. By enriching network connection logs with IP reputation data, any traffic destined for an IP address that is explicitly categorized as a TOR exit node, a malicious proxy, or a known C2 server can be immediately flagged. Such connections are almost always unauthorized and warrant immediate investigation as potential C2 channels or data exfiltration routes.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 3
      - Network egress points (e.g., firewalls), network sensor tap points, and endpoint devices for process and command-line context.
    range: last 90 days
    queries:
      - pseudocode: |
          ENRICH connection logs with IP reputation data
          SEARCH for connections where destination_ip_reputation IN ['TOR Exit Node', 'Malicious Proxy', 'C2 Provider']
          ALERT on any match
  - question: Are any source-destination IP pairs showing signs of automated beaconing, such as highly regular connection intervals and low data transfer volumes?
    context: |
      This question targets the detection of C2 "beaconing" or "heartbeat" traffic. Malware often communicates with its C2 server at regular intervals. This analysis involves grouping network connections by source and destination IP and then calculating statistics on those groups. A very low standard deviation in the time between connections (low "jitter") combined with a consistently low volume of data transferred is a strong statistical indicator of automated, non-human communication characteristic of C2 beaconing.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 3
      - Network egress points (e.g., firewalls), network sensor tap points, and endpoint devices for process and command-line context.
    range: last 90 days
    queries:
      - pseudocode: |
          GROUP connections by (source_ip, destination_ip) over 24h
          CALCULATE std_dev(inter_arrival_time) and mean(bytes_sent)
          FLAG pairs where std_dev is < 1.0 second AND mean_bytes is < 1KB
  - question: Can a clustering algorithm identify groups of anomalous connections that exhibit C2-like characteristics, such as unusual ports, durations, and data volumes?
    context: |
      This question uses unsupervised machine learning to find pockets of anomalous traffic without prior labeling. A density-based clustering algorithm like DBSCAN can group millions of network connections based on their features (data volume, duration, port, etc.). It will naturally separate the large, dense cluster of "normal" web traffic from smaller, outlier clusters. These anomalous clusters, which may exhibit C2-like traits such as long durations and low data transfer, can then be prioritized for human investigation.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4688
      - Windows Event ID 3
      - Network egress points (e.g., firewalls), network sensor tap points, and endpoint devices for process and command-line context.
    range: last 90 days
    queries:
      - pseudocode: |
          APPLY DBSCAN clustering on connection features (e.g., log(bytes), log(duration), port, inter_arrival_stdev)
          INVESTIGATE hosts and destinations within small, distinct, anomalous clusters
          CORRELATE with process logs on affected hosts
  - question: Are any internal hosts resolving domains known to be used for fast-flux C2 from threat intelligence feeds?
    context: |
      This question focuses on a simple, effective method for detecting fast-flux networks. By subscribing to a threat intelligence feed that specifically lists domains known to use fast-flux for C2, an organization can monitor all internal DNS queries in real-time. Any request for a domain on this list is a high-confidence indicator of compromise and should trigger an immediate alert for investigation.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Enterprise DNS resolvers, DNS forwarders, and network security monitoring sensors capturing DNS traffic.
    range: last 90 days
    queries:
      - pseudocode: |
          SEARCH dns_logs
          WHERE query_domain IN known_fast_flux_domain_feed
          ALERT on any match with source host and timestamp
  - question: Can a 'flux score' be used to identify domains that are resolving to a rapidly changing and diverse set of IPs with low TTLs, indicative of fast-flux DNS?
    context: |
      This question describes a statistical method for detecting fast-flux behavior without relying on a threat feed. A "flux score" is calculated for each domain based on the key characteristics of fast-flux: the number of unique IP addresses it resolves to, the number of unique ASNs those IPs belong to, and the average Time-To-Live (TTL) of the DNS records. A high score, indicating many diverse IPs and a low TTL, is a strong signal that the domain is using fast-flux techniques and should be investigated.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Enterprise DNS resolvers, DNS forwarders, and network security monitoring sensors capturing DNS traffic.
    range: last 90 days
    queries:
      - pseudocode: |
          FOR each domain over a 1-hour window
          CALCULATE flux_score = (Count(Unique IPs) * Count(Unique ASNs)) / (Average(TTL) + 1)
          FLAG domains with a flux_score in the top 99th percentile
  - question: Can a machine learning classifier distinguish fast-flux domains from benign domains and legitimate CDNs based on DNS response characteristics?
    context: |
      This question proposes a more advanced, supervised machine learning approach to identifying fast-flux domains. A classifier like a Random Forest can be trained to differentiate between benign domains, legitimate CDNs (which also use multiple IPs but behave differently), and malicious fast-flux domains. The model uses features like IP/ASN counts, TTL statistics, and domain name entropy to make a more nuanced and accurate classification than a simple statistical score alone.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Enterprise DNS resolvers, DNS forwarders, and network security monitoring sensors capturing DNS traffic.
    range: last 90 days
    queries:
      - pseudocode: |
          TRAIN a Random Forest classifier on labeled domain data
          USE features like unique_ip_count, unique_asn_count, avg_ttl, stdev_ttl, domain_entropy
          CLASSIFY new domains and alert on 'fast-flux' predictions