name: T1556.005: Reversible Encryption
id: 5a89c2b0-8c9f-4d4b-9e2a-1b6c7d8e9f0a
description: This playbook helps investigate whether an adversary is modifying account properties to enable reversible encryption for the purpose of persistence, defense evasion, or credential access. Adversaries may enable this feature on user accounts, Fine-Grained Password Policies (FGPP), or Group Policy Objects (GPOs) to allow them to retrieve plaintext passwords after an account is compromised. This is typically done by setting the 'ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED' flag on a user account or enabling the 'msDS-PasswordReversibleEncryptionEnabled' attribute in a password policy. The playbook focuses on detecting these initial modifications and correlating them with subsequent suspicious activities, such as immediate logons from anomalous locations, the use of credential dumping tools like Mimikatz, or attempts to access LSA secrets on a Domain Controller.
type: technique
related:
- TA0003: Persistence
- TA0005: Defense Evasion
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is an account being modified to enable password storage using reversible
    encryption?
  context: This question looks for direct evidence of the technique. An adversary
    may modify a user's 'User Account Control' settings to enable reversible encryption.
    This is recorded in Windows Event ID 4738. By monitoring these events and checking
    if the 'Password stored using reversible encryption' flag (0x80) was added,
    analysts can detect the initial setup for this persistence method. It is critical
    to compare the modified account against a pre-approved list of exceptions to
    reduce false positives.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH all Windows Event ID 4738
      WHERE 'User Account Control' field change indicates the '0x80' flag was added
      AND the target user account is NOT on the approved exception list
      RETURN target_user, source_user, timestamp
- question: Is a dormant account with reversible encryption enabled suddenly being
    used to log in?
  context: Adversaries may enable reversible encryption on an account and leave it
    dormant for a period to evade detection. This question aims to identify the activation
    of such a staged account. By establishing a baseline of normal login activity
    (Windows Event ID 4624) and calculating the typical dormancy period across the
    environment (e.g., 95th percentile), an alert can be generated when a reversibly-encrypted
    account is used after an abnormally long period of inactivity.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: |
      CALCULATE 95th percentile of login dormancy for all active accounts
      FOR each successful login (Event ID 4624)
      IF the authenticating account has reversible encryption enabled
      AND time since last login > 95th percentile dormancy
      ALERT for potential dormant account activation
- question: Is an account being modified for reversible encryption and then immediately
    used to log in from an anomalous location?
  context: This question seeks to identify a common attack sequence where an adversary
    enables reversible encryption and immediately uses the account. Correlating the
    account modification event (Event 4738) with a subsequent successful logon (Event
    4624) within a very short time window (e.g., under 5 minutes) is a strong indicator
    of malicious activity. The confidence of this detection increases significantly
    if the logon originates from an IP address that is anomalous for that user (e.g.,
    rare geolocation, new ASN).
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4624
  - Zeek conn.log
  - Domain Controllers
  range: last 90 days
  queries:
  - pseudocode: |
      DETECT sequence [Event 4738 enabling reversible encryption on User A] -> [Event 4624 successful logon by User A]
      WHERE time between events < 5 minutes
      AND logon source IP is flagged as anomalous by UBA model
      ALERT for high-confidence compromise
- question: Is a Fine-Grained Password Policy (FGPP) being created or modified to
    allow reversible encryption?
  context: Instead of modifying individual user accounts, an adversary might change
    a Fine-Grained Password Policy (FGPP) to apply reversible encryption to a group
    of users. This can be detected by monitoring for the creation (Event ID 5137)
    or modification (Event ID 5136) of 'msDS-PasswordSettings' objects on Domain
    Controllers. An alert should be triggered if the 'msDS-PasswordReversibleEncryptionEnabled'
    attribute is set to TRUE.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 5137
  - Domain Controllers, SYSVOL Share
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH directory service events (ID 5136, 5137)
      WHERE object class is 'msDS-PasswordSettings'
      AND 'msDS-PasswordReversibleEncryptionEnabled' is set to TRUE
      ALERT on FGPP modification
- question: Is an administrator enabling reversible encryption via an FGPP outside
    of their normal behavior patterns?
  context: To distinguish legitimate administrative changes from malicious ones, this
    question focuses on behavioral anomalies. By creating a statistical profile for
    each administrator (e.g., frequency and time-of-day of FGPP modifications from
    Event 5136), it's possible to detect when a change occurs outside of their typical
    activity window. An alert for an FGPP modification enabling reversible encryption
    by an admin at an unusual time, or by an account with no history of such actions,
    is a strong indicator of a compromised admin account.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 5137
  - Domain Controllers, SYSVOL Share
  range: last 90 days
  queries:
  - pseudocode: |
      MODEL normal FGPP modification times for each administrator
      FOR each FGPP modification (Event 5136) enabling reversible encryption
      IF event time is > 2 standard deviations from admin's mean modification time
      ALERT on anomalous administrative behavior
- question: Can we score the risk of an FGPP modification that enables reversible
    encryption based on its context?
  context: This question proposes a machine learning approach to proactively identify
    high-risk changes. By training a classification model on FGPP modification events
    (Event 5136), it's possible to score the risk of each change. Features for the
    model could include the user making the change, the source workstation, time
    of day, and specific attributes changed. A high-risk classification for a change
    that sets 'msDS-PasswordReversibleEncryptionEnabled' to TRUE would indicate a
    likely malicious modification.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 5137
  - Domain Controllers, SYSVOL Share
  range: last 90 days
  queries:
  - pseudocode: |
      APPLY risk classification model to all FGPP modifications (Event 5136)
      IF 'msDS-PasswordReversibleEncryptionEnabled' is set to TRUE
      AND model classification is 'high-risk'
      ALERT for likely malicious modification
- question: Is an account with reversible encryption enabled having its password
    changed and then immediately used for an interactive logon from an external IP?
  context: This question targets a specific attack sequence where an adversary, having
    enabled reversible encryption, changes an account's password to lock out the
    legitimate user and then logs in. A stateful detection rule can identify this
    by looking for a password change event (Event 4723) followed by a successful
    interactive logon (Event 4624, Logon Type 2 or 10) from an external (non-RFC1918)
    IP address, all within a few minutes.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4723
  - Zeek conn.log
  - Domain Controllers, Authentication Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: |
      DETECT stateful sequence for accounts with reversible encryption:
      [Event 4723: Password Change] -> [Event 4624: Interactive Logon (Type 2 or 10)]
      WHERE time between events < 5 minutes
      AND logon source IP is not in RFC1918 range
      ALERT for potential account takeover
- question: Is an account with reversible encryption enabled being used after an
    unusually long period of inactivity for that specific user?
  context: This question refines the concept of dormant account usage by focusing
    on a per-user baseline. Instead of a global dormancy threshold, this approach
    models the typical time between logons (using Event 4624) for each individual
    user. An alert is generated if an account with reversible encryption enabled
    authenticates after a period of inactivity that falls into the 99th percentile
    of its own typical logon cadence, indicating a significant deviation from that
    user's normal behavior.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4723
  - Zeek conn.log
  - Domain Controllers, Authentication Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: |
      FOR each user, model the distribution of time between logon events (Event 4624)
      IF a logon occurs for an account with reversible encryption
      AND the time since its last logon > 99th percentile for that user
      ALERT for potential dormant account abuse
- question: Can we detect the full attack chain of enabling reversible encryption,
    resetting the password, and logging on with a new host?
  context: This question aims to detect a high-confidence, multi-stage attack chain.
    By using a sequence analysis model (like an HMM or LSTM), it's possible to recognize
    the specific malicious pattern of: 1) Event 4738 (enabling reversible encryption),
    followed by 2) Event 4724 (an administrator resetting the account's password),
    and finally 3) Event 4624 (a successful logon from a host never before used by
    that account). Detecting this full sequence within a short time frame (e.g.,
    under 30 minutes) provides a very high-confidence alert.
  answer_sources:
  - Windows Event ID 4624
  - Windows Event ID 4723
  - Windows Event ID 4738
  - Windows Event ID 4724
  - Zeek conn.log
  - Domain Controllers, Authentication Servers, Internet Gateway
  range: last 90 days
  queries:
  - pseudocode: |
      USE sequence analysis model to detect the pattern:
      [Event 4738 on User A] -> [Event 4724 on User A] -> [Event 4624 by User A from new_host]
      WHERE time for sequence < 30 minutes
      ALERT for high-confidence account takeover
- question: Is the 'Default Domain Policy' or 'Default Domain Controllers Policy'
    being modified to enable reversible encryption domain-wide?
  context: An adversary with sufficient privileges may attempt to enable reversible
    encryption for all accounts by modifying a default Group Policy Object (GPO).
    This question focuses on monitoring for modification events (Event ID 5136) on
    the well-known GUIDs for the 'Default Domain Policy' and 'Default Domain Controllers
    Policy'. Any change should be cross-referenced by inspecting the policy files
    on the SYSVOL share to confirm if the reversible encryption setting was enabled.
  answer_sources:
  - Windows Event ID 5136
  - Zeek conn.log
  - Domain Controllers, SYSVOL Share, Administrative Workstations
  range: last 90 days
  queries:
  - pseudocode: |
      MONITOR for Event ID 5136 where Object GUID is for 'Default Domain Policy' or 'Default Domain Controllers Policy'
      IF modification is detected, inspect SYSVOL policy file
      IF reversible encryption setting is enabled
      ALERT on domain-wide policy change
- question: Is a GPO modification enabling reversible encryption being performed
    by an unusual user or from an unusual host?
  context: This question aims to identify malicious GPO changes by focusing on the
    origin of the change. By profiling the set of users and hosts that historically
    modify GPOs (based on Event ID 5136), any modification that enables reversible
    encryption and is initiated by a user or host seen for the first time performing
    this action should be considered suspicious and generate an alert.
  answer_sources:
  - Windows Event ID 5136
  - Zeek conn.log
  - Domain Controllers, SYSVOL Share, Administrative Workstations
  range: last 90 days
  queries:
  - pseudocode: |
      MAINTAIN baseline of users and hosts that modify GPOs
      FOR each GPO modification (Event 5136) enabling reversible encryption
      IF source user or host is not in the baseline
      ALERT on anomalous GPO modification
- question: Is an anomalous remote administration session immediately followed by
    a GPO modification to enable reversible encryption?
  context: This question links suspicious remote access to a malicious GPO change.
    By using a model to score the risk of remote administration sessions (based on
    source IP reputation, protocol, user, etc.), an analyst can identify potentially
    compromised sessions. If a session is scored as anomalous and is immediately

    followed by a GPO modification (Event 5136) that enables reversible encryption,
    it provides a strong, correlated signal of an external actor's activity.
  answer_sources:
  - Windows Event ID 5136
  - Zeek conn.log
  - Domain Controllers, SYSVOL Share, Administrative Workstations
  range: last 90 days
  queries:
  - pseudocode: |
      SCORE risk of all remote administration sessions
      IF session is scored 'anomalous'
      AND is followed within 5 minutes by Event 5136 enabling reversible encryption
      ALERT for likely external actor compromise
- question: Is a PowerShell script being used to enable reversible encryption on
    a user account?
  context: Adversaries frequently use PowerShell for its power and ability to blend
    in with administrative activity. This question focuses on detecting the use of
    PowerShell to enable reversible encryption by monitoring script block logs (Event
    ID 4104). A simple regex search for cmdlets like `Set-ADUser` or `Set-ADAccountControl`
    used with the `-AllowReversiblePasswordEncryption $true` parameter can effectively
    detect this activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Administrative Workstations, PowerShell Transcript Logs
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH PowerShell script block logs (Event 4104)
      FOR regex `/(Set-ADUser|Set-ADAccountControl).*-AllowReversiblePasswordEncryption\s+\$true/i`
      ALERT on any match
- question: Is an obfuscated PowerShell script being used to enable reversible encryption?
  context: To evade simple keyword-based detections, adversaries often obfuscate
    their scripts. This question addresses that evasion by analyzing the character
    entropy of PowerShell scripts (from Event 4104) executed on Domain Controllers.
    A script that both contains the string 'AllowReversiblePasswordEncryption' and
    has an unusually high entropy score (e.g., above the 98th percentile of a baseline)
    is very likely obfuscated and malicious.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Administrative Workstations, PowerShell Transcript Logs
  range: last 90 days
  queries:
  - pseudocode: |
      CALCULATE entropy for all PowerShell scripts (Event 4104) on DCs
      ESTABLISH baseline entropy score
      IF script contains 'AllowReversiblePasswordEncryption'
      AND script entropy > 98th percentile of baseline
      ALERT on likely obfuscated malicious script
- question: Can we classify PowerShell scripts that enable reversible encryption
    as malicious based on their features?
  context: This question proposes using a machine learning classifier to distinguish
    malicious PowerShell scripts from benign ones. By training a model on features
    such as Abstract Syntax Tree (AST) structures, cmdlet co-occurrence patterns,
    and the presence of encoding functions, the system can learn to identify malicious
    scripting techniques. A high-confidence 'malicious' classification on a script
    that also sets the reversible encryption parameter provides a high-fidelity alert.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Domain Controllers, Administrative Workstations, PowerShell Transcript Logs
  range: last 90 days
  queries:
  - pseudocode: |
      APPLY trained classifier to all PowerShell script blocks (Event 4104)
      IF script contains 'Set-ADUser' and 'AllowReversiblePasswordEncryption'
      AND model classification is 'malicious' with high confidence
      ALERT on high-fidelity evasive activity
- question: Was reversible encryption enabled by an unauthorized user account?
  context: A straightforward way to detect malicious changes is to ensure they are
    only made by authorized personnel. This question involves maintaining an explicit
    allow-list of 'AD Security Admin' accounts. Any event (detected via Windows Event
    ID 4738) where reversible encryption is enabled by an account NOT on this list
    should be treated as a high-priority security incident.
  answer_sources:
  - Windows Event ID 4738
  - Zeek conn.log
  - Domain Controllers, Administrative Workstation Event Logs
  range: last 90 days
  queries:
  - pseudocode: |
      MAINTAIN allow-list of authorized 'AD Security Admin' accounts
      ON Event ID 4738 enabling reversible encryption
      IF source_user is NOT in allow-list
      GENERATE high-priority alert
- question: Did an administrator enable reversible encryption at an unusual time?
  context: This question attempts to spot a compromised administrator account by
    looking for anomalous timing. By building a statistical baseline of the hours
    during which each administrator typically performs account modifications (Event
    4738), the system can flag actions that occur outside these norms. A modification
    enabling reversible encryption at 3 AM by an admin who only works 9-to-5 is a
    significant anomaly.
  answer_sources:
  - Windows Event ID 4738
  - Zeek conn.log
  - Domain Controllers, Administrative Workstation Event Logs
  range: last 90 days
  queries:
  - pseudocode: |
      MODEL baseline of activity hours for each admin for Event 4738
      IF Event 4738 enabling reversible encryption occurs
      AND event time is > 2 standard deviations from admin's mean activity time
      ALERT on anomalous administrative behavior
- question: Does the event of enabling reversible encryption represent a deviation
    from all known administrative behavior patterns?
  context: This question uses unsupervised machine learning to find novel or outlier
    behavior. By applying a clustering algorithm (like DBSCAN) to administrative
    actions, the system can group them into clusters of normal behavior based on
    features like the admin account, source host, and attributes modified. An event
    enabling reversible encryption (Event 4738) that does not fit into any cluster
    and is classified as a noise point (outlier) represents a significant deviation
    from all established patterns and requires investigation.
  answer_sources:
  - Windows Event ID 4738
  - Zeek conn.log
  - Domain Controllers, Administrative Workstation Event Logs
  range: last 90 days
  queries:
  - pseudocode: |
      APPLY clustering algorithm to all administrative actions (Event 4738)
      IF an event enabling reversible encryption is classified as an outlier/noise point
      ALERT on deviation from all known behavior patterns
- question: Is a known credential dumping tool being executed on a Domain Controller
    shortly after reversible encryption was enabled?
  context: This question looks for the 'payoff' action after the adversary has set
    up reversible encryption. By monitoring process creation logs (Event 4688), PowerShell
    logs (Event 4104), and antivirus alerts on Domain Controllers, an analyst can
    detect the execution of tools like Mimikatz or PowerSploit. An alert for such
    a tool, especially if it occurs after a recent change to enable reversible encryption,
    is a critical indicator of an active credential access attempt.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Windows Defender Event ID 1116
  - Domain Controllers, Administrative Workstations, Tier 0 Servers
  range: last 90 days
  queries:
  - pseudocode: |
      MONITOR process creation (4688) and PowerShell logs (4104) on DCs
      IF process hash matches known credential dumper
      OR command line contains 'Invoke-Mimikatz' or 'lsadump::dcsync'
      ALERT for credential dumping tool execution
- question: Are there any anomalous process trees on Domain Controllers that could
    indicate credential dumping?
  context: Adversaries may try to hide their tools by launching them from legitimate-looking
    processes. This question focuses on detecting this by profiling normal parent-child
    process relationships on Domain Controllers. An unusual process tree, such as
    `powershell.exe` being spawned by `spoolsv.exe` (the Print Spooler service), is
    a statistical anomaly that strongly suggests process injection or another evasive
    technique is being used to conduct credential dumping.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Windows Defender Event ID 1116
  - Domain Controllers, Administrative Workstations, Tier 0 Servers
  range: last 90 days
  queries:
  - pseudocode: |
      PROFILE parent-child process relationships on Domain Controllers
      IF `powershell.exe` is spawned by an unusual parent (e.g., `spoolsv.exe`, `w3wp.exe`)
      ALERT on anomalous process ancestry
- question: Can a user session be classified as 'credential dumping' after that
    user's account was modified for reversible encryption?
  context: This question links the setup action (enabling reversible encryption)
    with the credential access goal. It proposes using a machine learning classifier
    to analyze user session activity (e.g., sequences of API calls, network connections).
    If a user account has recently had reversible encryption enabled, and a subsequent
    session by that user is classified as 'credential dumping' (e.g., because it
    initiates a DCSync request), a critical alert should be triggered.
  answer_sources:
  - Windows Event ID 4688
  - Windows PowerShell Event ID 4104
  - Windows Defender Event ID 1116
  - Domain Controllers, Administrative Workstations, Tier 0 Servers
  range: last 90 days
  queries:
  - pseudocode: |
      APPLY classifier to user sessions to detect 'credential dumping' behavior
      IF a session is classified as 'credential dumping'
      AND the user account had reversible encryption enabled recently
      TRIGGER critical alert
- question: Has the 'Password stored using reversible encryption' flag been newly
    set for a user account, especially a privileged one?
  context: This provides a precise, low-level method for detecting the technique.
    By monitoring Windows Event ID 4738 and performing a bitwise AND operation on
    the 'User Account Control' field's old and new values with the mask '0x80', an
    analyst can confirm that the flag was newly added. If the flag was not set before
    (old value & 0x80 == 0) and is set now (new value & 0x80 == 128), it's a positive
    hit. The priority should be escalated if the target account is a member of a
    privileged group.
  answer_sources:
  - Windows Event ID 4738
  - Domain Controllers, Active Directory Audit Logs
  range: last 90 days
  queries:
  - pseudocode: |
      SEARCH Event ID 4738
      WHERE (old 'User Account Control' & 0x80) == 0
      AND (new 'User Account Control' & 0x80) == 128
      IF target user is privileged, escalate priority
      ALERT on flag being newly set
- question: Is there a sudden spike in the number of accounts being configured for
    reversible encryption?
  context: A single account modification might be an accident, but multiple modifications
    in a short time are likely malicious. This question focuses on detecting widespread
    activity by tracking the rate of 'userAccountControl' modifications that enable
    reversible encryption. By calculating a moving average and standard deviation,
    the system can alert when the rate suddenly spikes (e.g., exceeds 3 standard
    deviations above the mean), indicating a potential automated script or broad
    compromise.
  answer_sources:
  - Windows Event ID 4738
  - Domain Controllers, Active Directory Audit Logs
  range: last 90 days
  queries:
  - pseudocode: |
      CALCULATE moving average and standard deviation of Event 4738s enabling reversible encryption
      IF current rate > (moving average + 3 * standard deviation)
      ALERT on anomalous spike in activity
- question: Is a standard user account being modified in a way that is only typical
    for a service account or administrator?
  context: Adversaries often modify non-privileged accounts to avoid tripping alerts
    on high-value targets. This question uses peer group analysis to detect such
    anomalies. Users are grouped by role or department, and their typical activities
    are baselined. If a standard user account (e.g., from the 'Marketing' peer group)
    has reversible encryption enabled—a change usually only seen in the 'Legacy
    Service Accounts' peer group—it suggests the standard account has been hijacked
    for malicious purposes.
  answer_sources:
  - Windows Event ID 4738
  - Domain Controllers, Active Directory Audit Logs
  range: last 90 days
  queries:
  - pseudocode: |
      GROUP users into peer groups (e.g., by department)
      MODEL typical account changes for each peer group
      IF a user's account is modified (Event 4738)
      AND the change is anomalous for their peer group but typical for another (e.g., admin group)
      ALERT on cross-peer-group anomalous change
- question: Has an account been modified for reversible encryption, had its password
    changed, and then been used to access LSA secrets in a short time frame?
  context: This question identifies a critical attack chain for credential access.
    A stateful detection rule can be created to look for this specific sequence:
    1) Event ID 4738 (enabling reversible encryption), followed by 2) Event ID 4723
    (password change for the same user), and then 3) Event ID 4656/4663 (an attempt
    to access LSA secrets). If this entire sequence occurs within a short window
    (e.g., 10 minutes) and is initiated from the same source, it is a high-confidence
    indicator of a credential access attack.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4723
  - Windows Event ID 4656
  - Windows Event ID 4663
  - Domain Controllers, LSA Security Audit Logs
  range: last 90 days
  queries:
  - pseudocode: |
      DETECT stateful sequence:
      [Event 4738 for User A] -> [Event 4723 for User A] -> [Event 4656/4663 from same source]
      WHERE time for sequence < 10 minutes
      TRIGGER critical alert for credential access sequence
- question: Is a user or host with no history of accessing LSA secrets doing so
    after an account was modified for reversible encryption?
  context: This question focuses on identifying anomalous access to LSA secrets.
    The system should first establish a baseline for the frequency of LSA secret
    access events (4656/4663) per user and host. If an account modification enabling
    reversible encryption is followed by LSA access from a user or host that very
    rarely or never performs this action (i.e., is in the 99th percentile for rarity),
    it constitutes a high-confidence statistical anomaly that should be investigated.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4723
  - Windows Event ID 4656
  - Windows Event ID 4663
  - Domain Controllers, LSA Security Audit Logs
  range: last 90 days
  queries:
  - pseudocode: |
      BASELINE frequency of LSA secret access (Event 4656/4663) per user/host
      IF an LSA secret access event occurs
      AND it follows a recent reversible encryption change
      AND the source user/host is in the 99th percentile for rarity of this action
      ALERT for high-confidence anomaly
- question: Can we visualize the attack path from enabling reversible encryption
    to accessing LSA secrets using a graph?
  context: This question proposes using a graph-based correlation engine to model
    the full attack chain. In this model, entities like users and hosts are nodes,
    and actions (events) are edges connecting them. An analyst can define a path
    representing the attack sequence ('Enable Reversible Encryption' -> 'Change Password'
    -> 'Access LSA Secret'). The engine can then automatically trigger an alert when
    it detects that this specific path has been completed in the event stream within
    a predefined time window.
  answer_sources:
  - Windows Event ID 4738
  - Windows Event ID 4723
  - Windows Event ID 4656
  - Windows Event ID 4663
  - Domain Controllers, LSA Security Audit Logs
  range: last 90 days
  queries:
  - pseudocode: |
      DEFINE graph model with User, Host as nodes and Events as edges
      QUERY for paths matching: (User)-[EnablesReversibleEncryption]->(TargetUser)-[ChangesPassword]->(TargetUser)-[AccessesLSASecret]
      WHERE path completes within 30 minutes
      ALERT on completed attack path detection