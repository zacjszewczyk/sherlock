name: T1565: Data Manipulation
id: 9a7b3c2d-1e0f-4a5b-8c6d-7e8f9a0b1c2d
description: This playbook helps investigate whether an adversary has manipulated data integrity or availability on critical systems. It provides methods to detect data manipulation techniques such as the deployment of malicious tools (wipers, ransomware) identified by file hash; the abuse of native utilities (cipher.exe, fsutil.exe) to overwrite or corrupt data; unusual volumes of file modifications or deletions that exceed statistical baselines; suspicious sequences of file read, network exfiltration, and file write events; and high-volume file renaming operations indicative of ransomware.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
- question: Has a file been created whose hash matches a known malicious tool associated with data manipulation?
  context: This question aims to identify the initial deployment of known malicious payloads like wipers or ransomware. By hashing newly created files and comparing them against a threat intelligence database or a list of Indicators of Compromise (IOCs), security teams can detect the presence of recognized data manipulation tools at the earliest stage, allowing for a rapid response before widespread impact.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Sysmon Event ID 1
  - Critical file servers, database servers, domain controllers, application servers, and user workstations.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH file creation events (Sysmon 11). FOR EACH event, CALCULATE file hash. CHECK hash against threat intel/IOC database. ALERT on match.
- question: Have any files been written to monitored directories with unusually high entropy, suggesting encryption or obfuscation?
  context: This question seeks to detect potential ransomware or data obfuscation activity by analyzing the randomness (entropy) of file content. Legitimate files typically have predictable entropy levels. A significant deviation from the established baseline for a given file type can indicate that the file has been encrypted or packed, which is a common tactic used by data manipulation malware. This provides a behavioral indicator of compromise even for unknown malware.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Sysmon Event ID 1
  - Critical file servers, database servers, domain controllers, application servers, and user workstations.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH file write events (Win 4663) in critical directories. FOR EACH event, CALCULATE Shannon entropy of file content. COMPARE entropy to baseline for that file type. ALERT if entropy > (baseline + 3 * standard_deviation).
- question: Can machine learning models identify newly created files as malicious based on their characteristics?
  context: This question leverages machine learning to proactively identify malicious files that may not be caught by signature-based detection. By training a model on features like file extension, path, parent process, user context, and entropy, the system can learn to distinguish between benign and malicious file creation events. This allows for the detection of novel or polymorphic threats that evade traditional IOCs.
  answer_sources:
  - Sysmon Event ID 11
  - Windows Event ID 4663
  - Sysmon Event ID 1
  - Critical file servers, database servers, domain controllers, application servers, and user workstations.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: INPUT file creation event features (path, extension, process, user, entropy) into trained classification model. IF model_prediction_score > 0.9, ALERT as potentially malicious.
- question: Has a native utility like cipher.exe or fsutil.exe been executed with command-line arguments indicative of data wiping?
  context: This question focuses on detecting the misuse of legitimate system utilities for destructive purposes, a technique known as Living off the Land (LotL). Adversaries use tools like `cipher.exe` or `fsutil.exe` to overwrite data, making it unrecoverable. Monitoring for specific command-line patterns associated with these wiping functions provides a high-fidelity indicator of malicious intent.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek files.log
  - All enterprise endpoints and servers, particularly those hosting critical applications, databases, or file shares.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: SEARCH process creation events (Sysmon 1, Win 4688). MATCH command line against regex for 'cipher.exe /w:', 'fsutil.exe file setzerodata', etc. ALERT on match.
- question: Has a statistically rare or anomalous command line been executed, especially by a user or process not typically associated with it?
  context: This question aims to identify abnormal behavior by baselining command-line activity across the enterprise. A command that is common for an administrator might be highly unusual for a standard user or a service account. By identifying statistical outliers (e.g., a web server process running `cipher.exe`), security teams can uncover LotL attacks that might otherwise be missed.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek files.log
  - All enterprise endpoints and servers, particularly those hosting critical applications, databases, or file shares.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: FOR EACH process creation event, CALCULATE frequency of (process, user, arguments) combination over last 30 days. IF frequency is in bottom 5th percentile, ALERT for review.
- question: Can a machine learning model score the risk of a command line in real-time to detect malicious activity?
  context: This question proposes using a machine learning model to analyze the characteristics of command lines themselves, rather than just matching specific strings. By using features like command length, character types, and n-grams, the model can learn the subtle differences between benign and malicious commands. This provides a more robust and adaptable method for detecting novel or obfuscated malicious commands.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Zeek files.log
  - All enterprise endpoints and servers, particularly those hosting critical applications, databases, or file shares.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: INPUT command line features (length, char_count, n-grams, keywords) into trained ML model. IF risk_score > threshold, ALERT.
- question: Has any user or process exceeded a hard threshold for file deletions on a critical repository in a short time frame?
  context: This question provides a simple, direct method for detecting potential mass-deletion events, a hallmark of wiper malware or a rogue insider. By setting a fixed threshold (e.g., 500 deletions in 5 minutes), security teams can create a high-severity alert that indicates a significant and potentially destructive event is in progress, demanding immediate investigation.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4659
  - Sysmon Event ID 23
  - Sysmon Event ID 26
  - Sensitive data repositories, including network file shares, source code management systems, code repositories (e.g., Git servers), and SharePoint sites.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: COUNT file deletion events (Sysmon 23/26) per user/process on critical servers. IF count > 500 in a 5-minute window, ALERT.
- question: Has a user's file modification or deletion activity on a critical repository significantly deviated from their established baseline?
  context: This question aims to detect anomalous activity on an individual user basis by comparing their current behavior to their own historical patterns. This is more nuanced than a static threshold, as it can flag a user performing an unusual number of deletions, even if that number is below the hard limit. It helps identify subtle or slow-moving attacks that might otherwise go unnoticed.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4659
  - Sysmon Event ID 23
  - Sysmon Event ID 26
  - Sensitive data repositories, including network file shares, source code management systems, code repositories (e.g., Git servers), and SharePoint sites.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: MONITOR file modification/deletion events per user per hour. COMPARE current rate to user's moving average. IF current_rate > (moving_average + 3 * standard_deviation), ALERT.
- question: Is there a statistically significant spike in file modification or deletion events on critical servers when accounting for normal daily and weekly patterns?
  context: This question uses advanced time-series analysis to identify anomalies in the overall volume of file operations on critical servers. The model learns the natural 'rhythm' of the business, such as high activity during work hours and lulls on weekends. An alert is generated only when a spike in activity is truly anomalous relative to these learned seasonal patterns, reducing false positives from normal, busy periods.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4659
  - Sysmon Event ID 23
  - Sysmon Event ID 26
  - Sensitive data repositories, including network file shares, source code management systems, code repositories (e.g., Git servers), and SharePoint sites.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: INPUT time-series of file modification/deletion events into anomaly detection model (e.g., Seasonal-Hybrid ESD). ALERT on identified anomalous spikes.
- question: Has a process read a sensitive file, connected to an external network, and then written back to the same file in a short sequence?
  context: This question seeks to identify a specific, high-risk sequence of events that could indicate data tampering. An adversary might read a sensitive file, exfiltrate it for offline modification, and then overwrite the original with a tampered version. Correlating these events (read -> network out -> write) for the same process on the same file provides strong evidence of this attack pattern.
  answer_sources:
  - Windows Event ID 4663
  - Zeek conn.log
  - Sysmon Event ID 3
  - Sysmon Event ID 11
  - Endpoints of high-value users (e.g., developers, system administrators), servers hosting sensitive data, DMZ servers, and network egress points.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: CORRELATE events for same process GUID within 60s: (1) File Read on critical file, THEN (2) Network connection to non-local IP, THEN (3) File Write to same critical file. ALERT on sequence match.
- question: After accessing a sensitive file, has a process connected to a network destination that is unusual for that process?
  context: This question focuses on detecting anomalous network behavior following sensitive data access. By baselining the typical network destinations for processes that handle sensitive data, the system can flag connections to new or rare locations (e.g., a never-before-seen Autonomous System Number or country). This can indicate data exfiltration to an adversary-controlled server as part of a data tampering operation.
  answer_sources:
  - Windows Event ID 4663
  - Zeek conn.log
  - Sysmon Event ID 3
  - Sysmon Event ID 11
  - Endpoints of high-value users (e.g., developers, system administrators), servers hosting sensitive data, DMZ servers, and network egress points.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: AFTER a process reads a sensitive file, CAPTURE its network destination. CALCULATE frequency of destination (IP, ASN, country) for that process type. IF destination is statistically rare (e.g., bottom 1%), ALERT.
- question: Has a process executed a sequence of operations (file access, network connections, etc.) that is improbable according to its learned normal behavior?
  context: This question applies sequence analysis models to learn the 'grammar' of normal process behavior. Just as words form sentences, system events form sequences. A model like an HMM or LSTM can learn these normal sequences and identify when a process executes a series of actions that has a very low probability of occurring, indicating a potential deviation from benign activity and a possible attack.
  answer_sources:
  - Windows Event ID 4663
  - Zeek conn.log
  - Sysmon Event ID 3
  - Sysmon Event ID 11
  - Endpoints of high-value users (e.g., developers, system administrators), servers hosting sensitive data, DMZ servers, and network egress points.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: INPUT sequence of events (file read, network connect, file write, etc.) for a process into a trained sequence analysis model (HMM/LSTM). IF sequence probability is below a learned threshold, ALERT.
- question: Has a process rapidly renamed a large number of files to a known ransomware extension?
  context: This question targets a classic ransomware behavior: mass file renaming. Since a 'rename' is often logged as a 'delete' followed by a 'create', this rule looks for a high volume of these event pairs from a single process. Checking the new file extension against a list of known ransomware patterns (`.lockbit`, `.crypted`, etc.) makes this a very high-fidelity indicator of a ransomware attack in progress.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 23
  - Windows Event ID 4663
  - User workstations, file servers, and backup servers.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: COUNT file delete/create pairs from a single process. IF count > 100 in 1 minute AND new file extension matches known ransomware patterns, ALERT.
- question: Has the diversity of file extensions in a directory suddenly decreased, indicating a mass renaming event?
  context: This question uses information theory to detect mass file renaming. A normal directory has a mix of file extensions (high entropy). If a ransomware encrypts and renames all files to a single extension (e.g., `.encrypted`), the entropy of extensions will plummet. Monitoring for this sharp drop, combined with a high rate of file operations, can detect ransomware even if the new extension is unknown.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 23
  - Windows Event ID 4663
  - User workstations, file servers, and backup servers.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: PERIODICALLY calculate Shannon entropy of file extensions in monitored directories. IF entropy drops sharply AND file create/delete rate is high, ALERT.
- question: Does a process exhibit file system activity patterns that cluster as an anomaly compared to normal user and system behaviors?
  context: This question uses unsupervised machine learning to find anomalous process behavior. By clustering processes based on their file system activity (rate of creations, deletions, path patterns), the algorithm can group normal behaviors together. A ransomware process, with its unique pattern of high-speed, widespread file modifications, would not fit into any existing cluster and would be flagged as an anomaly or 'noise', providing a powerful detection method for unknown threats.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 23
  - Windows Event ID 4663
  - User workstations, file servers, and backup servers.
  range: last 90 days
  queries:
  - search_technology: pseudocode
    query: INPUT features of process file activity (creation rate, deletion rate, path patterns) into a clustering algorithm (e.g., DBSCAN). IF a process is identified as a noise point or an anomalous cluster, ALERT.