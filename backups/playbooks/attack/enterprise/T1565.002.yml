name: T1565.002: Transmitted Data Manipulation
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: Investigates whether an adversary has manipulated data in transit to compromise its integrity. This involves looking for signs of man-in-the-middle (MitM) attacks, such as connections to malicious proxies from critical assets, anomalous SSL/TLS certificates, unauthorized process memory access preceding network connections, significant deviations in expected data transfer sizes, and spikes in application-level data integrity errors.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Have any critical internal assets connected to an external IP address known to be a malicious proxy or Man-in-the-Middle (MitM) server?
  context: This question seeks to identify high-confidence indicators of a MitM attack. Critical assets like payment processors or database servers should not typically communicate directly with unknown external entities. A connection to a known malicious IP from such an asset is a strong signal that traffic is being intercepted or redirected, potentially to steal or alter data.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Internet gateway
  - Core network switches monitoring traffic from critical assets
  - DNS servers
  - DMZ firewalls
  - Threat Intelligence Feeds
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Zeek conn.log
      WHERE source_ip IN critical_asset_subnets
      JOIN destination_ip WITH threat_intel_feed_mitm_ips
      RETURN source_ip, destination_ip, timestamp
- question: Has a critical internal asset connected to a statistically rare or anomalous external destination?
  context: This question aims to detect potential MitM attacks by identifying deviations from normal communication patterns. Even if a destination IP isn't on a threat intelligence list, a connection to a destination that the asset has rarely or never contacted before can indicate malicious redirection. This approach helps find novel or unknown malicious infrastructure.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Internet gateway
  - Core network switches monitoring traffic from critical assets
  - DNS servers
  - DMZ firewalls
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Baseline (run over 30 days)
      CALCULATE frequency of each destination_ip per source_ip from Zeek conn.log
      STORE baseline_frequencies
      
      // Real-time check
      FOR each new connection from critical_asset_source_ip:
        IF connection.destination_ip_frequency < 5th_percentile of baseline_frequencies:
          ALERT
- question: Does a network connection from a critical asset exhibit a combination of features that a machine learning model identifies as high-risk for malicious redirection?
  context: This question uses a machine learning model to perform a holistic risk assessment of network connections. The model can learn complex patterns that are indicative of malicious activity by considering multiple factors simultaneously, such as connection duration, data volume, and destination IP reputation. This can uncover sophisticated attacks that might evade simpler symbolic or statistical checks.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Internet gateway
  - Core network switches monitoring traffic from critical assets
  - DNS servers
  - DMZ firewalls
  - Threat Intelligence Feeds
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training (offline)
      TRAIN classification_model on labeled Zeek conn.log data with IP context features
      
      // Real-time scoring
      FOR each new connection:
        EXTRACT features (duration, service, bytes, IP context)
        CALCULATE risk_score = classification_model.predict(features)
        IF risk_score > threshold:
          ALERT
- question: Has a client connected to a critical internal service using an SSL/TLS session that shows signs of interception, such as a mismatched certificate issuer or a fingerprint associated with a known MitM tool?
  context: This question looks for direct evidence of SSL/TLS interception. A valid connection to a critical internal service should use a certificate issued by a trusted internal Certificate Authority (CA). If the certificate is issued by an unknown CA, is self-signed, or if the TLS client handshake (JA3/JA3S) matches a known interception tool like Burp Suite, it strongly suggests a MitM attack is in progress.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek weird.log
  - Application servers
  - Load balancers
  - VPN concentrators
  - Web proxies
  - Network segments between clients and critical services
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Zeek ssl.log OR Zeek x509.log
      WHERE destination_ip IN critical_service_ips
      AND ( (ja3_hash IN known_mitm_ja3_hashes) OR (ja3s_hash IN known_mitm_ja3s_hashes) OR (certificate_issuer NOT IN approved_ca_list) )
      RETURN source_ip, destination_ip, ja3_hash, certificate_issuer, timestamp
- question: Has a connection to a critical service presented a statistically rare or previously unseen SSL/TLS certificate issuer and subject combination?
  context: This question aims to find anomalous certificates that may not be caught by a static allowlist. By baselining the normal certificate `issuer` and `subject` pairs for each service, we can detect when an attacker introduces a new, unauthorized certificate to perform a MitM attack. This is effective against attackers who use custom or dynamically generated certificates.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek weird.log
  - Application servers
  - Load balancers
  - VPN concentrators
  - Web proxies
  - Network segments between clients and critical services
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Baseline
      CALCULATE frequency of (issuer, subject) pairs per server_ip from Zeek x509.log
      STORE baseline_cert_frequencies
      
      // Real-time check
      FOR each new SSL connection to a critical_service_ip:
        IF (connection.issuer, connection.subject) pair is new or has frequency < 1st_percentile:
          ALERT
- question: Are there any SSL/TLS sessions to critical services that are outliers when compared to normal sessions, based on a cluster analysis of their technical attributes?
  context: This question uses unsupervised machine learning to find anomalous SSL/TLS sessions without prior knowledge of what is 'bad'. By grouping sessions based on features like cipher suite, TLS version, and certificate validity, any session that does not fit into a common cluster (i.e., is an outlier) is flagged for investigation. This can detect novel MitM techniques that use unusual TLS configurations.
  answer_sources:
  - Zeek ssl.log
  - Zeek x509.log
  - Zeek weird.log
  - Application servers
  - Load balancers
  - VPN concentrators
  - Web proxies
  - Network segments between clients and critical services
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Application
      FOR all SSL sessions to critical services:
        VECTORIZE features (cipher, version, cert_validity, etc.)
      APPLY DBSCAN clustering algorithm to all session vectors
      INVESTIGATE all sessions classified as noise/outliers
- question: Has an unauthorized process accessed the memory of a critical application with permissions to write or create a thread, immediately before that application made a network connection?
  context: This question searches for a specific attack pattern known as process injection for data manipulation. An adversary might inject code into a trusted application (e.g., a database client) to manipulate its behavior, such as altering data before it's sent over the network. Detecting an unapproved process accessing a critical application's memory, followed quickly by network activity from that application, is a strong indicator of this technique.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 8
  - Sysmon Event ID 10
  - Windows Event ID 4656
  - Critical application servers (e.g., financial, ERP)
  - Database servers
  - Developer workstations
  - User workstations handling sensitive data (e.g., finance, HR)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Sysmon Event ID 10
      WHERE SourceImage NOT IN allowlist
      AND TargetImage IN critical_app_list
      AND (GrantedAccess includes 'PROCESS_VM_WRITE' OR 'PROCESS_CREATE_THREAD')
      CORRELATE with network connection from TargetImage within 5 seconds
      ALERT on correlation
- question: Has a statistically rare or previously unseen process memory access event occurred on a host?
  context: This question aims to detect anomalous process interactions. Normal system and application behavior involves a predictable set of processes accessing each other for legitimate reasons. By baselining these interactions (which process accesses which, and with what permissions), we can identify when a new, unexpected interaction occurs. This can reveal novel malware or living-off-the-land techniques used for data manipulation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 8
  - Sysmon Event ID 10
  - Windows Event ID 4656
  - Critical application servers (e.g., financial, ERP)
  - Database servers
  - Developer workstations
  - User workstations handling sensitive data (e.g., finance, HR)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Baseline
      CALCULATE frequency of (SourceImage, TargetImage, GrantedAccess) triplets per host from Sysmon Event ID 10
      STORE baseline_process_access_frequencies
      
      // Real-time check
      FOR each new Sysmon Event ID 10:
        IF the (SourceImage, TargetImage, GrantedAccess) triplet is new or has a frequency < 1st_percentile for that host:
          ALERT
- question: Has a user's session activity deviated from their normal, learned sequence of actions in a way that suggests malicious process interaction?
  context: This question uses a sophisticated behavioral modeling approach to detect anomalies. It learns the typical sequence of actions for each user (e.g., login, run app A, access file B, etc.). If a user's activity suddenly includes an unusual sequence, such as accessing a critical process's memory after running an unfamiliar tool, the model will flag it as anomalous. This is powerful for detecting insider threats or compromised accounts where individual actions might seem benign but the overall sequence is suspicious.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 8
  - Sysmon Event ID 10
  - Windows Event ID 4656
  - Critical application servers (e.g., financial, ERP)
  - Database servers
  - Developer workstations
  - User workstations handling sensitive data (e.g., finance, HR)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training (offline)
      FOR each user:
        CREATE sequences of events (Logon, Process Create, Process Access, etc.)
        TRAIN LSTM autoencoder model on these sequences
      
      // Real-time analysis
      FOR each new event in a user session:
        UPDATE the user's current event sequence
        CALCULATE reconstruction_error = model.evaluate(sequence)
        IF reconstruction_error > user_specific_threshold:
          ALERT
- question: Has a TCP session involving a critical server experienced a 'content gap', suggesting that TCP packets were dropped or injected in transit?
  context: This question looks for a low-level network artifact that can indicate data manipulation. A 'content_gap' logged by Zeek means the data seen at the application layer doesn't match what was expected based on TCP sequence numbers. This can be caused by a MitM device injecting or dropping packets to alter the data stream, providing a direct, though sometimes noisy, indicator of tampering.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek files.log
  - Zeek weird.log
  - Data center network fabric
  - Connections between application and database tiers
  - Primary and backup data replication links
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH Zeek weird.log
      WHERE name == 'content_gap'
      AND (source_ip IN critical_servers OR destination_ip IN critical_servers)
      ALERT on any match
- question: Has a scheduled, recurring data transfer between critical systems shown a statistically significant deviation in the amount of data transferred?
  context: This question focuses on the volumetric properties of predictable data flows, like database replication or nightly backups. These transfers should be very consistent in size. A sudden, significant increase or decrease in data volume (e.g., more than 3 standard deviations from the average) is highly anomalous and could indicate data being illegitimately added, removed, or replaced in transit.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek files.log
  - Zeek weird.log
  - Data center network fabric
  - Connections between application and database tiers
  - Primary and backup data replication links
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Baseline
      FOR each critical_data_flow (identified by src_ip, dst_ip, dst_port):
        CALCULATE mean and std_dev of (orig_bytes + resp_bytes) from Zeek conn.log
      STORE baseline_flow_stats
      
      // Real-time check
      FOR each new connection matching a critical_data_flow:
        IF connection_total_bytes > (mean + 3 * std_dev):
          ALERT
- question: Has the volume of a high-value data flow deviated from the pattern predicted by a time series forecasting model?
  context: This question applies advanced time series analysis to detect subtle anomalies in data transfer volumes that a simple standard deviation check might miss. A model like SARIMA or Prophet can learn complex seasonal patterns (e.g., hourly spikes, nightly lulls) and predict a confidence band for future traffic. Any data volume that falls outside this band is a high-fidelity anomaly, potentially indicating data manipulation.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Zeek files.log
  - Zeek weird.log
  - Data center network fabric
  - Connections between application and database tiers
  - Primary and backup data replication links
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training (offline)
      AGGREGATE total bytes per minute for a critical data flow
      TRAIN time_series_model (e.g., SARIMA) on historical data
      
      // Real-time analysis
      FOR each new minute's aggregated byte count:
        PREDICT confidence_interval using time_series_model
        IF actual_byte_count is outside confidence_interval:
          ALERT
- question: Are there any explicit data integrity, checksum, or hash mismatch errors being reported in application or database logs?
  context: This question looks for the direct consequences of data manipulation. When data is altered in transit, the receiving application will often fail to process it correctly, generating specific errors. Searching for keywords like 'Checksum Mismatch' or 'Transaction Rollback' in logs provides a very strong, high-confidence signal that data integrity has been compromised somewhere between the source and destination.
  answer_sources:
  - Application Logs
  - Database Logs
  - Zeek files.log
  - Windows Event Logs
  - File servers
  - Database servers logging transaction failures
  - Application servers processing data uploads
  - Systems participating in data replication (e.g., Domain Controllers, backup servers)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH application_logs, database_logs, windows_event_logs
      WHERE log_message CONTAINS ('Data Integrity Error' OR 'Transaction Rollback' OR 'Checksum validation failed' OR 'CRC error' OR 'Hash mismatch')
      ALERT on any match
- question: Has any single host experienced a statistically significant spike in the number of data integrity errors?
  context: This question aims to detect a sudden increase in data integrity problems on a specific system. A low, steady rate of errors might be normal, but a sharp spike (e.g., more than 4 standard deviations above the recent average) indicates a new or worsening problem. This can help pinpoint which systems are being targeted or affected by a data manipulation attack.
  answer_sources:
  - Application Logs
  - Database Logs
  - Zeek files.log
  - Windows Event Logs
  - File servers
  - Database servers logging transaction failures
  - Application servers processing data uploads
  - Systems participating in data replication (e.g., Domain Controllers, backup servers)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Baseline (continuously updated)
      FOR each host:
        CALCULATE moving average and std_dev of integrity_error_count per hour over last 7 days
      
      // Real-time check
      FOR each host's current hour:
        IF current_integrity_error_count > (moving_average + 4 * std_dev):
          ALERT
- question: Has the overall enterprise-wide rate of data integrity errors shown an anomalous pattern when analyzed by an unsupervised machine learning model?
  context: This question seeks to detect widespread, low-and-slow attacks that might not trigger alerts on a per-host basis. An attacker could be manipulating data across many systems in a way that only slightly increases the error rate on each one. By aggregating all errors enterprise-wide and using an algorithm like Isolation Forest, we can detect subtle, coordinated increases that would be missed by simple thresholding, revealing the full scope of the attack.
  answer_sources:
  - Application Logs
  - Database Logs
  - Zeek files.log
  - Windows Event Logs
  - File servers
  - Database servers logging transaction failures
  - Application servers processing data uploads
  - Systems participating in data replication (e.g., Domain Controllers, backup servers)
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Model Training/Application
      AGGREGATE total integrity_error_count across enterprise per 5-minute interval
      APPLY Isolation Forest or LOF algorithm to the resulting time series
      ALERT on any point flagged as an anomaly