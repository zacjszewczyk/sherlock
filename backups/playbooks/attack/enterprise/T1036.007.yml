name: T1036.007: Double File Extension
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook focuses on detecting adversaries attempting to evade defenses by masquerading executable files using double file extensions (e.g., 'report.pdf.exe'). Detections are based on monitoring file transfers, creations, and process executions involving such files. Investigative methods include matching file attributes against threat intelligence, analyzing execution from high-risk directories (e.g., Downloads, Temp), observing anomalous network transfers, and correlating file execution with subsequent suspicious activities like persistence or C2 communications.
type: technique
related:
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a file with a double extension been identified that matches a known malicious hash or a high-confidence threat intelligence signature?
    context: This question aims to detect known threats masquerading as benign files. Matching against curated threat intelligence feeds for file hashes and filenames provides a high-fidelity method for identifying malicious executables disguised with double extensions, allowing for immediate response to confirmed threats.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Network perimeter firewalls and web proxies
      - Mail servers
      - All enterprise workstations and servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH file_events AND process_events | WHERE file_hash IN (threat_intel_hashes) OR file_name IN (threat_intel_filenames) | RETURN host, file_name, file_hash, timestamp
  - question: If a potentially malicious file with a double extension is found, did it originate from an uncommon source IP or parent process?
    context: This question helps prioritize alerts by adding context about the origin of the file or process. A malicious file originating from a source IP address or parent process that rarely appears in the environment is more suspicious, as it deviates from normal activity and could indicate a targeted attack or a newly compromised system.
    answer_sources:
      - Zeek files.log
      - Zeek conn.log
      - Windows Event ID 1 (Sysmon)
      - Network perimeter firewalls and web proxies
      - Mail servers
      - All enterprise workstations and servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH file_match_events | LOOKUP historical_prevalence(source_ip) AND historical_prevalence(parent_process) | WHERE source_ip_prevalence < 5th_percentile OR parent_process_prevalence < 5th_percentile | RETURN alert_priority="high", event_details
  - question: Does a file with a double extension, which does not match a known IOC, exhibit characteristics (like high entropy, unusual size, or parent process) that a machine learning model classifies as likely malicious?
    context: This question addresses the detection of novel or unknown threats that use double extensions. By using a machine learning model to score files based on a collection of features, analysts can identify suspicious files that don't match existing signatures but exhibit a pattern of malicious attributes, enabling proactive threat hunting.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 1 (Sysmon)
      - Network perimeter firewalls and web proxies
      - Mail servers
      - All enterprise workstations and servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR_EACH file_event with double_extension | EXTRACT features (entropy, size, mime_type, parent_process) | SCORE with ML_model | WHERE score > 0.85 | RETURN event_details, score
  - question: Has a file with a benign-appearing first extension and an executable second extension been created or executed by a high-risk parent process like a browser, email client, or archive utility?
    context: This question focuses on a common attack vector where users are tricked into downloading and executing malicious files from the internet or email attachments. By specifically monitoring for double-extension files created by these applications, security teams can detect potential user-initiated compromises at the point of entry.
    answer_sources:
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 1 (Sysmon)
      - User profile directories (e.g., Downloads, Temp, AppData)
      - Application cache folders
      - Removable media drives
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH file_create OR process_create | WHERE file_name MATCHES_REGEX '.*\\.(txt|pdf|...)\\.(exe|scr|...)$' AND parent_process IN ('chrome.exe', 'outlook.exe', 'winzip.exe', ...) | RETURN host, user, parent_process, file_name
  - question: Is a high-risk parent process (like a browser) suddenly creating files with unusual or statistically rare double-extension patterns?
    context: This question aims to detect anomalies in file creation behavior that could signal a new attack campaign. A sudden increase in the variety (entropy) of file extensions or the appearance of an extension pattern that deviates significantly from the established baseline for a given application can indicate that it is being used to drop malware.
    answer_sources:
      - Windows Event ID 11 (Sysmon)
      - User profile directories (e.g., Downloads, Temp, AppData)
      - Application cache folders
      - Removable media drives
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH file_create_events | GROUP_BY parent_process | CALCULATE extension_entropy and extension_frequency_stddev | WHERE current_entropy > baseline_entropy OR current_frequency > 3 * stddev | RETURN parent_process, anomaly_details
  - question: Has there been an anomalous spike in the rate of files with executable double extensions being created by high-risk applications, suggesting a large-scale attack?
    context: This question helps to identify widespread campaigns, such as mass phishing, by monitoring the volume of suspicious file creations over time. A time-series anomaly detection model can distinguish between normal fluctuations and a significant, coordinated increase in activity that warrants immediate investigation as a potential large-scale incident.
    answer_sources:
      - Windows Event ID 11 (Sysmon)
      - User profile directories (e.g., Downloads, Temp, AppData)
      - Application cache folders
      - Removable media drives
    range: last 90 days
    queries:
      - language: pseudocode
        query: AGGREGATE count(double_extension_files) per minute by parent_process | APPLY time_series_model | WHERE actual_count > forecast_upper_bound | RETURN timestamp, parent_process, actual_count, forecasted_count
  - question: Has a process with a double-extension filename been executed from a high-risk directory (e.g., Downloads, Temp) by an unusual parent process?
    context: This question targets the common tactic of dropping and executing malware from transient or user-writable locations. Executing from directories like Downloads or Temp is suspicious, and this suspicion is amplified if the process is spawned by something other than the standard user shell (`explorer.exe`) or command line (`cmd.exe`), which could indicate programmatic execution by malware.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - User workstations
      - Terminal servers
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH process_create | WHERE file_name MATCHES_REGEX 'double_extension' AND file_path IN ('C:\\Users\\*\\Downloads\\*', 'C:\\Windows\\Temp\\*', ...) AND parent_process NOT IN ('explorer.exe', 'cmd.exe') | RETURN host, user, parent_process, process_name
  - question: Is a user executing a file with a double extension from a directory that is unusual for that specific user's normal activity?
    context: This question helps detect anomalous user behavior by comparing current activity against a personalized baseline. An employee typically works from a predictable set of directories. The execution of a suspicious file type from a location where the user rarely or never executes programs is a strong indicator of a potential compromise or insider threat.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations
      - Terminal servers
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR_EACH double_extension_process_event | GET user_profile.execution_directories | WHERE event.directory NOT IN user_profile.execution_directories | FLAG as anomalous_user_behavior | RETURN event_details
  - question: Does the execution of a double-extension file exhibit a combination of anomalous features (e.g., parent process, path depth, arguments) when compared to a baseline of normal process executions?
    context: This question uses an unsupervised machine learning model (Isolation Forest) to find 'needles in a haystack.' The model learns what normal process creation events look like and can then identify outliers. A double-extension process that is flagged as an anomaly by this model is highly suspicious because its collective attributes (not just one) deviate significantly from the norm.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - User workstations
      - Terminal servers
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR_EACH double_extension_process_event | EXTRACT features (parent, path_depth, args, user) | SCORE with IsolationForest_model | WHERE anomaly_score is high | RETURN event_details, score
  - question: Has a file with a double-extension pattern been transferred over the network (HTTP, SMTP, FTP), and does the associated network metadata (e.g., User-Agent, Referer, mail headers) show signs of suspicious activity?
    context: This question aims to detect the delivery of malicious double-extension files over the network. By inspecting the context of the transfer—such as a strange User-Agent, a missing Referer header in an HTTP download, or suspicious email headers—analysts can identify potential phishing or drive-by download attacks at the network level.
    answer_sources:
      - Zeek files.log
      - Zeek http.log
      - Zeek ftp.log
      - Zeek smtp.log
      - Network egress points
      - Web proxy servers
      - Mail Transfer Agents (MTAs)
      - Internal network sensors
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH zeek_files_log | WHERE filename MATCHES_REGEX 'double_extension' | CORRELATE with http_log, smtp_log | WHERE http.user_agent is anomalous OR http.referer is null OR smtp.headers indicate phishing | RETURN event_details
  - question: Is there a statistical surge in the network transfer of a specific type of double-extension file (e.g., 'invoice.pdf.exe'), indicating a new or resurgent malware campaign?
    context: This question helps detect malware campaigns by monitoring trends in file transfers. A sudden increase in the frequency of a particular benign-executable extension pair (like '.pdf.exe') across the network, exceeding its historical baseline, is a strong indicator of a coordinated attack using that specific lure.
    answer_sources:
      - Zeek files.log
      - Network egress points
      - Web proxy servers
      - Mail Transfer Agents (MTAs)
      - Internal network sensors
    range: last 90 days
    queries:
      - language: pseudocode
        query: AGGREGATE count(filename_pattern) from files.log daily | CALCULATE 7day_moving_average and std_dev | WHERE daily_count > (moving_average + 3 * std_dev) | ALERT on trend_anomaly | RETURN filename_pattern, count
  - question: Can network traffic involving double-extension files be grouped into distinct, anomalous clusters based on features like source/destination IPs, User-Agent, and file type?
    context: This question uses clustering analysis to find coordinated malicious activity that might otherwise be missed. By grouping network events based on multiple features, the DBSCAN algorithm can identify small, dense clusters of activity (e.g., multiple hosts downloading the same double-extension file from a new IP) that are separate from the large clusters of normal traffic, revealing potential C2 channels or malware distribution points.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Network egress points
      - Web proxy servers
      - Mail Transfer Agents (MTAs)
      - Internal network sensors
    range: last 90 days
    queries:
      - language: pseudocode
        query: EXTRACT features (src_ip, dst_ip, user_agent, mime_type, filename) from Zeek logs | RUN DBSCAN clustering | IDENTIFY outlier_clusters containing double_extension_files | INVESTIGATE clusters | RETURN cluster_details
  - question: After a process with a double extension is executed, does it perform suspicious follow-on actions like establishing persistence, modifying the system, or making external network connections?
    context: This question links the initial execution of a suspicious file to subsequent malicious behavior, increasing confidence that the event is a true positive. A file with a double extension is suspicious, but if it immediately attempts to add a registry run key, drop files in system directories, or call out to a new IP address, it is almost certainly malware. This chained detection logic creates high-fidelity alerts.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - Windows Event ID 22 (Sysmon)
      - Zeek conn.log
      - Zeek dns.log
      - Domain Controllers
      - Endpoint devices
      - DNS Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: TRIGGER on process_create with double_extension | WITHIN 5 minutes, SEARCH for child_process_events (reg.exe, schtasks.exe) OR registry_modification (autorun_keys) OR file_creation (System32) OR network_connection (new_external_ip) | IF found, CREATE critical_incident | RETURN initial_event, follow_on_event
  - question: Does a process originating from a double-extension file exhibit behavioral anomalies such as high-entropy DNS queries (DGA), an unusual number of child processes, or connections to rare network ports?
    context: This question focuses on identifying malicious behavior by profiling a process's actions after it starts. Indicators like Domain Generation Algorithms (DGA), excessive process spawning, or communication over non-standard ports are common traits of malware. Scoring a process based on these behavioral characteristics helps to quantify its risk.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 22 (Sysmon)
      - Zeek conn.log
      - Zeek dns.log
      - Domain Controllers
      - Endpoint devices
      - DNS Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR process from double_extension_file | PROFILE behavior: dns_entropy, child_process_count, port_rarity | CALCULATE risk_score based on anomalies | IF risk_score > threshold, ALERT | RETURN process_details, risk_score, anomalies
  - question: Does the sequence of actions taken by a process from a double-extension file deviate from the learned sequences of benign application behavior?
    context: This question uses advanced machine learning to understand the 'story' of a process's execution. An LSTM autoencoder learns the typical grammar or syntax of benign process behavior (e.g., 'open file -> read file -> close file'). When a process executes a sequence that the model cannot easily reconstruct (e.g., 'process create -> network connect -> registry write -> spawn cmd.exe'), it signals a high probability of malicious intent because the narrative of its actions is abnormal.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 13 (Sysmon)
      - Windows Event ID 22 (Sysmon)
      - Zeek conn.log
      - Domain Controllers
      - Endpoint devices
      - DNS Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR process from double_extension_file | CAPTURE event_sequence (process_create, file_write, net_connect, reg_set) | FEED sequence to LSTM_autoencoder_model | IF reconstruction_error is high, FLAG as malicious | RETURN process_details, event_sequence, error_score