name: T1584.007: Serverless
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook focuses on detecting if an adversary is leveraging compromised or purpose-built serverless infrastructure for command and control (C2) or data exfiltration. Detection strategies include matching network traffic against threat intelligence of malicious serverless domains, analyzing traffic for signatures of C2 frameworks, identifying beaconing behavior through statistical analysis of connection timing and data volume, correlating network events with anomalous host-level process activity, and detecting sequences of behavior indicative of post-C2 internal reconnaissance or lateral movement.
type: technique
related:
- TA0042: Resource Development
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
- question: Are any internal hosts communicating with known malicious serverless domains or URLs based on threat intelligence feeds?
  context: This question aims to perform a direct match against known indicators of compromise (IOCs). By comparing outbound DNS queries and HTTP requests against a curated list of malicious serverless domains and URLs, analysts can quickly identify hosts that are communicating with adversary-controlled infrastructure. This is often the most straightforward and highest-fidelity method for detecting known threats.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Internet egress points (e.g., firewalls, web proxies)
  - Enterprise DNS resolvers
  - SIEM or log aggregation platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN (dns_logs.query, http_logs.host) WITH threat_intel_serverless_domains
      WHERE match_is_found
      RETURN source_ip, matched_domain, timestamp
- question: Are any hosts showing unusually high request frequencies to known serverless domains, suggesting automated or excessive activity?
  context: Adversaries often use automated scripts for C2 or exfiltration, leading to a higher volume of requests than typical user activity. This question uses frequency analysis to find statistical outliers. By calculating the request rate per host to serverless domains and flagging those in the top percentile, analysts can uncover potentially compromised systems that are not yet on an IOC list.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Internet egress points (e.g., firewalls, web proxies)
  - Enterprise DNS resolvers
  - SIEM or log aggregation platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SELECT source_ip, COUNT(*) FROM network_logs
      WHERE destination_domain MATCHES serverless_pattern
      GROUP BY source_ip, time_window(24h)
      IDENTIFY hosts in 99th percentile of counts
- question: Can we detect algorithmically generated domains (DGAs) within traffic to serverless platforms that are not yet on threat intelligence feeds?
  context: To evade detection by domain blocklists, adversaries use Domain Generation Algorithms (DGAs) to create a large number of C2 domains. This question involves applying a machine learning model to analyze the linguistic and structural properties of domain names. The model can identify and score domains that appear randomly generated, providing a proactive way to find new C2 infrastructure.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - Zeek http.log
  - Internet egress points (e.g., firewalls, web proxies)
  - Enterprise DNS resolvers
  - SIEM or log aggregation platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each domain in dns_logs to serverless_platform:
        EXTRACT features (e.g., entropy, n-grams)
        PREDICT is_dga_score using trained_model
        RETURN domain, source_ip, score WHERE score > threshold
- question: Are any outbound HTTP requests to serverless domains using URI paths, query parameters, or User-Agents that match signatures of known C2 frameworks?
  context: C2 frameworks like Sliver and Covenant often have unique patterns in their HTTP traffic when using redirectors. This question applies regular expressions to inspect the URI and User-Agent of traffic to serverless domains. It also cross-references JA3/JA3S hashes to identify specific malicious client/server TLS implementations, providing a high-confidence way to detect specific C2 toolkits.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Internet egress points (e.g., firewalls, web proxies)
  - TLS/SSL inspection points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FROM http_logs TO serverless_domains:
        APPLY regex_rules on URI, User-Agent
      FROM ssl_logs:
        MATCH JA3/JA3S against known_bad_hashes
      ALERT on any match
- question: Is there evidence of encoded or randomized data in the URI paths or query strings of traffic to serverless domains, indicated by unusually high entropy?
  context: C2 communications often involve sending encoded or encrypted data within URL parameters to avoid inspection. This randomness results in high Shannon entropy. This question establishes a baseline for normal entropy in requests to serverless domains and flags requests that are statistical outliers (e.g., more than 3 standard deviations from the mean), which may indicate C2 activity.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Internet egress points (e.g., firewalls, web proxies)
  - TLS/SSL inspection points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each request TO serverless_domains:
        CALCULATE entropy(URI_path, query_string)
        IF entropy > (baseline_mean + 3 * baseline_std_dev), ALERT
- question: Can a machine learning model classify HTTP requests to serverless domains as malicious or benign in real-time?
  context: This question proposes a proactive detection method using a supervised machine learning model. By training a classifier on features like URI length, parameter count, and User-Agent entropy, the system can learn the subtle differences between legitimate and malicious traffic. This allows for the scoring and detection of novel C2 communications that do not match existing signatures or IOCs.
  answer_sources:
  - Zeek http.log
  - Zeek ssl.log
  - Internet egress points (e.g., firewalls, web proxies)
  - TLS/SSL inspection points
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new_request TO serverless_domains:
        EXTRACT features (URI_length, param_count, etc.)
        PREDICT is_malicious_score using trained_model
        ALERT if score > threshold
- question: Are there any source-destination pairs involving a serverless domain with a high connection count and a narrow, consistent payload size, suggesting simple beaconing?
  context: Simple C2 implants may beacon out with high frequency and consistent, small payload sizes. This question uses a basic threshold rule to detect this behavior. By looking for a large number of connections within a short time frame where the data sent is always within a small, non-zero range, analysts can identify potential low-sophistication malware.
  answer_sources:
  - Zeek conn.log
  - Internet egress points (e.g., firewalls, web proxies)
  - Network tap or SPAN port monitoring Zeek sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each src_ip, dest_domain (serverless):
        IF COUNT(connections) > 100 in 1_hour AND payload_size is between 50-250 bytes for all, ALERT
- question: Can we identify robotic, non-human beaconing to serverless domains by analyzing the timing (jitter) and payload size variation of connections?
  context: Automated C2 beacons communicate at regular intervals, resulting in very low variation (jitter) in the time between connections. This question uses statistical analysis to detect this regularity. By calculating the standard deviation of inter-arrival times and the coefficient of variation for payload sizes, analysts can distinguish automated beaconing from irregular, human-driven traffic.
  answer_sources:
  - Zeek conn.log
  - Internet egress points (e.g., firewalls, web proxies)
  - Network tap or SPAN port monitoring Zeek sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each src_ip, dest_domain (serverless) over 24h:
        CALCULATE std_dev(inter_arrival_time)
        CALCULATE coefficient_of_variation(payload_size)
        IF std_dev is near 0 AND payload_variance is low, ALERT
- question: Can we use time-series analysis and machine learning to find periodic beaconing signals and cluster anomalous connection patterns to serverless domains?
  context: This question applies advanced analytical techniques to find beaconing without pre-defined rules. A Fast Fourier Transform (FFT) can convert connection timestamps into the frequency domain, making periodic signals stand out as strong peaks. Additionally, clustering algorithms can group connections based on features like frequency and data volume to identify groups of anomalous behavior that represent different C2 channels.
  answer_sources:
  - Zeek conn.log
  - Internet egress points (e.g., firewalls, web proxies)
  - Network tap or SPAN port monitoring Zeek sensors
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each src_ip, dest_domain (serverless):
        APPLY FFT to connection_timestamps to find frequency peaks
        CLUSTER connections based on frequency, duration, volume
        ALERT on anomalous clusters or strong periodic signals
- question: Are unapproved applications or suspicious scripts making network connections to serverless domains?
  context: Malware often masquerades as legitimate processes or runs from unusual locations. This question correlates network connection events with process creation events on the endpoint. By joining these two data sources, an analyst can trigger an alert when a process connecting to a serverless domain is not on an allowlist or is executed with a suspicious command line (e.g., encoded PowerShell), providing strong evidence of malicious activity.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Critical servers (e.g., Domain Controllers, database servers)
  - User endpoint devices
  - SIEM or log aggregation platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN (WinEvent 5156, WinEvent 4688) on ProcessID
      IF DestIP in 5156 is serverless AND (ProcessName in 4688 is not allowlisted OR CommandLine matches suspicious pattern), ALERT
- question: Are there any rare or previously unseen parent-child process relationships or execution paths associated with connections to serverless domains?
  context: Adversaries often use legitimate applications to launch malicious code (e.g., Microsoft Word spawning PowerShell). This creates unusual parent-child process relationships. This question involves baselining normal process lineages and execution paths. By flagging rare combinations that are also associated with traffic to serverless domains, analysts can uncover stealthy execution techniques.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Critical servers (e.g., Domain Controllers, database servers)
  - User endpoint devices
  - SIEM or log aggregation platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      BASELINE frequency of (parent_process, child_process, execution_path) tuples
      IF new tuple is rare AND child_process connects to serverless_domain, ALERT
- question: Can an anomaly detection model identify suspicious process executions that are linked to communication with serverless domains?
  context: This question uses an unsupervised machine learning model, like an Isolation Forest, to find anomalous process behavior without relying on pre-defined rules. The model is trained on features of normal process executions (e.g., name entropy, command-line length, parent process). It can then score new events, flagging those that are highly anomalous and also communicate with serverless infrastructure, indicating a high likelihood of being malicious.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Zeek conn.log
  - Critical servers (e.g., Domain Controllers, database servers)
  - User endpoint devices
  - SIEM or log aggregation platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN Isolation Forest model on normal process features
      FOR new process event:
        IF process connects to serverless_domain, CALCULATE anomaly_score
        IF score is high, ALERT
- question: Is a connection to a serverless domain immediately followed by internal reconnaissance or lateral movement activity from the same host?
  context: A common adversary pattern is to establish a C2 channel and then receive commands to perform internal discovery or move laterally. This question uses a stateful rule to detect this sequence of events. An alert is triggered if a host connects to a serverless domain and then, within a short time window (e.g., 10 minutes), runs discovery commands or attempts to log into other systems, indicating post-compromise activity.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4663
  - SIEM or log aggregation platform
  - Domain Controllers (for auth logs)
  - File servers (for access logs)
  - User endpoint devices
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE stateful rule:
        IF event is 'connection to serverless_domain' FROM host_A,
        THEN WATCH for 'discovery_command' or 'failed_internal_logon' FROM host_A within 10 minutes
        IF found, ALERT
- question: Does a host exhibit a statistically significant spike in internal reconnaissance or failed authentication attempts after communicating with a serverless domain?
  context: After receiving instructions from a C2 server, a compromised host's behavior will change. This question aims to detect that change by monitoring key behavioral metrics. It establishes a baseline for normal activity (e.g., internal scanning, failed logons) for each host. If these rates spike significantly above the baseline immediately following contact with a serverless domain, it strongly suggests the host is acting on malicious commands.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4663
  - SIEM or log aggregation platform
  - Domain Controllers (for auth logs)
  - File servers (for access logs)
  - User endpoint devices
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each host: BASELINE rate of 'internal_recon' and 'failed_auths'
      AFTER 'connection to serverless_domain' event:
        MONITOR rates for next hour
        IF rate > 95th_percentile_baseline, ALERT
- question: Can we use a sequence analysis model to determine if a chain of events, starting with a connection to a serverless domain, matches a known malicious attack grammar?
  context: This question frames adversary operations as a sequence of TTPs (an 'attack grammar'). It proposes using a model like a Hidden Markov Model (HMM) trained on known attack chains. By feeding live event streams into the model, it can calculate the probability that an observed sequence of actions (e.g., C2 contact -> Discovery -> Lateral Movement) matches a learned malicious pattern, allowing for detection of complex, multi-stage attacks.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4663
  - SIEM or log aggregation platform
  - Domain Controllers (for auth logs)
  - File servers (for access logs)
  - User endpoint devices
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TRAIN HMM on known attack sequences (states = TTPs)
      APPLY live event stream to HMM
      CALCULATE probability of observed sequence
      IF probability > malicious_threshold, ALERT