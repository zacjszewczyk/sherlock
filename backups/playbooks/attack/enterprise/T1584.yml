name: T1584: Compromise Infrastructure
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  Investigates whether an adversary has established communication with compromised external infrastructure for C2, staging, or other operational purposes. This involves detecting connections to known malicious destinations, identifying the use of malicious TLS certificates, spotting anomalous network protocols or traffic patterns like beaconing, detecting algorithmically generated domains (DGA), observing unusual fan-out activity, and monitoring file transfers to public sharing sites.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has an internal host connected to a destination on an aggregated watchlist of malicious indicators?
    context: |
      This question aims to detect direct communication with known-malicious infrastructure. By creating a comprehensive watchlist from various threat intelligence feeds (IPs, domains, URLs) and comparing it against outbound network connection logs, analysts can quickly identify high-confidence threats where internal systems are interacting with entities flagged as malicious.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Egress network gateways, proxy servers, internal DNS resolvers, and all endpoint devices.
    range: last 90 days
    queries:
      - query_name: Signature-based TI Match
        query_logic: |
          SEARCH network_logs
          WHERE destination_ip OR destination_domain OR destination_url IN threat_intel_watchlist
          RETURN source, destination, timestamp
  - question: Is there an unusual frequency of connections from an internal host to a destination flagged by threat intelligence?
    context: |
      This question moves beyond a simple match to quantify the interaction level with a known-bad entity. By baselining normal connection frequencies and using a Z-score, analysts can prioritize alerts where the volume of communication is statistically significant, suggesting a more persistent or active compromise rather than a one-off connection. A Z-score above 3 indicates a rare event.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Egress network gateways, proxy servers, internal DNS resolvers, and all endpoint devices.
    range: last 90 days
    queries:
      - query_name: TI Connection Frequency Anomaly
        query_logic: |
          FOREACH source_destination_pair WHERE destination IN threat_intel_watchlist:
            CALCULATE historical_frequency_baseline
            CALCULATE current_frequency_z_score
            ALERT IF z_score > 3
  - question: Can a machine learning model classify a connection to a threat intelligence-flagged destination as malicious with high probability?
    context: |
      This question applies supervised machine learning to add contextual intelligence to threat intelligence hits. A simple IP match lacks context, but a model trained on connection properties (port, protocol), indicator details (threat type), and source host properties can more accurately predict malicious intent, reducing false positives and helping analysts focus on the most probable threats.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Windows Event ID 5156
      - Windows Event ID 4688
      - Egress network gateways, proxy servers, internal DNS resolvers, and all endpoint devices.
    range: last 90 days
    queries:
      - query_name: ML Classification of TI-Flagged Connections
        query_logic: |
          FOR new_connection WHERE destination IN threat_intel_watchlist:
            EXTRACT features (port, protocol, data_volume, threat_type, host_type)
            PREDICT probability = classification_model.predict(features)
            ALERT IF probability > 0.90
  - question: Is an internal host using a TLS certificate whose attributes match a known malicious certificate?
    context: |
      This question focuses on identifying malicious TLS traffic by matching certificate attributes (like SHA-1 hash or serial number) against a threat intelligence watchlist. This provides a high-confidence method for detecting connections to C2 infrastructure that relies on specific, known-bad certificates for communication.
    answer_sources:
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities, web proxies, and endpoint EDR sensors capable of inspecting TLS traffic.
    range: last 90 days
    queries:
      - query_name: Malicious Certificate Match
        query_logic: |
          SEARCH tls_logs (Zeek ssl.log)
          WHERE certificate_sha1 IN malicious_cert_watchlist OR certificate_serial IN malicious_cert_watchlist
          RETURN source_ip, destination_ip, cert_sha1, cert_serial
  - question: Is a TLS connection using an unusually rare certificate issuer or subject?
    context: |
      This question seeks to identify malicious activity by finding outlier certificates. Adversaries often use self-signed or certificates from uncommon CAs. By calculating the prevalence of certificate issuers and subjects across the enterprise, analysts can assign a risk score to each connection and flag those with exceptionally rare attributes, which may indicate a targeted attack or custom C2 infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities, web proxies, and endpoint EDR sensors capable of inspecting TLS traffic.
    range: last 90 days
    queries:
      - query_name: Certificate Rarity Analysis
        query_logic: |
          CALCULATE prevalence of all certificate_issuer and certificate_subject fields
          FOREACH new_tls_connection:
            CALCULATE risk_score based on inverse prevalence of its issuer and subject
            ALERT IF risk_score > 99th_percentile
  - question: Can unsupervised clustering of TLS certificate features reveal anomalous or malicious certificates?
    context: |
      This question uses an exploratory, unsupervised machine learning approach to find unknown malicious infrastructure. By clustering certificates based on their technical features (validity period, key length, subject/issuer entropy), analysts can identify groups of anomalous certificates (outliers) that do not conform to normal patterns. These outliers are strong candidates for manual investigation.
    answer_sources:
      - Zeek ssl.log
      - Network egress points with TLS inspection capabilities, web proxies, and endpoint EDR sensors capable of inspecting TLS traffic.
    range: last 90 days
    queries:
      - query_name: Unsupervised Certificate Clustering
        query_logic: |
          EXTRACT features (validity_period, key_length, subject_entropy) from all tls_logs
          APPLY DBSCAN clustering algorithm to features
          INVESTIGATE samples from clusters identified as noise/anomalies
  - question: Are there outbound connections with signature-based anomalies like non-standard ports, known malicious JA3/JA3S hashes, or C2-specific HTTP headers?
    context: |
      This question uses a set of specific, high-confidence rules to find known-bad patterns. It checks for (1) protocols on non-standard ports (e.g., SSL not on 443), (2) TLS fingerprints (JA3/JA3S) matching C2 frameworks, and (3) HTTP headers (User-Agent) associated with malware. A match on any of these rules is a strong indicator of compromise.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Egress network gateways, internal network taps, and endpoint devices.
    range: last 90 days
    queries:
      - query_name: Network Anomaly Signature Detection
        query_logic: |
          SEARCH network_logs for (ssl_port != 443) OR (ja3_hash IN c2_fingerprint_list) OR (http_user_agent IN c2_user_agent_list)
          ALERT on any match
  - question: Are internal services making outbound connections to statistically rare destination ports?
    context: |
      This question aims to identify anomalous network behavior by focusing on the rarity of the destination port for a given service. While some services use a wide range of ports, most have a standard set. By baselining the port distribution for each service (e.g., HTTP, SSL), connections to ports outside the top 99% can be flagged as statistically unusual and potentially malicious.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Egress network gateways, internal network taps, and endpoint devices.
    range: last 90 days
    queries:
      - query_name: Statistical Port Anomaly Detection
        query_logic: |
          FOREACH service (e.g., 'ssl'):
            CALCULATE distribution of destination ports
            ALERT on connections to ports outside the 99th percentile
  - question: Is there a statistically significant spike in the number of connections using non-standard ports?
    context: |
      This question uses time-series forecasting to detect widespread campaigns that use non-standard ports. A model learns the normal daily and weekly rhythm of such connections. An alert is triggered when the observed count dramatically exceeds the forecasted count (including its confidence interval), suggesting a coordinated event rather than random, isolated anomalies.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Egress network gateways, internal network taps, and endpoint devices.
    range: last 90 days
    queries:
      - query_name: Time-Series Anomaly Detection for Non-Standard Ports
        query_logic: |
          TRAIN time-series model on hourly count of non-standard port connections
          FORECAST expected count and confidence_interval
          ALERT IF observed_count > forecasted_upper_bound
  - question: Has an internal host attempted to resolve and connect to a known DGA or newly registered domain?
    context: |
      This question identifies connections to domains that are likely part of malicious infrastructure. By correlating DNS queries against threat intelligence lists of domains generated by algorithms (DGA) or that are newly registered (NRD), and confirming a subsequent connection attempt, analysts can detect C2 communication with high confidence.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers, DNS forwarders to external resolvers, and network egress points.
    range: last 90 days
    queries:
      - query_name: DGA/NRD Domain Connection
        query_logic: |
          SEARCH dns_logs where query IN (dga_list OR nrd_list)
          CORRELATE with network_logs to confirm connection to resolved_ip
          ALERT on match
  - question: Is an internal host querying for domains with unusually high character entropy?
    context: |
      This question aims to detect algorithmically generated domains (DGA) without relying on a pre-existing list. DGA domains often appear as random strings of characters, resulting in high Shannon entropy. By establishing a baseline for entropy in legitimate domain names, queries for domains with entropy scores in the 99.5th percentile or higher can be flagged as likely machine-generated and malicious.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers, DNS forwarders to external resolvers, and network egress points.
    range: last 90 days
    queries:
      - query_name: DNS Query Entropy Analysis
        query_logic: |
          CALCULATE entropy_baseline from historical legitimate domain queries
          FOREACH new_dns_query:
            CALCULATE shannon_entropy of the domain name
            ALERT IF entropy_score > 99.5th_percentile of baseline
  - question: Can a machine learning model classify a DNS query as likely being for a DGA domain?
    context: |
      This question uses a supervised machine learning model to proactively identify DGA domains in real-time. By training a classifier on features of known good and bad domains (e.g., length, entropy, character ratios), the model can predict whether a new, never-before-seen domain is malicious. This is more robust than signature-based methods and can detect novel DGA families.
    answer_sources:
      - Zeek dns.log
      - Zeek conn.log
      - Internal DNS resolvers, DNS forwarders to external resolvers, and network egress points.
    range: last 90 days
    queries:
      - query_name: ML-based DGA Classification
        query_logic: |
          FOR new_dns_query:
            EXTRACT features (length, entropy, n-grams, numeric_ratio)
            PREDICT probability = dga_classification_model.predict(features)
            ALERT IF probability > 0.95
  - question: Is an internal host exhibiting C2 beaconing behavior based on connection timing and size?
    context: |
      This question seeks to identify malware C2 communications by their characteristic beaconing pattern. A stateful rule can track connections between a source and destination, alerting when it observes a series of connections with highly regular time intervals (low jitter) and small, consistent payloads, which is typical of a compromised host checking in with its controller.
    answer_sources:
      - Zeek conn.log
      - Network egress points, core network switches monitoring server-to-internet traffic, and endpoint devices.
    range: last 90 days
    queries:
      - query_name: Stateful Beaconing Detection Rule
        query_logic: |
          TRACK source_destination_pairs over time
          IF consecutive_connections > 5 AND time_interval is consistent AND payload_size < 2KB:
            ALERT for beaconing activity
  - question: Does any source-destination pair exhibit highly periodic, machine-like communication timing?
    context: |
      This question uses a statistical approach to find C2 beaconing. For each communicating pair, it calculates the standard deviation of the time between connections. A standard deviation near zero indicates extreme regularity (low jitter), which is unnatural for human activity but common for automated beaconing. Alerting on pairs in the lowest percentiles of this metric highlights the most machine-like connections.
    answer_sources:
      - Zeek conn.log
      - Network egress points, core network switches monitoring server-to-internet traffic, and endpoint devices.
    range: last 90 days
    queries:
      - query_name: Beaconing Detection via Time Delta Deviation
        query_logic: |
          FOREACH source_destination_pair in a 1-hour window:
            CALCULATE time_deltas between consecutive connections
            COMPUTE standard_deviation of time_deltas
            ALERT IF standard_deviation is in the bottom 2nd percentile
  - question: Does the time series of a host's connection events show a strong periodic signal?
    context: |
      This question applies signal processing techniques to find beaconing. A Fast Fourier Transform (FFT) can decompose a time series of connection events into its constituent frequencies. A strong peak in the frequency domain reveals a dominant, repeating pattern. This method can effectively uncover beaconing even if the connection timing has some jitter or if multiple beaconing intervals are used.
    answer_sources:
      - Zeek conn.log
      - Network egress points, core network switches monitoring server-to-internet traffic, and endpoint devices.
    range: last 90 days
    queries:
      - query_name: Beaconing Detection via FFT
        query_logic: |
          FOREACH host:
            CREATE time series of connection events
            APPLY Fast Fourier Transform (FFT) to the time series
            ALERT if a strong peak exists in the frequency domain
  - question: Is an internal host connecting to an unusually high number of unique external destinations?
    context: |
      This question aims to detect scanning or command distribution activity. A hard threshold rule provides a simple but effective way to catch egregious fan-out behavior, such as a host connecting to hundreds of unique IPs on the same port in a short time, which is a strong indicator of scanning or worm-like propagation.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint devices, servers with direct outbound internet access (e.g., in a DMZ), and cloud virtual machines.
    range: last 90 days
    queries:
      - query_name: Fan-out Detection with Hard Threshold
        query_logic: |
          COUNT unique destination_ips per source_ip per 10-minute window
          ALERT IF unique_destination_count > 200 AND destination_port NOT IN (80, 443)
  - question: Is a host's fan-out activity statistically anomalous compared to its own historical baseline?
    context: |
      This question provides a more tailored approach to detecting fan-out activity by comparing a host's current behavior to its own past. By establishing a rolling baseline (e.g., 14 days) of unique destination counts, this method can detect significant deviations (e.g., Z-score > 4) that are anomalous for that specific host, reducing false positives from naturally chatty systems.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint devices, servers with direct outbound internet access (e.g., in a DMZ), and cloud virtual machines.
    range: last 90 days
    queries:
      - query_name: Baseline-based Fan-out Anomaly Detection
        query_logic: |
          FOREACH host:
            CALCULATE 14-day baseline (mean, stddev) of unique hourly destination counts
            CALCULATE Z-score for current hourly count
            ALERT IF z_score > 4
  - question: Has a host's fan-out activity suddenly and significantly increased?
    context: |
      This question uses change point detection algorithms to find abrupt shifts in a host's behavior. Unlike baseline methods that require a deviation to persist, change point detection can identify the exact moment a host's activity pattern changes, such as a sudden increase in connections to unique IPs. This is effective for catching the start of a scanning or data exfiltration event.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Endpoint devices, servers with direct outbound internet access (e.g., in a DMZ), and cloud virtual machines.
    range: last 90 days
    queries:
      - query_name: Fan-out Detection via Change Point Algorithm
        query_logic: |
          FOREACH host:
            APPLY change point detection algorithm to time series of unique destination counts per minute
            ALERT if a statistically significant positive change point is detected
  - question: Is a file being transferred to or from a public file-sharing site from a sensitive host or with a suspicious file type?
    context: |
      This question looks for potential data exfiltration or malware staging by monitoring file transfers to public sites like Pastebin or GitHub. A rule-based approach can flag high-risk scenarios, such as connections from critical servers to these sites, or the transfer of executable or script files, which are rarely legitimate in this context.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Critical assets (Domain Controllers, database servers, code repositories), endpoints of privileged users, and network egress points with file inspection capabilities.
    range: last 90 days
    queries:
      - query_name: Suspicious File Transfer Rule
        query_logic: |
          SEARCH file_transfer_logs
          WHERE destination_domain IN (file_sharing_sites) AND (source_ip IN critical_subnets OR file_type IN suspicious_types)
          ALERT on match
  - question: Is a user transferring a file type that is anomalous for their peer group?
    context: |
      This question uses peer group analysis to spot unusual behavior. It establishes a baseline of normal file transfer activity for different departments (e.g., HR, Engineering). An alert is triggered if a user's activity deviates from their peers, such as an HR user transferring a compiled executable to a file-sharing site, which would be highly unusual for that group.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Critical assets (Domain Controllers, database servers, code repositories), endpoints of privileged users, and network egress points with file inspection capabilities.
    range: last 90 days
    queries:
      - query_name: Peer Group Analysis for File Transfers
        query_logic: |
          CALCULATE baseline of file_types per user_group
          FOREACH new_file_transfer:
            COMPARE file_type to user_group baseline
            ALERT IF file_type rarity is in bottom 5% for that group
  - question: Does a file transfer to a public site represent an outlier compared to normal transfer activity?
    context: |
      This question uses one-class machine learning to model 'normal' file transfer behavior to approved sites. The model learns the typical profile of these transfers, including source, time of day, and file type. Any transfer that significantly deviates from this learned profile is flagged as an outlier, potentially indicating a malicious actor attempting to exfiltrate data or download tools under the guise of legitimate activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Critical assets (Domain Controllers, database servers, code repositories), endpoints of privileged users, and network egress points with file inspection capabilities.
    range: last 90 days
    queries:
      - query_name: One-Class SVM for File Transfer Anomalies
        query_logic: |
          TRAIN one-class SVM model on features of 'normal' file transfers
          FOR new_file_transfer:
            PREDICT if transfer is an outlier based on the model
            ALERT if identified as an outlier