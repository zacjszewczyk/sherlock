name: T1480.002: Mutual Exclusion
id: 9a8b7c6d-5e4f-4a3b-2c1d-0e9f8a7b6c5d
description: This playbook helps investigate if an adversary is attempting to evade defenses by checking for a pre-existing infection using mutual exclusion mechanisms. This technique involves several observable behaviors, such as a process creating a named pipe or mutex matching a known malicious indicator, a process executing and terminating in an abnormally short duration (a 'check-and-exit' behavior), a non-security process creating a named pipe that impersonates a legitimate security tool, a process creating a file lock in a staging directory before C2 communication, or a process creating a named pipe with an algorithmically generated name (high entropy or GUID-like).
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a process creating a named pipe or using a command-line argument that matches a known malicious mutex or pipe name from threat intelligence?
  context: This question aims to detect malware that uses named objects (pipes, mutexes) to ensure only one instance of itself is running. By searching for pipe creations or command-line arguments that match a list of known malicious indicators, analysts can identify specific, known threats attempting to establish persistence or execute their payload while avoiding redundant infections. A direct match is a high-fidelity indicator of compromise.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - All Windows endpoints and servers
  range: last 90 days
  queries:
  - pseudocode: Search PipeName and CommandLine fields against a threat intelligence list of malicious mutex/pipe names.
- question: Is a known malicious pipe or mutex name appearing on an unusually high number of hosts, suggesting a widespread campaign?
  context: This question moves beyond single detections to identify the scope of an attack. By counting the number of distinct hosts where a specific malicious indicator is found within a given timeframe (e.g., per hour), security teams can spot coordinated, large-scale campaigns. Alerting on counts that exceed a statistical norm helps prioritize incidents that represent a broader, more urgent threat to the organization.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - All Windows endpoints and servers
  range: last 90 days
  queries:
  - pseudocode: For each detected malicious pipe/mutex, count distinct hosts per hour. Alert if count exceeds historical 95th percentile.
- question: Can we use machine learning to predict if a process event involving a pipe or command-line argument is malicious, even if the indicator is not on a known threat list?
  context: This question seeks to proactively identify novel or variant threats that use mutual exclusion. By training a model on various process features (process name, parent, image path) and whether the event involves a known malicious indicator, we can learn the characteristics of malicious behavior. This model can then score new, unseen events, flagging those with a high probability of being malicious for analyst review, thus improving detection of zero-day threats.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - All Windows endpoints and servers
  range: last 90 days
  queries:
  - pseudocode: Predict malicious probability using a model trained on process features and matches to known malicious indicators.
- question: Is a process executing from a high-risk directory and terminating in less than two seconds?
  context: This question targets a common malware behavior where an implant checks for a mutex or another condition and exits immediately if the condition is met (e.g., another instance is already running). Correlating process start and stop events to calculate a short duration, especially for processes running from temporary or user-writable locations like %TEMP% or %APPDATA%, provides a strong signal of this 'check-and-exit' evasion technique.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Sysmon Event ID 1
  - Sysmon Event ID 5
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - pseudocode: Correlate process start/stop events by ProcessGuid. Alert if duration < 2s and Image path is in a high-risk directory.
- question: Is a specific executable running for a duration that is anomalously short compared to its own historical execution times?
  context: This question refines the 'short-lived process' detection by creating a behavioral baseline for each executable. Instead of using a fixed threshold like 2 seconds for all processes, it identifies what is an abnormally short runtime for a specific program. This approach is more precise, reducing false positives from legitimate, quick-running programs and effectively flagging when a known process behaves unusually, which could indicate it has been compromised or is being used for malicious checks.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Sysmon Event ID 1
  - Sysmon Event ID 5
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - pseudocode: For each Image path, calculate historical execution duration baseline. Flag new instances running below the 5th percentile duration.
- question: Can an anomaly detection model identify suspicious combinations of short-lived processes, execution paths, and parent processes?
  context: This question leverages machine learning to find 'unknown unknowns'. An anomaly detection model can analyze multiple features simultaneously (e.g., execution time, image path, parent process, user context) to find rare and suspicious combinations. For example, it could flag a process that normally runs for minutes but suddenly executes for milliseconds, spawned by an unusual parent process from a temp directory. This holistic view is powerful for detecting sophisticated evasion techniques that might not violate any single, simple rule.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4689
  - Sysmon Event ID 1
  - Sysmon Event ID 5
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - pseudocode: Use an anomaly detection model on features like execution duration, Image path, ParentImage path, and User to find rare event combinations.
- question: Is a process that is not a known security tool creating a named pipe that belongs to a legitimate security product?
  context: This question is designed to detect masquerading, a specific form of defense evasion. Adversaries may create a named pipe with the same name as one used by an EDR or antivirus solution to either disrupt the tool or trick it into ignoring malicious activity. By maintaining an allowlist of legitimate security tool paths and a watchlist of their pipe names, we can create a high-fidelity alert for any unauthorized process creating one of these pipes.
  answer_sources:
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - Windows Event ID 4688
  - All endpoints and servers with deployed security solutions (EDR, AV)
  range: last 90 days
  queries:
  - pseudocode: Alert when a PipeName from a security tool watchlist is created by a process Image path not on the security tool allowlist.
- question: Has a named pipe associated with a security tool been created by a process image that has never created it before?
  context: This question provides a dynamic way to detect the behavior described in the symbolic rule, without needing a perfectly maintained allowlist of process paths. It establishes a historical baseline of which processes (`Image` paths) normally create specific, sensitive pipe names. An alert is triggered when a new or unexpected process creates a pipe associated with a security tool, indicating a deviation from normal behavior that warrants investigation.
  answer_sources:
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - Windows Event ID 4688
  - All endpoints and servers with deployed security solutions (EDR, AV)
  range: last 90 days
  queries:
  - pseudocode: For each security tool pipe name, baseline the set of legitimate creator Image paths. Alert if a new Image path creates that pipe.
- question: Can a machine learning model distinguish between legitimate and suspicious access to security tool pipes based on process context?
  context: This question aims to build a more nuanced detection model for security tool impersonation. A classification model can learn the complex patterns of legitimate interactions with security pipes, considering features like the process image, its parent, the user context, and command-line arguments. The model can then score every new access event, allowing analysts to focus on the highest-risk interactions, which might be subtle and not caught by simple allowlist/blocklist rules.
  answer_sources:
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - Windows Event ID 4688
  - All endpoints and servers with deployed security solutions (EDR, AV)
  range: last 90 days
  queries:
  - pseudocode: Use a classification model to score the likelihood of malicious access to security tool pipes based on process context features.
- question: Did a process create a file in a staging directory and then immediately initiate a network connection to a suspicious destination?
  context: This question looks for a common malware pattern dropping a payload or lock file and then calling out to a command-and-control (C2) server. By correlating file creation events in temporary locations (like %TEMP% or /tmp) with subsequent network connections from the same process within a very short time window (e.g., 5 seconds), analysts can uncover this behavior. The query is made more effective by filtering for network destinations that are either known-bad (on a threat intel list) or not explicitly allowed.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 3
  - Zeek conn.log
  - Common staging directories (%TEMP%, %APPDATA%, C:\Users\Public, /tmp, /var/tmp)
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: Correlate file creation in staging dirs with network connections from the same process within 5s. Alert if destination IP is on a blocklist.
- question: Is a process creating a high-entropy (potentially encrypted or packed) file in a staging directory before making a network connection to a low-reputation IP?
  context: This question adds a layer of statistical analysis to enhance detection. High Shannon entropy in a filename or file content often indicates randomization, packing, or encryption, which are common in malware. By flagging files with unusually high entropy in staging areas and correlating this with subsequent network traffic to low-reputation destinations, we can more accurately identify suspicious 'drop-and-call' activity, even if the destination IP is not yet on a formal blocklist.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 3
  - Zeek conn.log
  - Common staging directories (%TEMP%, %APPDATA%, C:\Users\Public, /tmp, /var/tmp)
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: Flag files in staging dirs with top 5% entropy. Elevate risk if the creating process also connects to a low-reputation IP.
- question: Can we use clustering to identify groups of suspicious activity involving file creation in staging directories followed by network connections?
  context: This question applies unsupervised machine learning to discover novel attack patterns. By feeding a clustering algorithm (like DBSCAN) a set of features—including file path, file entropy, destination IP/port, and bytes sent—the system can automatically group related, anomalous events. These clusters might represent a new C2 infrastructure or malware variant that uses a consistent but previously unseen pattern of file and network behavior, allowing for discovery without pre-defined signatures.
  answer_sources:
  - Sysmon Event ID 11
  - Sysmon Event ID 3
  - Zeek conn.log
  - Common staging directories (%TEMP%, %APPDATA%, C:\Users\Public, /tmp, /var/tmp)
  - Network Egress Points
  range: last 90 days
  queries:
  - pseudocode: Cluster events using features like filename, entropy, destination IP/port, and bytes sent. Investigate anomalous clusters.
- question: Is a process creating a named pipe or using a command-line argument with a name that structurally resembles a GUID or a long random string?
  context: This question targets malware that uses DGA (Domain Generation Algorithm)-like techniques to create unique mutex or pipe names for each infection, making simple string matching ineffective. By using regular expressions to search for common structures of algorithmically generated names, such as the format of a Globally Unique Identifier (GUID) or simply a long string of random characters, analysts can detect this evasion technique without knowing the exact name beforehand.
  answer_sources:
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - pseudocode: Use regex to find PipeName or CommandLine values matching GUID format or long random strings.
- question: Is a specific process creating named pipes with names that have an unusually high entropy compared to the names it normally creates?
  context: This question establishes a behavioral baseline for pipe name generation on a per-process basis. Many legitimate applications create pipes with consistent naming conventions. By calculating the normal Shannon entropy for pipe names created by a specific executable (`Image` path), we can flag instances where the same process suddenly creates a pipe with a name that is a statistical outlier (e.g., much higher entropy). This points to anomalous behavior, potentially indicating that a legitimate process has been hijacked or that malware is trying to blend in.
  answer_sources:
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - pseudocode: For each Image path, baseline the entropy of its created pipe names. Alert if a new pipe name's entropy is >3 standard deviations from the mean.
- question: Can a machine learning model detect algorithmically generated pipe names by identifying names that do not conform to learned patterns of legitimate names?
  context: This question proposes using a sophisticated anomaly detection method to identify randomly generated names. An autoencoder model, like a character-level LSTM, can be trained on a massive dataset of legitimate pipe names from the environment. It learns the typical structures and patterns. When a new pipe name is observed, the model attempts to reconstruct it; a high reconstruction error signifies that the name is structurally different from what the model considers normal, making it highly suspect and likely algorithmically generated.
  answer_sources:
  - Sysmon Event ID 17
  - Sysmon Event ID 18
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - pseudocode: Use a trained autoencoder (e.g., LSTM) to calculate reconstruction error for new pipe names. High error indicates an anomaly.