name: T1588: Obtain Capabilities
id: 6f4b0e9c-5d1a-4c2b-9a8d-7e6f5c4b3a21
description: This playbook addresses the information requirement, "Is the adversary obtaining capabilities to support their operation?" by identifying adversary actions to acquire tools, exploits, or malware. It detects this activity by observing internal hosts connecting to known malicious infrastructure, executing processes with signatures matching adversarial tools, using suspicious SSL/TLS certificates, or exhibiting a correlated event sequence of downloading a file, executing it from a user-writable directory, and initiating beaconing behavior.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are internal hosts connecting to or downloading files from known malicious infrastructure?
    context: This question seeks to identify direct communication with known adversarial infrastructure. By continuously monitoring outbound network connections, DNS queries, and file transfers, and comparing remote IPs, domains, and file hashes against high-confidence threat intelligence feeds, analysts can detect the acquisition of malicious tools or malware payloads from known distribution points or C2 servers.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek files.log
      - Internet gateways, egress firewalls, corporate DNS resolvers, and web proxies
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs, dns_logs, file_logs WHERE destination_ip OR domain OR file_hash IN threat_intel_watchlist;
  - question: Are users downloading files with highly randomized filenames or statistically rare file types?
    context: This question aims to uncover malware or tool downloads by analyzing file metadata for anomalies. High Shannon entropy in a filename can indicate the use of domain generation algorithms (DGA) or obfuscation techniques. Additionally, tracking the rarity of file MIME types across the enterprise can flag suspicious downloads, such as a user in accounting suddenly downloading an executable ('application/x-dosexec'), which is statistically rare for their role.
    answer_sources:
      - Zeek files.log
      - Internet gateways, egress firewalls, corporate DNS resolvers, and web proxies
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_logs | CALCULATE Shannon_entropy(filename), frequency(mime_type) | FILTER entropy > 99th_percentile OR mime_type_frequency < 5th_percentile;
  - question: Has any internal host exhibited a significant and anomalous spike in outbound data transfer volume?
    context: This question helps detect the download of large payloads or toolkits by monitoring data transfer volumes. Using a time-series model to forecast expected outbound traffic for each host, the system can generate an alert when a host's data transfer volume significantly deviates from its predicted baseline (e.g., more than three standard deviations). This is particularly suspicious if the destination is a low-reputation or newly observed IP or domain.
    answer_sources:
      - Zeek conn.log
      - Internet gateways, egress firewalls, corporate DNS resolvers, and web proxies
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs | FORECAST outbound_data_volume_per_host | ALERT WHERE actual_volume > (forecasted_volume + 3*stdev);
  - question: Are processes being executed on hosts with command-line arguments or file hashes that match known malicious tools?
    context: This question focuses on finding direct evidence of adversarial tool execution through signature-based detection. By scanning process creation events, analysts can look for specific command-line arguments (e.g., 'powershell -enc') or executable file hashes that are known to be associated with tools like Cobalt Strike, Metasploit, or other malware families, providing a high-confidence indicator of compromise.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Domain Controllers, user workstations, and application servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs WHERE command_line MATCHES malicious_regex_list OR process_hash IN malicious_hash_watchlist;
  - question: Has a common parent process (e.g., winword.exe) spawned a statistically rare or suspicious child process (e.g., cmd.exe)?
    context: This question seeks to identify anomalous process lineage as an indicator of compromise. Adversaries often abuse legitimate parent processes to launch malicious child processes. By establishing a baseline of normal parent-child relationships across the enterprise, analysts can detect statistically rare pairings (e.g., Outlook spawning a command shell) that fall below a prevalence threshold and warrant investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Domain Controllers, user workstations, and application servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH process_creation_logs | CALCULATE frequency(parent_process, child_process) | ALERT WHERE frequency < 1_percent_threshold;
  - question: Can machine learning models identify suspicious process creation events based on features like command-line length and entropy?
    context: This question explores the use of machine learning to detect malicious process execution beyond simple signatures. A classifier model can be trained on features like command-line length and entropy, process path, and parent process name to score new process events in real-time. Events that the model classifies as highly probable to be malicious are flagged for analyst review, enabling the detection of novel or obfuscated threats.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Domain Controllers, user workstations, and application servers
    range: last 90 days
    queries:
      - pseudocode: STREAM process_creation_logs | APPLY ML_classifier(features) | ALERT WHERE malicious_probability > confidence_threshold;
  - question: Is network traffic using SSL/TLS certificates or JA3/JA3S hashes associated with known C2 frameworks or malicious infrastructure?
    context: This question aims to identify malicious C2 communications by inspecting SSL/TLS handshake metadata. Many C2 frameworks (like Cobalt Strike) use default certificate values (issuer, subject, serial number) or have unique TLS client fingerprints (JA3/JA3S). Matching these indicators against threat intelligence feeds can reveal adversary C2 channels, even in encrypted traffic.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Internet gateways, encrypted traffic inspection points (e.g., SSL/TLS offloading proxies), internal Certificate Authorities, and DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: SEARCH tls_logs, cert_logs WHERE issuer OR subject OR serial_number OR ja3_hash IN c2_intel_feed;
  - question: Are there SSL/TLS certificates in use that are typosquatting organizational domains or have unusually short validity periods?
    context: This question focuses on detecting suspicious certificates based on their properties. Adversaries may use certificates with subject names that are slight misspellings of legitimate domains (typosquatting) to appear legitimate. Calculating the string distance (e.g., Damerau-Levenshtein) can detect this. Additionally, certificates with very short validity periods (e.g., <30 days) are anomalous and often used by attackers for short-term campaigns.
    answer_sources:
      - Zeek x509.log
      - Internet gateways, encrypted traffic inspection points (e.g., SSL/TLS offloading proxies), internal Certificate Authorities, and DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: SEARCH cert_logs | CALCULATE levenshtein_distance(subject, org_domains), validity_period | ALERT WHERE distance < 3 OR validity_period < 30_days;
  - question: Are there anomalous clusters of SSL/TLS certificates that deviate from the established norms of legitimate traffic?
    context: This question leverages unsupervised machine learning to find adversary-controlled certificates. By applying a clustering algorithm (like DBSCAN) to certificate features such as validity duration, key length, and issuer attributes, analysts can identify small, distinct clusters of certificates that do not conform to the large, dense clusters of legitimate traffic. These anomalous clusters may represent an adversary's campaign-specific infrastructure.
    answer_sources:
      - Zeek x509.log
      - Internet gateways, encrypted traffic inspection points (e.g., SSL/TLS offloading proxies), internal Certificate Authorities, and DNS resolvers
    range: last 90 days
    queries:
      - pseudocode: SEARCH cert_logs | CLUSTER by features(validity, key_length, subject) | INVESTIGATE anomalous_clusters;
  - question: Has a host exhibited the specific sequence of downloading an executable, running it from a temporary directory, and that new process making an outbound network connection within a short time window?
    context: This question seeks to identify a high-fidelity attack chain by correlating events across network and host data sources. A SIEM rule can be built to trigger when, on the same host and within a short window (e.g., 5 minutes), a file download of an executable is observed, followed by a process creation event from a temporary directory, and finally an outbound connection from that new process. This sequence is a strong indicator of a successful "download and execute" payload.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - User workstations, public-facing web servers, and egress points to the internet
    range: last 90 days
    queries:
      - pseudocode: CORRELATE file_logs, process_logs, network_logs ON hostname WITHIN 5m WHERE file_mime = 'exe' AND process_path CONTAINS 'temp' AND process_creates_outbound_connection;
  - question: Are any non-browser processes making periodic, uniformly-sized outbound connections indicative of C2 beaconing?
    context: This question aims to detect C2 beaconing by analyzing the statistical properties of network traffic. Unlike human-generated traffic, automated C2 callbacks are often highly regular. By calculating the standard deviation of the time between connections (jitter) and the size of the data sent for non-browser processes, analysts can identify connections with very low variance in both metrics, which is a classic sign of beaconing.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 1 (Sysmon)
      - User workstations, public-facing web servers, and egress points to the internet
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_logs | GROUP BY src_ip, dst_ip | CALCULATE stdev(time_interval), stdev(byte_size) | ALERT WHERE stdev(time_interval) < 10th_percentile AND stdev(byte_size) < 10th_percentile;
  - question: Can a sequence analysis model detect a malicious chain of events (download -> execute -> connect) even if the individual events are not overtly suspicious?
    context: This question explores using advanced modeling to identify malicious TTPs based on the sequence of events, rather than the events themselves. A Hidden Markov Model (HMM) can be trained on known benign and malicious sequences. By feeding real-time, correlated event streams into the model, it can calculate the probability that an observed sequence matches a learned malicious pattern, allowing it to detect threats even when individual indicators are weak.
    answer_sources:
      - Zeek conn.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - User workstations, public-facing web servers, and egress points to the internet
    range: last 90 days
    queries:
      - pseudocode: STREAM correlated_event_logs | APPLY HMM_model | ALERT WHERE probability(malicious_sequence) > confidence_threshold;