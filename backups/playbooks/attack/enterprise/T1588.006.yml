name: "T1588.006: Vulnerabilities"
id: "5d01f1f0-4d3e-4d8e-9021-3a03337f769b"
description: |
  This playbook helps determine if an adversary is acquiring information about vulnerabilities to support targeting. This involves detecting various scanning and probing activities, such as connections from known malicious IPs on threat intelligence feeds, HTTP requests with signatures of vulnerability scanners (e.g., Nmap, Nikto), horizontal and vertical network scans from a single source, distributed scans from diverse IPs targeting a specific port (often after a vulnerability disclosure), and the execution of scanning tools on internal endpoints followed by east-west network reconnaissance.
type: "technique"
related:
  - "TA0042: Resource Development"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Have any inbound connections originated from IP addresses known to be malicious scanners or command and control (C2) infrastructure?"
    context: |
      This question seeks to identify initial reconnaissance by matching inbound connection source IPs against high-confidence threat intelligence feeds. A match is a strong indicator of malicious activity, though it's important to maintain an allow-list for known benign scanners to minimize false positives.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet gateway traffic"
      - "SIEM platform hosting threat intelligence feeds."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          JOIN (inbound_connections) WITH (threat_intel_list) ON (source_ip) WHERE source_ip NOT IN (benign_scanner_allow_list)
  - question: "For IPs identified as malicious, are they exhibiting signs of broad, non-specific port scanning?"
    context: |
      This question adds a layer of behavioral analysis to threat intelligence hits. By calculating the Shannon entropy of destination ports for a given source IP, we can prioritize alerts. A high entropy score suggests the IP is not targeting a specific service but is instead scanning a wide range of ports, which is a classic reconnaissance technique.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet gateway traffic"
      - "SIEM platform hosting threat intelligence feeds."
    range: "last 24 hours"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (ip) in (alerted_ips) CALCULATE ShannonEntropy(destination_ports) OVER last_24_hours. PRIORITIZE IF entropy > 3.5
  - question: "Can we predict if new inbound connections from previously unknown IPs are malicious based on their network traffic characteristics?"
    context: |
      This question uses a machine learning model to proactively identify potentially malicious scanners that are not yet on threat intelligence lists. By training a classifier on features from known benign and malicious connections, the model can score new traffic and flag suspicious activity with a high degree of confidence, enabling detection of novel threats.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet gateway traffic"
      - "SIEM platform hosting threat intelligence feeds."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SCORE (new_inbound_connection) USING (logistic_regression_model). ALERT IF probability_malicious > 0.9
  - question: "Are there any inbound HTTP requests containing User-Agents, URIs, or payloads that match signatures of known vulnerability scanners or exploitation attempts?"
    context: |
      This question focuses on detecting application-layer reconnaissance by inspecting HTTP traffic for tell-tale signs of automated scanning tools (like Nmap or Nikto) or probes for specific vulnerabilities (like Log4Shell). Using regular expressions to match these signatures is a highly effective method for finding low-hanging fruit and known attack patterns.
    answer_sources:
      - "Zeek http.log"
      - "Web-facing application servers"
      - "Reverse proxies and load balancers where network traffic is inspected."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SEARCH http_logs WHERE user_agent MATCHES (scanner_regex) OR uri MATCHES (attack_pattern_regex) OR post_body MATCHES (exploit_regex)
  - question: "Are any external source IPs generating an unusually high ratio of client-error (4xx) HTTP responses, suggesting forceful browsing or endpoint discovery?"
    context: |
      This question identifies scanning activity by looking for its side effects. An adversary searching for hidden pages or directories will generate many requests for non-existent resources, resulting in a high number of 4xx errors. By baselining normal error rates, we can flag any IP that significantly deviates from the norm as a potential scanner.
    answer_sources:
      - "Zeek http.log"
      - "Web-facing application servers"
      - "Reverse proxies and load balancers where network traffic is inspected."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (source_ip) CALCULATE ratio = (count_4xx_responses / total_requests) in 1_hour_window. ALERT IF ratio > 95th_percentile_baseline
  - question: "Can we use a machine learning model to detect novel or obfuscated scanning and injection patterns in HTTP request URIs?"
    context: |
      This question addresses the limitations of signature-based detection. Sophisticated attackers may try to obfuscate their probes to evade regex rules. A character-level CNN or NLP model can learn the underlying structure of malicious requests, allowing it to identify new and previously unseen attack patterns that would otherwise be missed.
    answer_sources:
      - "Zeek http.log"
      - "Web-facing application servers"
      - "Reverse proxies and load balancers where network traffic is inspected."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          CLASSIFY (http_request_uri) USING (nlp_model). ALERT IF classification is 'malicious' with high_confidence
  - question: "Is any single external IP address connecting to an excessive number of unique hosts (horizontal scan) or unique ports on a single host (vertical scan)?"
    context: |
      This question aims to detect the two primary forms of network scanning using simple thresholds. A vertical scan (many ports, one host) suggests an adversary is fingerprinting services on a specific machine. A horizontal scan (many hosts, one port) suggests a search for a specific vulnerable service across the network. Thresholds must be tuned to the specific environment to be effective.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring DMZ and internet gateway traffic"
      - "SIEM platform used for data aggregation and analysis."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (source_ip) in 5_min_window: COUNT unique(dest_hosts), COUNT unique(dest_ports). ALERT IF host_count > 50 OR port_count > 25
  - question: "Is any external source IP exhibiting anomalous scanning behavior when compared to a statistical baseline of normal traffic?"
    context: |
      This question enhances simple thresholding by using statistical baselining to define 'normal' for the network. By flagging source IPs that deviate significantly (e.g., more than 3 standard deviations) from the established mean for distinct hosts or ports contacted, this method can adapt to changing network dynamics and provide more reliable alerting than static thresholds.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring DMZ and internet gateway traffic"
      - "SIEM platform used for data aggregation and analysis."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (source_ip) in 15_min_window: CALCULATE distinct_host_count, distinct_port_count. ALERT IF count > (hourly_mean + 3 * std_dev)
  - question: "Can we identify scanning activity by finding network connections that are outliers compared to the dense clusters of legitimate traffic?"
    context: |
      This question applies unsupervised machine learning to identify scanners. Legitimate clients typically communicate with a predictable set of services, forming dense clusters in a dataset of connections. Scanners, however, connect to many disparate hosts and ports, causing them to appear as 'noise' or part of sparse clusters when analyzed with an algorithm like DBSCAN. This is effective for finding scanners without pre-existing labels or signatures.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring DMZ and internet gateway traffic"
      - "SIEM platform used for data aggregation and analysis."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          APPLY DBSCAN clustering to (source_ip, dest_ip, dest_port) tuples. IDENTIFY source_ips classified as noise_points as scanners
  - question: "Following the disclosure of a new critical vulnerability, are we seeing connection attempts to the affected service/port from new, previously unseen IP addresses?"
    context: |
      This question provides a highly targeted, intelligence-driven approach to detection. When a new vulnerability is announced (e.g., via CISA KEV), adversaries race to exploit it. By correlating this intelligence with network traffic, we can create a temporary, high-alert rule to scrutinize any new sources attempting to connect to the vulnerable port, catching opportunistic attackers.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet-facing services (web, email, VPN)"
      - "SIEM platform for time-series analysis and correlation with vulnerability intelligence."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          ON (new_vulnerability_alert for port X): ALERT on (connection_to_port_X) IF source_ip NOT_SEEN in last_30_days
  - question: "Is there a statistically significant spike in the number of unique source IPs connecting to any of our critical internet-facing services?"
    context: |
      This question aims to detect distributed scanning, where an attack is spread across many source IPs to evade simple single-source detection. By monitoring a time series of unique source IP counts for each service and using a moving average and standard deviation, we can automatically detect a sudden, anomalous increase that indicates a coordinated, large-scale scanning event.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet-facing services (web, email, VPN)"
      - "SIEM platform for time-series analysis and correlation with vulnerability intelligence."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (service_port): CALCULATE hourly_unique_source_ip_count. ALERT IF current_count > (24h_moving_avg + 4 * std_dev)
  - question: "Does the current traffic volume to a critical service port represent a significant deviation from its forecasted, seasonally-adjusted normal behavior?"
    context: |
      This question uses a more sophisticated time series model (like ARIMA or Prophet) to detect distributed scans. These models can account for regular patterns in traffic (e.g., time of day, day of week) to create a more accurate forecast of expected behavior. An alert is generated only when the observed traffic is a true anomaly, reducing false positives from predictable traffic surges.
    answer_sources:
      - "Zeek conn.log"
      - "Network sensors monitoring internet-facing services (web, email, VPN)"
      - "SIEM platform for time-series analysis and correlation with vulnerability intelligence."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (service_port): FORECAST expected_traffic using (Prophet_model). ALERT IF observed_traffic significantly deviates from forecast
  - question: "Has a known network scanning tool been executed on a non-administrative endpoint?"
    context: |
      This question focuses on detecting internal reconnaissance by monitoring for the explicit use of scanning tools (like nmap.exe) or reconnaissance-focused PowerShell cmdlets. Triggering an alert when these processes are run on standard user workstations, which have no legitimate reason to perform network scans, provides a high-fidelity signal of potential lateral movement or internal discovery.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Event ID 4104"
      - "Zeek conn.log"
      - "Endpoint Detection and Response (EDR) agents on workstations and servers"
      - "Network sensors monitoring internal (east-west) traffic segments"
      - "Domain Controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          ALERT ON (process_creation_event) IF process_name IN (scanning_tool_list) AND host NOT IN (admin_asset_group)
  - question: "Has any internal host suddenly started contacting an anomalously high number of other internal IPs or ports compared to its own baseline?"
    context: |
      This question detects internal scanning by establishing a behavioral baseline for each host. Every device has a typical communication pattern. Using a statistical method like IQR, we can define what 'normal' looks like for each host and then alert when a host's activity (e.g., number of unique destinations) dramatically increases, indicating it may have been compromised and is now being used for internal network discovery.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Event ID 4104"
      - "Zeek conn.log"
      - "Endpoint Detection and Response (EDR) agents on workstations and servers"
      - "Network sensors monitoring internal (east-west) traffic segments"
      - "Domain Controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR EACH (host): ESTABLISH baseline_connection_count_IQR. ALERT IF current_1h_count > (Q3 + 1.5 * IQR)
  - question: "Are we observing rare or unusual communication pathways on the internal network graph that could indicate reconnaissance?"
    context: |
      This question models the internal network as a graph of communicating hosts and uses machine learning to find anomalous connections. Normal operations create a predictable graph structure (e.g., workstations talk to file servers, not directly to each other). An adversary performing reconnaissance will create new, unusual edges on this graph (e.g., a marketing laptop trying to connect to a database admin port). Detecting these rare edges can reveal lateral movement in its early stages.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows PowerShell Event ID 4104"
      - "Zeek conn.log"
      - "Endpoint Detection and Response (EDR) agents on workstations and servers"
      - "Network sensors monitoring internal (east-west) traffic segments"
      - "Domain Controllers."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          MODEL internal_network as graph. FOR EACH (new_connection): CALCULATE rarity_score. ALERT IF score is high