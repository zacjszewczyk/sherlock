name: "T1409: Stored Application Data"
id: "f3d7b9e0-5a8c-4b1e-8f9a-2c7d6e5b4a3c"
description: "This playbook addresses the threat of adversaries accessing and exfiltrating sensitive application data from managed mobile devices. It provides investigative questions to detect several variations of this technique, including unauthorized inter-process communication where one app accesses another's sandboxed data, anomalous network activity indicative of data exfiltration (such as unusually large uploads or connections to malicious domains), and the staging of sensitive data in world-readable external storage locations. The goal is to identify compromised applications or malicious software attempting to steal data stored by legitimate applications."
type: "technique"
related:
  - "TA0035: Collection"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Has any process accessed another application's sandboxed storage container in a way that is not explicitly allowlisted, or has any process attempted to make an application's private storage world-readable?"
    context: "This question aims to detect direct attempts by one application to steal data from another's private storage area (the sandbox). Malicious apps often try to read files from legitimate corporate apps to find credentials, tokens, or other sensitive data. The action also looks for attempts to change file permissions (e.g., `chmod 777`), which is a blatant technique to break down sandbox protections and make private data accessible to any app on the device."
    answer_sources:
      - "Mobile EDR file access audit logs"
      - "Mobile EDR process execution logs"
      - "MDM compliance violation alerts"
      - "Internal application storage directories (e.g., /data/data/ on Android, Application Sandboxes on iOS) on all managed mobile endpoints."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SEARCH file_access_logs
          WHERE source_process_package != target_file_path_package
          AND (source_process_package, target_file_path_package) NOT IN allowlist
          ---
          SEARCH process_execution_logs
          WHERE command CONTAINS "chmod 777" OR command CONTAINS "chmod 666"
          AND target_path CONTAINS "/data/data/"
  - question: "Is any managed application exhibiting anomalous file access patterns, such as accessing an unusual set of directories or scanning for files?"
    context: "This question seeks to identify subtler signs of compromise. Instead of just looking for a single forbidden action, it establishes a baseline of normal behavior for each app. A significant deviation from this baseline, measured by the Jaccard index (for directory sets) or Shannon entropy (for directory name randomness), can indicate that the app is compromised and is now being used to probe the file system for valuable data beyond its normal scope."
    answer_sources:
      - "Mobile EDR file access audit logs"
      - "Mobile EDR process execution logs"
      - "MDM compliance violation alerts"
      - "Internal application storage directories (e.g., /data/data/ on Android, Application Sandboxes on iOS) on all managed mobile endpoints."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each application:
            baseline_dirs = GET_BASELINE_DIRECTORIES(app, last_30_days)
            current_dirs = GET_CURRENT_DIRECTORIES(app, last_hour)
            similarity = JACCARD_SIMILARITY(baseline_dirs, current_dirs)
            IF similarity < 0.5 THEN ALERT
          ---
          FOR each process:
            accessed_dirs = GET_ACCESSED_DIRS(process, last_5_minutes)
            entropy = SHANNON_ENTROPY(accessed_dirs)
            IF entropy > 95th_percentile_for_process THEN ALERT
  - question: "Are there any statistically unusual or previously unseen interactions between applications on mobile devices, as identified by a graph-based anomaly detection model?"
    context: "This question uses a more advanced, machine learning-based approach to detect suspicious activity. By modeling all inter-app file access as a graph, we can identify rare and potentially malicious interactions that might not be caught by simple rules. For example, a corporate email app suddenly accessing the data container of a social media app would be a highly anomalous edge in the graph, warranting immediate investigation."
    answer_sources:
      - "Mobile EDR file access audit logs"
      - "Mobile EDR process execution logs"
      - "MDM compliance violation alerts"
      - "Internal application storage directories (e.g., /data/data/ on Android, Application Sandboxes on iOS) on all managed mobile endpoints."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each new file_access_event between app_A and app_B:
            event_features = EXTRACT_FEATURES(event)
            anomaly_score = GRAPH_MODEL.SCORE(app_A, app_B, event_features)
            IF anomaly_score > 99th_percentile THEN ALERT
  - question: "Has a managed mobile device established a network connection to a known malicious IP/domain or a newly registered domain?"
    context: "This question focuses on detecting data exfiltration by checking the destination of outbound network traffic. Connections to IPs or domains present on threat intelligence feeds are a strong indicator of malicious activity. Similarly, connections to very new domains (e.g., registered in the last 30 days) are suspicious, as attackers frequently use newly created domains for command and control or data exfiltration to evade reputation-based blocking."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek intel.log"
      - "Passive DNS logs"
      - "Corporate Wi-Fi network gateways; VPN concentrators; Cloud Access Security Broker (CASB) egress points"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SEARCH conn_logs from mobile_IP_range
          JOIN with threat_intel_logs on destination_ip
          OR JOIN with dns_logs on transaction_id
            WHERE dns_query_domain_age < 30_days
          IF match THEN ALERT
  - question: "Has any mobile device exhibited a significant anomaly in its outbound network traffic, such as an unusually large data upload, especially if it happens quickly or over an uncommon service?"
    context: "This question aims to detect exfiltration by baselining a device's typical network behavior and looking for outliers. A device suddenly sending a much larger amount of data than it normally does (e.g., >99.5th percentile) is a primary indicator of exfiltration. The suspicion is strengthened if this large upload happens very quickly (low duration) or uses a network service (port/protocol) that the device doesn't typically use, suggesting a purpose-built exfiltration channel."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek intel.log"
      - "Passive DNS logs"
      - "Corporate Wi-Fi network gateways; VPN concentrators; Cloud Access Security Broker (CASB) egress points"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each new connection from mobile_device:
            profile = GET_NETWORK_PROFILE(mobile_device, last_30_days)
            IF connection.bytes_out > profile.percentile(99.5) THEN
              ALERT(Low)
              IF connection.duration < profile.percentile(5) OR connection.service NOT IN profile.common_services THEN
                ESCALATE_ALERT(High)
  - question: "Are there any outbound network connections from mobile devices that are identified as anomalous by a machine learning model trained on their normal behavior?"
    context: "This question uses a holistic machine learning approach (e.g., One-Class SVM or Isolation Forest) to identify anomalous network connections. Unlike rules that focus on specific metrics, this model considers a combination of many features simultaneously (bytes, duration, protocol, port, time of day, etc.). This allows it to detect more complex and subtle deviations from a device's established network 'fingerprint,' which could signify a compromise."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek intel.log"
      - "Passive DNS logs"
      - "Corporate Wi-Fi network gateways; VPN concentrators; Cloud Access Security Broker (CASB) egress points"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each new connection from mobile_device:
            features = EXTRACT_FEATURES(connection)
            is_outlier = ML_MODEL.PREDICT(features)
            IF is_outlier THEN ALERT
  - question: "Has a managed corporate application written a file to a world-readable external storage location, especially if the filename suggests it contains sensitive data?"
    context: "This question addresses the tactic of 'staging' data for exfiltration. An attacker might compromise a legitimate application and use it to save sensitive data to a public folder (like 'Downloads'). This makes the data accessible to other malicious apps. This query specifically looks for files being written to these public locations with names like `backup.zip`, `creds.txt`, or `export.db`, which are strong indicators of malicious intent."
    answer_sources:
      - "Mobile EDR file write event logs (including process name, file path, and file hash)"
      - "Mobile DLP file content scan results"
      - "Publicly accessible external storage directories on managed mobile devices (e.g., /storage/emulated/0/, /sdcard/, and their subdirectories like Download and Documents)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SEARCH file_write_logs
          WHERE source_process IN managed_apps
          AND target_path STARTS WITH "/storage/emulated/0/" OR "/sdcard/"
          AND filename MATCHES '(?i).*(backup|dump|export|creds|password|secret).*'
          IF match THEN ALERT
  - question: "Has a managed application written an unusually high number of files to external storage, or has it written files with abnormally high entropy (suggesting encryption or compression)?"
    context: "This question looks for two statistical anomalies related to data staging. First, a sudden spike in the number of files an app writes to external storage could mean it's breaking up a large data store into smaller chunks. Second, high entropy in a file (especially a plain text file like a .txt) suggests the data has been encrypted or compressed, a common step attackers take to obfuscate stolen data before exfiltration."
    answer_sources:
      - "Mobile EDR file write event logs (including process name, file path, and file hash)"
      - "Mobile DLP file content scan results"
      - "Publicly accessible external storage directories on managed mobile devices (e.g., /storage/emulated/0/, /sdcard/, and their subdirectories like Download and Documents)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each file_written_to_external_storage:
            entropy = CALCULATE_ENTROPY(file_content)
            baseline_entropy = GET_BASELINE_ENTROPY(file_extension)
            IF entropy > baseline_entropy.percentile(99) THEN ALERT
          ---
          FOR each app:
            hourly_write_count = COUNT file_writes to external storage in last hour
            baseline_count = GET_HOURLY_BASELINE(app, last_30_days)
            IF hourly_write_count > (baseline_count.mean + 3 * baseline_count.std_dev) THEN ALERT
  - question: "Has a managed application written a file to external storage that an NLP model has classified as containing sensitive information like PII, credentials, or API keys?"
    context: "This question represents the most direct method for detecting sensitive data leakage. Instead of relying on filenames or entropy, it involves actively scanning the content of newly created files with a sophisticated Natural Language Processing (NLP) model. A positive classification with high confidence is a very strong signal that an application is leaking sensitive data and requires an immediate, automated response."
    answer_sources:
      - "Mobile EDR file write event logs (including process name, file path, and file hash)"
      - "Mobile DLP file content scan results"
      - "Publicly accessible external storage directories on managed mobile devices (e.g., /storage/emulated/0/, /sdcard/, and their subdirectories like Download and Documents)."
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          ON file_write_event to external_storage by managed_app:
            file_content_sample = GET_FILE_SAMPLE(event)
            classification = NLP_MODEL.PREDICT(file_content_sample)
            IF classification.label == "Sensitive" AND classification.confidence > 0.95 THEN
              CREATE_CRITICAL_INCIDENT