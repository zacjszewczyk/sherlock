name: "T1057: Process Discovery"
id: "9a7b1c3d-4e5f-4a6b-8c9d-0e1f2a3b4c5d"
description: "This playbook helps determine if an adversary is performing process discovery on systems or network devices. It focuses on identifying the use of known discovery tools via hash matching, the abuse of native system utilities (e.g., tasklist.exe, ps) with specific reconnaissance arguments, process discovery commands spawned by anomalous parent processes (e.g., WINWORD.EXE), unusually high volumes of discovery commands from a single host or user, and anomalous remote administration sessions on network devices that involve process enumeration commands."
type: "technique"
related:
  - "TA0007: Discovery"
contributors:
  - "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are any newly created processes matching file hashes from known discovery tool threat intelligence feeds?"
    context: "This question aims to identify the direct execution of known malicious or dual-use discovery tools by comparing the file hash of every new process against a threat intelligence database. A match is a strong indicator of compromise, as it confirms a tool used by adversaries is running on the system."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "User Workstations"
      - "Domain Controllers"
      - "Application Servers"
      - "Web Servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each process_creation_event
            GET file_hash
            IF file_hash IN threat_intel_feed_of_discovery_tools
              ALERT on event
  - question: "Is a process that matches a known malicious hash for a discovery tool rare within the environment?"
    context: "This question helps prioritize alerts by focusing on rarity. Widespread software might be misclassified by a threat feed, creating false positives. By calculating the prevalence of a matched hash and flagging only those with very low prevalence (e.g., on a handful of machines), we can isolate targeted, potentially malicious activity from common, benign software."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "User Workstations"
      - "Domain Controllers"
      - "Application Servers"
      - "Web Servers"
    range: "last 30 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each process_match_from_previous_query
            CALCULATE prevalence (count of distinct hosts) over last 30 days
            IF prevalence < threshold (e.g., 5 hosts)
              INCREASE alert priority
  - question: "Can a machine learning model, using context like parent process and user, classify a process execution as a malicious discovery attempt?"
    context: "This question leverages machine learning to improve detection accuracy. A simple hash match can be noisy. By training a model on features like the parent process, user context, and command-line arguments, we can make a more informed decision about whether the execution is truly malicious, adding a layer of contextual intelligence to the alert."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "User Workstations"
      - "Domain Controllers"
      - "Application Servers"
      - "Web Servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each process_creation_event
            EXTRACT features (hash_match, parent_process, user, cmd_line_entropy, prevalence)
            INPUT features into trained classification_model
            IF model_prediction == 'malicious'
              ALERT on event
  - question: "Are native system utilities like `tasklist` or `Get-Process` being executed with verbose or formatting arguments indicative of reconnaissance?"
    context: "This question targets the abuse of legitimate system tools for discovery. Adversaries often use specific command-line flags (`/v`, `/m`, `Format-List *`) to gather detailed process information. This query uses regular expressions to hunt for these specific argument patterns, which are less common in normal administrative use."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "Windows Event ID 4104 (PowerShell Script Block Logging)"
      - "User Workstations"
      - "Domain Controllers"
      - "Critical Servers"
      - "Development Environments"
      - "Centralized Log Management Platform (SIEM)"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SEARCH process_creation_logs and powershell_logs
          WHERE (process_name IN ['tasklist.exe', 'wmic.exe', 'ps', 'powershell.exe'])
          AND (command_line MATCHES regex for ['/v', '/m', 'get /format:list', 'aux', 'Format-List *'])
          ALERT on event
  - question: "Has any host shown a statistical anomaly in the frequency or command-line complexity of process discovery commands?"
    context: "This question seeks to identify anomalous behavior on a per-host basis. By establishing a baseline of normal discovery command usage for each machine, we can detect significant deviations. A sudden spike in frequency or an unusual increase in command-line entropy can indicate automated scripting or obfuscation techniques used by an adversary."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "Windows Event ID 4104 (PowerShell Script Block Logging)"
      - "User Workstations"
      - "Domain Controllers"
      - "Critical Servers"
      - "Development Environments"
      - "Centralized Log Management Platform (SIEM)"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each host
            CALCULATE baseline (mean, stddev) of hourly discovery command frequency/entropy
          FOR each new discovery command event
            IF current_hourly_frequency > (baseline_mean + 3 * baseline_stddev)
              ALERT on host
  - question: "Is any user account executing process discovery commands at a rate that is anomalous compared to their own historical behavior?"
    context: "This question focuses on user-centric anomalies. Different users have different work patterns. A time-series model learns the typical rhythm of administrative activity for each user. An alert is triggered when a user's activity deviates from their own predicted pattern, which is a strong indicator of either credential compromise or insider threat."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "Windows Event ID 4104 (PowerShell Script Block Logging)"
      - "User Workstations"
      - "Domain Controllers"
      - "Critical Servers"
      - "Development Environments"
      - "Centralized Log Management Platform (SIEM)"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each user
            TRAIN time-series model on historical rate of discovery commands
          FOR each new time window
            IF observed_rate deviates significantly from model_forecast
              ALERT on user
  - question: "Are process discovery tools being launched by unusual parent processes like Microsoft Office applications, web browsers, or web servers?"
    context: "This question identifies a classic indicator of compromise where an exploited application is used to spawn a shell or run reconnaissance commands. Legitimate discovery commands are almost always initiated from a shell (`cmd.exe`, `powershell.exe`) or scheduler. A parent like `WINWORD.EXE` or `w3wp.exe` is highly suspicious."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "User Workstations (especially for high-value users)"
      - "Public-Facing Web Servers"
      - "Application Servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          SEARCH process_creation_logs
          WHERE child_process IN ['tasklist.exe', 'Get-Process', 'ps']
          AND parent_process IN ['WINWORD.EXE', 'EXCEL.EXE', 'CHROME.EXE', 'w3wp.exe', etc.]
          ALERT on event
  - question: "Has a statistically rare parent-child process relationship involving a discovery tool occurred?"
    context: "This question moves beyond a static list of bad parents to a data-driven approach. By analyzing historical data, we can determine the probability of any given parent process launching a discovery tool. Events with an extremely low probability are flagged as anomalous, allowing the detection of novel or environment-specific attack patterns."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "User Workstations (especially for high-value users)"
      - "Public-Facing Web Servers"
      - "Application Servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          BUILD frequency table P(Child | Parent) from historical data
          FOR each new discovery_tool_creation_event
            GET Parent and Child process
            IF P(Child | Parent) < low_threshold (e.g., 0.0001)
              ALERT on event
  - question: "Can a graph-based model detect an anomalous process creation structure on a host, such as an Office application spawning a discovery tool?"
    context: "This question applies advanced graph analytics to model the entire chain of process creations on a host. A Graph Neural Network (GNN) can learn what 'normal' process trees look like. It can then identify structurally anomalous relationships, such as a process from an unexpected lineage spawning a discovery tool, which might be missed by simple parent-child rules."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "User Workstations (especially for high-value users)"
      - "Public-Facing Web Servers"
      - "Application Servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each host
            BUILD process creation graph
            INPUT graph into trained GNN anomaly detection model
            IF model flags an anomalous edge (e.g., Office -> tasklist.exe)
              ALERT on host/edge
  - question: "Has any single host or user executed an unusually high number of process discovery commands in a very short time frame?"
    context: "This question serves as a simple but effective tripwire for automated reconnaissance. A human administrator is unlikely to run `tasklist` over 20 times in 5 minutes. Such a high volume strongly suggests a script is at work, enumerating processes as part of an attack."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "All Endpoints and Servers"
      - "VPN Concentrators"
      - "Active Directory Domain Controllers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each 5-minute window
            COUNT discovery commands per host/user
            IF count > 20
              ALERT on host/user
  - question: "Is the rate of process discovery commands from a specific host or user statistically significant compared to their own baseline?"
    context: "This question refines the simple threshold rule by using personalized, dynamic baselines. Instead of a fixed number, it identifies what is abnormal for a *specific* user or host. A Z-score greater than 3 indicates a rare event, making it a high-confidence signal for anomalous activity."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "All Endpoints and Servers"
      - "VPN Concentrators"
      - "Active Directory Domain Controllers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each user/host
            CALCULATE baseline (mean, stddev) of discovery commands per hour
          FOR each hour
            IF current_count > (baseline_mean + 3 * baseline_stddev)
              ALERT on user/host
  - question: "Can a clustering algorithm identify dense groups of process discovery events that indicate automated activity?"
    context: "This question uses unsupervised machine learning to find 'hotspots' of activity without pre-defined thresholds. A DBSCAN algorithm will naturally group events that are close together in time for the same host/user. These dense clusters represent rapid, automated execution, which the algorithm can distinguish from sporadic, normal 'noise' events."
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 1 (Sysmon)"
      - "All Endpoints and Servers"
      - "VPN Concentrators"
      - "Active Directory Domain Controllers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          COLLECT discovery command events with (host, user, timestamp)
          APPLY DBSCAN algorithm to the collected data points
          IF a dense cluster is identified
            ALERT on the events in the cluster
  - question: "Is a network device being administered from an unauthorized IP address, followed by process discovery commands?"
    context: "This question correlates multiple data sources to detect unauthorized remote administration of network infrastructure. It checks not only for the suspicious command (`show process`) but also verifies that the administrative session originates from a trusted location. A successful login from an untrusted IP followed by reconnaissance is a major red flag."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek ssh.log"
      - "RADIUS/TACACS+ Authentication Logs"
      - "Network device syslog"
      - "Network Management Subnet"
      - "Core Routers and Switches"
      - "Firewalls"
      - "VPN Concentrators"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          CORRELATE auth_logs with connection_logs for network devices
          FOR each successful login
            IF source_ip NOT IN allow_list AND subsequent syslog/ssh_log contains 'show process'
              ALERT on session
  - question: "Has a network administrator's session involving process discovery deviated from their established behavioral baseline?"
    context: "This question aims to detect compromised administrator accounts by baselining their typical behavior. An attacker using stolen credentials is unlikely to match the legitimate user's source location, working hours, or session patterns. An alert on multiple deviations provides a high-fidelity signal that the account may be compromised."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek ssh.log"
      - "RADIUS/TACACS+ Authentication Logs"
      - "Network device syslog"
      - "Network Management Subnet"
      - "Core Routers and Switches"
      - "Firewalls"
      - "VPN Concentrators"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          FOR each admin_user
            BUILD baseline of (source_IPs, login_hours, session_duration)
          FOR each new session with process discovery
            COUNT deviations from user's baseline
            IF deviation_count >= 2
              ALERT on session
  - question: "Did a sequence of commands executed on a network device, including process discovery, follow a statistically improbable path?"
    context: "This question analyzes the *intent* behind a session by modeling the sequence of commands. Legitimate administrators follow predictable workflows. An attacker performing reconnaissance will likely issue commands in a different, less logical order. A Markov model can learn the normal command-to-command transitions and flag sessions with rare sequences, indicating an exploratory, non-standard session."
    answer_sources:
      - "Zeek conn.log"
      - "Zeek ssh.log"
      - "RADIUS/TACACS+ Authentication Logs"
      - "Network device syslog"
      - "Network Management Subnet"
      - "Core Routers and Switches"
      - "Firewalls"
      - "VPN Concentrators"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          TRAIN Markov model on historical command sequences per session
          FOR each new session
            CALCULATE probability of the observed command sequence
            IF probability < low_threshold
              ALERT on session