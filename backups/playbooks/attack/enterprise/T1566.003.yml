name: T1566.003: Spearphishing via Service
id: f8c2b544-7f28-4f27-a9f6-3c0f4d386b1a
description: This playbook helps investigate whether an adversary has gained initial access by delivering a malicious payload via a third-party service. It focuses on detecting signs such as downloads of known-bad files, suspicious process creation by office applications after a download, downloads of high-risk file types or deceptively named files, subsequent connections to newly registered or suspicious domains, and an unusually high number of hosts downloading the same file from a third-party service in a short period.
type: technique
related:
- TA0001: Initial Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
- question: Have any files downloaded from third-party services been identified as malicious by our threat intelligence feeds?
  context: This question aims to detect known malicious files being delivered through legitimate, non-corporate web services. By correlating network logs of file transfers with threat intelligence, we can identify the direct download of malware. A match provides a high-confidence indicator of a spearphishing attempt.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek conn.log
  - Network Security Monitoring (NSM) sensors at internet egress points
  - Centralized log aggregator (SIEM)
  - Threat intelligence platform.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      JOIN files.log and http.log on uid
      FILTER http.log.host IN (third_party_services_list)
      LOOKUP files.log.hash in threat_intelligence_feed
      LOOKUP http.log.host in threat_intelligence_feed
      ALERT on match
- question: Is there an anomalous spike in the rate of malicious file downloads from any specific third-party service?
  context: This question seeks to identify a targeted campaign that leverages a specific third-party service for malware delivery. A sudden increase in the proportion of malicious downloads from a single service, compared to its historical baseline, can indicate that adversaries are exploiting that platform to target the organization.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek conn.log
  - Network Security Monitoring (NSM) sensors at internet egress points
  - Centralized log aggregator (SIEM)
  - Threat intelligence platform.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each third_party_service:
        CALCULATE 30-day baseline of (TI_matches / total_downloads)
        MONITOR hourly rate of (TI_matches / total_downloads)
        ALERT if hourly_rate > 99th_percentile_of_baseline
- question: Can we proactively identify potentially malicious, previously unseen files downloaded from third-party services using machine learning?
  context: This question focuses on using a predictive model to detect zero-day or unknown threats that are not yet in threat intelligence feeds. By analyzing various features of a file download (MIME type, size, domain reputation, etc.), the model can score the likelihood of it being malicious, enabling detection of novel spearphishing payloads.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Zeek conn.log
  - Network Security Monitoring (NSM) sensors at internet egress points
  - Centralized log aggregator (SIEM)
  - Threat intelligence platform.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each download from third_party_service:
        EXTRACT features (MIME type, size, domain age, etc.)
        INPUT features into classification_model
        GET malicious_confidence_score
        ALERT if score > 0.90
- question: Has an office application spawned a command shell or scripting engine shortly after a file was downloaded from a third-party service?
  context: This question looks for a common post-exploitation pattern where a malicious document, opened by an office application, executes a script or command. Correlating a file download from a risky source with subsequent suspicious process creation on the same host within a short time window is a strong indicator of successful code execution from a spearphishing payload.
  answer_sources:
  - Windows Event ID 4688
  - Zeek files.log
  - Zeek http.log
  - Endpoint Detection and Response (EDR) agents on user workstations
  - Virtual Desktop Infrastructure (VDI) environment
  - Centralized Security Information and Event Management (SIEM) system.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON file_download_event from third_party_service:
        MONITOR process_creation_events on same host for 5 minutes
        ALERT if (parent_process is office_app AND child_process is shell/script_engine)
- question: Has an office application spawned an unusual or anomalous child process for a specific user?
  context: This question aims to detect deviations from normal user and application behavior. By baselining the typical child processes spawned by office applications for each user, we can identify when a new or unexpected process is created (e.g., winword.exe spawning ftp.exe), which could indicate malicious activity. High command-line entropy can also signal obfuscated or complex commands often used by adversaries.
  answer_sources:
  - Windows Event ID 4688
  - Zeek files.log
  - Zeek http.log
  - Endpoint Detection and Response (EDR) agents on user workstations
  - Virtual Desktop Infrastructure (VDI) environment
  - Centralized Security Information and Event Management (SIEM) system.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each user, FOR each office_app:
        CREATE 90-day baseline of child_processes and command_line_entropy
      ON new process_creation_event:
        ALERT if child_process is not in baseline
        ALERT if command_line_entropy > (baseline_mean + 3 * baseline_std_dev)
- question: Following a download from a third-party service, did any resulting process execution chains deviate significantly from the organizational norm?
  context: This question uses advanced modeling to understand not just single parent-child relationships, but entire trees of process execution. A graph-based model can learn what normal process activity looks like across the organization. Following a risky download, it can flag entire execution chains that are structurally anomalous, potentially identifying sophisticated, multi-stage malware execution that might otherwise be missed.
  answer_sources:
  - Windows Event ID 4688
  - Zeek files.log
  - Zeek http.log
  - Endpoint Detection and Response (EDR) agents on user workstations
  - Virtual Desktop Infrastructure (VDI) environment
  - Centralized Security Information and Event Management (SIEM) system.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      CREATE baseline graph_model of process_chains
      AFTER file_download from third_party_service:
        CAPTURE subsequent process_chain
        SCORE chain with graph_model
        ALERT if score is high_outlier
- question: Are files with high-risk types or deceptive filenames being downloaded from third-party services?
  context: This question aims to identify files that are inherently risky or are crafted to deceive users. Blocking or alerting on specific high-risk MIME types (like HTA files) or filenames with double extensions (e.g., invoice.pdf.exe) can prevent the initial execution of a malicious payload delivered via a third-party service.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Network Security Monitoring (NSM) sensors at the network perimeter
  - Web content filters
  - Centralized log aggregator (SIEM).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR downloads from third_party_services
      ALERT if filename matches regex for double_extensions
      ALERT if mime_type is in high_risk_blocklist
- question: Is there an unusual increase in the proportion of high-risk file types being downloaded from a specific third-party service?
  context: This question applies behavioral analytics to file downloads. Instead of just looking at single risky files, it monitors for a shift in the overall composition of file types from a service. A sudden spike in the ratio of high-risk files (like executables or macro-enabled documents) can indicate that a service is being abused for a large-scale malware distribution campaign.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Network Security Monitoring (NSM) sensors at the network perimeter
  - Web content filters
  - Centralized log aggregator (SIEM).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each third_party_service:
        CALCULATE 30-day baseline of (high_risk_file_types / total_files)
        MONITOR hourly proportion of high_risk_file_types
        ALERT if hourly_proportion > 98th_percentile_of_baseline
- question: Can we use file metadata to predict if a file downloaded from a third-party service is malicious?
  context: This question leverages machine learning on file metadata to identify potentially malicious downloads. Features like filename length, character randomness (entropy), and the presence of enticing keywords ('invoice', 'payment') can be strong indicators of malicious intent, even for file types not traditionally considered high-risk. This helps catch novel or cleverly disguised threats.
  answer_sources:
  - Zeek files.log
  - Zeek http.log
  - Network Security Monitoring (NSM) sensors at the network perimeter
  - Web content filters
  - Centralized log aggregator (SIEM).
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each download from third_party_service:
        EXTRACT metadata features (filename entropy, length, keywords)
        INPUT features into classification_model
        ALERT if model_score indicates high_malicious_probability
- question: Has a host connected to a newly registered domain shortly after downloading a file from a third-party service?
  context: This question seeks to identify potential command-and-control (C2) beaconing. Adversaries frequently use newly registered domains for C2 infrastructure. Correlating a file download with a subsequent connection to a domain created within the last 30 days is a strong signal that the downloaded file was malicious and has established a connection back to the attacker.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Zeek dns.log
  - DNS logs from internal resolvers
  - Firewall logs from egress points
  - Network Security Monitoring (NSM) sensors
  - Threat intelligence feeds.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      ON file_download from third_party_service:
        MONITOR DNS queries from same host for 5 minutes
        FOR each query, get domain_registration_date
        ALERT if domain_age < 30 days
- question: After a file download, is the host making DNS queries for domains with unusually random-looking names?
  context: This question aims to detect algorithmically generated domains (DGAs), a common technique for C2 communications. High-entropy or "random-looking" domain names are often used to make C2 infrastructure resilient. Alerting on queries to high-entropy domains that are also rare for the organization can uncover malware trying to phone home.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Zeek dns.log
  - DNS logs from internal resolvers
  - Firewall logs from egress points
  - Network Security Monitoring (NSM) sensors
  - Threat intelligence feeds.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      AFTER file_download from third_party_service:
        MONITOR DNS queries from host
        CALCULATE entropy of queried_domain_name
        ALERT if entropy > 3.5 AND domain is rare for organization
- question: Is a host exhibiting anomalous outbound network traffic patterns after downloading a file from a third-party service?
  context: This question uses time-series analysis to find deviations in a host's normal network behavior. After a potentially malicious file download, a significant, unexpected increase in the volume or frequency of outbound connections can indicate C2 beaconing or data exfiltration activity initiated by the malware.
  answer_sources:
  - Zeek files.log
  - Zeek conn.log
  - Zeek dns.log
  - DNS logs from internal resolvers
  - Firewall logs from egress points
  - Network Security Monitoring (NSM) sensors
  - Threat intelligence feeds.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FORECAST expected outbound connection_count and data_volume per hour for each host
      AFTER file_download from third_party_service:
        COMPARE actual outbound traffic to forecast
        ALERT on significant positive deviation
- question: Have an unusually high number of hosts downloaded the same file from a third-party service in a short timeframe?
  context: This question is designed to detect the 'fan-out' of a single malicious file across multiple victims in the organization. If more than a certain threshold of distinct hosts (e.g., 10) download the exact same file within an hour, it strongly suggests a coordinated, targeted spearphishing campaign is underway.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Zeek conn.log
  - Centralized logging infrastructure (SIEM)
  - Network traffic monitoring points at the network perimeter.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      AGGREGATE file downloads by file_hash and referrer over 1-hour windows
      FILTER for referrers in third_party_service list
      COUNT distinct host_IPs for each file_hash
      ALERT if distinct_host_count > 10
- question: Is there an anomalous number of hosts connecting to a specific third-party service?
  context: This question looks for an unusual convergence of internal hosts towards a single third-party service. By baselining the normal number of unique hosts that connect to a service per hour, a sudden spike exceeding that baseline (e.g., by 3 standard deviations) can indicate that a campaign is directing many users to that service to download a malicious payload.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Zeek conn.log
  - Centralized logging infrastructure (SIEM)
  - Network traffic monitoring points at the network perimeter.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each third_party_service:
        CREATE 30-day rolling baseline of unique_source_IPs per hour
        MONITOR current hourly count of unique_source_IPs
        ALERT if current_count > (baseline_mean + 3 * baseline_std_dev)
- question: Can we detect a coordinated group of hosts connecting to a new or rare third-party service?
  context: This question uses clustering algorithms to find anomalous groupings of activity in network traffic. A dense cluster showing many different internal hosts all connecting to the same, previously unseen or rarely used, third-party domain in a short time is a powerful indicator of a coordinated attack, even if the payload or specific URL is unknown.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Zeek conn.log
  - Centralized logging infrastructure (SIEM)
  - Network traffic monitoring points at the network perimeter.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      INPUT connection logs (source_IP, dest_domain, timestamp) into DBSCAN model
      ANALYZE resulting clusters
      ALERT on dense clusters involving many unique source_IPs and a new/rare dest_domain