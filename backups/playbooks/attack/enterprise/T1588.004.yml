name: T1588.004: Digital Certificates
id: 5b1a3b9a-4c8d-4f6e-8a0b-1d7c6e2f9a1b
description: This playbook focuses on detecting adversaries acquiring or staging digital certificates for future operations. It provides investigative questions to identify the use of malicious certificates by matching against CTI feeds, analyzing for anomalous characteristics like high SNI entropy or unusual byte ratios, and using machine learning to filter false positives. It also looks for suspicious certificate attributes such as those from free CAs for dynamic DNS or typosquatted domains, unusually short validity periods, or issuance for newly registered domains. Further questions address detecting spikes in self-signed certificates or validation errors, and identifying infrastructure reuse patterns where a single certificate is used across many IPs or a single IP serves many unique certificates. The playbook leverages network logs (Zeek), endpoint logs (Windows CAPI2), and enrichment data (WHOIS, CTI) to answer these questions through SIEM rules, statistical baselining, machine learning models, and graph analysis.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are we observing SSL/TLS certificates whose thumbprints match known-malicious indicators from our threat intelligence feeds?
    context: This question aims to detect direct matches with known adversary infrastructure. A match from a reputable Cyber Threat Intelligence (CTI) feed is a high-confidence indicator that a host is communicating with a malicious server, which requires immediate investigation.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress/Ingress Points
      - Forward Web Proxies
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek ssl.log WHERE certificate.thumbprint IN (CTI_feed_malicious_thumbprints). GENERATE high_severity_alert.
  - question: For connections using a known-malicious certificate, does the connection exhibit anomalous characteristics like high SNI entropy or an unusual inbound/outbound byte ratio, suggesting DGA or data staging?
    context: After identifying a connection with a malicious certificate, it's crucial to understand the nature of the traffic. High entropy in the Server Name Indication (SNI) can indicate the use of a Domain Generation Algorithm (DGA), a common technique for C2 communications. A high ratio of inbound to outbound data can suggest the staging of exfiltrated data. Identifying these characteristics helps prioritize the incident response.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress/Ingress Points
      - Forward Web Proxies
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - pseudocode: FOR each CTI-matched_connection, GET associated conn.log. CALCULATE SNI_entropy. CALCULATE byte_ratio. IF SNI_entropy > 95th_percentile OR byte_ratio is high, FLAG as anomalous.
  - question: Can we automatically distinguish true positive from false positive CTI alerts for malicious certificates using a machine learning model?
    context: CTI feeds can sometimes produce false positives. This question explores using a supervised machine learning model to enrich CTI alerts with additional context (e.g., connection duration, data volume, SNI entropy) to score the likelihood of the alert being a true positive. This helps focus analyst attention on the highest-risk events and automates the initial triage process.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Network Egress/Ingress Points
      - Forward Web Proxies
      - Threat Intelligence Platform
    range: last 90 days
    queries:
      - pseudocode: FOR each CTI-matched_event, EXTRACT features (CTI_rep, duration, bytes, protocol, SNI_entropy). PREDICT with classification_model. IF score > 0.9, ESCALATE for analyst_review.
  - question: Are we observing certificates issued by free Certificate Authorities for dynamic DNS hostnames?
    context: Adversaries often leverage free services to minimize costs and operational footprint. This question targets the combination of free CAs (like Let's Encrypt) and dynamic DNS providers, a pattern frequently used to set up transient and difficult-to-track C2 infrastructure. Detecting this combination is a strong signal of potentially malicious activity.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Ingress Points
      - Forward Web Proxies
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek ssl.log WHERE issuer IN (free_CA_watchlist) AND (CN OR SAN) MATCHES (dynamic_DNS_regex). TRIGGER alert.
  - question: Are there any observed certificates for domains that are typosquats or homoglyphs of our organization's official domains?
    context: Typosquatting is a common phishing and credential harvesting technique where adversaries register domains that look very similar to legitimate ones. This question involves programmatically comparing all observed certificate domains against the organization's domains using string similarity metrics like Levenshtein distance. This helps proactively identify potential phishing sites or C2 domains masquerading as internal resources.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Ingress Points
      - Forward Web Proxies
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - pseudocode: FOR each certificate in Zeek ssl.log, CALCULATE levenshtein_distance(certificate.domain, org_domains_list). IF distance BETWEEN 1 AND 3, FLAG for manual_review.
  - question: Can a machine learning model proactively identify malicious domains within certificate common names (CN) and subject alternative names (SAN)?
    context: Beyond simple typosquatting, adversaries use sophisticated methods like DGAs to generate malicious domains. This question proposes using a character-level NLP model (like an RNN) trained to recognize patterns in malicious domain names. By feeding all new domains from certificates into this model, we can score their likelihood of being malicious and detect novel threats that signature-based methods might miss.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Network Egress/Ingress Points
      - Forward Web Proxies
      - Internal DNS Resolvers
    range: last 90 days
    queries:
      - pseudocode: FOR each new CN/SAN in Zeek ssl.log, PREDICT with domain_classifier_model. IF score > confidence_threshold, GENERATE alert.
  - question: Are we seeing certificates from free CAs being used for very recently registered domains?
    context: Adversaries often register a domain and immediately use it for an operation. The combination of a newly registered domain (e.g., less than a week old) and a certificate from a free CA is highly suspicious. This question focuses on enriching certificate data with WHOIS information to detect this specific pattern of 'just-in-time' infrastructure setup.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek x509.log
      - Network Egress/Ingress Points
      - Threat Intelligence Platforms
      - SIEM/Data Analytics Platform
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek ssl.log. ENRICH domain with WHOIS_data. ALERT if issuer IS free_CA AND domain_registration_age < 7_days.
  - question: Are we observing certificates with unusually short validity periods or from rarely seen Certificate Authorities?
    context: Normal TLS certificates typically have standard validity periods (e.g., 90 days or a year) and are issued by common, trusted CAs. Adversaries may use certificates with very short lifespans to evade blocklists or use obscure CAs. This question involves baselining normal CA frequency and validity periods in the environment and alerting on outliers that fall into the bottom percentiles, which could indicate adversary activity.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek x509.log
      - Network Egress/Ingress Points
      - Threat Intelligence Platforms
      - SIEM/Data Analytics Platform
    range: last 90 days
    queries:
      - pseudocode: BASELINE CA_frequency and validity_periods over 30_days. ALERT if certificate.issuer_frequency < 5th_percentile OR certificate.validity_period < 10th_percentile.
  - question: Can an unsupervised anomaly detection model identify suspicious certificates based on a combination of their characteristics?
    context: This question proposes a more holistic approach to finding suspicious certificates. Instead of looking at single attributes in isolation, an unsupervised model (like Isolation Forest) can analyze multiple features simultaneously (e.g., validity period, domain age, key length, issuer type). This allows the model to identify unusual combinations of attributes that may not trigger individual rules but are collectively anomalous, thus revealing novel or sophisticated adversary techniques.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek x509.log
      - Network Egress/Ingress Points
      - Threat Intelligence Platforms
      - SIEM/Data Analytics Platform
    range: last 90 days
    queries:
      - pseudocode: FOR each certificate, EXTRACT features (validity_days, domain_age, SAN_count, key_length, is_free_ca). PREDICT with anomaly_detection_model. ALERT on high anomaly_scores.
  - question: Are self-signed certificates being used for external communications, and is this correlated with a root certificate being installed on the source host?
    context: Self-signed certificates are not trusted by default and should not typically be used for communication with external public IPs. An adversary might install their own root CA on a compromised machine to make their self-signed certificates appear trusted to that machine. This question looks for the dangerous combination of a self-signed cert used externally and a corresponding root CA installation event (Windows CAPI2 Event ID 53) on the source host, which is a strong indicator of a Man-in-the-Middle (MitM) attack or C2 persistence.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Windows Event ID CAPI2 11
      - Windows Event ID CAPI2 21
      - Windows Event ID CAPI2 30
      - Windows Event ID CAPI2 41
      - Windows Event ID CAPI2 53
      - Network Egress/Ingress Points
      - Internal Server Segments
      - Domain Controllers
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek ssl.log for validation_status='selfsigned' to public_IP. CORRELATE with Windows Event 53 on source_host within 5_minutes. GENERATE high_severity_alert.
  - question: Is there an abnormal spike in the number of certificate validation errors, either globally or on a specific host?
    context: A sudden increase in certificate errors (e.g., expired, revoked, name mismatch) can indicate a variety of problems, including an adversary attempting a widespread MitM attack or misconfigured C2 infrastructure. This question involves baselining the normal rate of different validation errors and alerting when the count exceeds a statistical threshold (e.g., 99th percentile), pointing investigators to a potential widespread issue.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Windows Event ID CAPI2 11
      - Windows Event ID CAPI2 21
      - Windows Event ID CAPI2 30
      - Windows Event ID CAPI2 41
      - Windows Event ID CAPI2 53
      - Network Egress/Ingress Points
      - Internal Server Segments
      - Domain Controllers
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: BASELINE daily counts for each validation_error_type (per-host and global). ALERT if count > 99th_percentile_of_baseline.
  - question: Can a time series model detect anomalous deviations in the overall volume of certificate validation errors?
    context: This question uses a more sophisticated statistical method to detect anomalies in certificate validation errors. A time series model (like SARIMA or Prophet) can learn the normal daily and weekly seasonality of error volumes. By comparing the observed error count to the model's prediction, it can detect significant deviations that might be missed by simple thresholding, allowing for the detection of more subtle, large-scale attacks or misconfigurations.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Windows Event ID CAPI2 11
      - Windows Event ID CAPI2 21
      - Windows Event ID CAPI2 30
      - Windows Event ID CAPI2 41
      - Windows Event ID CAPI2 53
      - Network Egress/Ingress Points
      - Internal Server Segments
      - Domain Controllers
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: MODEL aggregate volume of cert_validation_errors with time_series_model. ALERT when observed_count significantly deviates from predicted_pattern.
  - question: Is a single, non-CDN SSL/TLS certificate being reused across an unusually large number of distinct IP addresses?
    context: Adversaries may reuse the same certificate across multiple servers in their C2 infrastructure. While large CDNs do this legitimately, observing a non-CDN certificate served from many different IPs is a strong indicator of a distributed, malicious campaign. This question helps identify this pattern of infrastructure reuse.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Zeek conn.log
      - Network Egress/Ingress Points
      - SIEM/Data Analytics Platform
      - Graph Database Platform
    range: last 90 days
    queries:
      - pseudocode: TRACK certificate_thumbprints over 7_days. IF a single non-CDN thumbprint is served by > 5 distinct IPs, GENERATE alert.
  - question: Is a single IP address serving an abnormally high number of unique certificates or subjects?
    context: This is the inverse of the previous question. A single server hosting numerous unrelated websites, each with its own certificate, can be a sign of a malicious hosting provider or a compromised server being used to stage multiple phishing or C2 sites. This question involves baselining the number of unique certificate subjects per IP and alerting on outliers, which can uncover shared adversary infrastructure.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Zeek conn.log
      - Network Egress/Ingress Points
      - SIEM/Data Analytics Platform
      - Graph Database Platform
    range: last 90 days
    queries:
      - pseudocode: FOR each destination_IP over 24_hours, COUNT unique certificate_subjects. BASELINE this count. ALERT if count > 99th_percentile_of_baseline.
  - question: Can we use graph analysis to identify clusters of related adversary infrastructure based on shared certificates and IP addresses?
    context: Adversary infrastructure is often interconnected. This question proposes modeling IPs, certificates, and subjects as a graph. By applying community detection algorithms, we can automatically find clusters of related entities. Scoring these clusters based on the presence of other suspicious indicators (like free CAs or young domains) allows investigators to visualize and prioritize entire campaigns rather than just individual indicators.
    answer_sources:
      - Zeek ssl.log
      - Zeek x509.log
      - Zeek conn.log
      - Network Egress/Ingress Points
      - SIEM/Data Analytics Platform
      - Graph Database Platform
    range: last 90 days
    queries:
      - pseudocode: BUILD graph with nodes (IP, Thumbprint, Subject) and edges (serves, has). APPLY community_detection_algorithm. SCORE communities based on suspicious_attributes to prioritize.