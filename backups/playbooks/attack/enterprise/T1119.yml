name: T1119: Automated Collection
id: c4a5b6d8-1e2f-4a3b-9c8d-7e6f5a4b3c2d
description: This playbook helps determine if an adversary is using automated techniques to collect data from the network or systems. It focuses on identifying the execution of known collection tools, suspicious command-line or script-based activity chaining discovery and archival, high-volume file access patterns, unusual access to sensitive files by non-interactive processes, and large, anomalous outbound data transfers that are correlated with on-host collection behavior.
type: technique
related:
  - "TA0009: Collection"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation events whose process name or file hash matches a known automated collection tool IOC from our threat intelligence feeds?
    context: This question aims to detect the simplest form of automated collection, the use of known, off-the-shelf tools. By comparing process execution events against a curated list of Indicators of Compromise (IOCs), analysts can quickly identify known threats. A match provides a high-confidence starting point for an investigation.
    answer_sources:
      - "Windows Event ID 4688"
      - "Threat Intelligence Feed (Known Collection Tool IOCs)"
      - "Applicable to: All endpoints and servers, particularly file servers, domain controllers, developer workstations, and CI/CD pipeline runners."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH process_creation_events (e.g., EventID 4688)
          JOIN threat_intel_feed ON process_hash OR process_name
          WHERE feed_category = 'collection_tool'
          RETURN hostname, timestamp, process_name, process_hash, user
  - question: Have any rare, unsigned processes been executed across the enterprise?
    context: Adversaries often use custom or renamed tools to evade signature-based detection. This question helps uncover these by focusing on statistical rarity. A process that has rarely or never been seen before, especially if it's not digitally signed by a trusted publisher, is highly suspicious and warrants investigation as a potential custom collection script or tool.
    answer_sources:
      - "Windows Event ID 4688"
      - "Applicable to: All endpoints and servers, particularly file servers, domain controllers, developer workstations, and CI/CD pipeline runners."
    range: last 30 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH process_creation_events
          CALCULATE prevalence of process_name across enterprise
          FILTER process is not signed AND prevalence < 1st_percentile
          RETURN hostname, timestamp, process_name, command_line, user
  - question: Has a machine learning model identified any new processes as highly likely to be malicious collection tools?
    context: This question leverages machine learning to move beyond simple IOCs or rarity. By analyzing a combination of features like the parent process, user context, and command-line characteristics, a classification model can identify suspicious behavior that mimics but doesn't exactly match known threats. A high score from the model indicates that a process exhibits attributes commonly associated with malicious collection activity.
    answer_sources:
      - "Windows Event ID 4688"
      - "Machine Learning Model Scores"
      - "Applicable to: All endpoints and servers, particularly file servers, domain controllers, developer workstations, and CI/CD pipeline runners."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH process_creation_events
          ENRICH with ML_model_score
          FILTER ML_model_score > 0.9 (high_likelihood_threshold)
          RETURN hostname, timestamp, process_name, command_line, user, parent_process, score
  - question: Are there any command-line or PowerShell script executions that chain together file discovery, filtering, and archival commands?
    context: Adversaries frequently use built-in system utilities ('living off the land') to perform collection. This question uses regular expressions to find command-line patterns that indicate this activity. The combination of searching for files (e.g., Get-ChildItem, dir), filtering them (e.g., Where-Object, findstr), and then archiving them (e.g., Compress-Archive) in a single line or script is a strong indicator of automated data staging.
    answer_sources:
      - "Windows Event ID 4688 (Command-line logging)"
      - "Windows PowerShell Event ID 4104 (Script block logging)"
      - "Applicable to: All endpoints and servers, especially those with enhanced PowerShell script block logging enabled."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH command_line_logs OR powershell_script_blocks
          WHERE content MATCHES REGEX "(dir|gci|Get-ChildItem).*(findstr|Where-Object|Select-String).*(tar|zip|Compress-Archive|7z)"
          RETURN hostname, timestamp, full_command, user
  - question: Have any command lines or PowerShell scripts with unusually high entropy (randomness) been executed?
    context: To evade simple keyword-based detection, adversaries often obfuscate their scripts using techniques like encoding (e.g., Base64). This results in a command or script block that appears more random. This question aims to detect such obfuscation by measuring the Shannon entropy. A high entropy score, relative to a baseline of normal activity, suggests the command may be packed or encoded to hide its true purpose.
    answer_sources:
      - "Windows Event ID 4688 (Command-line logging)"
      - "Windows PowerShell Event ID 4104 (Script block logging)"
      - "Applicable to: All endpoints and servers, especially those with enhanced PowerShell script block logging enabled."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH command_line_logs OR powershell_script_blocks
          CALCULATE shannon_entropy for content
          FILTER shannon_entropy > 95th_percentile_baseline
          RETURN hostname, timestamp, full_command, user, entropy_score
  - question: Has a Natural Language Processing (NLP) model classified any script block as 'malicious collection' or 'suspicious reconnaissance'?
    context: This question applies advanced NLP techniques to understand the intent behind a script, rather than just matching keywords. By analyzing the sequence of commands and their arguments, the model can differentiate between legitimate administrative scripts and malicious ones that use similar commands in a different, threatening context. This helps find novel or complex collection scripts.
    answer_sources:
      - "Windows PowerShell Event ID 4104 (Script block logging)"
      - "NLP Model Classifications"
      - "Applicable to: All endpoints and servers, especially those with enhanced PowerShell script block logging enabled."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH powershell_script_blocks
          ENRICH with NLP_model_classification
          FILTER classification IN ["malicious collection", "suspicious reconnaissance"]
          RETURN hostname, timestamp, script_block_content, user, classification
  - question: Has any process rapidly read a large number of files from many different critical directories and then immediately launched a known file compression utility?
    context: This is a classic 'smash and grab' data collection pattern. The question looks for a high volume of file access events from a single process, indicating it's traversing the file system, followed by the creation of an archive. This sequence is highly indicative of an adversary collecting and staging data. This requires specific auditing (SACL) to be enabled on high-value directories.
    answer_sources:
      - "Windows Event ID 4663 (File System Auditing)"
      - "Windows Event ID 4688 (Process Creation)"
      - "Applicable to: Critical file servers, SharePoint sites, and repositories of sensitive intellectual property or Personally Identifiable Information (PII)."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH file_read_events (EventID 4663) by ProcessID over 5min_window
          WHERE file_count > 500 AND unique_directory_count > 10
          THEN SEARCH for process_creation_event (EventID 4688) by same ProcessID
          WHERE new_process_name IN [7z.exe, rar.exe, tar.exe, zip.exe]
          RETURN hostname, timestamp, ProcessID, user, files_accessed, archive_process
  - question: Has any process on a high-value server accessed unique files at a rate that is statistically anomalous compared to its own historical baseline?
    context: This question uses baselining to detect abnormal behavior for each specific process. A process like an antivirus scanner might legitimately access many files, but a process like notepad.exe should not. By comparing a process's current file access rate to its own history, we can spot when a legitimate process might have been compromised or is being used for a potentially malicious purpose.
    answer_sources:
      - "Windows Event ID 4663 (File System Auditing)"
      - "Historical process activity baseline"
      - "Applicable to: Critical file servers, SharePoint sites, and repositories of sensitive intellectual property or Personally Identifiable Information (PII)."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH file_access_events on high_value_servers
          AGGREGATE unique_filepath_count per_minute by process_name, user
          COMPARE to 30-day historical baseline for that process_name/user
          FILTER current_rate > (average_rate + 3 * stdev_rate)
          RETURN hostname, process_name, user, current_rate, baseline_avg
  - question: Has a time-series anomaly detection model detected a sudden and significant spike in file access volume on any high-value host?
    context: This question seeks to identify anomalous 'bursts' of activity on a host. An automated collection script will often cause a sharp, sudden increase in file access events that stands out from the normal rhythm of system activity. A time-series model can learn this normal rhythm and automatically flag any significant deviations.
    answer_sources:
      - "Windows Event ID 4663 (File System Auditing)"
      - "Time-series anomaly detection model"
      - "Applicable to: Critical file servers, SharePoint sites, and repositories of sensitive intellectual property or Personally Identifiable Information (PII)."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          STREAM file_access_events per_minute for each high_value_host
          INPUT into LSTM_autoencoder_model
          FILTER anomaly_score > threshold
          RETURN hostname, timestamp_of_spike, volume, anomaly_score
  - question: Has any process accessed a honeypot file or directory?
    context: This question is based on a deception strategy. Honeypot files are decoys with no legitimate business purpose. Any interaction with them is, by definition, unauthorized and highly suspicious. An alert on a honeypot file is a high-confidence signal that an adversary is performing reconnaissance or collection.
    answer_sources:
      - "Windows Event ID 4663 (File System Auditing on honeypots)"
      - "Applicable to: User workstations (specifically C:\\Users\\*\\Documents), network shares containing HR or financial data, and code repositories."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH file_access_events (EventID 4663)
          WHERE file_path IN [list_of_honeypot_files_and_dirs]
          RETURN alert_for_any_match (hostname, timestamp, process_name, user, accessed_honeypot_file)
  - question: Has any non-interactive process accessed a combination of files that results in an anomalously high 'sensitive file access score'?
    context: This question attempts to quantify the risk of a process's file access activity. By assigning higher scores to sensitive file paths and extensions, we can create a risk score. A non-interactive process, such as one run by a service, that suddenly accumulates a very high score is a major red flag for automated collection of sensitive data.
    answer_sources:
      - "Windows Event ID 4663 (File System Auditing)"
      - "Windows Event ID 4688 (to determine parent/interactivity)"
      - "Applicable to: User workstations (specifically C:\\Users\\*\\Documents), network shares containing HR or financial data, and code repositories."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH file_access_events for non-interactive_processes over 5min_window
          CALCULATE sensitivity_score based on file_path and file_extension
          SUM scores per process
          FILTER total_score > 98th_percentile_of_all_processes
          RETURN hostname, process_name, user, total_score
  - question: Has a graph-based analysis detected a process creating a new, unusual connection between previously unrelated clusters of activity (e.g., a web server process accessing HR files)?
    context: This question models the environment as a graph to uncover illicit relationships. Normally, users and processes operate within distinct 'communities' of data. An adversary will often bridge these communities. Graph analysis can automatically detect these community-bridging events as high-risk anomalies.
    answer_sources:
      - "Windows Event ID 4663 (File System Auditing)"
      - "Windows Event ID 4688 (Process Creation)"
      - "Graph database/analytics platform"
      - "Applicable to: User workstations (specifically C:\\Users\\*\\Documents), network shares containing HR or financial data, and code repositories."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          UPDATE user-process-file_access_graph with new events
          RUN community_detection_algorithm
          IDENTIFY any new edge that connects two previously separate communities
          RETURN alert on bridging_edge (process_name, user, source_community, destination_community, file_accessed)
  - question: Has a host that recently triggered an 'Automated Collection' alert also initiated a large data transfer (>100MB) to a new external IP address?
    context: This question directly links on-host collection activity with potential network exfiltration. An alert for collection followed by a large data upload to an unfamiliar destination is a critical finding. This correlation rule automates connecting the dots between the 'staging' and 'exfiltration' phases of an attack.
    answer_sources:
      - "SIEM Alerts (for 'Automated Collection')"
      - "Zeek conn.log (Network connection logs)"
      - "Applicable to: Network egress points (firewalls, proxies), DNS servers, and all endpoints/servers."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          TRIGGER on 'Automated Collection' alert for a specific host
          SEARCH network_logs (Zeek conn.log) from same host within 1 hour after alert
          WHERE destination_ip is new (not seen in 30 days)
          AND outbound_bytes > 100000000
          RETURN correlated_alert (hostname, collection_alert_details, network_connection_details)
  - question: Has any host exhibited a statistically anomalous spike in outbound data transfer, and was the destination a rare or newly registered domain?
    context: This question seeks to find anomalous data transfers without a prior on-host alert. By baselining each host's normal outbound traffic, we can spot unusual spikes. The suspicion level is increased by enriching the alert with DNS context, such as whether the destination domain was registered recently or is rarely visited.
    answer_sources:
      - "Zeek conn.log (Network connection logs)"
      - "Zeek dns.log (DNS logs for domain context)"
      - "Threat Intelligence (for domain categorization)"
      - "Applicable to: Network egress points (firewalls, proxies), DNS servers, and all endpoints/servers."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          SEARCH network_logs (Zeek conn.log) per host per 10min_interval
          CALCULATE outbound_bytes
          FILTER outbound_bytes > 99th_percentile of host's own history
          ENRICH with DNS info (domain age, prevalence) for destination
          RETURN alert (hostname, destination_ip, destination_domain, data_volume, domain_age, domain_prevalence)
  - question: Has a sequence analysis model detected a chain of events that matches the pattern of collection followed by exfiltration (e.g., script execution -> high file reads -> rare DNS query -> large upload)?
    context: This question aims to detect the entire attack chain as a single event. A sequence model can be trained to recognize the 'story' of an attack. It ingests a mixed stream of host and network data and flags when a sequence of events occurs in a specific, malicious order, even if individual events are not alarming.
    answer_sources:
      - "Windows Event ID 4688, 4663"
      - "Zeek conn.log, dns.log"
      - "Sequence analysis model (HMM, RNN)"
      - "Applicable to: Network egress points (firewalls, proxies), DNS servers, and all endpoints/servers."
    range: last 90 days
    queries:
      - tech: pseudocode
        query: |
          STREAM combined host_events and network_events into sequence_analysis_model
          MODEL identifies anomalous sequences matching pre-defined attack patterns (e.g., collection_exfil_pattern)
          FILTER for sequences with high probability of being malicious
          RETURN alert (hostname, full_event_sequence, confidence_score)