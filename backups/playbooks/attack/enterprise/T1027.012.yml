name: 'T1027.012: LNK Icon Smuggling'
id: '1a9a8f2e-4b6c-4d8e-9f0a-1b2c3d4e5f67'
description: "This playbook addresses the adversary technique of evading defenses by smuggling malicious code within LNK file icon paths. It focuses on detecting instances where adversaries embed malicious links or commands in the icon resource path of a shortcut file. When a user navigates to the folder containing the LNK file, Windows Explorer attempts to render the icon, which can trigger the download and execution of a remote payload. The playbook covers detection strategies such as identifying LNK files with icon paths that match threat intelligence, point to non-standard or remote locations (UNC paths), or exhibit statistical anomalies like high entropy or rare Top-Level Domains (TLDs). It also includes methods for detecting the secondary effects of this technique, such as the 'explorer.exe' process initiating unusual outbound network connections or a suspicious sequence of events including LNK file creation, a network connection by explorer.exe, and subsequent process execution."
type: technique
related:
  - 'TA0005: Defense Evasion'
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: '2025-10-01'
modified: '2025-10-01'
version: 1.0
tags: none
questions:
  - question: How can I detect if a newly created LNK file's icon path contains a known malicious indicator from threat intelligence feeds?
    context: This question aims to identify the most direct evidence of LNK icon smuggling. Adversaries often embed URLs, IPs, or domains pointing to their command and control (C2) infrastructure directly in the icon path. By parsing this path from newly created LNK files and cross-referencing the extracted indicators with high-confidence threat intelligence, analysts can rapidly detect and respond to this specific defense evasion technique. A match provides a strong signal of malicious intent.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Zeek dns.log'
      - 'Endpoints (user workstations, servers), specifically in user-writable directories like Desktop and Downloads; Email security gateway sandboxes; Web proxy and DNS server logs.'
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          // Pseudocode
          EVENT_TYPE IN (Sysmon_EID_11, Win_EID_4663) AND
          TARGET_FILENAME LIKE '%.lnk'
          | PARSE LNK_file to get ICON_PATH
          | EXTRACT indicators (URL, IP, domain) from ICON_PATH
          | LOOKUP indicators in threat_intel_feeds
          | IF match_found THEN ALERT
  - question: Can I identify potentially malicious LNK files by finding those that reference statistically rare Top-Level Domains (TLDs) in their icon paths?
    context: Adversaries may use obscure or newly registered domains to host malicious payloads, which will appear as statistically rare TLDs compared to common ones like '.com' or '.org'. This question focuses on a statistical detection method. By baselining the frequency of TLDs seen in LNK icon paths across the environment, analysts can flag outliers. An LNK file pointing to a TLD that is rarely, if ever, seen is suspicious and warrants further investigation, as it deviates from normal user and system behavior.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Zeek dns.log'
      - 'Endpoints (user workstations, servers), specifically in user-writable directories like Desktop and Downloads; Email security gateway sandboxes; Web proxy and DNS server logs.'
    range: last 30 days
    queries:
      - technology: Data Analytics Platform
        query: |
          // Pseudocode
          // Step 1: Build baseline (run daily)
          LNK_CREATION_EVENTS from last 30 days
          | PARSE LNK_file to get ICON_PATH
          | EXTRACT TLD from ICON_PATH
          | COUNT frequency of each TLD
          | CALCULATE 5th percentile threshold
          // Step 2: Real-time detection
          NEW_LNK_CREATION_EVENT
          | PARSE LNK_file to get ICON_PATH
          | EXTRACT TLD from ICON_PATH
          | IF TLD_frequency < 5th_percentile_threshold THEN ALERT
  - question: Is it possible to use a machine learning model to classify new LNK files as benign or malicious based on features of their icon path?
    context: This question explores a more advanced, machine learning-based approach to detection. Instead of relying on a single attribute, a classification model can learn the complex interplay of various features (e.g., path length, character randomness, TLD reputation) that distinguish malicious LNK files from benign ones. By training a model on a labeled dataset, security teams can automate the scoring of all new LNK files, alerting analysts only on those with a high probability of being malicious, thereby reducing alert fatigue and improving detection accuracy.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Zeek conn.log'
      - 'Zeek http.log'
      - 'Zeek dns.log'
      - 'Endpoints (user workstations, servers), specifically in user-writable directories like Desktop and Downloads; Email security gateway sandboxes; Web proxy and DNS server logs.'
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          // Pseudocode
          // On new LNK file creation:
          LNK_FILE
          | EXTRACT features (path_length, entropy, has_IP, TLD_type, TLD_reputation)
          | INPUT features into trained_classifier_model
          | GET probability_score
          | IF probability_score > 0.85 THEN ALERT
  - question: Are there any new LNK files with icon paths pointing to suspicious remote locations (UNC paths) or non-standard local directories?
    context: Legitimate LNK files typically point to local executables in standard directories like Program Files. Adversaries abuse this by crafting LNK files whose icons are located on remote SMB shares or in temporary, user-writable directories. This question helps detect this misconfiguration. An icon path pointing to a UNC share (e.g., \\attacker.com\...) or a temp folder (e.g., %APPDATA%) is highly irregular and a strong indicator that the LNK file is designed to fetch a remote payload or execute code from a hidden location.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Zeek smb_files.log'
      - 'Zeek conn.log'
      - 'Endpoints (user workstations, terminal servers), network file shares, and logs from domain controllers and SMB file servers.'
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          // Pseudocode
          EVENT_TYPE IN (Sysmon_EID_11, Win_EID_4663) AND
          TARGET_FILENAME LIKE '%.lnk'
          | PARSE LNK_file to get ICON_PATH
          | IF ICON_PATH MATCHES REGEX ('^\\\\\\\\', '@SSL', '%TEMP%', '%PUBLIC%', '%APPDATA%') THEN ALERT
  - question: Can high character entropy in an LNK file's icon path be used to identify potentially obfuscated or malicious paths?
    context: This question leverages the concept that machine-generated or obfuscated strings often have higher character randomness (entropy) than human-readable file paths. Adversaries may use obfuscation to hide the true nature of the path in the icon field. By establishing a baseline of normal entropy scores for LNK icon paths in the environment, analysts can flag any new LNK file with an unusually high entropy score. Such an anomaly suggests the path may be obfuscated and warrants investigation.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Zeek smb_files.log'
      - 'Zeek conn.log'
      - 'Endpoints (user workstations, terminal servers), network file shares, and logs from domain controllers and SMB file servers.'
    range: last 90 days
    queries:
      - technology: Data Analytics Platform
        query: |
          // Pseudocode
          // Step 1: Build baseline (run daily on data from last 90 days)
          LNK_CREATION_EVENTS
          | PARSE LNK_file to get ICON_PATH
          | CALCULATE shannon_entropy of ICON_PATH
          | CALCULATE 98th percentile threshold
          // Step 2: Real-time detection
          NEW_LNK_CREATION_EVENT
          | PARSE LNK_file to get ICON_PATH
          | CALCULATE shannon_entropy of ICON_PATH
          | IF entropy > 98th_percentile_threshold THEN ALERT
  - question: Can an unsupervised machine learning model identify anomalous LNK icon paths without prior knowledge of malicious samples?
    context: Unlike supervised models, unsupervised models excel at finding outliers by learning the characteristics of normal behavior. This question applies this concept to LNK icon paths. By training a model (like an Isolation Forest) exclusively on features from known-benign LNK files, the system can identify any new LNK file whose icon path deviates significantly from the established norm. This approach is powerful for detecting novel or previously unseen attack variations that might not match specific rules or signatures.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Zeek smb_files.log'
      - 'Zeek conn.log'
      - 'Endpoints (user workstations, terminal servers), network file shares, and logs from domain controllers and SMB file servers.'
    range: last 90 days
    queries:
      - technology: Machine Learning Pipeline
        query: |
          // Pseudocode
          // On new LNK file creation:
          LNK_FILE
          | EXTRACT features (path_length, directory_depth, has_numeric_hostname, is_UNC)
          | INPUT features into trained_unsupervised_model (e.g., Isolation Forest)
          | GET anomaly_score
          | IF flagged_as_outlier THEN ALERT
  - question: Is the Windows Explorer process (`explorer.exe`) making any outbound network connections to IP addresses not on our approved allowlist?
    context: The `explorer.exe` process is the primary user shell and should not be initiating direct outbound network connections to external IP addresses. This behavior is a strong indicator of compromise, often occurring after a user clicks a malicious LNK file, causing Explorer to resolve the icon path and connect to a remote server. This question seeks to detect this highly anomalous activity directly. Any such connection to an unapproved destination warrants immediate investigation as it could represent C2 communication or payload download.
    answer_sources:
      - 'Windows Sysmon Event ID 3'
      - 'Windows Sysmon Event ID 1'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek dns.log'
      - 'Endpoint EDR/process monitoring logs; Network security monitoring logs at egress points (e.g., firewalls, proxies); DNS server query logs.'
    range: last 90 days
    queries:
      - technology: SIEM
        query: |
          // Pseudocode
          EVENT_TYPE IS Sysmon_EID_3 AND
          IMAGE PATH ENDS WITH 'explorer.exe' AND
          DESTINATION_IP IS_EXTERNAL AND
          DESTINATION_IP NOT IN (approved_ip_allowlist)
          | ALERT
  - question: Are any hosts showing a non-zero count of distinct external IP addresses contacted by `explorer.exe` in a single day?
    context: This question establishes a simple but powerful statistical baseline: the number of external destinations contacted by `explorer.exe` on any given host per day should be zero. Any deviation from this zero-count baseline is, by definition, an anomaly. This method provides a very clear signal for analysts to investigate. The risk can be further prioritized by enriching the alert with reputation data for the destination IP or by checking if that IP is rare across the entire enterprise.
    answer_sources:
      - 'Windows Sysmon Event ID 3'
      - 'Windows Sysmon Event ID 1'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek dns.log'
      - 'Endpoint EDR/process monitoring logs; Network security monitoring logs at egress points (e.g., firewalls, proxies); DNS server query logs.'
    range: last 30 days
    queries:
      - technology: SIEM / Data Analytics Platform
        query: |
          // Pseudocode
          // Run daily:
          Sysmon_EID_3_events from last 24 hours
          | WHERE IMAGE PATH ENDS WITH 'explorer.exe' AND DESTINATION_IP IS_EXTERNAL
          | GROUP BY hostname
          | COUNT distinct DESTINATION_IP
          | WHERE distinct_ip_count > 0
          | ALERT
  - question: Is there a statistically significant deviation from the near-zero baseline of outbound network traffic or connection counts originating from the `explorer.exe` process?
    context: This question uses time-series analysis to formalize the detection of anomalous network activity from `explorer.exe`. By modeling the expected behavior over time (which should be a flat line at or near zero for metrics like outbound bytes and connection counts), any spike or significant deviation can be automatically flagged. This method is robust against low-and-slow activity that might not trigger a simple threshold rule and provides a mathematically-grounded basis for generating an alert.
    answer_sources:
      - 'Windows Sysmon Event ID 3'
      - 'Windows Sysmon Event ID 1'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Zeek dns.log'
      - 'Endpoint EDR/process monitoring logs; Network security monitoring logs at egress points (e.g., firewalls, proxies); DNS server query logs.'
    range: last 90 days
    queries:
      - technology: Time-Series Anomaly Detection
        query: |
          // Pseudocode
          // Model training:
          AGGREGATE network_flows by source_process_name ('explorer.exe') over time
          | CREATE time_series for bytes_out and connection_count
          | TRAIN model (e.g., SARIMA) on historical data
          // Real-time detection:
          NEW_DATA_POINT for 'explorer.exe'
          | COMPARE with model's forecast
          | IF observation is a statistical outlier THEN ALERT
  - question: Has a host exhibited a sequence of events where a new LNK file is created, followed by `explorer.exe` making a network connection, and then a new suspicious process is launched, all within a short time frame?
    context: Individual events can be noisy, but a specific sequence of events is a strong indicator of a particular attack chain. This question looks for the full kill chain of the LNK icon smuggling technique: the delivery of the LNK file, the network connection triggered by Explorer rendering the icon, and the subsequent execution of the downloaded payload. Correlating these events in a tight time window (e.g., 5 minutes) on a single host provides a high-fidelity, critical-severity alert that is highly indicative of a successful compromise.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Windows Sysmon Event ID 3'
      - 'Windows Sysmon Event ID 1'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Aggregated security logs in a central SIEM or data lake containing endpoint process, file, and network events; EDR platform consoles.'
    range: last 5 minutes
    queries:
      - technology: SIEM (Correlation Rule)
        query: |
          // Pseudocode
          // Rule triggers on a single host within 5 minutes:
          MATCH SEQUENCE:
            [Sysmon_EID_11 with TARGET_FILENAME LIKE '%.lnk']
            THEN [Sysmon_EID_3 with IMAGE PATH ENDS WITH 'explorer.exe' AND DESTINATION_IP IS_EXTERNAL]
            THEN [Sysmon_EID_1 with PARENT_IMAGE PATH ENDS WITH 'explorer.exe' OR 'rundll32.exe']
          | GENERATE CRITICAL ALERT
  - question: Can we identify high-risk hosts by assigning risk scores to various suspicious behaviors and alerting when a host's cumulative score becomes an outlier?
    context: Rather than relying on a rigid sequence of events, this question proposes a more flexible risk-scoring model. Different atomic behaviors (like LNK file creation, an unsigned process running, etc.) are assigned weighted scores. These scores are aggregated for each host over a rolling time window. This approach can detect variations of an attack that may not follow a predefined sequence. When a host's total risk score surpasses a dynamically calculated threshold (like the 99th percentile), it gets flagged for investigation, effectively prioritizing the most suspicious systems for analysts.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Windows Sysmon Event ID 3'
      - 'Windows Sysmon Event ID 1'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Aggregated security logs in a central SIEM or data lake containing endpoint process, file, and network events; EDR platform consoles.'
    range: last 24 hours
    queries:
      - technology: SIEM / Data Analytics Platform
        query: |
          // Pseudocode
          // For each host, over a rolling 1-hour window:
          CALCULATE score =
            (count(LNK_in_Downloads) * 10) +
            (count(explorer_outbound_conn) * 50) +
            (count(unsigned_process_exec) * 25) +
            (count(exec_from_temp) * 15)
          // Compare against enterprise baseline from last 24 hours
          IF host_score > 99th_percentile_of_all_host_scores THEN ALERT
  - question: Can we use graph analytics to discover the specific chain of relationships between files, processes, and network connections that represents the LNK icon smuggling attack pattern?
    context: This question leverages the power of graph databases to model and query complex relationships between security events. Events (processes, files, connections) are treated as nodes, and their causal relationships (e.g., process 'A' wrote file 'B') are edges. This allows analysts to hunt for the entire attack pattern as a single, connected subgraph. A query can explicitly search for a file write creating an LNK, which is read by `explorer.exe`, which in turn initiates an outbound connection. Finding this subgraph is equivalent to finding a "story" of the attack, providing extremely high-confidence results and rich context for investigation.
    answer_sources:
      - 'Windows Sysmon Event ID 11'
      - 'Windows Event ID 4663'
      - 'Windows Sysmon Event ID 3'
      - 'Windows Sysmon Event ID 1'
      - 'Windows Event ID 4688'
      - 'Zeek conn.log'
      - 'Zeek files.log'
      - 'Aggregated security logs in a central SIEM or data lake containing endpoint process, file, and network events; EDR platform consoles.'
    range: last 90 days
    queries:
      - technology: Graph Database (e.g., Neo4j)
        query: |
          // Pseudocode (Cypher-like)
          MATCH (f:File {name: '*.lnk'})<-[:WROTE]-(p1:Process)
          MATCH (p2:Process {name: 'explorer.exe'})-[:READ]->(f)
          MATCH (p2)-[:INITIATED]->(c:Connection {direction: 'outbound'})
          RETURN p1, f, p2, c