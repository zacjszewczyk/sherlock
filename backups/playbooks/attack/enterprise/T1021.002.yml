name: T1021.002: SMB-Windows Admin Shares
id: f9e3e3e0-3b3b-4e1e-8e3e-3e3e3e3e3e3e
description: |
  This playbook is designed to help analysts determine if an adversary is moving laterally through the network using Windows administrative shares (e.g., C$, ADMIN$). It focuses on detecting the transfer of malicious files to these shares and their subsequent execution; the creation of suspicious services or named pipes following an SMB connection, which is indicative of tools like PsExec; anomalous access patterns, such as workstation-to-workstation connections or access by non-administrative users; and the complete behavioral sequence of an SMB connection, file write, and remote process execution originating from the same source.
type: technique
related:
  - TA0008: Lateral Movement
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: How can we correlate file access, file transfer, threat intelligence, and process execution to detect malicious file drops on admin shares?
    context: |
      This question aims to identify the full attack chain of an adversary dropping a known-malicious payload onto an administrative share and then executing it. By correlating events across different data sources (network, endpoint), we can create a high-fidelity alert that confirms not just the delivery but also the execution of the malware, minimizing false positives.
    answer_sources:
      - Zeek smb_files.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 5145
      - Domain Controllers
      - File Servers
      - Database Servers
      - Developer Workstations
      - Executive Laptops
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          SEARCH for (Windows Event ID 5145 with ShareName ending in '$')
          JOIN with (Zeek smb_files.log with file write to same host)
          JOIN with (Zeek files.log or EDR data where file hash matches threat intel feed)
          JOIN with (Windows Event ID 4688 for same file path on destination host within 5 minutes)
          ALERT on match
  - question: Can we detect potentially packed or encrypted malicious executables transferred to admin shares by analyzing file entropy?
    context: |
      This question focuses on identifying unknown or obfuscated malware. Malicious actors often pack or encrypt their payloads to evade signature-based detection. These processes increase the file's entropy (randomness). By comparing the entropy of transferred files to a baseline of known-good software, we can flag statistical outliers that warrant further investigation, especially if they are subsequently executed.
    answer_sources:
      - Zeek smb_files.log
      - Zeek files.log
      - Windows Event ID 4688
      - Domain Controllers
      - File Servers
      - Database Servers
      - Developer Workstations
      - Executive Laptops
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each (Zeek smb_files.log transfer to admin share)
            CALCULATE entropy from Zeek files.log data
            COMPARE entropy to pre-calculated baseline of legitimate executables
            IF (entropy > 98th percentile)
              ALERT as suspicious transfer
              INCREASE SEVERITY if (Windows Event ID 4688 shows execution of file)
  - question: Can a machine learning model be trained to predict the probability of a file transfer over an admin share being malicious?
    context: |
      This question proposes a proactive, predictive approach using machine learning. Instead of relying on single indicators, a model can learn complex patterns from multiple features (file properties, network context, user behavior, time) to score the risk of each transfer. This can uncover novel threats that don't match known signatures or simple statistical anomalies.
    answer_sources:
      - Zeek smb_files.log
      - Zeek files.log
      - Windows Event ID 4688
      - Windows Event ID 5145
      - Domain Controllers
      - File Servers
      - Database Servers
      - Developer Workstations
      - Executive Laptops
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each (file transfer over admin share)
            EXTRACT features (entropy, PE headers, size, IP reputation, user role, time)
            INPUT features into trained classification model (e.g., Gradient Boosting)
            IF (model_output_probability > 0.85)
              ALERT as high-probability malicious transfer
  - question: How can we detect the use of lateral movement tools like PsExec by correlating network logons with subsequent service or named pipe creation?
    context: |
      This question targets a common TTP where tools like PsExec create a temporary service or named pipe on the target machine to execute commands. By looking for a network logon (Type 3) followed closely by the creation of a service/pipe with a name matching known malicious patterns, we can generate a high-confidence alert for this specific lateral movement vector.
    answer_sources:
      - Windows Event ID 7045
      - Sysmon Event ID 17
      - Sysmon Event ID 18
      - Windows Event ID 4624
      - Domain Controllers
      - File Servers
      - Critical Application Servers
      - Privileged User Workstations
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          SEARCH for (Windows Event ID 4624 with Logon Type 3)
          JOIN with (Windows Event ID 7045 OR Sysmon Event ID 17 on same host within 5 minutes)
          WHERE (ServiceName OR PipeName matches regex list of known bad tools)
          ALERT on match
  - question: Can we identify malicious services or named pipes by detecting statistically unusual or rare names?
    context: |
      Adversaries may use randomly generated names for their services and pipes to avoid signature-based detection. This question proposes using a character-level frequency model (trigrams) to establish a baseline of "normal" names in the environment. Names that are statistically improbable according to this model are likely to be algorithmically generated or manually crafted by an attacker, making them suspicious.
    answer_sources:
      - Windows Event ID 7045
      - Sysmon Event ID 17
      - Sysmon Event ID 18
      - Windows Event ID 4624
      - Domain Controllers
      - File Servers
      - Critical Application Servers
      - Privileged User Workstations
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each (new service name from Event ID 7045 OR pipe name from Event ID 17)
            CALCULATE probability score based on pre-trained trigram frequency model
            IF (score < 5th percentile)
              ALERT as anomalous name
              PRIORITIZE if creating user is not a standard admin account
  - question: Can unsupervised machine learning (clustering) be used to automatically identify anomalous service and named pipe creation events?
    context: |
      This question explores an unsupervised detection method. Instead of defining "bad," we define "normal." A clustering algorithm like DBSCAN can group routine administrative activities based on multiple features (name length, entropy, user, parent process). Any event that doesn't fit into a cluster (an outlier) is, by definition, anomalous and worthy of investigation, potentially revealing novel attack techniques.
    answer_sources:
      - Windows Event ID 7045
      - Sysmon Event ID 17
      - Sysmon Event ID 18
      - Windows Event ID 4624
      - Domain Controllers
      - File Servers
      - Critical Application Servers
      - Privileged User Workstations
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each (service/pipe creation event)
            VECTORIZE features (name length, entropy, user rarity, parent process)
            INPUT vector into clustering model (e.g., DBSCAN)
            IF (model classifies event as outlier/noise)
              ALERT for investigation as statistically unique behavior
  - question: How can we detect prohibited or unusual lateral movement, such as workstation-to-workstation admin share access?
    context: |
      In many environments, direct administrative access between two standard workstations is not a legitimate activity and is a strong indicator of lateral movement. This question aims to create a simple but effective rule to alert on such policy violations, or when a non-privileged user account accesses an administrative share, which is highly suspicious.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 5145
      - Zeek conn.log
      - All Windows Servers
      - All Windows Workstations
      - Network East-West traffic monitoring points
      - VPN Concentrators
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          SEARCH for (Windows Event ID 5145 with ShareName ending in '$' AND ObjectType is 'File')
          WHERE ((source_host_type is 'workstation' AND destination_host_type is 'workstation')
             OR (user_account is not in privileged_admin_group))
          ALERT on match
  - question: Can we identify anomalous admin share access by baselining user, source, and destination triplets and flagging rare or first-seen combinations?
    context: |
      This question focuses on behavioral anomaly detection. Legitimate administrative access often follows predictable patterns. By tracking every unique combination of (user, source, destination) for admin share access, we can immediately flag any new, never-before-seen triplet as suspicious. Additionally, monitoring for a "fan-out" pattern—one host accessing many others in a short time—can detect automated lateral movement scripts.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 5145
      - Zeek conn.log
      - All Windows Servers
      - All Windows Workstations
      - Network East-West traffic monitoring points
      - VPN Concentrators
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each (admin share access event with user, source, destination)
            CHECK if (triplet exists in 90-day baseline)
            IF (triplet is new)
              ALERT as first-seen behavior
          
          COUNT distinct destinations per source over 1 hour
          IF (count > 99th percentile of baseline)
            ALERT as fan-out activity
  - question: Can we detect a widespread lateral movement campaign by modeling admin share access as a graph and forecasting the growth of new connections?
    context: |
      This question takes a macro view to detect large-scale campaigns. By representing the network as a graph of hosts and users, we can track the rate at which new connections (edges) are formed. A time-series model can predict the normal "background noise" of new connections. A sudden, significant spike above the predicted amount suggests a coordinated, widespread lateral movement event is underway.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 5145
      - Zeek conn.log
      - All Windows Servers
      - All Windows Workstations
      - Network East-West traffic monitoring points
      - VPN Concentrators
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          MAINTAIN graph of (user, source, dest) admin access events
          COUNT new, unique edges (connections) per day
          INPUT daily count into time-series model (e.g., Prophet)
          IF (actual_count > forecasted_upper_confidence_bound)
            ALERT as anomalous growth in lateral movement
  - question: How can we build a high-confidence alert by detecting the full behavioral sequence of logon, admin share access, file write, and remote execution?
    context: |
      This question aims to chain together the entire lifecycle of a common lateral movement TTP into a single, stateful rule. By requiring the sequence of [Network Logon -> Admin Share Access -> File Write -> Process Execution] from the same source to the same destination in a tight time window, we create a very high-fidelity alert that is extremely likely to be malicious, as this full sequence rarely occurs in benign activity.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 5145
      - Zeek smb_files.log
      - Windows Event ID 4688
      - Internal network segments
      - East-West traffic monitoring points
      - Domain Controllers
      - Critical Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          CORRELATE over 2 minutes by (source_ip, user, destination_host)
          SEQUENCE:
          1. Windows Event ID 4624 (Logon Type 3)
          2. Windows Event ID 5145 (ShareName ends with '$')
          3. Zeek smb_files.log (file write)
          4. Windows Event ID 4688 (process name matches written file)
          ALERT on full sequence match
  - question: Can we develop a flexible risk scoring system for the [SMB Write -> Process Execute] sequence to prioritize alerts?
    context: |
      This question builds on the previous one by adding a layer of risk-based prioritization. Not all lateral movement is equally critical. By assigning scores based on contextual factors—like the file type being an executable, the destination directory being unusual, or the access pattern being workstation-to-workstation—we can differentiate between potentially low-risk and high-risk events, allowing analysts to focus on the most critical alerts first.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 5145
      - Zeek smb_files.log
      - Windows Event ID 4688
      - Internal network segments
      - East-West traffic monitoring points
      - Domain Controllers
      - Critical Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each correlated [SMB Write -> Process Execute] sequence
            INITIALIZE risk_score = 0
            IF (file is executable) ADD 10
            IF (write path is %TEMP%) ADD 15
            IF (source/dest are workstations) ADD 20
            IF (outside business hours) ADD 5
            IF (risk_score > 25)
              ALERT with calculated score
  - question: Can a sequence-aware machine learning model (like an RNN) be trained to distinguish between benign and malicious user activity sequences?
    context: |
      This question proposes the most advanced approach, using models designed to understand temporal sequences. An RNN or HMM can learn the subtle, long-term patterns and state transitions that characterize normal user behavior versus an attacker's session. This allows the model to detect malicious sequences even if individual events within the sequence are not inherently anomalous, providing a powerful tool for detecting sophisticated attackers.
    answer_sources:
      - Windows Event ID 4624
      - Windows Event ID 5145
      - Zeek smb_files.log
      - Windows Event ID 4688
      - Internal network segments
      - East-West traffic monitoring points
      - Domain Controllers
      - Critical Servers
    range: last 90 days
    queries:
      - language: pseudocode
        query: |
          FOR each user session (sequence of logon, file_access, process_creation events)
            INPUT event sequence into trained RNN/HMM model
            IF (model classifies sequence as 'Lateral Movement' class with high probability)
              ALERT for investigation