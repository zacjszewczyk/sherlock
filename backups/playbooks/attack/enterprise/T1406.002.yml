name: "T1406.002: Software Packing"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook helps answer the question: Is an adversary using packed or obfuscated applications to evade detection on our mobile devices? It focuses on identifying packed Android Application Packages (APKs) by analyzing file characteristics and static properties. Indicators include APKs with unusually high Shannon entropy scores compared to a baseline of known-good applications, or APKs that trigger YARA rules designed to detect specific byte sequences, strings, or executable section names associated with known software packers like UPX, FTT, or DexProtector."
type: "technique"
related: 
  - "TA0030: Defense Evasion"
contributors: "Zachary Szewczyk, Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: 1.0
tags: "none"
questions:
  - question: "Are newly downloaded APK files originating from known malicious sources?"
    context: "This question aims to identify potential threats at the point of entry by monitoring network traffic for Android Application Package (APK) downloads. By capturing the source IP address and domain for each download and cross-referencing this information with threat intelligence feeds, analysts can proactively detect if devices are retrieving applications from known malware distribution command and control (C2) servers. A match provides a high-confidence indicator of compromise, allowing for rapid response to contain a potential infection before the malicious application is executed."
    answer_sources:
      - "Zeek files.log"
      - "Zeek http.log"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Network Security Monitoring (NSM) sensor locations monitoring traffic to/from corporate Wi-Fi and VPNs"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          Search network logs (Zeek http.log, files.log) for MIME type 'application/vnd.android.package-archive'.
          For each event, join with connection and DNS logs to get source IP and domain.
          Compare source IP and domain against threat intelligence feeds for malware C2s.
          Alert on match.
  - question: "Are newly observed APK files exhibiting unusually high entropy compared to a baseline of approved applications?"
    context: "Software packing and obfuscation often increase the randomness or entropy of a file's byte distribution. This question focuses on establishing a baseline of normal entropy scores from corporate-approved applications via the MDM/EMM platform. By continuously monitoring for new APKs on the network or endpoints and calculating their entropy, analysts can identify statistical outliers. An APK with an entropy score significantly higher than the established baseline (e.g., exceeding the 95th percentile or a static threshold like 7.5) is a strong indicator of packing and warrants further investigation for malicious intent."
    answer_sources:
      - "Zeek files.log"
      - "Windows Sysmon Event ID 11"
      - "Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) platform application inventories"
      - "Developer workstations and CI/CD build servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          Build baseline: Ingest MDM/EMM application inventory.
          For each approved APK, calculate and store its Shannon entropy.
          Monitor: Search network logs (Zeek) and endpoint logs (Sysmon) for new APK file creations.
          For each new APK, calculate its entropy.
          Alert if entropy > 95th percentile of baseline OR entropy > 7.5.
  - question: "Can a machine learning model predict if a new APK is packed or malicious based on a combination of file and network features?"
    context: "This question proposes an automated, machine learning-based approach to detect packed software. By training a binary classification model on a labeled dataset of benign and malicious APKs, the system can learn to identify complex patterns indicative of packing. The model uses features like file entropy, size, requested permissions, and network context (e.g., source ASN, domain age) from the download event. When a new APK is detected, the model assigns a risk score, allowing for automated, high-confidence alerting and escalation, such as submitting the file to a sandbox for dynamic analysis."
    answer_sources:
      - "Zeek logs (files.log, http.log, conn.log, dns.log)"
      - "AndroidManifest.xml data from APKs"
      - "Developer workstations and CI/CD build servers"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          Train Model: Collect features (entropy, size, permissions, network context) for labeled benign/malicious APKs.
          Train a binary classification model (e.g., Gradient Boosting).
          Deploy Model: For each new APK, extract features.
          Generate a risk score using the trained model.
          Alert and sandbox if score > confidence threshold (e.g., 0.9).
  - question: "Are any newly observed APK files matching YARA rules designed to detect known software packers?"
    context: "This question leverages signature-based detection to identify known software packers. YARA rules can be written to find specific byte sequences, strings, or other artifacts left by packing tools like UPX, DexProtector, or Bangcle. By integrating a YARA scanner into the file analysis pipeline, all new APKs discovered on the network or endpoints can be automatically scanned against a curated ruleset. A match provides a high-fidelity alert that a specific packing tool was used, which is a strong signal for malicious activity."
    answer_sources:
      - "Zeek files.log"
      - "Windows Sysmon Event ID 11"
      - "File systems on developer and user endpoints"
      - "Corporate application repositories and stores"
      - "Network file transfer inspection points"
      - "Automated malware analysis sandboxes"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          Integrate a YARA scanner with a mobile packer ruleset.
          Monitor: Search network logs (Zeek) and endpoint logs (Sysmon) for new APK files.
          Scan each new APK with the YARA ruleset.
          Alert on any positive match, including file hash and matched rule name.
  - question: "Do new APKs contain an anomalous number of unusual or randomized executable section names?"
    context: "Packers often create or rename executable sections within a file, frequently using non-standard or randomized names to evade static analysis. This question involves establishing a baseline of common section names (e.g., '.text', '.data') from the organization's inventory of approved applications. When a new APK is analyzed, its section names are compared against this baseline. An APK with a statistically significant number of unknown or high-entropy section names is flagged as suspicious, as it deviates from the norm and may indicate the use of a packing or obfuscation tool."
    answer_sources:
      - "Zeek files.log"
      - "Windows Sysmon Event ID 11"
      - "MDM/EMM application inventory"
      - "File systems on developer and user endpoints"
      - "Corporate application repositories and stores"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          Build baseline: Parse section names from all approved MDM/EMM APKs and establish a frequency distribution.
          Monitor: For each new APK, parse its executable section names.
          Count the number of section names not present in the baseline.
          Alert if the count of anomalous names exceeds a statistical threshold (e.g., 3 standard deviations above the mean).
  - question: "Is there a statistically significant spike in the detection of packed software, potentially indicating a new campaign?"
    context: "Rather than focusing on a single detection, this question analyzes detection trends over time. By collecting time-stamped data on YARA rule matches for software packing, a time-series model can be used to establish a normal rhythm of detection events. The model can then identify anomalies, such as a sudden, unexpected spike in the number of detections. Such a spike could signal a coordinated attack or a new malware campaign. An alert would trigger a proactive threat hunt to investigate the scope of the potential campaign by correlating the anomalous detections."
    answer_sources:
      - "YARA scan results (derived from Zeek files.log and Windows Sysmon Event ID 11)"
      - "Automated malware analysis sandboxes"
      - "Network file transfer inspection points"
    range: "last 90 days"
    queries:
      - technology: "pseudocode"
        query: |
          Collect time-series data of YARA rule matches for 'Software Packing'.
          Apply a time-series anomaly detection model (e.g., ARIMA) to the data.
          Alert when a statistically significant spike in detections is observed.
          Trigger a threat hunt upon alert.