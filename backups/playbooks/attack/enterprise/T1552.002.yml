name: T1552.002: Credentials in Registry
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook focuses on detecting adversary attempts to harvest credentials stored within the Windows Registry. The investigation covers multiple angles, including the use of known credential dumping utilities, command-line or PowerShell-based registry searches for credential-related keywords, statistically unusual or rare access to credential-storing keys, and the correlation of suspicious registry access with subsequent lateral movement activity. The goal is to identify unauthorized access to sensitive information stored in registry locations by various applications like WinSCP, PuTTY, and others.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known credential dumping utility being used to access the registry, or is a known malware-related registry key being accessed?
    context: This question focuses on signature-based detection. It aims to identify the use of well-known credential harvesting tools like Mimikatz by their file hash, or direct access to registry paths hardcoded in malware for storing credentials (e.g., WinSCP sessions). This is a high-fidelity indicator of a known threat.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations
    range: last 90 days
    queries:
      - symbolic: Search process creation events (EID 4688) for file hashes matching a watchlist of known credential dumpers.
      - symbolic: Search registry access events (EID 4663) for unauthorized process access to a watchlist of sensitive registry keys.
  - question: Is there a statistically unusual frequency of access to a registry key known to store credentials?
    context: This question uses a statistical approach to find anomalies. By baselining normal access frequency for credential-storing registry keys on a per-host and per-process basis, it can detect abnormal spikes in activity. This could indicate an adversary enumerating or dumping credentials, even with an unknown tool.
    answer_sources:
      - Windows Event ID 4663
      - Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations
    range: last 90 days
    queries:
      - statistical: For each host/key pair, calculate daily access count from EID 4663. Compare daily count to a 30-day baseline's 99th percentile. Alert if daily count exceeds the threshold.
  - question: Can a machine learning model classify registry access events as malicious credential harvesting based on their characteristics?
    context: This question leverages supervised machine learning to provide a more sophisticated and adaptable detection method. By training a model on features like process name, user context, and target key, it can learn the subtle patterns of malicious access and identify novel threats that might evade signature or statistical methods.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations
    range: last 90 days
    queries:
      - machine_learning: Extract features (process, parent process, user, key, access mask) from EID 4688 and 4663. Score events in real-time using a trained classification model (e.g., Random Forest). Alert on events classified as 'malicious credential access' with high confidence.
  - question: Are command-line or PowerShell scripts being used to actively search the registry for credentials?
    context: This question looks for active, hands-on-keyboard attempts to find credentials. It scans command-line arguments and PowerShell script blocks for the combination of registry query tools (`reg.exe`, `Get-ItemProperty`) and keywords related to credentials ('password', 'pwd', etc.). This is a strong indicator of an adversary's intent.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - symbolic: Scan command-line arguments (EID 4688) and PowerShell script blocks (EID 4104) with regex for co-occurrence of registry query tools and credential-related keywords. Alert on match.
  - question: Does a command-line string involving a registry query exhibit unusually high entropy, possibly indicating obfuscation?
    context: This question uses information theory to spot suspicious commands. Malicious commands are often long, complex, or obfuscated, resulting in higher Shannon entropy. By baselining the entropy of normal administrative commands, this method can flag outliers that might represent malicious search strings, even without specific keywords.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - statistical: Calculate Shannon entropy for command strings involving reg.exe or PowerShell registry cmdlets. Compare entropy score to a baseline of normal admin commands. Alert if score exceeds 3 standard deviations from the mean.
  - question: Can a Natural Language Processing (NLP) model classify command-line and PowerShell activity as a suspicious credential query?
    context: This question applies advanced NLP to understand the intent behind a command, rather than just matching keywords. By fine-tuning a model like BERT on organization-specific data, it can learn to recognize the semantic structure of malicious queries, allowing it to detect novel and varied attack patterns that would evade simpler methods.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - machine_learning: Feed command-line strings and PowerShell scripts into a fine-tuned NLP model. Classify text as 'Benign' or 'Suspicious Credential Query'. Alert on 'Suspicious' classification.
  - question: Is a non-standard or unauthorized process accessing a registry key known to store credentials?
    context: This question uses an allowlisting approach. Certain applications are expected to access their own credential-storing registry keys (e.g., `putty.exe` accessing PuTTY session keys). Access to these keys by any other process (e.g., `WINWORD.EXE`, `cscript.exe`) is highly anomalous and should be investigated.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Application Servers, User Workstations, Remote Access Servers
    range: last 90 days
    queries:
      - symbolic: Maintain an allowlist of (process, registry key) access pairs. Monitor EID 4663 for access to sensitive keys. Alert if the accessing process is not on the allowlist for that specific key.
  - question: Has a rare or never-before-seen combination of user, process, and registry key access occurred?
    context: This question focuses on identifying rarity as an indicator of malicious activity. By building a historical frequency table of all (user, process, key) access tuples, it can flag any new access that is a first-time occurrence or is extremely infrequent in the environment. This is a powerful way to spot novel behavior without prior knowledge of the tool or technique.
    answer_sources:
      - Windows Event ID 4663
      - Application Servers, User Workstations, Remote Access Servers
    range: last 90 days
    queries:
      - statistical: Build a frequency table of (process, key, user) tuples from EID 4663 over a 30-day window. For new events, check their historical frequency. Alert on first-seen or very low-frequency events.
  - question: Can an unsupervised machine learning model identify anomalous registry access events without prior labeling?
    context: This question uses unsupervised learning to find outliers in registry access patterns. Algorithms like DBSCAN or Isolation Forest can cluster normal activity based on features like process, user, and key. Any event that doesn't fit into a normal cluster is flagged as an anomaly. This is effective for detecting unknown unknowns where no pre-existing signatures or labels exist.
    answer_sources:
      - Windows Event ID 4663
      - Application Servers, User Workstations, Remote Access Servers
    range: last 90 days
    queries:
      - machine_learning: Apply an unsupervised anomaly detection model (e.g., Isolation Forest) to EID 4663 data using features like process name, user, and target key. Alert on events flagged as outliers.
  - question: Was a suspicious registry query followed by lateral movement activity from the same host within a short time frame?
    context: This question correlates different stages of an attack to increase confidence. A suspicious registry query is an indicator, but when it's immediately followed by activity like a remote logon to another machine, it strongly suggests the stolen credentials were just used for lateral movement. This correlation turns a moderate-confidence alert into a high-confidence one.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 4624
      - Zeek conn.log
      - All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments
    range: last 90 days
    queries:
      - symbolic: Create a correlation rule that triggers on a suspicious registry query alert. Look for subsequent logon (EID 4624) or network connection (Zeek) from the same host to a new asset within 15 minutes. Escalate alert if a new user account is used.
  - question: After a suspicious registry query, did the source host exhibit a statistically significant increase in its rate of outbound network connections or remote logons?
    context: This question uses statistical baselining to detect the consequences of credential theft. After a host triggers a registry query alert, its subsequent behavior is monitored. A sudden, abnormal spike in the rate of new network connections or logons compared to its own historical baseline can indicate that the adversary is using the harvested credentials to expand their foothold.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 4624
      - Zeek conn.log
      - All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments
    range: last 90 days
    queries:
      - statistical: On a registry query alert, monitor the source host's network and logon activity. Compare the rate of new connections/logons in the next hour to the host's baseline. Alert if the rate exceeds the 99th percentile.
  - question: Can a sequence analysis model detect the progression from credential discovery to lateral movement as a malicious chain of events?
    context: This question models adversary behavior as a sequence of states. A Hidden Markov Model (HMM) or similar sequence analysis model can be trained to recognize the typical progression of an attack from normal activity, to 'Credential Discovery', to 'Lateral Movement'. The model can then calculate the probability that an observed sequence of events represents a real attack.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 4624
      - Zeek conn.log
      - All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments
    range: last 90 days
    queries:
      - machine_learning: Feed a time-ordered sequence of events from a host into a sequence analysis model (e.g., HMM). Alert when the model indicates a high probability of transitioning from a 'Credential Discovery' state to a 'Lateral Movement' state.