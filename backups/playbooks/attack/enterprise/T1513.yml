name: T1513: Screen Capture
id: a8c9b1d2-e3f4-4a5b-8c6d-7e8f9a0b1c2d
description: This playbook helps investigate whether an adversary is capturing sensitive information from user screens on corporate mobile devices. This can be achieved through several methods. One indicator is a non-allowlisted mobile application gaining screen recording permissions and internet access, followed by a large outbound network connection (e.g., >10MB). Another is when a non-approved application is granted powerful Android Accessibility Service privileges, which is then followed by a significant spike in outbound data volume, exceeding the device's historical baseline by more than three standard deviations. A third indicator involves the direct execution of 'screencap' or 'screenrecord' processes, detected by EDR, or unauthorized inbound network connections to the default remote adb port (TCP 5555).
type: technique
related:
- TA0035: Collection
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a non-allowlisted mobile application with internet permissions been granted screen capture permissions?
  context: This question aims to identify potentially malicious applications that have been given the ability to record the screen and exfiltrate the captured data. An unapproved app gaining these specific permissions is a strong indicator of spyware or targeted data theft.
  answer_sources:
  - MDM/EMM application inventory logs
  - MDM/EMM permission grant logs
  - Corporate MDM/EMM servers
  - managed mobile device endpoints
  range: last 90 days
  queries:
  - technology: SIEM Pseudocode
    query: |
      SEARCH MDM/EMM logs
      WHERE event_type = "permission_grant" AND permission = "screen_capture"
      AND app_name NOT IN allowlist
      AND app_manifest CONTAINS "android.permission.INTERNET"
- question: Following a suspicious permission grant, did the associated device exhibit anomalous network outbound volume or DNS query patterns?
  context: This question seeks to find corroborating evidence of data exfiltration or command-and-control (C2) activity after a high-risk permission grant. A spike in outbound data suggests exfiltration of captured screen content, while high DNS entropy can indicate algorithmically generated domains used for C2.
  answer_sources:
  - Zeek conn.log
  - Zeek dns.log
  - network data collection points (e.g., Zeek sensors at internet gateway)
  - internal DNS servers
  range: last 90 days
  queries:
  - technology: Network Analysis Pseudocode
    query: |
      FOR each alerted device:
        CALCULATE 30-day baseline of daily outbound_bytes (98th percentile).
        SEARCH Zeek conn.log for traffic in 24h post-alert.
        IF SUM(outbound_bytes) > baseline_98th_percentile -> ALERT.
        CALCULATE 30-day baseline of DNS Shannon entropy.
        SEARCH Zeek dns.log for traffic in 24h post-alert.
        IF current_entropy > (baseline_mean + 3 * baseline_std_dev) -> ALERT.
- question: Did the alerted application generate network flows that are anomalous in nature shortly after receiving screen capture permissions?
  context: This question uses a machine learning model (Isolation Forest) to identify subtle anomalies in network traffic that might be missed by simple thresholding. It focuses on multiple features of a network connection to flag behavior that deviates from the norm, indicating sophisticated exfiltration or C2 communication.
  answer_sources:
  - Zeek conn.log
  - network data collection points (e.g., Zeek sensors at internet gateway)
  range: last 90 days
  queries:
  - technology: Machine Learning Pseudocode
    query: |
      FOR each alerted device:
        EXTRACT network flows from alerted app within 1 hour of alert.
        APPLY pre-trained Isolation Forest model to flows.
        IF anomaly_score is high -> ESCALATE for forensics.
- question: Has a non-allowlisted application been granted powerful Accessibility Service privileges?
  context: This question focuses on the abuse of Accessibility Services, which can be used to read screen content, simulate user input, and bypass security controls. Alerting on a non-approved application gaining these privileges is a critical first step in detecting this advanced form of mobile malware.
  answer_sources:
  - MDM/EMM application inventory logs
  - MDM/EMM security policy compliance logs
  - Corporate MDM/EMM servers
  - managed mobile device endpoints
  range: last 90 days
  queries:
  - technology: SIEM Pseudocode
    query: |
      SEARCH MDM/EMM compliance logs
      WHERE event_type = "compliance_violation"
      AND policy = "AccessibilityServiceAllowlist"
      AND result = "violation"
      -> ALERT.
- question: Following an unauthorized Accessibility Service grant, did the device exhibit a significant increase in outbound data volume or a high data exfiltration ratio?
  context: This question looks for network-based indicators of compromise after a suspicious privilege escalation. A sudden spike in outbound data or a connection where much more data is sent than received (high exfiltration ratio) are strong signs that the malicious application is exfiltrating captured data.
  answer_sources:
  - Zeek conn.log
  - central log aggregator (SIEM/Data Lake)
  - network data collection points
  range: last 90 days
  queries:
  - technology: Network Analysis Pseudocode
    query: |
      FOR each alerted device:
        CALCULATE 30-day baseline of hourly outbound_bytes (mean, std_dev).
        SEARCH Zeek conn.log for traffic in 24h post-alert.
        IF hourly_outbound_bytes > (baseline_mean + 3 * baseline_std_dev) -> ALERT.
        FOR each connection > 1MB:
          CALCULATE ratio = outbound_bytes / inbound_bytes.
          IF ratio > 10 -> ALERT.
- question: Can a temporal network anomaly, detected by a time-series model, be correlated with a recent, unauthorized Accessibility Service grant on the same device?
  context: This question uses advanced time-series analysis to predict expected network behavior and flag deviations. Correlating a statistically significant network anomaly with a high-risk host-based event (the Accessibility Service grant) within a tight time window creates a very high-fidelity alert, reducing false positives.
  answer_sources:
  - Zeek conn.log
  - MDM/EMM security policy compliance logs
  - central log aggregator (SIEM/Data Lake)
  range: last 90 days
  queries:
  - technology: SIEM Correlation Pseudocode
    query: |
      // Stream 1: Time-series model flags network anomaly
      // Stream 2: MDM flags Accessibility Service violation
      CORRELATE Stream 1 and Stream 2
      ON device_id
      WITHIN 1 hour
      -> CREATE high-confidence incident.
- question: Has the 'screencap' or 'screenrecord' process been executed, or has there been an unauthorized inbound connection to the adb port (TCP/5555)?
  context: This question addresses direct, command-line-based screen capture methods. It aims to detect either the execution of native screen capture tools on the device itself or attempts to connect to the device remotely via the Android Debug Bridge (adb) from an unauthorized location, which is a common vector for remote control and data theft.
  answer_sources:
  - Mobile EDR logs
  - Firewall logs
  - Managed mobile device endpoints with EDR/logging agents
  - network infrastructure (firewalls, IDS/IPS)
  range: last 90 days
  queries:
  - technology: SIEM/EDR/Firewall Pseudocode
    query: |
      SEARCH EDR logs
      WHERE process_name IN ('screencap', 'screenrecord') -> ALERT.
      SEARCH Firewall logs
      WHERE dest_port = 5555 AND action = "block" AND source_ip NOT IN developer_allowlist
      -> ALERT.
- question: Are authorized adb sessions exhibiting anomalous characteristics, such as unusually high data volume, long duration, or periodic, beacon-like connection patterns?
  context: This question seeks to find abuse of legitimate developer access. Even if an adb connection is from an authorized IP, an attacker could have compromised that developer's machine. By baselining normal developer activity, we can detect anomalous sessions that might indicate a compromised account being used for data exfiltration or remote control.
  answer_sources:
  - Zeek conn.log
  - network data collection points
  - specific network segments designated for developer access
  range: last 90 days
  queries:
  - technology: Network Analysis Pseudocode
    query: |
      FOR each authorized adb connection:
        COMPARE session_volume to 95th percentile baseline -> ALERT if exceeds.
        COMPARE session_duration to mean+2*std_dev baseline -> ALERT if exceeds.
        CALCULATE inter-arrival time variance over 24h -> ALERT if near zero.
- question: Can a machine learning model classify an adb session as malicious, triggering an automated response?
  context: This question leverages a supervised machine learning model for a more sophisticated and definitive classification of adb session behavior. By training the model on known benign and malicious session features, it can identify malicious activity with high confidence, enabling a direct, automated response (like device isolation) to quickly contain a potential threat.
  answer_sources:
  - Zeek conn.log
  - network data collection points
  - SOAR platform
  range: last 90 days
  queries:
  - technology: Machine Learning/SOAR Pseudocode
    query: |
      FOR each adb session:
        APPLY supervised classification model.
        IF classification = 'malicious' AND confidence > 0.9:
          TRIGGER SOAR playbook:
            ISOLATE device via MDM.
            CREATE incident ticket.