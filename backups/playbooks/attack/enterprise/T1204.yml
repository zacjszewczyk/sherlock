name: T1204: User Execution
id: 5a9b8c7d-6e3f-4a1b-9e8c-7b6a5d4c3b2a
description: |
  This playbook helps determine if an adversary has achieved execution through user interaction. It focuses on detecting several suspicious activities, including: user-facing applications (like Outlook or Chrome) spawning child processes that connect to malicious IPs or domains; the execution of command-line interpreters (like PowerShell) with obfuscated commands or bypasses; office applications spawning unusual child processes (like cmd.exe); network traffic to anomalous destinations such as newly registered domains or rare geolocations; the rapid sequence of an archive utility decompressing a file followed by its execution; and browser processes spawning command interpreters or connecting to suspicious domains.
type: technique
related:
  - TA0002: Execution
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a user-facing application spawned a child process that connected to a known malicious IP or domain?
    context: |
      This question is crucial for detecting one of the most common user execution methods: a user opens a malicious document or clicks a link, which causes a trusted application (like Outlook, Chrome, or Word) to execute a secondary process. This child process then establishes a connection to an adversary-controlled server for command and control or to download a second-stage payload. Matching the destination against threat intelligence feeds provides a high-confidence signal of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Email gateways
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process creation events (EID 4688) AND network connection logs (Zeek conn.log).
          JOIN on process ID and timestamp.
          ENRICH destination IP with domain from DNS logs.
          IF destination in (Threat Intel Feed), THEN alert.
  - question: Has a child process of a common user application connected to a statistically rare domain?
    context: |
      Adversaries often use new or unique domains for their campaigns. By baselining normal network behavior for common applications (like Word or Adobe Reader), we can spot anomalies. A connection to a domain that has rarely or never been seen before in the context of a specific parent process is a strong indicator of a potential threat, even without a specific threat intelligence match.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Email gateways
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each parent process (e.g., WINWORD.EXE):
            BASELINE destination domains of child processes over 30 days.
          SEARCH for new connections.
          IF new destination domain frequency < 1st percentile for that parent, THEN alert.
  - question: Can machine learning models classify process-to-network event chains as malicious?
    context: |
      This question explores using machine learning to automate the detection of malicious process and network activity chains. By training a model on features like process names, destination IP geolocation, ASN, port, and threat intel scores, we can create a sophisticated detection mechanism that can identify complex patterns indicative of malicious execution, potentially catching novel threats that signature-based methods might miss.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Email gateways
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          EXTRACT features (parent process, child process, dest IP geo, ASN, port, intel score) from process/network events.
          INPUT features into trained ML model (e.g., Random Forest).
          IF model prediction is 'malicious' with high confidence, THEN alert.
  - question: Has a command-line interpreter been executed with arguments containing known malicious or obfuscated patterns?
    context: |
      Adversaries frequently use command-line interpreters like PowerShell and CMD to execute malicious code. They often employ specific techniques, such as encoded commands (`-enc`), hidden windows (`-w hidden`), execution policy bypasses, or in-memory download and execution (`IEX(New-Object Net.WebClient).DownloadString`), to evade basic defenses. Searching for these specific patterns in command-line logs is a highly effective way to detect this activity.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Domain Controllers
      - Application servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process creation events (EID 4688).
          APPLY regex for patterns like 'IEX(', '-enc', '-w hidden', 'Bypass' to command-line arguments.
          IF match found, THEN alert.
  - question: Has a command-line interpreter been executed with unusually high-entropy (random-looking) arguments, suggesting obfuscation?
    context: |
      To hide their commands, adversaries often use encoding or compression, which results in command-line arguments that appear random and have high entropy. By establishing a baseline for the normal entropy of commands for each interpreter (PowerShell, CMD, etc.), we can detect outliers. A command with an entropy score significantly higher than the norm is a strong indicator of obfuscation and warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Domain Controllers
      - Application servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each interpreter process:
            BASELINE Shannon entropy of command-line arguments.
          SEARCH for new process creation events.
          CALCULATE entropy of new command line.
          IF entropy > 99th percentile of baseline, THEN alert.
  - question: Can a machine learning model classify command-line arguments as suspicious or malicious?
    context: |
      This question leverages Natural Language Processing (NLP) to move beyond simple pattern matching. By training a model on a large dataset of both benign and malicious command lines, the system can learn the subtle characteristics and structures of malicious commands. This allows it to flag suspicious activity that doesn't rely on known keywords or high entropy, providing a more robust and adaptable detection capability.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Domain Controllers
      - Application servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          VECTORIZE command-line arguments from process creation events (EID 4688) using TF-IDF.
          INPUT vectors into a trained NLP model.
          IF model classifies command as suspicious, THEN alert.
  - question: Has a user-facing application (e.g., Word, Excel, Adobe Reader) spawned a child process that is not on an approved allow-list?
    context: |
      High-risk applications like Microsoft Office and Adobe Reader have predictable behaviors and typically only spawn a limited set of legitimate child processes. Creating an 'allow-list' of these normal relationships allows for high-fidelity alerting. Any deviation, such as WINWORD.EXE launching powershell.exe, is extremely suspicious and a strong indicator of a malicious document or exploit.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Terminal servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          DEFINE allow-list of parent-child relationships for apps like WINWORD.EXE.
          SEARCH process creation events (EID 4688).
          IF parent-child pair is NOT IN allow-list, THEN alert.
  - question: Has any application spawned a child process that is statistically rare or has never been seen before for that parent?
    context: |
      This approach generalizes the allow-list concept by using statistical baselining. Instead of manually defining rules, we can automatically learn the normal behavior of all parent-child process relationships in the environment. This allows for the detection of anomalous process creation events across a wider range of applications, flagging events like an accounting application suddenly spawning cmd.exe, which might indicate a compromise.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Terminal servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each parent process:
            BASELINE child processes and their frequency over 30 days.
          SEARCH new process creation events.
          IF child process is new or its frequency < 1st percentile for that parent, THEN alert.
  - question: Can graph-based anomaly detection identify unusual parent-child process relationships?
    context: |
      Viewing process creation events as a large, interconnected graph provides a system-wide context that is missed when looking at events in isolation. By applying unsupervised machine learning algorithms like Local Outlier Factor (LOF) to this graph, we can identify process creation events (edges) that are structurally anomalous compared to the rest of the graph. This can surface sophisticated or novel attack paths that don't trigger simpler rule-based alerts.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Terminal servers
      - Virtual Desktop Infrastructure (VDI)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BUILD a directed graph of all parent-child process relationships.
          APPLY anomaly detection algorithm (e.g., Isolation Forest, LOF) to the graph edges.
          IF an edge is flagged as an outlier, THEN alert.
  - question: Has a user endpoint connected to a domain that was registered very recently (e.g., within the last 30 days)?
    context: |
      Adversaries frequently register new domains for their attack campaigns to evade reputation-based blocking. These Newly Registered Domains (NRDs) are inherently suspicious. Monitoring for connections to NRDs is a proactive hunting and detection technique that can identify potential command and control (C2) or phishing infrastructure early in its lifecycle.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek x509.log
      - Network egress points
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          GET list of newly registered domains (NRDs).
          SEARCH DNS logs (Zeek dns.log).
          IF requested domain is in NRD list, THEN alert on the corresponding connection.
  - question: Has a user made a network connection with anomalous characteristics, such as to a rare country or using an uncommon TLS fingerprint?
    context: |
      Users typically exhibit predictable patterns in their network activity, connecting to the same set of services and countries. By creating a baseline profile for each user (e.g., common destination countries, ASNs, JA3/JA4S TLS fingerprints), we can detect significant deviations. An abrupt connection to a new country or the use of a TLS fingerprint that is rare across the organization can indicate a compromise and C2 communication.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek x509.log
      - Network egress points
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each user:
            BASELINE destination countries, ASNs, and JA3/JA4S hashes.
          SEARCH for new connections.
          IF connection destination or JA3/JA4S is a statistical outlier for that user, THEN alert.
  - question: Does a user's network traffic volume or connection frequency significantly deviate from their predicted normal behavior?
    context: |
      Malicious activity, particularly command and control (C2) communications or data exfiltration, often alters the normal rhythm of a user's network traffic. By using a time series forecasting model (like ARIMA) to predict expected traffic volume and connection counts, we can alert when the actual, observed activity falls outside the model's confidence interval. This can detect subtle C2 'heartbeats' or large, unexpected data transfers.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Zeek x509.log
      - Network egress points
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each user:
            TRAIN time series model (e.g., ARIMA) on network metrics (bytes sent/received, connection count).
            FORECAST expected range.
          IF observed activity is outside the 95% confidence interval, THEN alert.
  - question: Has an archive utility (like 7-Zip or WinRAR) been used to decompress a file, immediately followed by the execution of a file from a temporary or download directory?
    context: |
      A common delivery method for malware involves tricking a user into opening a malicious archive (e.g., a .zip file from an email). The user extracts the contents, which often includes an executable, and then runs it. This action looks for this specific, timed sequence of events: an archive program runs, and within a short window (e.g., 60 seconds), a new process is launched from a typical extraction location like the Downloads or Temp folder. This is a strong indicator of malicious payload execution.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Download directories on shared servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH for process creation of archive utility (e.g., 7z.exe).
          IF within 60 seconds, another process is created from a temp/download directory, THEN alert.
  - question: Was an executable in a temporary directory launched an unusually short time after an archive utility was run?
    context: |
      This question refines the time-based correlation by looking for statistical outliers. While a user might manually extract and run a program, a malicious script or macro might do so almost instantaneously. By analyzing the time difference between an archive utility running and a subsequent execution from a temp folder, we can flag sequences that happen too quickly to be normal user behavior, suggesting an automated 'unpack and run' script.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Download directories on shared servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FIND process creation events from temp/download dirs where parent was an archive utility.
          CALCULATE time delta from parent start.
          IF time delta is an outlier (e.g., < 10th percentile), THEN alert.
  - question: Can a sequence analysis model detect malicious chains of process execution involving archive utilities?
    context: |
      Adversary TTPs can involve complex chains of execution (e.g., Outlook -> Word -> 7-Zip -> PowerShell). Simple correlation rules can miss these longer or more varied sequences. By training a sequence analysis model like an RNN on known good and bad process chains, the system can learn to recognize the 'grammar' of an attack and flag suspicious sequences in real-time, even if they don't match a predefined pattern.
    answer_sources:
      - Windows Event ID 4688
      - User workstations
      - Download directories on shared servers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          INPUT sequences of process creation events (e.g., outlook.exe -> 7z.exe -> powershell.exe) into a trained RNN/HMM model.
          IF model flags sequence as high-risk, THEN alert.
  - question: Has a web browser process (e.g., Chrome, Edge) directly launched a command-line interpreter like PowerShell or CMD?
    context: |
      A web browser should never, under normal circumstances, spawn a command-line interpreter. This behavior is a massive red flag and is almost always indicative of a compromise, likely through a malicious download or the exploitation of a browser vulnerability (drive-by download). Alerting on this parent-child relationship is a critical, high-fidelity detection.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process creation events (EID 4688).
          IF parent process is a browser (chrome.exe, etc.) AND child process is an interpreter (cmd.exe, powershell.exe), THEN alert immediately.
  - question: Has a user's browser connected to a domain with a rare or unusual Top-Level Domain (TLD)?
    context: |
      To host their infrastructure, adversaries often use cheap, obscure, or newly created TLDs (e.g., .xyz, .club, .top) that are not commonly visited by legitimate users within an organization. By baselining TLD popularity across the enterprise, we can flag connections to statistically rare TLDs as suspicious, as they have a higher probability of being associated with malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          BASELINE TLD frequency across the enterprise from DNS logs.
          SEARCH for new DNS requests.
          IF requested TLD is in the bottom 5th percentile of frequency, THEN alert.
  - question: Does network traffic from a browser process show outlier behavior when clustered with other browser traffic?
    context: |
      Most browser traffic conforms to typical web browsing patterns (HTTP/S to common ports, etc.). Malicious activity originating from a browser, such as C2 communication or data exfiltration, will often have different characteristics (e.g., different port, protocol, data volume patterns). By using clustering algorithms on network connection features, we can group normal traffic together and automatically identify the outliers and small, distinct clusters that may represent this malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek dns.log
      - User workstations
      - Web proxies
      - DNS resolvers
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          CLUSTER browser network connections based on features (dest IP, port, data volume).
          INVESTIGATE small clusters and outliers as potential C2 or exfiltration.