name: T1634.001: Keychain
id: 8f9a6b7c-1d2e-4f3a-b4c5-d6e7f8a9b0c1
description: This playbook helps investigate whether an adversary is attempting to steal credentials from mobile device keychains. The investigation focuses on identifying indicators of a compromised or 'jailbroken' device, which is often a prerequisite for keychain access. Detections include analyzing network traffic for communications with jailbreak-associated domains, identifying signs of Man-in-the-Middle (MitM) attacks through TLS anomalies, detecting anomalous large data exfiltrations, and leveraging Mobile Device Management (MDM) platform logs to find explicit compromise flags or the installation of unauthorized applications.
type: technique
related:
  - TA0031: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a mobile device communicating with domains known to be associated with jailbreaking tools or repositories?
    context: This question aims to detect the initial stages of a device compromise. Communication with domains like cydia.saurik.com or unc0ver.dev is a strong indicator that a user is attempting to jailbreak their device, which removes security protections and exposes the keychain.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek dns.log WHERE query IN (jailbreak_domain_watchlist) | RETURN source_ip, query, timestamp

  - question: Is there anomalous TLS activity from a mobile device, such as an unusual rate of certificate validation errors or a sudden drop in certificate issuer diversity, suggesting a Man-in-the-Middle (MitM) attack?
    context: This question helps detect traffic interception. A MitM attack, often facilitated by a jailbroken state, allows an adversary to decrypt and inspect sensitive traffic. A spike in certificate errors or a single issuer signing all traffic are classic signs of such an attack.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR EACH mobile_device_ip | CALCULATE daily_ratio_of_bad_tls_validation | CALCULATE daily_entropy_of_tls_issuers | ALERT IF ratio > 95th_percentile OR entropy < 5th_percentile

  - question: Does a mobile device's TLS connection exhibit a combination of anomalous features (e.g., certificate validity, SNI rarity, data volume, duration) that deviates significantly from established normal behavior?
    context: This question uses machine learning to find subtle or novel deviations that rule-based methods might miss. A high anomaly score from a model trained on legitimate traffic patterns can surface sophisticated attacks or previously unseen compromise indicators that are necessary for keychain access.
    answer_sources:
      - Zeek ssl.log
      - Zeek conn.log
      - Zeek dns.log
      - Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN Isolation Forest model on legitimate TLS features | FOR EACH new_connection | CALCULATE anomaly_score | ALERT IF score is high

  - question: Is a mobile device communicating with known malicious destinations, such as C2 servers, anonymization services, or suspicious hosting providers?
    context: This question aims to detect the exfiltration phase of an attack. After accessing the keychain, an adversary needs to send the stolen credentials to a server they control. Matching destination IPs or domains against threat intelligence feeds is a direct way to identify this malicious communication.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH Zeek conn.log, ssl.log WHERE destination_ip OR server_name IN (threat_intel_feed) | RETURN full_connection_record

  - question: Has a mobile device sent an unusually large amount of data in a single connection, especially to a rare or non-standard destination?
    context: This question identifies potential data exfiltration by looking for behavioral anomalies. A keychain file or a large credential dump being sent outbound would likely manifest as a single connection with a much higher data volume than typical mobile app traffic. The anomaly is stronger if the destination is new or uses an uncommon port.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: FOR EACH mobile_device_ip | CALCULATE 99.5th_percentile of orig_bytes | ALERT IF new_connection.orig_bytes > threshold | ESCALATE IF destination is rare or port is non-standard

  - question: Does a network connection from a mobile device show a high reconstruction error from an autoencoder model, indicating it is anomalous, particularly if it also involves a large data transfer?
    context: This question applies a machine learning approach to detect anomalous connections that might signify data exfiltration. An autoencoder trained on normal traffic will fail to accurately reconstruct abnormal connections. A high reconstruction error, combined with a large outbound data volume, provides a strong, model-driven signal of potential credential theft.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN autoencoder on legitimate connection features | FOR EACH new_connection | CALCULATE reconstruction_error | ALERT IF error is high AND orig_bytes is large

  - question: Has the Mobile Device Management (MDM) platform explicitly flagged a device as 'compromised' or 'jailbroken'?
    context: This is the most direct and high-fidelity question. An explicit flag from the MDM, which has privileged insight into the device's state, is a definitive indicator of compromise. This requires immediate action, as a jailbroken device has its primary security controls disabled.
    answer_sources:
      - MDM Platform Logs (e.g., Compliance Status, Application Inventory)
      - Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: SEARCH MDM logs WHERE isJailbroken = true OR complianceState = 'Non-Compliant' | TRIGGER CRITICAL ALERT with device_id, user_id

  - question: Has a mobile device installed a rare or unauthorized application that is not widely deployed across the organization?
    context: This question helps to identify unauthorized software that could be jailbreaking tools (e.g., Cydia, Sileo) or malicious applications. By baselining application prevalence, analysts can quickly spot outliers that warrant investigation, as the installation of such software is a common prerequisite for accessing the keychain.
    answer_sources:
      - MDM Platform Logs (e.g., Compliance Status, Application Inventory)
      - Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: CALCULATE application_prevalence across all devices | FOR EACH device | IDENTIFY installed apps with prevalence < 1% | ALERT with device_id and rare_app_list

  - question: Does a machine learning model, trained on historical MDM data, predict a high probability that a device is compromised based on features like its OS version, update lag, and policy violation history?
    context: This question uses predictive analytics to proactively identify at-risk devices even before an explicit compromise flag is raised. A model can learn the subtle combination of factors that often precede a full compromise, allowing for preemptive investigation.
    answer_sources:
      - MDM Platform Logs (e.g., Compliance Status, Application Inventory)
      - Mobile Device Management (MDM) and Unified Endpoint Management (UEM) platforms.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: TRAIN classification model on historical MDM logs with known compromised devices | FOR EACH device | PREDICT compromise_probability | ALERT IF probability > 0.90