name: T1553.004: Install Root Certificate
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: |
  This playbook helps answer the question: Is the adversary evading defenses by installing a malicious root certificate? It provides investigative steps to detect the installation of malicious or unauthorized root certificates by analyzing certificate properties, process execution events, and post-installation network behavior. Detections focus on checking new certificates against allow/blocklists, identifying suspicious command-line usage (e.g., certutil.exe), flagging statistically rare certificates across the enterprise, identifying installations by unauthorized users or processes, and correlating installations with subsequent connections to malicious destinations.
type: technique
related:
  - TA0005: Defense Evasion
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a newly installed root certificate been identified that is either on a known-malicious blocklist or not on the approved enterprise allowlist?
    context: |
      This question aims to directly identify the installation of a malicious or unauthorized root certificate. Adversaries install their own root certificates to bypass certificate pinning, intercept encrypted traffic (man-in-the-middle), and make malicious software appear legitimate. Checking against established allowlists and blocklists is a direct and effective method for detecting this threat.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Windows Registry (HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Zeek ssl.log
      - Domain Controllers
      - Public-facing Web Servers
      - Enterprise Certificate Authority Servers
      - Endpoint devices
      - Centralized log aggregation platform (SIEM)
    range: last 90 days
    queries:
      - pseudocode: SEARCH (Sysmon EID 13 AND RegistryPath CONTAINS "EnterpriseCertificates\\Root\\Certificates") OR (Windows EID 41) | EXTRACT CertificateThumbprint | LOOKUP against (allowlist, blocklist) | WHERE on_blocklist=true OR on_allowlist=false | ALERT
  - question: Are there any rarely seen certificate issuers observed in network traffic that are not on the approved enterprise allowlist?
    context: |
      This question helps find potentially malicious certificates by focusing on statistical outliers. Legitimate root certificates are typically issued by well-known, high-volume Certificate Authorities (CAs). A certificate from a very rare or previously unseen issuer, especially one not on the enterprise allowlist, could indicate an adversary's self-signed certificate or one from a less reputable source being used for malicious purposes.
    answer_sources:
      - Zeek ssl.log
      - Domain Controllers
      - Public-facing Web Servers
      - Enterprise Certificate Authority Servers
      - Endpoint devices
      - Centralized log aggregation platform (SIEM)
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek ssl.log | GROUPBY issuer | COUNT sessions | CALCULATE prevalence | WHERE prevalence < 0.0005 | LOOKUP against (allowlist) | WHERE on_allowlist=false | INVESTIGATE hosts
  - question: Can a machine learning model identify newly observed certificates as malicious based on their intrinsic properties?
    context: |
      This question leverages machine learning to proactively identify malicious certificates that may not yet be on any blocklist. By analyzing features like validity period, key length, string entropy, and other attributes, the model can learn the characteristics that differentiate legitimate certificates from malicious ones, providing a predictive defense against novel threats.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Windows Registry (HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Zeek ssl.log
      - Domain Controllers
      - Public-facing Web Servers
      - Enterprise Certificate Authority Servers
      - Endpoint devices
      - Centralized log aggregation platform (SIEM)
    range: last 90 days
    queries:
      - pseudocode: FOR each new certificate | EXTRACT features (validity, key_length, algorithm, issuer_entropy, etc.) | SCORE with Random Forest model | WHERE prediction=malicious AND confidence > 0.9 | ALERT for analyst review
  - question: Have any command-line tools like certutil.exe or powershell.exe been used to install a new root certificate?
    context: |
      Adversaries frequently use built-in system utilities to install root certificates, as this activity can blend in with legitimate administrative tasks. This question focuses on detecting the specific command-line patterns associated with adding a certificate to a root trust store. Any such execution that is not part of a planned and approved change is highly suspicious.
    answer_sources:
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 1 (Process Creation)
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - All Windows Endpoints and Servers
      - administrative workstations
      - developer machines
    range: last 90 days
    queries:
      - pseudocode: SEARCH (Sysmon EID 1 OR WEF EID 4688) | PARSE command_line | WHERE (process_name='certutil.exe' AND command_line CONTAINS '-addstore' AND command_line CONTAINS 'root') OR (process_name='powershell.exe' AND (command_line CONTAINS 'Import-Certificate' OR command_line CONTAINS 'Install-Certificate') AND command_line CONTAINS 'Cert:\\LocalMachine\\Root') | ALERT
  - question: Has there been an execution of a certificate management utility where the command-line arguments have an unusually high entropy?
    context: |
      This question aims to detect obfuscation in command-line arguments. Adversaries may use randomized file names or encoded payloads within the command line to evade simple signature-based detection. A high Shannon entropy value indicates a high degree of randomness, which is anomalous for legitimate, predictable administrative commands and can be a strong indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 1 (Process Creation)
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - All Windows Endpoints and Servers
      - administrative workstations
      - developer machines
    range: last 90 days
    queries:
      - pseudocode: FOR each certutil/powershell execution | CALCULATE entropy(command_line) | COMPARE to baseline | WHERE entropy > 98th_percentile | ALERT as high-entropy command
  - question: Was a certificate installation command initiated by an anomalous parent-child process chain?
    context: |
      This question focuses on the context of execution. Legitimate administrative actions typically follow predictable process chains (e.g., an administrator runs mmc.exe which then uses a system utility). An adversary, however, might execute these commands from a compromised application, such as a web browser or a document reader (winword.exe -> powershell.exe). A sequence-based model can learn normal patterns and flag these deviant execution chains as high-risk anomalies.
    answer_sources:
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 1 (Process Creation)
      - Windows PowerShell Event ID 4104 (Script Block Logging)
      - All Windows Endpoints and Servers
      - administrative workstations
      - developer machines
    range: last 90 days
    queries:
      - pseudocode: FOR each new process chain ending in certutil/powershell | SCORE with LSTM model | WHERE reconstruction_error > threshold | ALERT as anomalous process sequence
  - question: Has a root certificate been installed on a host that has never been seen anywhere else in the environment before?
    context: |
      This question helps to identify targeted attacks or isolated compromises. A certificate that appears for the first time on a single host, without being part of a widespread software deployment or system update, is highly suspect. It suggests the certificate was installed for a specific, non-standard purpose, which could be malicious.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Asset inventory or configuration management database (CMDB)
      - Centralized log aggregation platform (SIEM)
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: ON new certificate installation (Sysmon EID 13) | EXTRACT thumbprint | SEARCH historical inventory for thumbprint | IF count=0 | ALERT as 'First Seen In Environment'
  - question: Are there any installed root certificates that exist on an unusually small number of hosts across the enterprise?
    context: |
      This question uses population analysis to find outliers. Legitimate root certificates, whether from the OS vendor or enterprise CAs, should be present on a large percentage of systems. A certificate installed on only a handful of machines is an anomaly that warrants investigation, as it could indicate a limited adversary foothold or a test run for a larger campaign.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Asset inventory or configuration management database (CMDB)
      - Centralized log aggregation platform (SIEM)
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: DAILY | GET all root certificate thumbprints from all hosts | GROUPBY thumbprint | COUNT hosts | CALCULATE prevalence | WHERE prevalence < 5th_percentile OR host_count < 10 | FLAG for review
  - question: Can clustering algorithms identify hosts with anomalous root certificate configurations compared to the rest of the fleet?
    context: |
      This question applies unsupervised machine learning to find outlier systems based on their entire certificate profile. Most hosts in an enterprise should have very similar sets of root certificates and will form large, dense clusters. A host that has been compromised with a malicious root certificate will have a different certificate profile and will likely be identified as a "noise" point by an algorithm like DBSCAN, flagging it for investigation without prior knowledge of the malicious certificate itself.
    answer_sources:
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Sysmon Event ID 13 (RegistryValue Set)
      - Asset inventory or configuration management database (CMDB)
      - Centralized log aggregation platform (SIEM)
      - All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - pseudocode: CREATE host-certificate matrix (binary vectors) | APPLY DBSCAN clustering algorithm | IDENTIFY hosts classified as 'noise' or in small clusters | PRIORITIZE for investigation
  - question: Was a certificate installation utility launched by an unauthorized parent process, such as a web browser or office application?
    context: |
      This question focuses on the execution context to identify suspicious activity. Legitimate certificate management is almost never initiated directly by a user application like a browser or word processor. Such a process relationship strongly suggests a user was tricked into running a malicious file or that an exploit in the parent application was used to gain execution and install a malicious certificate.
    answer_sources:
      - Sysmon Event ID 1 (Process Creation)
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 13 (RegistryValue Set)
      - All Windows Endpoints and Servers
      - Identity and Access Management (IAM) systems for user context
      - Change Management Database (CMDB) for maintenance window data
    range: last 90 days
    queries:
      - pseudocode: SEARCH process creation for certutil.exe | CHECK parent_process_name | IF parent_process_name IN ('chrome.exe', 'winword.exe', 'outlook.exe', etc.) | HIGH-SEVERITY ALERT
  - question: Was a root certificate installed by a user account that does not typically perform such administrative actions?
    context: |
      This question applies the principle of least privilege and behavioral analytics. Certificate management is a sensitive administrative task. If an account from a non-technical department (e.g., Marketing, Sales) or any user who has never done so before suddenly installs a root certificate, it is a major red flag for account compromise or insider threat.
    answer_sources:
      - Sysmon Event ID 1 (Process Creation)
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 13 (RegistryValue Set)
      - All Windows Endpoints and Servers
      - Identity and Access Management (IAM) systems for user context
      - Change Management Database (CMDB) for maintenance window data
    range: last 90 days
    queries:
      - pseudocode: ON certificate installation | EXTRACT user_account | LOOKUP historical activity for user_account | IF 'certificate installation' action is a first-time occurrence for this user | ALERT
  - question: Does a UEBA model assign a high risk score to a certificate installation event based on the combination of user, process, and timing?
    context: |
      This question leverages a holistic, context-aware UEBA model to detect threats that might be missed by single-indicator rules. A UEBA system can synthesize multiple weak signals—such as the user's role, the time of day, the parent process, and the specific command—into a single, high-confidence anomaly score. This approach is powerful for detecting sophisticated adversaries who attempt to blend in.
    answer_sources:
      - Sysmon Event ID 1 (Process Creation)
      - Windows Event ID 4688 (Process Creation with Command Line)
      - Sysmon Event ID 13 (RegistryValue Set)
      - All Windows Endpoints and Servers
      - Identity and Access Management (IAM) systems for user context
      - Change Management Database (CMDB) for maintenance window data
    range: last 90 days
    queries:
      - pseudocode: INGEST certificate installation event into UEBA model (features: user, user_role, process, parent_process, time_of_day) | IF anomaly_score > high_risk_threshold | ALERT
  - question: Shortly after a new root certificate was installed on a host, did that host initiate network connections to known malicious or newly registered domains?
    context: |
      This question seeks to link the act of certificate installation directly to its likely malicious purpose: command and control (C2) or data exfiltration. An adversary installs a root certificate to trust their own C2 server. Therefore, observing traffic to suspicious destinations immediately following an installation is strong evidence of a compromise.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 13 (RegistryValue Set)
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network Security Monitoring sensors (e.g., Zeek)
      - DNS Resolvers
      - Endpoint log shippers
      - Centralized log aggregation platform (SIEM)
    range: last 90 days
    queries:
      - pseudocode: ON certificate installation event for host_X | MONITOR network traffic from host_X for 60 minutes | IF destination_domain IN (threat_intel_feed, NRD_list) | HIGH-SEVERITY ALERT
  - question: Following a root certificate installation, did the host's network traffic exhibit a significant increase in Server Name Indication (SNI) entropy?
    context: |
      This question looks for behavioral changes in network traffic post-installation. A sudden increase in the randomness of requested server names (SNI entropy) can indicate the use of domain generation algorithms (DGAs) for C2 communication, a common adversary technique. A compromised host may rapidly cycle through many different domains, a pattern that stands out against its normal, more predictable browsing behavior.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 13 (RegistryValue Set)
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network Security Monitoring sensors (e.g., Zeek)
      - DNS Resolvers
      - Endpoint log shippers
      - Centralized log aggregation platform (SIEM)
    range: last 90 days
    queries:
      - pseudocode: ON certificate installation for host_X | MONITOR SNI entropy in 1-hour windows | IF current_entropy > (baseline_entropy + 2 * std_dev) | ALERT for anomalous SNI entropy
  - question: After a root certificate was installed, did the host's overall network behavior deviate significantly from its established baseline as measured by a machine learning model?
    context: |
      This question uses an advanced anomaly detection model to identify subtle but significant changes in a host's network profile. An autoencoder trained on normal behavior (bytes transferred, connection counts, etc.) will have a low reconstruction error. After a compromise and certificate installation, subsequent C2 or exfiltration traffic will not match the learned pattern, resulting in a high reconstruction error and flagging the host for deep-dive analysis.
    answer_sources:
      - Zeek ssl.log
      - Zeek dns.log
      - Zeek conn.log
      - Sysmon Event ID 13 (RegistryValue Set)
      - Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)
      - Network Security Monitoring sensors (e.g., Zeek)
      - DNS Resolvers
      - Endpoint log shippers
      - Centralized log aggregation platform (SIEM)
    range: last 90 days
    queries:
      - pseudocode: ON certificate installation for host_X | FEED subsequent network traffic vectors into host_X's autoencoder model | IF reconstruction_error > sustained_threshold | ALERT for significant network behavior anomaly