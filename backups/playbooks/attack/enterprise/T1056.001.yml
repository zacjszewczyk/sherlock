name: T1056.001: Keylogging
id: 5a1a1f3b-8263-424a-8a58-542e79600a9e
description: >
  This playbook helps identify if an adversary has installed software to capture user credentials via keystrokes (keylogging) and is collecting/staging that data for exfiltration. It focuses on detecting evidence such as processes creating or modifying files and registry keys matching known keylogger artifacts, the loading of unsigned or atypical kernel drivers, processes executing from user-writable paths that load keyboard-related libraries without a GUI, non-browser processes deleting cookies followed by suspicious file writes, the creation of high-entropy files/pipes for staging, and suspicious outbound network connections exhibiting beaconing or data exfiltration patterns.
type: technique
related:
  - TA0006: Credential Access
  - TA0009: Collection
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any files been created or registry keys been modified that match known keylogger IOCs?
    context: Keyloggers often leave behind specific artifacts, such as files or registry entries, that are known and cataloged in threat intelligence feeds. This question aims to directly match observed file creation and registry modification events against a blocklist of these known indicators of compromise (IOCs) to find definitive evidence of a specific keylogger tool.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - User Workstations, Critical Application Servers, Domain Controllers, Terminal Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH (file_creations OR registry_modifications) WHERE (file_hash IN keylogger_ioc_list OR registry_path IN keylogger_ioc_list)
  - question: Has there been an anomalous number of modifications to registry keys commonly abused for keylogging persistence?
    context: Adversaries may modify sensitive registry keys, like `AppInit_DLLs`, to load their keylogging malware at startup. While these keys can be modified legitimately, a sudden spike in modification activity on a host, compared to its own history, is highly suspicious. This question uses a statistical approach (3-sigma) to detect deviations from a host's normal behavior, flagging potential keylogger installation.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - User Workstations, Critical Application Servers, Domain Controllers, Terminal Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH registry_modifications WHERE registry_key IN (sensitive_key_list) | STATS count by host, day | COMPARE count against 90_day_baseline per host | ALERT if count > (mean + 3*stdev)
  - question: Have any registry modifications occurred that a machine learning model identifies as highly likely to be malicious keylogger activity?
    context: This question leverages a machine learning model (GBM) to move beyond simple IOC matching or statistical anomalies. By analyzing multiple features of a registry modification event (who made the change, what was changed, etc.), the model can identify complex patterns that are characteristic of malicious behavior, even if the specific artifact is new. A high score ($$ > 0.9 $$) indicates the event strongly resembles known malicious persistence techniques.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 12
      - Sysmon Event ID 13
      - User Workstations, Critical Application Servers, Domain Controllers, Terminal Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH registry_modifications | EXTRACT features (parent_process, target_path, value_type, value_length) | SCORE with pre-trained_GBM_model | ALERT if score > 0.9
  - question: Has an unsigned kernel driver been loaded that is not on an approved allowlist?
    context: Kernel-mode keyloggers often use custom drivers to intercept keystrokes at a low level. While some legitimate software may use unsigned drivers, they are uncommon and risky. This question aims to identify the loading of any unsigned driver that hasn't been explicitly vetted and approved, as this is a strong indicator of a potential rootkit or kernel-mode malware.
    answer_sources:
      - Sysmon Event ID 6
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations, Terminal Servers, Privileged Access Workstations, Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH driver_loads WHERE signed=false AND driver_hash NOT IN (unsigned_driver_allowlist)
  - question: Has a driver been loaded from an unusually rare or uncommon signer?
    context: Most legitimate drivers are signed by a relatively small set of well-known, trusted vendors. An adversary might sign their malicious driver with a self-signed certificate or a certificate from an obscure entity. This question identifies drivers signed by entities that are statistically rare across the entire enterprise, which can help uncover malicious drivers that might otherwise appear legitimate because they are technically 'signed'.
    answer_sources:
      - Sysmon Event ID 6
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations, Terminal Servers, Privileged Access Workstations, Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH driver_loads | CALCULATE signer_prevalence_across_enterprise | ALERT if signer_prevalence < 5th_percentile
  - question: Has there been a statistically significant spike in new service installations that does not align with normal business operations?
    context: Keyloggers are often installed as services to ensure they persist across reboots. While new services are installed during legitimate software deployments, these activities usually follow a predictable pattern. This question uses a time-series model to detect anomalous spikes in service installation frequency, which could indicate an adversary installing a keylogger service outside of a normal maintenance window.
    answer_sources:
      - Sysmon Event ID 6
      - Windows Event ID 7045
      - Windows Event ID 4697
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - User Workstations, Terminal Servers, Privileged Access Workstations, Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH service_installations | AGGREGATE count per hour | APPLY time_series_anomaly_detection_model | ALERT on significant_spikes NOT IN (patching_cycles)
  - question: Has a process running from a non-standard location loaded the user32.dll library?
    context: user32.dll is used to handle user interface elements, including keyboard input. It is typically loaded by legitimate applications in standard system or program file directories. A process running from an unusual location (like a temp folder or user profile) that loads this DLL is suspicious, as it may be a keylogger attempting to hook keyboard functions without having a legitimate graphical interface.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Point-of-Sale Terminals
    range: last 90 days
    queries:
      - pseudocode: SEARCH module_loads WHERE module="user32.dll" AND process_path NOT IN ("C:\\Windows\\System32\\*", "C:\\Program Files\\*") AND parent_process NOT IN ("explorer.exe", "winlogon.exe")
  - question: Have any new, unsigned, and non-allowlisted executables been created that have high entropy?
    context: High Shannon entropy in a file often indicates that the file is packed or encrypted, a common technique used by adversaries to obfuscate their malware and evade signature-based antivirus detection. This question looks for newly created executables that are both high-entropy (suggesting packing) and not signed by a trusted source, which is a strong combination of indicators for a malicious payload like a keylogger.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Point-of-Sale Terminals
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_creations WHERE file_is_executable | CALCULATE shannon_entropy | ALERT if entropy > 7.2 AND is_signed=false AND file_hash NOT IN (allowlist)
  - question: Are there any processes loading user32.dll that behave as outliers compared to the normal profile of legitimate applications?
    context: This question uses a One-Class SVM, an anomaly detection model, to build a profile of what "normal" processes that load user32.dll look like. The model learns the typical characteristics (parent process, command line arguments, etc.) of benign applications. It can then flag any process that loads user32.dll but deviates significantly from this learned profile, effectively identifying suspicious outliers that could be keyloggers.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 7
      - Sysmon Event ID 11
      - User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Point-of-Sale Terminals
    range: last 90 days
    queries:
      - pseudocode: SEARCH module_loads WHERE module="user32.dll" | EXTRACT features (parent_process, cmd_length, dll_count) | SCORE with One_Class_SVM_model | ALERT on outliers
  - question: Has a non-browser process been observed deleting browser cookie files?
    context: Some credential theft malware, including keyloggers, may attempt to clear existing browser sessions by deleting cookie files to force the user to log in again, thereby ensuring the capture of fresh credentials. This activity is highly irregular for any process other than the browser itself or a legitimate system cleanup utility.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 23
      - User Workstations, Web Application Servers, Authentication Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_deletions WHERE file_path CONTAINS 'Cookies' AND process_name NOT IN (browser_list, utility_list)
  - question: Are there any files being written to with unusually high frequency and small data volume?
    context: A keylogger capturing keystrokes and writing them to a log file would generate a pattern of frequent, small write operations. This is different from a user saving a document, which is typically a single, larger write. This question seeks to identify this specific pattern of "dribble" writes to a file, which is a strong behavioral indicator of keystroke logging.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 23
      - User Workstations, Web Application Servers, Authentication Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH file_writes | STATS count, avg_write_size by file, minute | ALERT if count > 10 AND avg_write_size < 1KB
  - question: Has the specific sequence of cookie deletion, log file creation, and network exfiltration by a single process been observed?
    context: This question looks for a high-confidence attack chain. By correlating multiple distinct events in a specific order from the same process, we can significantly reduce false positives. The sequence of deleting cookies (forcing re-authentication), creating a log file (staging captured data), and making a network connection (exfiltrating the data) is a textbook pattern for credential theft, and detecting this entire chain provides strong evidence of a compromise.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 23
      - User Workstations, Web Application Servers, Authentication Servers
    range: last 90 days
    queries:
      - pseudocode: CORRELATE events by process_guid | DETECT sequence: (1. delete_cookies, 2. create_file, 3. network_connection) within 5 minutes | ALERT on sequence_completion
  - question: Have any files, registry objects, or named pipes been created that match known keylogger staging artifacts?
    context: After capturing keystrokes, an adversary needs to stage them in a temporary location before exfiltration. This is often done using files, registry keys, or named pipes with specific names used by known malware. This question aims to detect this staging activity by matching the names of newly created objects against a blocklist of known staging indicators.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Sysmon Event ID 17
      - Sysmon Event ID 18
      - All Enterprise Endpoints (Workstations and Servers), Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH (file_creations OR registry_modifications OR named_pipe_creations) WHERE (name IN keylogger_staging_ioc_list)
  - question: Has a non-system process created a named pipe with a high-entropy (random-looking) name?
    context: To evade detection based on static names, adversaries often use algorithmically generated names for their staging objects, such as named pipes used for inter-process communication. These names appear random and have high character entropy. This question specifically looks for high-entropy named pipes created by non-standard processes, which is a strong indicator of covert malware activity.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Sysmon Event ID 17
      - Sysmon Event ID 18
      - All Enterprise Endpoints (Workstations and Servers), Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH named_pipe_creations WHERE process NOT IN (system_processes) | CALCULATE entropy of pipe_name | ALERT if entropy > 3.5
  - question: Have any files, registry entries, or named pipes been created with names or paths that a machine learning model deems suspicious?
    context: This question uses a machine learning model trained to recognize the linguistic patterns of malicious path and object names (e.g., random-looking strings, attempts to mimic legitimate names). This lexical analysis allows for the detection of suspicious staging artifacts even if they are from a new or unknown malware family and not present in any IOC list.
    answer_sources:
      - Sysmon Event ID 1
      - Sysmon Event ID 11
      - Sysmon Event ID 13
      - Sysmon Event ID 17
      - Sysmon Event ID 18
      - All Enterprise Endpoints (Workstations and Servers), Domain Controllers
    range: last 90 days
    queries:
      - pseudocode: SEARCH (file_creations OR registry_modifications OR named_pipe_creations) | EXTRACT name/path | SCORE with lexical_analysis_ML_model | ALERT if score is malicious
  - question: Has a process that previously triggered a host-based alert been seen making a network connection to a known-bad or newly observed domain?
    context: A single suspicious event might be a false positive, but correlating it with subsequent suspicious network activity greatly increases confidence. This question connects the dots: it takes a process already flagged for suspicious behavior on a host and checks if it then attempts to communicate with a destination that is either on a threat intelligence blocklist or is a brand-new domain (a common tactic for C2 infrastructure).
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points (Firewalls, Proxies), DNS Servers, All Endpoints
    range: last 90 days
    queries:
      - pseudocode: SEARCH host_alerts | JOIN process_guid with network_connections | ALERT if destination_ip IN (c2_blocklist) OR destination_domain_age < 24_hours
  - question: Has a TLS connection been made using a JA3 fingerprint that is extremely rare in the environment?
    context: A JA3 fingerprint is a hash of the parameters in a TLS client hello packet, effectively fingerprinting the client application that initiated the connection. Commodity malware often uses specific libraries for networking, resulting in a unique and consistent JA3 hash. This question identifies connections made by clients that are statistical outliers in the enterprise, which can uncover custom malware or uncommon tools used for C2 communications.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points (Firewalls, Proxies), DNS Servers, All Endpoints
    range: last 30 days
    queries:
      - pseudocode: SEARCH tls_connections | CALCULATE ja3_prevalence_across_enterprise | ALERT if host_count_for_ja3 < 5
  - question: Have any TLS connections occurred that a machine learning model identifies as likely being malicious C2 traffic?
    context: This question uses a machine learning classifier to analyze a rich set of features from a TLS connection (client fingerprint, server fingerprint, destination, etc.) to distinguish legitimate traffic from malicious command-and-control (C2) traffic. This is powerful because it can identify keylogger exfiltration channels even when they use encryption and connect to new, un-categorized domains, based purely on the behavioral characteristics of the connection itself.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points (Firewalls, Proxies), DNS Servers, All Endpoints
    range: last 90 days
    queries:
      - pseudocode: SEARCH tls_connections | EXTRACT features (ja3, ja3s, dest_ip, sni, port) | SCORE with random_forest_c2_model | ALERT if score is malicious
  - question: Has a non-browser process made a small outbound connection to a newly observed domain?
    context: Adversaries often use newly registered domains for C2 infrastructure to bypass reputation-based blocking. Keylogger exfiltration can involve sending small amounts of data. This question combines these indicators, looking for a non-standard process (not a browser) sending a small payload (potential keystroke batch) to a new, un-trusted domain, which is a suspicious pattern for data exfiltration.
    answer_sources:
      - Zeek conn.log
      - Sysmon Event ID 3
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Network Egress Points (Firewalls, Proxies), User Workstations, DNS Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_connections WHERE process NOT IN (browsers, updaters) AND dest_ip_category = 'Newly Observed' AND bytes_sent < 2KB
  - question: Have any network connections been observed exhibiting a highly regular, low-volume 'heartbeat' pattern?
    context: Malware, including keyloggers, often uses a 'beacon' or 'heartbeat' to regularly check in with its C2 server. This traffic is characterized by highly consistent timing between connections and typically small data payloads. This question uses statistical analysis of network logs to find this machine-like regularity, identifying low-and-slow data exfiltration or C2 channels that might otherwise blend in with normal traffic.
    answer_sources:
      - Zeek conn.log
      - Sysmon Event ID 3
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Network Egress Points (Firewalls, Proxies), User Workstations, DNS Servers
    range: last 24 hours
    queries:
      - pseudocode: SEARCH network_connections | GROUP by src_ip, dest_ip | CALCULATE time_delta_stdev and 95_percentile_bytes_sent | ALERT if time_delta_stdev < 5s AND 95_percentile_bytes_sent < 2048
  - question: Can a periodic beaconing signal be detected from any source IP's network traffic?
    context: This question applies advanced signal processing (Fast Fourier Transform) to network traffic data to find hidden periodic patterns. An FFT can convert a time-based signal (like connections per minute) into a frequency-based one, making it easy to spot a strong, repeating signal. This method is very effective at detecting automated beaconing behavior from malware, even if the timing has some jitter, by identifying the dominant frequency of communication.
    answer_sources:
      - Zeek conn.log
      - Sysmon Event ID 3
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Network Egress Points (Firewalls, Proxies), User Workstations, DNS Servers
    range: last 90 days
    queries:
      - pseudocode: SEARCH network_connections | AGGREGATE count per minute by src_ip | APPLY FFT to time_series | ALERT on strong_frequency_peak WHERE src_ip NOT IN (known_beacons)
  - question: Has a process been seen writing to a temporary file and then immediately sending a volume of network data that matches the file's size?
    context: This question looks for a classic "stage and exfiltrate" pattern. The adversary writes the captured keystrokes to a log file in a temporary location, and then reads that file and sends its contents over the network. By correlating the file write events with a network connection from the same process where the amount of data sent closely matches the file's size, we can gain high confidence that the contents of that specific file were just exfiltrated.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 2
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek files.log
      - User Workstations, Staging Servers, Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: CORRELATE file_writes and network_connections by process_guid | WHERE file_path IN (temp_dirs) | ALERT if abs(file_size - bytes_sent) / file_size < 0.1
  - question: Has a process made a network connection almost immediately after modifying a file, where the data sent matches the file size?
    context: This is a variation of the "stage and exfiltrate" detection, focusing on the timing and size correlation. A very short delay (< 60 seconds) between the final write to a file and a subsequent network connection is highly suspicious. When combined with a close match between the file size and the bytes sent, it strongly implies a causal link: the process finished writing to the log file and then immediately exfiltrated it.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 2
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek files.log
      - User Workstations, Staging Servers, Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: CORRELATE file_modifications and network_connections by process | CALCULATE time_delta = (connection_time - last_write_time) | ALERT if time_delta < 60s AND abs(file_size - bytes_sent) < 100
  - question: Has any process followed the behavioral state transition of suspicious file writing followed by a network connection?
    context: This question uses a state machine to model a multi-stage attack pattern. The model specifically tracks a process as it first exhibits behavior consistent with logging (frequent, small writes) and then transitions to a state of network exfiltration. Triggering this specific sequence of states provides a high-fidelity alert, as it confirms not just one suspicious action, but a logical progression of malicious activity performed by a single process.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 2
      - Sysmon Event ID 3
      - Zeek conn.log
      - Zeek files.log
      - User Workstations, Staging Servers, Network Egress Points
    range: last 90 days
    queries:
      - pseudocode: FOR each process, track state | IF state=START and event=suspicious_write, state=SUSPICIOUS_FILE_WRITE | IF state=SUSPICIOUS_FILE_WRITE and event=network_connection, ALERT and state=NETWORK_CONNECTION