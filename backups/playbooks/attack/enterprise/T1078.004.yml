name: T1078.004: Cloud Accounts
id: 6a2c5c3d-1b1f-4b0e-9b2f-8d7c6a5b4e3d
description: This playbook focuses on detecting adversarial use of compromised cloud accounts (T1078.004). It provides investigative steps to identify initial access via cloud credentials, persistence mechanisms like creating new programmatic keys or using dormant accounts, privilege escalation through IAM policy manipulation, and defense evasion tactics such as disabling security logging or modifying firewall rules. The indicators cover a range of detection methods from simple rule-based alerts on known bad infrastructure and tools to behavioral analysis of user login patterns, API call sequences, and impossible travel scenarios.
type: technique
related:
- TA0001: Initial Access
- TA0003: Persistence
- TA0004: Privilege Escalation
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are there successful cloud logins from IP addresses on a threat intelligence
    feed?
  context: A successful cloud authentication event originating from a source IP address
    present on a high-confidence threat intelligence feed (e.g., known C2 servers,
    TOR exit nodes, anonymous proxies) is a strong indicator of a compromised account
    being used for initial access.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Zeek conn.log
  - Cloud provider IAM services (e.g., Azure AD, AWS IAM)
  - Network Egress/Ingress Points (e.g., Internet Gateway, VPN Concentrators)
  - Threat Intelligence Platforms
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      SEARCH cloud_authentication_logs WHERE outcome='success'
      JOIN source_ip WITH threat_intelligence_feed ON ip_address
      GENERATE critical_alert
- question: Are there successful cloud logins from anomalous or rare Autonomous System
    Numbers (ASNs)?
  context: Adversaries may use infrastructure in less-common ASNs to evade detection.
    By baselining the frequency of source ASNs across the organization, successful
    logins from statistically rare ASNs (that are not known business partners) can
    indicate malicious activity.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Zeek conn.log
  - Cloud provider IAM services (e.g., Azure AD, AWS IAM)
  - Network Egress/Ingress Points (e.g., Internet Gateway, VPN Concentrators)
  - Threat Intelligence Platforms
  range: last 30 days
  queries:
  - tech: pseudocode
    query: |
      BASELINE source_asn_frequency from cloud_auth_logs over 30_days
      SEARCH cloud_authentication_logs WHERE outcome='success'
      ENRICH source_ip with ASN
      ALERT if source_asn_frequency is in bottom 5th percentile AND not in allowlist
- question: Can a machine learning model identify successful logins that are likely
    to be malicious?
  context: A supervised classification model can learn complex patterns from historical
    login data. By training it on features like geolocation, ASN, time of day, and
    user agent, it can score new logins for their probability of being malicious,
    detecting anomalies that simple rules might miss.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Zeek conn.log
  - Cloud provider IAM services (e.g., Azure AD, AWS IAM)
  - Network Egress/Ingress Points (e.g., Internet Gateway, VPN Concentrators)
  - Threat Intelligence Platforms
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each new successful_login:
        EXTRACT features (ip_geo, asn, time_of_day, user_agent)
        SCORE login with trained_classification_model
        ALERT if score > 0.9
- question: Are cloud API calls being made with User-Agent strings matching known
    offensive tools or unusual scripting agents?
  context: Adversaries often use specific offensive security tools (like PowerZure
    or Pacu) or generic scripting clients (like 'curl' or 'python-requests') that
    leave distinct User-Agent strings. Detecting these, especially when not typical
    for a user, can indicate tool-driven enumeration or exploitation.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud API endpoints
  - Cloud Service Provider Management Consoles
  - Application and Web Server Logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      SEARCH cloud_audit_logs
      MATCH user_agent against regex_list_of_malicious_tools
      ALERT on match
- question: Is a user or service principal making API calls with a User-Agent that
    deviates from their established baseline or has anomalous entropy?
  context: Users and services typically use a consistent set of clients, resulting
    in predictable User-Agent strings. A sudden deviation from this baseline, or a
    change in the complexity (entropy) of the string, can suggest an attacker is
    using a different toolset under the guise of that user's identity.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud API endpoints
  - Cloud Service Provider Management Consoles
  - Application and Web Server Logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each user, BASELINE normal_user_agent_strings
      FOR each new api_call:
        ALERT if user_agent not in user_baseline
        CALCULATE user_agent_entropy
        ALERT if entropy is > 2 standard deviations from user's mean_entropy
- question: Are observed sequences of API calls indicative of automated tool activity
    rather than normal user behavior?
  context: Legitimate user activity often follows certain patterns of API calls.
    A sequence analysis model (like an HMM or LSTM) can learn these patterns. A sequence
    that significantly deviates from the learned model suggests non-human, tool-driven
    activity that could be malicious.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud API endpoints
  - Cloud Service Provider Management Consoles
  - Application and Web Server Logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN sequence_model on legitimate_api_call_sequences per user
      FOR each new observed_api_sequence:
        SCORE sequence against model
        ALERT if score indicates significant deviation
- question: Is there a high volume of failed logins from a single IP (brute-force)
    or for multiple accounts from a single IP (password spray)?
  context: Brute-force and password spraying are common initial access techniques
    involving a high volume of failed authentication attempts. A simple threshold-based
    rule can detect these attacks in near real-time by counting failed logins from
    a source IP against one or many accounts within a short time window.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Windows Event ID 4625 on ADFS servers
  - Cloud authentication endpoints
  - On-premises federation servers (e.g., ADFS)
  - VPN gateways
  range: last 10 minutes
  queries:
  - tech: pseudocode
    query: |
      RULE 1 (Brute-force): ALERT if count(failed_logins) from single_ip > 20 in 5_minutes
      RULE 2 (Password Spray): ALERT if count(distinct_failed_accounts) from single_ip > 15 in 10_minutes
- question: Is there a statistically unusual ratio of failed to successful logins
    from a source IP?
  context: Beyond simple thresholds, analyzing the ratio of failed to successful
    logins can identify more subtle brute-force attempts. An IP with a ratio in the
    99th percentile, or one targeting an anomalously high number of unique accounts,
    is a strong indicator of malicious intent.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Windows Event ID 4625 on ADFS servers
  - Cloud authentication endpoints
  - On-premises federation servers (e.g., ADFS)
  - VPN gateways
  range: last 1 hour
  queries:
  - tech: pseudocode
    query: |
      FOR each source_ip in a 1-hour window:
        CALCULATE ratio = failed_logins / successful_logins
        ALERT if ratio > 99th percentile for all source IPs
        ALERT if count(unique_targeted_accounts) > 3 standard deviations from mean
- question: Does time series analysis show a sudden spike in the global count of
    failed authentications?
  context: A time series anomaly detection model can monitor the overall rate of
    failed logins across the environment. A sudden, statistically significant spike
    that the model flags as an anomaly can indicate a large-scale, distributed brute-force
    or password spraying attack that might be missed when looking at individual source
    IPs.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Windows Event ID 4625 on ADFS servers
  - Cloud authentication endpoints
  - On-premises federation servers (e.g., ADFS)
  - VPN gateways
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MODEL global failed_logins_per_minute with time_series_model
      ALERT if current_minute_count is a statistical anomaly
- question: Has a user successfully authenticated from a location that is physically
    impossible to reach from their previous login location?
  context: Impossible travel is a high-confidence indicator of account compromise.
    By calculating the speed required to travel between two consecutive login geolocations,
    it's possible to detect if a user's credentials have been used in two places
    at once.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Zeek conn.log
  - Cloud Identity and Access Management (IAM) Platforms
  - Geolocation IP Databases
  - Network Gateway Logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each successful_login:
        GET previous_login_location and timestamp
        CALCULATE travel_speed = distance / time_elapsed
        ALERT if travel_speed > 1000 km/h
- question: Has a user logged in from a country, city, or ASN that is not part of
    their normal behavior?
  context: 'Beyond impossible travel, any login from a location that is highly unusual
    for a specific user is suspicious. By maintaining a rolling baseline of normal
    login locations for each user, a login from a never-before-seen country or a
    statistically rare city can be flagged as a potential compromise.'
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Zeek conn.log
  - Cloud Identity and Access Management (IAM) Platforms
  - Geolocation IP Databases
  - Network Gateway Logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MAINTAIN 90-day baseline of login countries, cities, ASNs per user
      FOR each successful_login:
        ALERT if login_location is not in user's top 95% of locations
- question: Does a user's login location fall outside their normal clusters of activity?
  context: Clustering algorithms like DBSCAN can identify a user's normal geographic
    areas of activity (e.g., office, home, common travel destinations). A new login
    that does not fall into any of these established clusters is treated as a spatial
    anomaly and could indicate account compromise.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Zeek conn.log
  - Cloud Identity and Access Management (IAM) Platforms
  - Geolocation IP Databases
  - Network Gateway Logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      CLUSTER user's historical login geolocations (lat/long) using DBSCAN
      FOR each new successful_login:
        ALERT if login_location is flagged as noise (not in any cluster)
- question: Is an API call being authenticated with a credential known to be compromised
    or leaked?
  context: Maintaining a watchlist of known compromised credentials (e.g., from
    leaks or previous incidents) is critical. Any API call authenticated with an
    access key or token on this watchlist is a high-confidence indicator of active
    misuse and should trigger an immediate response.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud API Endpoints
  - Internal Credential Watchlist Database
  - SIEM
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      SEARCH all_api_calls
      JOIN access_key_id with compromised_credential_watchlist
      TRIGGER critical_alert and automated_rotation on match
- question: Has a dormant programmatic credential suddenly become active?
  context: Adversaries may use long-forgotten or dormant credentials to maintain
    persistence, assuming they are not being monitored. A credential that has been
    inactive for a long period (e.g., >180 days) and then is suddenly used should
    be considered suspicious.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud API Endpoints
  - Internal Credential Watchlist Database
  - SIEM
  range: last 180 days
  queries:
  - tech: pseudocode
    query: |
      FOR each api_call:
        CALCULATE time_since_last_use for the credential
        ALERT if time_since_last_use > 99th percentile for that credential's usage pattern
- question: Is a credential being used in a manner that a machine learning model
    classifies as malicious?
  context: If you have examples of known malicious credential usage (e.g., from
    past incidents or known leaked keys), this data can be used to train a classifier.
    The model can learn the patterns of malicious activity and then predict if other,
    unknown credentials are being used in a similarly suspicious way.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud API Endpoints
  - Internal Credential Watchlist Database
  - SIEM
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN classifier on features (api_calls, source_ip, time_of_day) using known_compromised_credential_activity as labeled data
      SCORE activity from all other credentials
      ALERT if score indicates high probability of malicious use
- question: Has a new high-privilege programmatic credential been created with a
    suspicious name or no expiration?
  context: Adversaries often create new credentials for persistence. These may have
    suspicious names ('bkup', 'temp'), overly permissive roles ('*'), or unusually
    long expiration dates. Alerting on the creation of credentials with these attributes,
    especially if not tied to a change request, is key.
  answer_sources:
  - AWS CloudTrail Logs (CreateAccessKey, CreateServicePrincipal)
  - Azure Monitor Audit Logs (Add-AzureADApplicationPasswordCredential)
  - Cloud Identity and Access Management (IAM) Platforms
  - Change Management Systems (e.g., ServiceNow)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      SEARCH for credential_creation_events
      ALERT if (policy contains 'Action:"*"') OR (name matches 'bkup|temp|admin')
      ESCALATE if no matching change_request_ticket is found
- question: Has a new credential been created with an anomalously high number of
    permissions?
  context: Profiling the typical number of permissions assigned during credential
    creation can reveal outliers. A new credential created with a number of permissions
    that is statistically unusual (e.g., >3 standard deviations above the mean) may
    represent an adversary granting themselves excessive privilege for future use.
  answer_sources:
  - AWS CloudTrail Logs (CreateAccessKey, CreateServicePrincipal)
  - Azure Monitor Audit Logs (Add-AzureADApplicationPasswordCredential)
  - Cloud Identity and Access Management (IAM) Platforms
  - Change Management Systems (e.g., ServiceNow)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      BASELINE average_permission_count for new credentials
      FOR each new credential_creation_event:
        COUNT assigned_permissions
        ALERT if count > 3 standard deviations above the average
- question: Does the creation of a new credential create a new, high-risk path in
    the identity and permissions graph?
  context: Viewing identities and permissions as a graph allows for sophisticated
    analysis. A graph-based model can detect when the addition of a new credential
    and its permissions creates a new, risky path to a critical resource, representing
    a potential privilege escalation or persistence vector.
  answer_sources:
  - AWS CloudTrail Logs (CreateAccessKey, CreateServicePrincipal)
  - Azure Monitor Audit Logs (Add-AzureADApplicationPasswordCredential)
  - Cloud Identity and Access Management (IAM) Platforms
  - Change Management Systems (e.g., ServiceNow)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MODEL principals and permissions as a graph
      ON new_credential_creation:
        ANALYZE if the new node/edges create a risky path to critical resources
        ALERT if a new high-risk path is detected
- question: Has a dormant account (inactive for >90 days) been used to authenticate?
  context: Dormant accounts are a prime target for adversaries seeking to establish
    persistence, as their use is less likely to be noticed. An authentication event
    from any principal (user or service) that has been inactive for an extended period
    is highly suspicious, especially if it originates from a new location.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Windows Event ID 4624
  - Cloud Identity and Access Management (IAM) Platforms
  - Asset and Identity Inventory Databases
  - Domain Controllers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each authentication_event:
        LOOKUP previous_authentication_timestamp for the principal
        ALERT if time_delta > 90 days
        ESCALATE if source_ip is also new for that principal
- question: Has an account authenticated after a period of inactivity that is statistically
    unusual for that specific account?
  context: A fixed 90-day threshold for dormancy may not be suitable for all accounts.
    A more tailored approach involves calculating the normal time between authentications
    for each principal. A new authentication that occurs after an interval that is
    more than 3 standard deviations above that principal's average is a strong behavioral
    anomaly.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Windows Event ID 4624
  - Cloud Identity and Access Management (IAM) Platforms
  - Asset and Identity Inventory Databases
  - Domain Controllers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each principal, BASELINE mean and std_dev of time between authentications
      FOR each new authentication_event:
        CALCULATE time_since_last_authentication
        ALERT if time_since_last_authentication > (mean + 3 * std_dev) for that principal
- question: Has a time series model predicted a near-zero probability of login activity
    for an account that just authenticated?
  context: Time series forecasting can predict when a user is likely to be active.
    If a login occurs during a period where the model predicted a near-zero probability
    of activity (e.g., during a long, established period of inactivity), it represents
    a significant deviation from the forecast and a potential indicator of compromise.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs
  - Windows Event ID 4624
  - Cloud Identity and Access Management (IAM) Platforms
  - Asset and Identity Inventory Databases
  - Domain Controllers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each user, FORECAST login activity using a time_series_model
      FOR each new authentication_event:
        ALERT if event occurs when model_predicted_probability was near zero
- question: Have cloud identity federation settings been modified without authorization?
  context: Modifying federation settings, such as adding a new malicious Identity
    Provider (IdP), is a powerful persistence technique that can grant an adversary
    long-term access. These changes are extremely rare and should always be considered
    critical security events requiring immediate investigation.
  answer_sources:
  - AWS CloudTrail Logs (CreateSAMLProvider, UpdateSAMLProvider)
  - Azure Monitor Audit Logs (Set-MsolDomainFederationSettings)
  - Cloud Federation and Single Sign-On (SSO) configuration pages
  - On-premises Active Directory Federation Services (ADFS) servers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      CREATE non-overridable critical alert for API calls like 'UpdateSAMLProvider', 'Set-MsolDomainFederationSettings'
      TRIGGER immediate manual investigation
- question: Has the federation configuration changed from its last known-good state?
  context: Since legitimate changes to federation settings are rare, any unexpected
    change is a high-confidence statistical anomaly. By periodically snapshotting
    the configuration and comparing it to a known-good baseline, any unauthorized
    modification can be detected.
  answer_sources:
  - AWS CloudTrail Logs (CreateSAMLProvider, UpdateSAMLProvider)
  - Azure Monitor Audit Logs (Set-MsolDomainFederationSettings)
  - Cloud Federation and Single Sign-On (SSO) configuration pages
  - On-premises Active Directory Federation Services (ADFS) servers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MAINTAIN inventory of approved IdP domains and certificate hashes
      PERIODICALLY query federation configuration via API
      DIFF current_config against last_known_good_state
      ALERT on any unexpected change
- question: Was a federation setting modification performed by a principal whose
    behavior does not match the typical administrator profile?
  context: As a secondary control to rule-based alerts, modeling the behavior of
    administrators who perform legitimate federation changes can help identify malicious
    activity. If a modification is made by a principal whose attributes (source IP,
    time of day, etc.) do not match the established behavior model, the risk is higher.
  answer_sources:
  - AWS CloudTrail Logs (CreateSAMLProvider, UpdateSAMLProvider)
  - Azure Monitor Audit Logs (Set-MsolDomainFederationSettings)
  - Cloud Federation and Single Sign-On (SSO) configuration pages
  - On-premises Active Directory Federation Services (ADFS) servers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MODEL behavior of legitimate administrators (source_ip, time_of_day, etc.)
      ON federation_modification_event:
        FLAG if the acting principal's attributes do not match the administrator_behavior_model
- question: Has a privilege-modifying API call been executed using a suspicious User-Agent?
  context: An adversary attempting to escalate privileges may use hacking tools or
    scripts. If an API call known to modify permissions (e.g., iam:AttachUserPolicy)
    is executed with a User-Agent associated with such tools, it is a strong indicator
    of a privilege escalation attempt.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud Identity and Access Management (IAM) Platforms
  - Cloud API Gateways
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      SEARCH for API calls on a watchlist_of_privilege_modifying_actions
      AND where User-Agent matches a list_of_suspicious_tool_signatures
      GENERATE high-severity alert
- question: Has a user made a sensitive API call with a User-Agent that is rare for
    that specific user?
  context: Legitimate administrators often use a consistent set of tools (e.g., the
    web console or a specific CLI). If a user who normally uses the web console suddenly
    makes a privilege-modifying API call using a scripting library like 'Boto3',
    this behavioral shift is anomalous and warrants investigation.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud Identity and Access Management (IAM) Platforms
  - Cloud API Gateways
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each user, PROFILE typical User-Agents used for sensitive operations
      ON privilege-modifying_api_call:
        ALERT if User-Agent is statistically rare for that user
- question: Does a machine learning model classify a permission-modifying API call
    as part of a privilege escalation chain?
  context: A classification model can be trained to recognize the characteristics
    of privilege escalation attempts. Using features like the API call name, User-Agent,
    and source IP, the model can assign a risk score to permission-modifying calls,
    identifying likely attacks that may evade simpler rules.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud Identity and Access Management (IAM) Platforms
  - Cloud API Gateways
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN a classifier to predict privilege_escalation_chains
      SCORE new permission-modifying API calls
      ALERT if probability_score is high
- question: Has a known IAM privilege escalation exploit sequence been observed?
  context: Certain IAM misconfigurations can be exploited via a specific, ordered
    sequence of API calls. A stateful detection rule can look for this exact sequence
    (e.g., ListPolicies -> ListPolicyVersions -> CreatePolicyVersion -> SetDefaultPolicyVersion)
    from a single identity in a short time, which is a critical indicator of an active
    exploit.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud Identity and Access Management (IAM) Platforms
  range: last 15 minutes
  queries:
  - tech: pseudocode
    query: |
      DETECT sequence `iam:ListAttachedRolePolicies` -> `iam:ListPolicyVersions` -> `iam:CreatePolicyVersion` -> `iam:SetDefaultPolicyVersion`
      FROM same_identity within 15_minutes
      TRIGGER critical alert
- question: Has a user executed a sequence of API calls with a very low joint probability
    based on their history?
  context: Every user has a typical workflow, resulting in predictable transitions
    between API calls. By modeling these transition probabilities, it's possible
    to identify a sequence of actions that is highly improbable for a given user,
    suggesting their account is being used in an unfamiliar, potentially malicious,
    way.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud Identity and Access Management (IAM) Platforms
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each user, CALCULATE transition probabilities between API calls
      FOR each new sequence of API calls:
        CALCULATE the joint probability of the sequence
        ALERT if probability is anomalously low for that user
- question: Does an API call sequence have a high reconstruction error from a sequence-aware
    autoencoder?
  context: An LSTM autoencoder can be trained to learn and reconstruct normal sequences
    of API calls. When an anomalous sequence (like an exploit chain) is fed into
    the model, it will struggle to reconstruct it accurately, resulting in a high
    reconstruction error. This error is a strong signal of anomalous, potentially
    malicious, activity.
  answer_sources:
  - AWS CloudTrail Logs
  - Azure Monitor Audit Logs
  - Cloud Identity and Access Management (IAM) Platforms
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN LSTM autoencoder on legitimate API call sequences
      FOR each observed sequence:
        CALCULATE reconstruction_error
        ALERT if error is high
- question: Has a change to an IAM policy introduced high-risk permissions like wildcards
    or sensitive actions?
  context: Adversaries may try to escalate privileges by modifying an existing IAM
    policy to add overly permissive rules. Any policy modification that introduces
    a wildcard ('*') in the 'Action' or 'Resource' field, or adds sensitive permissions
    like 'iam:PassRole', should be considered a high-risk event.
  answer_sources:
  - AWS CloudTrail Logs (CreatePolicyVersion, PutRolePolicy)
  - Azure Monitor Audit Logs (Update-MgPolicy)
  - Cloud Identity and Access Management (IAM) Platforms
  - Configuration Management Database (CMDB)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      ON policy_modification_event:
        PARSE new policy document
        ALERT if policy contains '\"Action\":\"*\"' or '\"sts:AssumeRole\"'
- question: Did a policy modification cause a significant increase in its calculated
    privilege score?
  context: IAM policies can be scored based on the risk of the permissions they contain.
    By scoring a policy before and after a modification, it's possible to quantify
    the change in risk. A change that results in a privilege score increase beyond
    a statistical threshold indicates a significant and potentially malicious privilege
    escalation.
  answer_sources:
  - AWS CloudTrail Logs (CreatePolicyVersion, PutRolePolicy)
  - Azure Monitor Audit Logs (Update-MgPolicy)
  - Cloud Identity and Access Management (IAM) Platforms
  - Configuration Management Database (CMDB)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      ON policy_modification_event:
        CALCULATE privilege_score before and after change
        CALCULATE score_increase
        ALERT if score_increase > 95th percentile of all historical increases
- question: Did a policy modification cause an NLP model to reclassify the policy
    from 'safe' to 'risky'?
  context: A Natural Language Processing (NLP) model can be trained to understand
    the semantics of IAM policy documents and classify them as 'safe' or 'risky'.
    When a policy is modified, it can be re-classified in real-time. A transition
    from 'safe' to 'risky' provides a contextual alert that a privilege escalation
    may have occurred.
  answer_sources:
  - AWS CloudTrail Logs (CreatePolicyVersion, PutRolePolicy)
  - Azure Monitor Audit Logs (Update-MgPolicy)
  - Cloud Identity and Access Management (IAM) Platforms
  - Configuration Management Database (CMDB)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN NLP model to classify policies as 'safe' or 'risky'
      ON policy_modification_event:
        CLASSIFY new policy version
        ALERT if policy transitions from 'safe' to 'risky'
- question: Has an identity assumed a role for the first time and immediately performed
    sensitive activity?
  context: Adversaries often abuse role-assumption permissions to escalate privileges.
    Detecting the first time an identity assumes a particular role is a strong indicator.
    If this event is immediately followed by sensitive actions like data access or
    credential creation, it should be treated as a high-severity incident.
  answer_sources:
  - AWS CloudTrail Logs (AssumeRole, and subsequent calls)
  - Azure Monitor Audit Logs (RoleAssignmentSucceeded)
  - Cloud Identity and Access Management (IAM) Platforms
  - Data stores containing sensitive information (e.g., S3 buckets, databases)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MAINTAIN baseline of (identity, assumed_role) pairs
      ALERT on first occurrence of a new pair from an 'AssumeRole' event
      ESCALATE if the new role is used for sensitive access within 5 minutes
- question: Has an identity assumed a role that is statistically rare for them or
    for the organization?
  context: 'A ''first-time'' role assumption is a zero-frequency event and thus a
    strong statistical anomaly. The risk of this event can be further weighted by
    the overall rarity of the role itself: if very few other identities in the organization
    ever assume this role, the event is even more suspicious.'
  answer_sources:
  - AWS CloudTrail Logs (AssumeRole, and subsequent calls)
  - Azure Monitor Audit Logs (RoleAssignmentSucceeded)
  - Cloud Identity and Access Management (IAM) Platforms
  - Data stores containing sensitive information (e.g., S3 buckets, databases)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      FOR each identity, CREATE frequency distribution of roles they assume
      ALERT on 'AssumeRole' event if the role has zero prior occurrences for that identity
      INCREASE risk score if the assumed role is statistically rare across the organization
- question: Does a link prediction model find a new role assumption to be highly
    unlikely?
  context: The relationships between identities, roles, and resources can be modeled
    as a graph. A link prediction model can learn normal access patterns and predict
    the likelihood of new connections (or 'links') forming. A successful but highly
    unlikely role assumption suggests that an adversary is exploiting an unintended
    or malicious privilege abuse path.
  answer_sources:
  - AWS CloudTrail Logs (AssumeRole, and subsequent calls)
  - Azure Monitor Audit Logs (RoleAssignmentSucceeded)
  - Cloud Identity and Access Management (IAM) Platforms
  - Data stores containing sensitive information (e.g., S3 buckets, databases)
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MODEL identity-resource relationships as a bipartite graph
      USE link prediction model to score likelihood of new 'role assumption' edges
      ALERT on successful 'AssumeRole' event if the model predicted a very low likelihood
- question: Has an API call been executed to stop, delete, or modify a critical security
    logging service?
  context: A common defense evasion tactic is to disable security monitoring. Any
    API call that attempts to stop or delete a service like AWS CloudTrail, GuardDuty,
    or Azure Sentinel is a critical indicator of compromise and must trigger an immediate,
    non-overridable alert.
  answer_sources:
  - AWS CloudTrail Logs (StopLogging, DeleteTrail, DeleteDetector)
  - Azure Monitor Audit Logs (delete on microsoft.security/automations)
  - Cloud Security Service configuration pages (e.g., CloudTrail, GuardDuty, Sentinel)
  - Centralized Log Aggregation Platform
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      CREATE non-overridable critical alert for API calls like 'StopLogging', 'DeleteTrail', 'UpdateDetector' with 'Enable: false'
      TRIGGER immediate incident response
- question: Has a security-disabling API call been observed?
  context: The expected frequency of API calls that disable security services (outside
    of a sanctioned change window) is zero. Therefore, any observation of such a
    call is a major statistical anomaly that constitutes an alert by its very existence.
  answer_sources:
  - AWS CloudTrail Logs (StopLogging, DeleteTrail, DeleteDetector)
  - Azure Monitor Audit Logs (delete on microsoft.security/automations)
  - Cloud Security Service configuration pages (e.g., CloudTrail, GuardDuty, Sentinel)
  - Centralized Log Aggregation Platform
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MONITOR count of security-disabling API calls
      ALERT if count > 0 and not within a sanctioned change window
- question: Was a security-disabling API call made by a principal not matching the
    'IT Security Admin' behavior profile?
  context: As a defense-in-depth measure, you can model the typical behavior of administrators
    who are authorized to manage security services. If a security-disabling action
    is performed by an identity whose recent activity (source IP, time of day, etc.)
    does not match this profile, the alert should be automatically escalated.
  answer_sources:
  - AWS CloudTrail Logs (StopLogging, DeleteTrail, DeleteDetector)
  - Azure Monitor Audit Logs (delete on microsoft.security/automations)
  - Cloud Security Service configuration pages (e.g., CloudTrail, GuardDuty, Sentinel)
  - Centralized Log Aggregation Platform
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN behavioral model on 'IT Security Admin' activity
      ON security-disabling_api_call:
        ESCALATE alert if acting principal does not match the behavior profile
- question: Has a network security rule been modified to allow traffic from a broad
    IP range like '0.0.0.0/0'?
  context: Adversaries may open up firewall rules to exfiltrate data or establish
    external C2 channels. A modification to a security group that allows traffic
    from '0.0.0.0/0' or to all ports (1-65535) is a high-risk change that creates
    unnecessary exposure and should be alerted on.
  answer_sources:
  - AWS CloudTrail Logs (AuthorizeSecurityGroupIngress, ModifySecurityGroupRules)
  - Azure Monitor Audit Logs (Microsoft.Network/networkSecurityGroups/write)
  - Zeek conn.log
  - Virtual Private Cloud (VPC) and Virtual Network (VNet) configurations
  - Network Security Group and Security Group configurations
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MONITOR network configuration change events
      PARSE request parameters
      ALERT if rule is created with 'CidrIp' = '0.0.0.0/0' OR port range is '1-65535'
- question: Has a security rule change introduced a statistically large network
    or port range?
  context: Analyzing the distribution of CIDR block sizes and port ranges in security
    rule changes can identify outliers. A change that introduces a very large network
    (e.g., a /8 or /16) or a very wide port range, placing it in the tail of the distribution,
    is anomalous and should be reviewed.
  answer_sources:
  - AWS CloudTrail Logs (AuthorizeSecurityGroupIngress, ModifySecurityGroupRules)
  - Azure Monitor Audit Logs (Microsoft.Network/networkSecurityGroups/write)
  - Zeek conn.log
  - Virtual Private Cloud (VPC) and Virtual Network (VNet) configurations
  - Network Security Group and Security Group configurations
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      ANALYZE distribution of CIDR prefix lengths and port ranges in rule changes
      ALERT if new rule's prefix length is in bottom 5th percentile (largest networks)
      or port range is in top 5th percentile (widest ranges)
- question: Does a machine learning model classify a new security group rule as
    'non-compliant' or 'risky'?
  context: A classification model can be trained on your organization's security
    policies to automatically label rule configurations as 'compliant' or 'risky'.
    When a rule is modified, this model can provide real-time classification, triggering
    an alert if a rule transitions to a 'risky' state.
  answer_sources:
  - AWS CloudTrail Logs (AuthorizeSecurityGroupIngress, ModifySecurityGroupRules)
  - Azure Monitor Audit Logs (Microsoft.Network/networkSecurityGroups/write)
  - Zeek conn.log
  - Virtual Private Cloud (VPC) and Virtual Network (VNet) configurations
  - Network Security Group and Security Group configurations
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN classifier on security group rules labeled 'compliant' or 'risky'
      ON rule_modification:
        CLASSIFY new rule configuration
        ALERT if new configuration is classified as 'risky'
- question: Has an action been taken to delete or alter log data?
  context: After performing malicious actions, adversaries will often try to cover
    their tracks by deleting logs. Any API call that targets a known log storage
    location (like an S3 bucket) with a destructive action is a critical sign of
    defense evasion and requires immediate investigation.
  answer_sources:
  - AWS CloudTrail Logs (DeleteBucket, PutBucketLifecycleConfiguration)
  - Windows Event ID 104 (Log file was cleared)
  - Centralized Log Storage (e.g., S3 Buckets, Azure Storage Accounts)
  - CloudTrail/Log Analytics configuration
  - Windows Event Forwarding servers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      CREATE critical alert for API calls like `s3:DeleteObject` on a resource tagged 'log-archive'
      ENSURE logs are also shipped to a separate, immutable security account
- question: Has the volume of ingested logs from a key source dropped unexpectedly?
  context: A sudden, unexplained drop in the volume of logs being ingested from a
    critical source can indicate that logging has been disabled or tampered with
    at the source. A time series anomaly detection model can monitor these volumes
    and alert on significant negative deviations from the forecast.
  answer_sources:
  - AWS CloudTrail Logs (DeleteBucket, PutBucketLifecycleConfiguration)
  - Windows Event ID 104 (Log file was cleared)
  - Centralized Log Storage (e.g., S3 Buckets, Azure Storage Accounts)
  - CloudTrail/Log Analytics configuration
  - Windows Event Forwarding servers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MODEL log volume per source with a time series model (e.g., SARIMA)
      ALERT on sustained volume drops that deviate from the forecast and are not part of planned maintenance
- question: Has a sequence of 'suspicious activity followed by log deletion' been
    observed?
  context: A sequence analysis model can provide greater context than individual
    alerts. By training a model to recognize multi-stage attack patterns, it can
    specifically detect a chain of events like 'Anomalous Login -> Data Access ->
    DeleteBucket', providing a high-confidence alert that an adversary is covering
    their tracks.
  answer_sources:
  - AWS CloudTrail Logs (DeleteBucket, PutBucketLifecycleConfiguration)
  - Windows Event ID 104 (Log file was cleared)
  - Centralized Log Storage (e.g., S3 Buckets, Azure Storage Accounts)
  - CloudTrail/Log Analytics configuration
  - Windows Event Forwarding servers
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      USE a sequence analysis model to detect the pattern: 'Anomalous Activity -> Log Deletion Action'
      ALERT on the full sequence to provide investigation context
- question: Has a privileged account successfully logged in without Multi-Factor
    Authentication (MFA)?
  context: MFA is a critical security control. A successful interactive login to
    a privileged account that bypasses or does not use MFA is a major security violation
    and a strong indicator of compromise, possibly through techniques like session
    token theft.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs (ConsoleLogin event)
  - Cloud Identity and Access Management (IAM) Platforms
  - Single Sign-On (SSO) provider logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      SEARCH successful interactive logins for privileged accounts
      PARSE authentication details
      GENERATE high-severity alert if a field indicates MFA was not used (e.g., `mfaAuthenticated: false`)
- question: Has a privileged user who always uses MFA suddenly logged in without
    it?
  context: For privileged users, the expected rate of MFA usage should be 100%. Any
    deviation from this is a statistical anomaly. A sudden successful login without
    MFA for a user who has a perfect history of using it is a significant behavioral
    change that requires immediate investigation.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs (ConsoleLogin event)
  - Cloud Identity and Access Management (IAM) Platforms
  - Single Sign-On (SSO) provider logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      MONITOR the percentage of logins with MFA for each privileged user
      ALERT on any deviation from 100% or the appearance of a non-MFA login for a user with a consistent MFA history
- question: Does a machine learning model flag a successful login without MFA as
    high-risk?
  context: The absence of MFA is a powerful feature for a machine learning model
    predicting session legitimacy. A model can weigh this feature heavily, along
    with others like IP, location, and device. A successful login without MFA will
    likely cause the model to assign a high risk score, flagging the session as potentially
    illegitimate.
  answer_sources:
  - Azure AD Sign-in Logs
  - AWS CloudTrail Logs (ConsoleLogin event)
  - Cloud Identity and Access Management (IAM) Platforms
  - Single Sign-On (SSO) provider logs
  range: last 90 days
  queries:
  - tech: pseudocode
    query: |
      TRAIN a model to predict login legitimacy using features including MFA status
      ALERT if a successful login without MFA is flagged with a high risk score by the model