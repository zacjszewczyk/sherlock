name: T1070.004: File Deletion
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is attempting to cover their tracks by deleting files. It focuses on identifying several key patterns of malicious file deletion, such as the removal of files matching high-confidence threat intelligence, the use of secure deletion utilities or anti-forensic commands, the rapid execution and subsequent deletion of a payload, an anomalous volume of deletions from a single process or user (especially targeting logs), and the quick deletion of a downloaded executable to evade detection.
type: technique
related:
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a file known to be malicious been deleted from an endpoint?
  context: This question seeks to identify if a file deletion event involves a file with a hash that matches a known indicator of compromise from a threat intelligence feed. A match provides a high-confidence signal that an adversary is attempting to remove their tools or malware from a compromised system to hinder investigation.
  answer_sources:
  - Windows Event ID 4663
  - EDR file monitoring logs
  - Threat Intelligence Feed
  - User Workstations
  - Critical Application Servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - 'SEARCH file deletion events (WinEventID 4663). FOR EACH event, EXTRACT file
    hash. LOOKUP hash in threat intelligence feed. IF match found, ALERT.'
- question: Was a known malicious file deleted by an uncommon parent process?
  context: This question adds context to the deletion of a malicious file by examining the parent process that initiated the deletion. Malicious files deleted by rare or unusual processes are more suspicious than those deleted by common administrative or system processes. Calculating a risk score based on the inverse prevalence of the parent process helps prioritize the most anomalous and potentially malicious events.
  answer_sources:
  - Windows Event ID 4663
  - EDR file monitoring logs
  - Threat Intelligence Feed
  - User Workstations
  - Critical Application Servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - 'SEARCH malicious file deletion events. FOR EACH event, EXTRACT parent process.
    CALCULATE prevalence of parent process across environment (last 30 days). CALCULATE
    risk score (1 / prevalence). IF risk score > 99th percentile, ALERT.'
- question: Does a machine learning model classify a file deletion event as highly
    probable to be malicious?
  context: This question leverages a machine learning model to score file deletion events for maliciousness. By combining multiple features—such as whether the file is on a threat feed, the rarity of the parent process, the randomness of the file path, and the file's lifespan—the model can identify complex patterns that are indicative of adversary activity, even for previously unseen threats.
  answer_sources:
  - Windows Event ID 4663
  - EDR file monitoring logs
  - Threat Intelligence Feed
  - User Workstations
  - Critical Application Servers
  - Domain Controllers
  range: Last 90 days
  queries:
  - INPUT file deletion event features (TI match, parent process prevalence, path
    entropy, file lifespan) into ML model. IF model output score > 0.9, ALERT.
- question: Is there evidence of secure deletion utilities or anti-forensic commands
    being used?
  context: This question looks for the execution of commands and utilities specifically designed to securely delete data or clear logs, making recovery difficult. The presence of tools like 'sdelete' or native commands like 'cipher /w:' (to overwrite deleted data) or 'wevtutil cl' (to clear event logs) is a strong indicator of an adversary attempting to cover their tracks.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - 'SEARCH process creation events (WinEventID 4688) for command lines containing
    ''sdelete'', ''cipher /w:'', ''wevtutil cl'', ''del *.log'', etc. IF match found,
    ALERT with parent process and user.'
- question: Has any host shown an anomalous spike in the use of deletion-related
    commands?
  context: This question aims to detect unusual volumes of deletion activity on a per-host basis. By establishing a baseline of normal deletion command usage for each host, it can identify significant deviations (e.g., a Z-score > 3). Such a spike could indicate a large-scale cleanup operation by an attacker.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - FOR EACH host, CALCULATE 30-day baseline (mean, std dev) of daily deletion command
    counts. IF daily count > (mean + 3 * std dev), ALERT.
- question: Has a time-series model detected an enterprise-wide anomaly in the use
    of specific deletion tools?
  context: This question applies time-series analysis to monitor the usage frequency of key deletion utilities across the entire organization. This method is effective at finding coordinated or widespread cleanup activities that might appear as small, insignificant spikes on individual machines but constitute a significant anomaly when viewed in aggregate. It helps distinguish between normal administrative use and a potential attack.
  answer_sources:
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - INPUT hourly frequency of `wevtutil.exe`, `cipher.exe`, `sdelete.exe` into time-series
    anomaly detection model. IF model flags unexpected spike, ALERT.
- question: Has a file been executed and then quickly deleted?
  context: This question identifies 'execute-then-delete' behavior, a common tactic for malware that runs a payload and then removes the file from disk to avoid detection and analysis. Correlating a process creation with a subsequent file deletion for the same path within a short time window (e.g., 5 minutes) is a strong indicator of this tactic, especially when initiated by common scripting engines or browsers.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - EDR file creation logs
  - User Workstations
  - Staging Servers
  - Public-facing Web Servers
  range: Last 90 days
  queries:
  - CORRELATE process creation (WinEventID 4688) and file deletion (WinEventID 4663)
    by hostname and file path. IF deletion occurs within 5 minutes of creation, ALERT.
    INCREASE priority if parent process is powershell, cmd, wscript, etc.
- question: Which 'execute-then-delete' events are most anomalous based on speed
    and parent process rarity?
  context: This question refines the detection of 'execute-then-delete' activity by focusing on the most suspicious instances. It prioritizes sequences that happen extremely quickly (in the lowest 5th percentile of all such events) and are initiated by uncommon parent processes. This statistical approach helps analysts focus on the highest-risk events among a potentially large number of alerts.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - EDR file creation logs
  - User Workstations
  - Staging Servers
  - Public-facing Web Servers
  range: Last 90 days
  queries:
  - FOR EACH 'execute-then-delete' event, CALCULATE time delta and parent process
    rarity. IF time delta is in lowest 5th percentile and combined score is in top
    2%, ALERT.
- question: Does a sequence analysis model identify an 'execute-delete' pattern as
    a behavioral anomaly on a host?
  context: This question uses a sophisticated machine learning model to understand the normal sequence of events on a host. The model learns what constitutes 'normal' behavior for different types of systems. When it encounters an 'execute-delete' sequence that doesn't fit the learned patterns (resulting in a high reconstruction error), it flags the activity as anomalous. This can detect novel attack variations that rule-based methods might miss.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - EDR file creation logs
  - User Workstations
  - Staging Servers
  - Public-facing Web Servers
  range: Last 90 days
  queries:
  - INPUT host event streams into LSTM Autoencoder model. IF model finds an 'execute-delete'
    sequence with high reconstruction error, ALERT.
- question: Has a single process deleted a large volume of log or evidence files
    in a short time?
  context: This question targets a specific, high-impact adversary behavior: the mass deletion of logs and other forensic evidence. By looking for a high volume of file deletions (e.g., >500) from a single process within a short window (e.g., 5 minutes) that target specific file types (`.log`, `.evtx`, `.history`), this query can quickly identify blatant attempts to erase tracks.
  answer_sources:
  - Windows Event ID 4663
  - File Servers
  - User Workstations
  - Domain Controllers
  - Log Aggregation Servers
  range: Last 90 days
  queries:
  - AGGREGATE file deletion events (WinEventID 4663) by Process ID over 5-minute
    windows. IF count > 500 AND file paths match `*.log`, `*.evtx`, etc., ALERT.
- question: Has a user's file deletion activity suddenly become less random, suggesting
    a targeted cleanup?
  context: This question uses information theory (Shannon entropy) to detect a shift in user behavior. Normal user activity involves deleting a wide variety of file types (high entropy). A sudden, sharp drop in entropy indicates the user is now deleting many files of the same or very few types, which is characteristic of a targeted cleanup operation (e.g., deleting all `.log` files).
  answer_sources:
  - Windows Event ID 4663
  - File Servers
  - User Workstations
  - Domain Controllers
  - Log Aggregation Servers
  range: Last 90 days
  queries:
  - FOR EACH user, CALCULATE hourly Shannon entropy of deleted file extensions. COMPARE
    to 14-day rolling average. IF entropy drops > 50%, ALERT.
- question: Does a clustering model identify a file deletion event as an outlier
    from normal activity?
  context: This question employs an unsupervised machine learning algorithm (DBSCAN) to automatically group 'normal' or routine file deletion activities into clusters. For example, temp file cleanup by a system process would form a dense cluster. Any deletion event that does not belong to any of these normal clusters is flagged as an anomaly or outlier, warranting investigation as it represents an un-seen or rare type of deletion.
  answer_sources:
  - Windows Event ID 4663
  - File Servers
  - User Workstations
  - Domain Controllers
  - Log Aggregation Servers
  range: Last 90 days
  queries:
  - INPUT file deletion event features (user, parent process, path) into DBSCAN model.
    IF event is flagged as an outlier (not in a cluster), ALERT.
- question: Was an executable downloaded from the network and then deleted within
    an hour?
  context: This question correlates network data with endpoint data to find evidence of an adversary downloading a tool or payload and then quickly removing it. By joining network logs showing an executable download (from Zeek) with endpoint logs showing a file deletion (Windows Event ID 4663) for the same file on the same host, it uncovers the full lifecycle of a transient malicious file.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress/Ingress Points
  - DNS Servers
  - User Workstations
  - Web Proxies
  range: Last 90 days
  queries:
  - JOIN Zeek files.log (for executables) with WinEventID 4663 on destination IP
    and filename. IF deletion timestamp is within 1 hour of download timestamp, ALERT.
- question: Was a downloaded executable deleted unusually quickly, especially if
    it came from a rare domain?
  context: This question identifies high-risk 'download-and-delete' events by focusing on statistical outliers. It flags executables that have an exceptionally short lifespan on disk (bottom 5th percentile) and originated from an uncommon or rare domain (bottom 10% prevalence). The combination of these two factors significantly increases the likelihood that the activity is malicious.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress/Ingress Points
  - DNS Servers
  - User Workstations
  - Web Proxies
  range: Last 90 days
  queries:
  - CALCULATE lifespan for all downloaded-then-deleted executables. IF lifespan
    is in bottom 5th percentile, CHECK source domain prevalence from DNS logs. IF
    domain is rare (bottom 10%), ALERT with high severity.
- question: Does a graph-based machine learning model classify a 'download-delete'
    sequence and its surrounding context as malicious?
  context: This question represents a highly advanced detection method using graph machine learning. It models the entire attack chain—from network source to file download, execution, and deletion—as a graph. A Graph Neural Network (GNN) can then learn the complex relationships and features (like IP reputation, domain age, process lineage) that distinguish malicious subgraphs from benign ones, allowing for highly accurate and context-aware classification.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Windows Event ID 4663
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek dns.log
  - Network Egress/Ingress Points
  - DNS Servers
  - User Workstations
  - Web Proxies
  range: Last 90 days
  queries:
  - CONSTRUCT graph of entities (IPs, domains, files, hosts) and actions (download,
    execute, delete). INPUT subgraph for 'download-delete' sequence into GNN model.
    IF model classifies as malicious, ALERT.