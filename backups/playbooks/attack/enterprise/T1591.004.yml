name: "T1591.004: Identify Roles"
id: "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"
description: "This playbook helps identify if an adversary is gathering information about organizational roles via external reconnaissance. This involves detecting activity such as inbound connection attempts from known malicious IPs, HTTP requests exhibiting enumeration patterns (e.g., high 404 rates, reconnaissance tool User-Agents), network port scanning, high volumes of failed login attempts indicative of username enumeration or password spraying, and unauthorized access to sensitive configuration files or API endpoints that expose user or role information."
type: "technique"
related: "TA0043: Reconnaissance"
contributors: "Zachary Szewczyk"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are there inbound connections from IP addresses known to be associated with reconnaissance activity?"
    context: "This question aims to detect initial reconnaissance attempts by correlating inbound network traffic with threat intelligence. A match with a CTI feed listing IPs known for scanning or other malicious activities is a high-confidence indicator that an adversary is probing the network perimeter."
    answer_sources: "Zeek conn.log, Cyber Threat Intelligence (CTI) Feeds, Internet Gateway, DMZ Firewalls, Cloud VPC Flow Logs, VPN Concentrators"
    range: "last 90 days"
    queries: "SEARCH Zeek conn.log WHERE direction=inbound | JOIN source_ip with CTI_feed.ip | RETURN source_ip, destination_ip, destination_port, timestamp"
  - question: "Are any external IP addresses exhibiting a statistically anomalous ratio of failed to successful connection attempts, suggesting network scanning?"
    context: "This question seeks to identify scanning behavior by analyzing connection states. Attackers probing for open ports or services often generate a high number of failed or rejected connections. An unusually high failure ratio from a single source IP is a strong statistical indicator of this reconnaissance technique."
    answer_sources: "Zeek conn.log, Internet Gateway, DMZ Firewalls, Cloud VPC Flow Logs, VPN Concentrators"
    range: "last 90 days"
    queries: "SEARCH Zeek conn.log WHERE direction=inbound | GROUPBY source_ip, time_window=1h | CALCULATE failed_ratio = COUNT(state=failed) / COUNT(state=successful) | FILTER failed_ratio > 99th_percentile"
  - question: "Can machine learning models classify external source IPs as reconnaissance-related based on their connection patterns?"
    context: "This question explores using a machine learning classifier to automate the detection of complex reconnaissance patterns that simpler methods might miss. By training a model on features from connection logs (e.g., connection counts, port diversity, state distribution), the system can learn to distinguish benign traffic from malicious probes in near-real-time."
    answer_sources: "Zeek conn.log, Internet Gateway, DMZ Firewalls, Cloud VPC Flow Logs, VPN Concentrators"
    range: "last 90 days"
    queries: "INPUT Zeek conn.log features (connection_count, distinct_ports, state_distribution) | APPLY ML_Model_Classifier | OUTPUT source_ip, classification_label (benign/recon), confidence_score"
  - question: "Are external IPs using User-Agent strings associated with known reconnaissance or scraping tools?"
    context: "This question focuses on identifying automated reconnaissance tools by inspecting HTTP headers. Many scanners and enumeration tools use default or recognizable User-Agent strings. Detecting these strings in requests from external IPs provides a clear, signature-based indicator of malicious activity targeting web applications."
    answer_sources: "Zeek http.log, Public-facing Web Servers, Application Load Balancers, Web Application Firewalls (WAF)"
    range: "last 90 days"
    queries: "SEARCH Zeek http.log WHERE source_ip=external | FILTER user_agent MATCHES regex_list_of_recon_tools | RETURN source_ip, user_agent, requested_uri"
  - question: "Are any external IPs generating a high rate of 'Not Found' errors or showing high entropy in requested URIs, indicative of automated resource discovery?"
    context: "This question aims to detect web content and API endpoint enumeration. An adversary using automated tools to guess file paths and directory names will generate a high volume of requests for non-existent resources (404s) and exhibit non-human, systematic patterns in the URIs they request, which can be measured by Shannon entropy. A high risk score based on these metrics is a strong signal of enumeration."
    answer_sources: "Zeek http.log, Public-facing Web Servers, Application Load Balancers, Web Application Firewalls (WAF)"
    range: "last 90 days"
    queries: "SEARCH Zeek http.log WHERE source_ip=external | GROUPBY source_ip, time_window=5m | CALCULATE shannon_entropy(requested_uri), rate_of_404_responses | FILTER entropy > 98th_percentile AND 404_rate > 98th_percentile"
  - question: "Are there anomalous spikes in request volume or 404-rates from single IPs, as detected by a time-series forecasting model?"
    context: "This question leverages machine learning to establish a baseline of normal web traffic for public assets. A time-series model can predict expected request volumes and error rates. When observed traffic from a single IP or network block significantly exceeds the model's forecasted upper limits, it suggests a deviation from normal behavior, such as an enumeration or scraping attempt."
    answer_sources: "Zeek http.log, Public-facing Web Servers, Application Load Balancers, Web Application Firewalls (WAF)"
    range: "last 90 days"
    queries: "INPUT web_traffic_time_series | APPLY SARIMA_forecast_model | DETECT where observed_volume > upper_confidence_bound | RETURN source_ip, deviation_magnitude"
  - question: "Has any single source IP attempted to connect to an unusually large number of distinct ports within a short time frame?"
    context: "This question is designed to detect port scanning. A common reconnaissance technique is to scan a target host or network for open ports to identify listening services. A rule that triggers when a single IP connects to many unique ports in a minute is a classic and effective signature for both horizontal (across many hosts) and vertical (on one host) scans."
    answer_sources: "Zeek conn.log, Internet Gateway, DMZ Firewalls, External-facing hosts"
    range: "last 90 days"
    queries: "SEARCH Zeek conn.log | GROUPBY source_ip, time_window=1m | CALCULATE distinct_port_count = COUNT_DISTINCT(destination_port) | FILTER distinct_port_count > 25"
  - question: "Are any external IPs exhibiting a statistically significant deviation in the number of distinct ports they contact compared to a baseline?"
    context: "This question uses statistical analysis to find anomalous port scanning activity that might not be caught by a simple threshold. By establishing a baseline distribution of normal external traffic behavior (i.e., how many ports a typical external IP contacts), we can flag any IP that deviates significantly (e.g., 3+ standard deviations from the mean) as a potential scanner."
    answer_sources: "Zeek conn.log, Internet Gateway, DMZ Firewalls, External-facing hosts"
    range: "last 90 days"
    queries: "SEARCH Zeek conn.log | GROUPBY source_ip, time_window=15m | CALCULATE distinct_port_count | FILTER distinct_port_count > (mean + 3 * std_dev) OR distinct_port_count > 99.5th_percentile"
  - question: "Can network scans be identified by finding traffic patterns that are outliers in a density-based clustering model?"
    context: "This question applies an unsupervised machine learning approach to distinguish normal traffic from scans. Algorithms like DBSCAN can group connection logs into clusters based on their features. Normal, legitimate traffic will form dense clusters, while the sporadic and widespread nature of scanning activity will cause it to be flagged as noise or outliers, providing a robust detection method."
    answer_sources: "Zeek conn.log, Internet Gateway, DMZ Firewalls, External-facing hosts"
    range: "last 90 days"
    queries: "INPUT Zeek conn.log features (source_ip, destination_port, protocol) | APPLY DBSCAN_clustering_model | OUTPUT source_ips_classified_as_noise"
  - question: "Is any single external IP associated with a high volume of failed logon events (Windows Event ID 4625) on authentication servers?"
    context: "This question aims to detect brute-force or password spraying attacks against external authentication services. A simple but effective detection is to alert when a single source IP generates a large number of failed login events in a short period. This is a strong indicator of an automated attack attempting to guess credentials or enumerate valid usernames."
    answer_sources: "Windows Event ID 4625, Zeek conn.log, Active Directory Federation Services (ADFS), VPN Concentrators, Microsoft Exchange Servers, Public-facing Application Login Portals"
    range: "last 90 days"
    queries: "SEARCH WinEventLog:4625 | CORRELATE with network_logs to get source_ip | GROUPBY source_ip, time_window=5m | CALCULATE failed_login_count | FILTER failed_login_count > 20"
  - question: "Are failed login attempts from a single IP showing high username entropy (enumeration) or low username entropy (password spraying)?"
    context: "This question differentiates between two common attack types by analyzing the variation in usernames during a failed login storm. High entropy (many different usernames) suggests an adversary is trying to discover valid accounts (enumeration). Low entropy (one or a few usernames) suggests an adversary is trying many passwords against known accounts (password spraying). Identifying either pattern is critical."
    answer_sources: "Windows Event ID 4625, Zeek conn.log, Active Directory Federation Services (ADFS), VPN Concentrators, Microsoft Exchange Servers, Public-facing Application Login Portals"
    range: "last 90 days"
    queries: "SEARCH WinEventLog:4625 | GROUPBY source_ip, time_window=10m | CALCULATE shannon_entropy(usernames) | FILTER entropy > 98th_percentile OR entropy < 2nd_percentile"
  - question: "Can bursts of failed logins be classified as malicious (e.g., enumeration, password spray) versus benign using a machine learning model?"
    context: "This question proposes a sophisticated, supervised learning approach to reduce false positives from benign failed logins (e.g., user typos). By training a model on features like time of day, IP reputation, and the timing and variation of login attempts, the system can assign a risk score to login bursts, allowing analysts to prioritize the most likely malicious events."
    answer_sources: "Windows Event ID 4625, Zeek conn.log, Active Directory Federation Services (ADFS), VPN Concentrators, Microsoft Exchange Servers, Public-facing Application Login Portals"
    range: "last 90 days"
    queries: "INPUT failed_login_events with features (time_of_day, ip_rep, attempt_count, username_variation) | APPLY ML_Classifier_Model | OUTPUT source_ip, risk_score"
  - question: "Have any external IPs successfully accessed or requested sensitive configuration files or paths?"
    context: "This question seeks to detect the successful reconnaissance of sensitive information by monitoring for access to specific files and directories. Adversaries often search for exposed configuration files (e.g., .git/config, .env) that may contain credentials, API keys, or infrastructure details. A successful HTTP 200 response for a request to one of these paths is a high-priority security event."
    answer_sources: "Zeek http.log, Zeek files.log, Public-facing Web Servers, API Gateways, Source Code Repositories, Cloud Storage Buckets"
    range: "last 90 days"
    queries: "SEARCH Zeek http.log WHERE source_ip=external AND http_status=200 | FILTER requested_uri MATCHES regex_list_of_sensitive_paths | ALERT on match"
  - question: "Are there any statistically rare file downloads (based on type, path, or size) from public web servers that could indicate exfiltration of sensitive data?"
    context: "This question uses statistical outlier detection to find suspicious file transfers that might not be caught by signature-based rules. By baselining normal file download activity (based on MIME type, file size, and location), the system can flag any download that is highly unusual. This could represent an adversary successfully accessing a database dump, a backup archive, or other sensitive data."
    answer_sources: "Zeek http.log, Zeek files.log, Public-facing Web Servers, API Gateways, Source Code Repositories, Cloud Storage Buckets"
    range: "last 90 days"
    queries: "SEARCH Zeek files.log | CALCULATE rarity_score based on file_type, path, size | FILTER rarity_score > 99.5th_percentile | RETURN file_details, source_ip"
  - question: "Are there any API requests with an anomalously high reconstruction error from an autoencoder model, suggesting enumeration or data exfiltration?"
    context: "This question applies an unsupervised deep learning model to detect anomalous API usage. An autoencoder is trained to 'reconstruct' normal, benign API requests and responses. When an adversary makes a malicious request, such as enumerating all users via an insecure endpoint, the resulting large or malformed response will be poorly reconstructed by the model. This high 'reconstruction error' serves as a powerful anomaly indicator."
    answer_sources: "Zeek http.log, Zeek files.log, Public-facing Web Servers, API Gateways, Source Code Repositories, Cloud Storage Buckets"
    range: "last 90 days"
    queries: "INPUT live_api_traffic_features | APPLY trained_autoencoder_model | CALCULATE reconstruction_error | FILTER reconstruction_error > anomaly_threshold | ALERT on request_details"