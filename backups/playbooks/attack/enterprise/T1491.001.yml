name: T1491.001: Internal Defacement
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary has impacted systems or data by defacing internal resources, such as SharePoint sites, Confluence, intranets, or even endpoint user interfaces. Detection focuses on identifying files matching known defacement signatures, analyzing command-line execution that modifies UI elements or web content, monitoring for anomalous volumes or sources of file modifications, and observing multi-stage behavioral sequences where a file is written and then subsequently used to alter a system's appearance or web pages.
type: technique
related:
  - TA0040: Impact
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are files being written to web servers or transferred over the network that match known defacement tool signatures?
    context: This question helps detect the initial placement of malicious files used for defacement. By comparing file hashes against a threat intelligence feed of known defacement tools, scripts, or images, analysts can proactively identify known malicious content as it is written to a web server directory or transferred over the network, allowing for a rapid response.
    answer_sources:
      - Windows Event ID 4663
      - Zeek files.log
      - Zeek http.log
      - Threat Intelligence Feeds
      - Internal Web Servers (e.g., SharePoint, Confluence, Intranet), File Servers, Endpoint Desktops
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH file creation events (Win 4663, Zeek files.log) WHERE file_hash IN (threat_intel_hashes) AND destination is web_server_directory'
  - question: Are files being uploaded to web servers with unusually high or low entropy, suggesting obfuscation or simple content replacement?
    context: This question aims to uncover novel or unknown defacement tools by analyzing file characteristics. High entropy can indicate packed or obfuscated code (like a web shell), while unusually low entropy might signify a simple image or text file replacing a more complex, legitimate web page. This provides a behavioral detection method that is independent of specific signatures.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Internal Web Servers (e.g., SharePoint, Confluence, Intranet), File Servers, Endpoint Desktops
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH http_post_put_events | CORRELATE with file_transfer_events | CALCULATE payload_entropy | COMPARE entropy to historical_baseline | ALERT on high/low deviations'
  - question: Is the content of web pages or newly written files inconsistent with expected corporate themes or structure?
    context: This question addresses the actual content of the defacement. By using a machine learning model to understand what 'normal' corporate content looks like, analysts can detect pages that have been altered to display attacker-controlled messages, images, or themes, even if the file hashes or entropy levels are not immediately suspicious.
    answer_sources:
      - Zeek http.log
      - File content on web directories
      - Internal Web Servers (e.g., SharePoint, Confluence, Intranet), File Servers, Endpoint Desktops
    range: last 90 days
    queries:
      - 'Pseudocode: GET content from http_responses and server_files | APPLY content_classification_model | ALERT on content classified as ''defacement'' or ''inconsistent'''
  - question: Are there any command-line processes directly modifying registry keys for desktop wallpaper or login banners, or overwriting common web files?
    context: This question provides a direct hunt for the commands an adversary would use to change visual elements of the user interface or replace core web files. Monitoring for specific `reg.exe` or PowerShell commands targeting these known registry keys or file paths provides high-fidelity alerts for active defacement attempts.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Domain Controllers (for login messages), All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH process_creation_events (Win 4688, 4104) WHERE command_line contains (''reg.exe'' AND (''Wallpaper'' OR ''LegalNoticeText'')) OR command_line contains (''Set-ItemProperty'' AND (''Wallpaper'' OR ''LegalNoticeText'')) OR command_line contains ((''copy'' OR ''move'' OR ''echo'') AND ''index.html'')'
  - question: Are there any unusual parent-child process relationships, such as an office application spawning a shell to modify UI elements?
    context: Adversaries often execute commands from within a compromised process (like a user's Word document or Outlook email). This question helps detect such behavior by looking for statistically rare process chains. A legitimate update process is unlikely to be spawned by Microsoft Word, so flagging these anomalies can uncover the execution phase of a defacement attack.
    answer_sources:
      - Windows Event ID 4688
      - Domain Controllers (for login messages), All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH process_creation_events | MODEL parent_child_process_relationships | ALERT on relationships that are statistically rare or first_seen'
  - question: Are there any shell commands being executed that a machine learning model scores as highly malicious?
    context: This question provides a more advanced, behavioral approach to command-line analysis. Instead of relying on exact signature matches, a model can learn the characteristics of malicious commands (e.g., length, specific keywords, obfuscation) and score any new command. This helps find obfuscated or novel commands designed to evade simpler rule-based detections.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Event ID 4104
      - Domain Controllers (for login messages), All Windows Endpoints and Servers
    range: last 90 days
    queries:
      - 'Pseudocode: GET shell_command_lines from events (Win 4688, 4104) | APPLY command_line_analysis_model | ALERT on commands with high maliciousness_score'
  - question: Have any critical web content files been modified by an unapproved user account or process?
    context: This focuses on protecting the most important files on a web server (like the homepage or login page). By creating a specific watchlist and alerting on any modification by a process or account not on an allowlist (e.g., a deployment service), analysts can get high-priority, high-fidelity alerts on unauthorized changes to key assets.
    answer_sources:
      - Windows Event ID 4663
      - Internal Web Server file systems (e.g., C:\inetpub\wwwroot), Network traffic segments leading to internal web servers
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH file_modification_events (Win 4663) WHERE file_path IN (critical_file_watchlist) AND process_name NOT IN (approved_process_list)'
  - question: Has there been an anomalous spike in the volume of file modifications or content uploads to internal web servers?
    context: Defacement often involves a sudden burst of activity, such as replacing many files at once. This question aims to detect that anomaly by comparing current activity levels (file writes, HTTP POSTs) against a historical baseline. Alerting on significant deviations (e.g., 3 standard deviations above the norm) can catch bulk defacement activity.
    answer_sources:
      - Zeek http.log
      - Windows Event ID 4663
      - Internal Web Server file systems (e.g., C:\inetpub\wwwroot), Network traffic segments leading to internal web servers
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH file_mod_events and http_post_events | AGGREGATE by hour | COMPARE current_volume to moving_average_baseline | ALERT when current_volume > (baseline + 3 * std_dev)'
  - question: Is there any web update activity that an anomaly detection model flags as deviating from normal behavior?
    context: This is a comprehensive behavioral detection method. By training a model on multiple features of 'normal' web updates (source IP, user agent, file type, etc.), it can learn a complex profile of legitimate activity. Any new activity that doesn't fit this profile is flagged as an anomaly, providing a powerful way to detect sophisticated or novel defacement techniques.
    answer_sources:
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4663
      - Internal Web Server file systems (e.g., C:\inetpub\wwwroot), Network traffic segments leading to internal web servers
    range: last 90 days
    queries:
      - 'Pseudocode: GET features from web_update_events (IP, user_agent, file_type, etc.) | APPLY anomaly_detection_model | ALERT on events flagged as anomalous'
  - question: Is there a sequence of events where a new image or web file is created and then immediately used in a command to modify UI or web content?
    context: This question looks for a classic attack chain of staging and execution. An adversary first places their defacement content on the system and then uses a second command to activate it. By correlating these two events (file create + process create referencing the file) within a short time window, analysts can detect the full, multi-stage defacement behavior with high confidence.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - User workstations, Terminal servers (e.g., Citrix), Internal web and application servers
    range: last 90 days
    queries:
      - 'Pseudocode: SEARCH for file_create_event (image/web extension) AND process_create_event (referencing new file path) on same_host within 60_seconds'
  - question: Are there any statistically significant sequences of events (e.g., network download -> file write -> registry modify) occurring that indicate a strong, non-random attack pattern?
    context: This question moves beyond simple correlation to find statistically meaningful behavioral chains. A network download followed by a file write and a registry modification might be normal in isolation, but if the sequence happens far more often than random chance would suggest (a high Pointwise Mutual Information score), it indicates a purposeful, likely malicious, pattern that warrants investigation.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek files.log
      - User workstations, Terminal servers (e.g., Citrix), Internal web and application servers
    range: last 90 days
    queries:
      - 'Pseudocode: MODEL event_sequences (e.g., network_download -> file_write -> reg_modify) | CALCULATE PMI for sequences | ALERT on sequences with high PMI score'
  - question: Has a sequence analysis model detected a known high-risk event sequence or a novel, unpredictable sequence of host events?
    context: This is an advanced form of sequence analysis where a model (like an LSTM) learns the 'grammar' of normal system behavior. It can then alert when it recognizes a known malicious sequence or when it encounters a sequence of events that is completely unexpected and which it cannot predict, indicating novel or anomalous behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Zeek files.log
      - User workstations, Terminal servers (e.g., Citrix), Internal web and application servers
    range: last 90 days
    queries:
      - 'Pseudocode: STREAM host_events to LSTM_model | ALERT on recognized high-risk_sequences OR sequences with high prediction_error'