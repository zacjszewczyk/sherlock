name: "T1556.006: Modify Multi-Factor Authentication"
id: a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d
description: This playbook addresses adversary attempts to achieve persistence, evade defenses, and access credentials by modifying Multi-Factor Authentication (MFA) configurations. Investigative focus includes detecting the removal of users from MFA-enforcing Active Directory groups, suspicious registration of new MFA devices followed by anomalous logins, modification of hosts files to redirect MFA services, execution of commands or scripts designed to alter MFA policies (e.g., 'Set-MsolUser'), unauthorized outbound connections from lsass.exe, tampering with third-party MFA agent files, and identifying MFA fatigue attacks or sessions hijacked via Adversary-in-the-Middle (AiTM) techniques.
type: technique
related:
  - "TA0003: Persistence"
  - "TA0005: Defense Evasion"
  - "TA0006: Credential Access"
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Has a user been removed from a critical Active Directory group designated for MFA enforcement?
    context: This question seeks to identify direct attempts to bypass MFA by removing a user account from a security group that enforces it. Monitoring for member removal events (Windows Event IDs 4729, 4733, 4757) specifically tied to predefined critical MFA groups provides a high-fidelity alert for potential persistence or defense evasion activities.
    answer_sources:
      - Windows Event ID 4729
      - Windows Event ID 4733
      - Windows Event ID 4757
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for Windows Events 4729, 4733, or 4757
          WHERE Group_ID is in a list of critical MFA groups
          ALERT on any match, capturing the source user, target user, and group.
  - question: Is an administrator removing an unusually high number of users from critical MFA groups compared to their baseline behavior?
    context: This question aims to detect abuse of legitimate administrator privileges. An adversary with control of an admin account might perform bulk removals from MFA groups. By comparing an admin's activity against their own historical baseline and that of their peers, we can spot statistically significant anomalies that may indicate malicious intent.
    answer_sources:
      - Windows Event ID 4729
      - Windows Event ID 4733
      - Windows Event ID 4757
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          COUNT user removals from MFA groups (Events 4729, 4733, 4757) by administrator per week
          COMPARE count to the administrator's historical baseline
          ALERT if count > (baseline + 3 * standard_deviation).
  - question: Has a privileged user's security posture been drastically reduced through a group membership change?
    context: This question uses a graph-based approach to understand the impact of group membership changes. An adversary may make a subtle change that moves a privileged user to a less secure context. This query identifies changes that significantly lower a user's 'security score' as defined by a graph model, flagging potentially malicious modifications that might otherwise be missed.
    answer_sources:
      - Windows Event ID 4729
      - Windows Event ID 4733
      - Windows Event ID 4757
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL user-group relationships as a graph
          ON group membership change event
          CALCULATE change in 'security score' for the affected user
          ALERT if score reduction is anomalous.
  - question: Was a new MFA device registered for a user, followed by a successful login from a geographically distinct location within 5 minutes?
    context: This question helps detect account takeovers where an adversary registers their own MFA device. The tight correlation of a new device registration with a login from a new or impossible travel location is a strong indicator that the legitimate user is not in control of the account.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4624
      - Zeek conn.log
      - Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CORRELATE MFA device registration event with a successful login (Event 4624) for the same user within 5 minutes
          GET source IP geolocation for both events
          ALERT if login country differs from registration country.
  - question: After a new MFA device was registered, did a subsequent login originate from a location that is rare for that user?
    context: This question focuses on identifying anomalous login behavior following a critical account modification. By profiling a user's typical login locations, a login from a statistically rare location (e.g., a country not seen in 90 days) after a new MFA device is added can be flagged as highly suspicious, even if it doesn't meet impossible travel criteria.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4624
      - Zeek conn.log
      - Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON new MFA device registration
          MONITOR subsequent login locations for that user
          COMPARE login location to user's 90-day history
          ALERT if login location is in the bottom 5th percentile of frequency.
  - question: Did a sequence of user actions involving MFA registration and data access match a high-risk anomaly pattern?
    context: This question uses a sequence-based model to detect complex attack patterns that appear normal in isolation. The specific sequence of 'MFA registration -> successful login from a new network -> sensitive data access' is a learned high-risk pattern. A high reconstruction error from an autoencoder model indicates the observed sequence is a significant deviation from normal user behavior.
    answer_sources:
      - Windows Event ID 4738
      - Windows Event ID 4624
      - Zeek conn.log
      - Identity Provider Servers, VPN Concentrators, Cloud Identity Platforms (e.g., Azure AD)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL user event sequences with an LSTM autoencoder
          FEED new sequences (e.g., MFA registration -> login -> data access) into the model
          ALERT if reconstruction error is high for a sequence.
  - question: Was the system's 'hosts' file modified by an unauthorized process to redirect an MFA service?
    context: This question checks for a classic man-in-the-middle setup where the 'hosts' file is altered to redirect traffic intended for a legitimate MFA service to an adversary-controlled server. Monitoring for write events to this file (Event ID 4663) and process creation events (Event ID 4688) involving file redirection can detect this tampering attempt.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - User Endpoints and Critical Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MONITOR for file writes (Event 4663) to 'etc\hosts'
          OR process creation (Event 4688) with command-line modifying 'etc\hosts'
          ALERT if the source process is not on an allowlist.
  - question: Has the 'hosts' file on a critical system been modified from its approved baseline hash?
    context: This question uses file integrity monitoring (FIM) to detect unauthorized changes to the 'hosts' file. By maintaining a baseline hash (e.g., SHA256) of the known-good file, any deviation can be immediately flagged as a potential security incident. This method is highly effective for detecting any modification, regardless of the technique used.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - User Endpoints and Critical Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PERIODICALLY calculate the hash of 'C:\Windows\System32\drivers\etc\hosts'
          COMPARE current hash to the approved baseline hash
          ALERT if hashes do not match.
  - question: Was a change made to the 'hosts' file classified as malicious by a machine learning model?
    context: This question leverages a more advanced FIM approach where a classification model analyzes the nature of a change to the 'hosts' file. The model is trained to distinguish between legitimate changes (like those from software installers) and malicious changes (like a single-line addition from a command shell), providing higher-fidelity alerts and reducing false positives.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4663
      - User Endpoints and Critical Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON hosts file modification
          EXTRACT features of the change (e.g., source process, content added)
          INPUT features into a trained classification model
          ALERT if the model classifies the change as 'malicious'.
  - question: Was a process executed with command-line arguments or script content known to alter MFA configurations?
    context: This question looks for the direct use of administrative tools to weaken MFA. By monitoring process command-lines (Event ID 4688) and PowerShell script blocks (Event ID 4104) for specific keywords related to MFA policy changes (e.g., 'Set-MsolUser', '-StrongAuthenticationRequirements'), analysts can detect unauthorized or suspicious modifications.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - ADFS Servers, Domain Controllers, and Administrator Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH command-lines (Event 4688) and PowerShell logs (Event 4104)
          FOR keywords like 'Set-AdfsRelyingPartyTrust', 'Set-MsolUser', '-StrongAuthenticationRequirements'
          ALERT on matches not tied to a change request.
  - question: Did a PowerShell command exhibit unusually high entropy, suggesting obfuscation?
    context: This question aims to detect obfuscated commands that adversaries use to hide their actions. Malicious PowerShell commands are often encoded or obfuscated, resulting in a higher Shannon entropy than legitimate scripts. Monitoring the entropy of 'powershell.exe' command-line arguments and flagging significant deviations from the baseline can reveal hidden malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - ADFS Servers, Domain Controllers, and Administrator Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR each 'powershell.exe' process (Event 4688)
          CALCULATE Shannon entropy of the command-line arguments
          COMPARE entropy to a pre-calculated baseline
          ALERT if entropy exceeds the 99th percentile.
  - question: Did a PowerShell command appear structurally dissimilar from known-good administrative commands?
    context: This question uses a machine learning model to identify novel and potentially malicious PowerShell commands. A sequence-to-sequence autoencoder is trained on a large corpus of legitimate commands. Any new command that the model cannot reconstruct accurately (i.e., has a high reconstruction error) is flagged as anomalous and suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - ADFS Servers, Domain Controllers, and Administrator Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL legitimate PowerShell commands with a Seq2Seq autoencoder
          FEED new commands from logs (Event 4104) into the model
          ALERT if the reconstruction error for a command is high.
  - question: Did the lsass.exe process initiate an outbound network connection to an external IP address?
    context: This is a critical question for detecting credential theft. The LSASS process should not normally make outbound network connections to external addresses. Such an event, logged by Windows Filtering Platform (Event ID 5156), is a very strong indicator of credential dumping or other malicious activity where credentials are being exfiltrated.
    answer_sources:
      - Windows Event ID 5156
      - Zeek conn.log
      - Domain Controllers and User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for network connection events (Event 5156)
          WHERE Application is 'lsass.exe' AND Destination_Address is not in an internal/trusted IP range
          CREATE high-severity alert on any match.
  - question: Has the lsass.exe process connected to a destination IP or port that is rare or has never been seen before?
    context: This question provides a behavioral approach to detecting anomalous lsass.exe network activity. By baselining the legitimate network destinations for lsass.exe (which should be a very small and stable set), any connection to a novel or extremely rare destination IP/port pair can be identified as a potential threat, even if the destination is not on a known threat list.
    answer_sources:
      - Windows Event ID 5156
      - Zeek conn.log
      - Domain Controllers and User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MAINTAIN baseline of normal destination IPs/ports for lsass.exe
          ON new lsass.exe connection event
          CHECK if destination is in the baseline
          ALERT if destination is novel or has a very low frequency.
  - question: Was a network connection from lsass.exe classified as an outlier by a machine learning model?
    context: This question uses unsupervised machine learning to detect suspicious lsass.exe connections without relying on predefined rules or baselines. A one-class SVM is trained on tuples of normal network connection data. Any new connection from lsass.exe that the model classifies as an outlier is considered a high-confidence indicator of malicious activity.
    answer_sources:
      - Windows Event ID 5156
      - Zeek conn.log
      - Domain Controllers and User Endpoints
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a one-class SVM model on legitimate network connection tuples
          FEED new connection tuples involving 'lsass.exe' to the model
          ALERT if the model classifies the connection as an outlier.
  - question: Did a process not on an established allowlist attempt to access files or registry keys of a third-party MFA agent?
    context: This question seeks to detect tampering with third-party MFA solutions (e.g., Duo, Okta). By enabling object access auditing on the agent's installation directories and registry keys, and maintaining an allowlist of legitimate processes, any access attempt from an unauthorized process can be flagged as a potential attempt to disable or bypass MFA.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ENABLE auditing on MFA agent files/registry keys
          SEARCH for access events (Event 4663, 4656) to those objects
          ALERT if Process_Name is not on the established allowlist.
  - question: Was there a statistically unusual pattern of access to a sensitive MFA file or registry key?
    context: This question identifies anomalous access patterns to MFA components. An adversary might use a legitimate but rarely used process (like 'powershell.exe') to interact with MFA files, or they might cause a flurry of access events. Monitoring the frequency of access by different processes and alerting on deviations from the norm can uncover this subtle activity.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PROFILE access frequency to MFA files/keys by process name over 30 days
          ALERT if a rare process accesses the resource OR if the access count in a 1-hour window exceeds 3 standard deviations above the norm.
  - question: Did a sequence of process-to-file interactions involving an MFA component have a low probability according to a behavioral model?
    context: This question uses a behavioral model, like a Hidden Markov Model (HMM), to understand the normal sequence of operations on a system. The model learns valid state transitions (e.g., which process typically accesses which file). An anomalous sequence, such as 'cmd.exe' spawning a script that then modifies an MFA configuration file, would have a low probability under the model and be flagged as suspicious.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - Endpoints and Servers with Third-Party MFA Agents (e.g., Duo, Okta)
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a Hidden Markov Model on sequences of process-to-file interactions
          FEED new interaction sequences involving MFA files/keys to the model
          ALERT if a sequence has a low probability.
  - question: Was a high number of failed MFA logins for a single user followed immediately by a success from the same IP?
    context: This question is designed to detect MFA fatigue or 'push bombing' attacks. In this attack, an adversary who has stolen a password spams the user with MFA push notifications until the user accidentally approves one. This pattern manifests as a flurry of failed logins (Event ID 4625) followed by a single success (Event ID 4624) from the same source.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Authentication Servers and Cloud Identity Providers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          COUNT failed logins (Event 4625) with MFA denial codes for a user/IP in a 5-minute window
          IF count > 10 AND is followed by a successful login (Event 4624) from the same user/IP
          ALERT as a potential MFA fatigue attack.
  - question: Did a user experience a statistically significant spike in their rate of failed logins?
    context: This question identifies brute-force or MFA fatigue attempts by looking for statistical anomalies in login failures. By establishing a baseline rate of failed logins per hour for each user, a sudden spike that exceeds the 99th percentile of their normal behavior can be flagged for investigation, even if it doesn't fit a specific rule-based pattern.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Authentication Servers and Cloud Identity Providers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          CALCULATE baseline rate of failed logins per hour for each user
          MONITOR the current rate of failed logins
          ALERT if the observed rate exceeds the 99th percentile of the user's historical baseline.
  - question: Did a time-series model detect an anomalous pattern in a user's authentication log stream?
    context: This question uses a time-series model to learn a user's normal login rhythm and cadence. This approach can detect sophisticated attacks that might not trigger simple threshold rules. A sudden, sharp spike in failed MFA attempts followed by a success would be flagged as a temporal anomaly that is highly indicative of a fatigue attack.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Authentication Servers and Cloud Identity Providers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL the stream of authentication logs for each user with a time-series model (e.g., SARIMA)
          FEED new authentication events into the model
          ALERT if the model flags a sequence of events as a temporal anomaly.
  - question: Did a successful remote authentication originate from a known Adversary-in-the-Middle (AiTM) IP address or use a known malicious TLS fingerprint?
    context: This question aims to detect session hijacking via AiTM attacks by leveraging threat intelligence. By checking the source IP of remote logins against a feed of known AiTM infrastructure and comparing the TLS fingerprint (JA3/JA3S) of the connection against fingerprints of known AiTM toolkits, analysts can identify compromised sessions with high confidence.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek ssl.log
      - Internet Gateway, VPN Concentrators, and Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          ON successful remote login (Event 4624)
          CHECK if Source_IP is on AiTM threat intelligence feed
          CHECK if session's JA3/JA3S hash matches known malicious hashes
          ALERT on any match.
  - question: Did a successful authentication session use an extremely rare TLS fingerprint (JA3/JA3S)?
    context: This question identifies potential AiTM attacks by focusing on the client's TLS fingerprint. AiTM toolkits and other malicious clients often have unique TLS implementations that differ from standard browsers. A login from a session using a JA3/JA3S fingerprint that is extremely rare across the organization is a strong indicator of a non-standard, and possibly malicious, client.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek ssl.log
      - Internet Gateway, VPN Concentrators, and Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          PROFILE the frequency of all JA3/JA3S fingerprints from authentication sessions
          FOR each new login, check its JA3/JA3S fingerprint
          ALERT if the fingerprint's frequency is in the bottom 1st percentile.
  - question: Was a login session assigned a high risk score by a machine learning model, particularly if it had a rare JA3 hash?
    context: This question uses a comprehensive risk-scoring model to detect sophisticated session hijacks. The model considers multiple features of a login session (IP info, ASN, JA3 hash, time, user agent) to calculate an overall risk score. This allows for the detection of suspicious logins that may not trigger any single rule, with special attention paid to sessions with rare JA3 hashes as a high-risk feature.
    answer_sources:
      - Windows Event ID 4624
      - Zeek conn.log
      - Zeek ssl.log
      - Internet Gateway, VPN Concentrators, and Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          TRAIN a classification model (e.g., XGBoost) on login session features to produce a risk score
          FOR each new login, calculate its risk score
          ALERT if the score exceeds a dynamic threshold, especially if the JA3 hash is rare.