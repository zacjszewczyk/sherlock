name: T1007: System Service Discovery
id: f5d4a1b2-c3d4-4e5f-8a9b-0c1d2e3f4a5b
description: This playbook helps investigate whether an adversary is attempting to discover system services as part of internal reconnaissance. This can involve the execution of built-in utilities like sc.exe, net.exe, or tasklist.exe with unusual command-line arguments; these tools being spawned by atypical parent processes such as Office applications; the use of PowerShell (e.g., Get-Service, Get-WmiObject) or WMI queries to enumerate services, sometimes with obfuscation; a high volume of discovery commands executed in a short period; or service discovery being followed by other suspicious activities like further reconnaissance or lateral movement.
type: technique
related:
  - TA0007: Discovery
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process command lines for sc.exe, net.exe, or tasklist.exe that contain known malicious or unusual arguments, such as `sc query type= service state= all`, `net start`, or output redirection?
    context: This question aims to identify the most direct evidence of malicious service discovery by looking for specific, high-fidelity command-line patterns. Adversaries often use these built-in utilities with arguments that enumerate all services or redirect output to a file for later analysis, which is uncommon for normal administrative tasks. Detecting these exact patterns can be a strong indicator of reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows Endpoints and Servers, especially Domain Controllers and Application Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Search process creation logs (EID 4688) for sc.exe, net.exe, tasklist.exe where command line matches 'sc query type= service state= all', 'net start', or 'tasklist /svc > *'
  - question: Have any instances of sc.exe, net.exe, or tasklist.exe been executed with command-line arguments that are statistically rare for a specific host or its peer group?
    context: This question helps uncover novel or evasive reconnaissance techniques that don't match known malicious strings. By baselining normal command-line usage for each host, we can flag executions with argument combinations that are statistically improbable (e.g., in the bottom 1% of usage frequency). This approach can detect unusual reconnaissance activity that might otherwise be missed by signature-based rules.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows Endpoints and Servers, especially Domain Controllers and Application Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each host, get all command lines for sc.exe, net.exe, tasklist.exe. Calculate frequency of each distinct command line. Alert on command lines in the bottom 1% frequency.
  - question: Can we identify potentially malicious executions of sc.exe, net.exe, or tasklist.exe using a machine learning model trained to distinguish between benign and malicious command-line features?
    context: This question leverages a machine learning classifier to score the likelihood of a service discovery command being malicious. The model analyzes various features like command length, argument count, and character patterns (n-grams) to make a prediction. This provides a more sophisticated and adaptable detection method than static rules or simple frequency analysis, capable of identifying previously unseen malicious command variations.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - All Windows Endpoints and Servers, especially Domain Controllers and Application Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Score process command lines for sc.exe, net.exe, tasklist.exe using a pre-trained logistic regression model. Alert on events with a high malicious probability score.
  - question: Have sc.exe, tasklist.exe, or net.exe been executed by a parent process that is not on an established allowlist of legitimate initiators, such as an Office application or web server process?
    context: This question focuses on detecting anomalous process lineage. Service discovery tools are typically run from an administrative shell (cmd.exe, powershell.exe) or by system processes. An Office application (winword.exe, excel.exe) or a web server worker process (w3wp.exe) spawning these tools is highly irregular and a strong indicator of a compromised process being used to conduct internal reconnaissance.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations, Web Servers, and Application Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Search process creation logs (EID 4688) for child processes sc.exe, tasklist.exe, net.exe. Alert if parent process is not in [explorer.exe, cmd.exe, powershell.exe, ...] or if parent is in [winword.exe, excel.exe, w3wp.exe].
  - question: Are there any parent-child process relationships involving sc.exe, tasklist.exe, or net.exe that are statistically rare for the environment?
    context: This question aims to identify unusual process creation events by calculating the historical probability of a specific parent process spawning a service discovery utility. An alert is generated when this probability is extremely low, indicating a deviation from normal, established behavior. This can help detect attackers using legitimate but uncommon processes to launch their discovery tools, bypassing simple allowlist/denylist rules.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations, Web Servers, and Application Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each parent-child pair, calculate the historical probability P(child|parent). Alert if P(sc.exe|parent_process) < threshold or P(tasklist.exe|parent_process) < threshold, etc.
  - question: Can a graph-based anomaly detection model identify anomalous process creation events related to service discovery tools?
    context: This question applies a graph-based machine learning model to the entire process lineage data of an environment. The model learns the normal structure of process relationships. It can then identify and score new process creation events (edges in the graph) that are anomalous, such as an unusual parent process spawning sc.exe. This provides a holistic view and can detect sophisticated attempts to hide in the noise of system activity.
    answer_sources:
      - Windows Event ID 4688
      - User Workstations, Web Servers, and Application Servers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Model process lineage as a graph. Score the rarity of the path for any new process creation event involving sc.exe, tasklist.exe, or net.exe. Alert on high rarity scores.
  - question: Are there any PowerShell script blocks or WMI events containing keywords for service enumeration, potentially combined with obfuscation techniques?
    context: This question targets service discovery performed through PowerShell or WMI, which are powerful tools often abused by adversaries. The query looks for specific cmdlets (`Get-Service`, `Get-WmiObject Win32_Service`) in PowerShell logs (Event ID 4104). The detection is enhanced by also searching for common obfuscation indicators (`FromBase64String`, `IEX`), as attackers frequently hide their scripts to evade simple keyword matching.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 5861
      - All Windows Endpoints and Servers with PowerShell v5+ Script Block Logging and WMI Activity logging enabled.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Search PowerShell logs (EID 4104) for script blocks containing ('Get-Service' OR 'Get-WmiObject Win32_Service') AND/OR ('FromBase64String', 'IEX').
  - question: Have any PowerShell script blocks containing service discovery keywords also exhibited an unusually high entropy score, suggesting obfuscation?
    context: This question provides a method to find obfuscated PowerShell scripts without relying on specific obfuscation keywords. Obfuscated or encrypted code has a higher degree of randomness, which can be measured as high Shannon entropy. By looking for scripts that both perform service discovery and have an entropy score significantly above the baseline for normal scripts, we can effectively identify suspicious, potentially malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 5861
      - All Windows Endpoints and Servers with PowerShell v5+ Script Block Logging and WMI Activity logging enabled.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Calculate Shannon entropy for PowerShell script blocks (EID 4104). Alert if script contains service discovery keywords AND entropy is in the top 5% of all scripts.
  - question: Can a text classification model identify malicious PowerShell scripts that are performing service discovery?
    context: This question uses a machine learning model (like Naive Bayes) trained on a large dataset of known benign and malicious PowerShell scripts. The model learns to classify new scripts based on their overall characteristics, such as the combination of cmdlets used, variable naming conventions, and structure. This allows for the detection of malicious service discovery scripts that may not use obvious obfuscation or keywords but whose overall pattern matches known malicious behavior.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Windows Event ID 5861
      - All Windows Endpoints and Servers with PowerShell v5+ Script Block Logging and WMI Activity logging enabled.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Score PowerShell script blocks (EID 4104) containing service discovery cmdlets using a pre-trained text classification model. Alert on high malicious probability scores.
  - question: Has any single host or user executed an excessive number of service discovery commands within a short time window, such as more than 10 commands in 5 minutes?
    context: This question aims to detect brute-force or scripted reconnaissance activity by setting a simple, fixed threshold. While a single service discovery command is often benign, a large burst of them from one source in a short period is highly abnormal and suggests an automated script is at work gathering information about the system or network.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Security Information and Event Management (SIEM) system or data lake containing aggregated endpoint logs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Count service discovery commands (sc.exe, net.exe, Get-Service) per host in 5-minute windows. Alert if count > 10.
  - question: Has the frequency of service discovery commands from a single host deviated significantly from its established historical baseline?
    context: This question uses a dynamic, statistical threshold to detect unusual spikes in activity, which is more robust than a fixed limit. By calculating the normal mean and standard deviation of discovery command volume for each host, the system can flag periods of activity that are statistically significant (e.g., more than 3 standard deviations above the mean). This adapts to different host roles (e.g., a developer's machine vs. a file server) and reduces false positives.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Security Information and Event Management (SIEM) system or data lake containing aggregated endpoint logs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: For each host, calculate the baseline mean and standard deviation of service discovery commands per 5-minute window. Alert if a new window's count > (mean + 3*std_dev).
  - question: Can a time-series anomaly detection model identify unusual bursts or patterns of service discovery activity for a host?
    context: This question applies a sophisticated time-series model to learn the normal rhythm and seasonality of administrative activity for each host. For example, it can learn that certain admin tasks happen every morning. The model can then automatically flag any service discovery events that occur outside of these learned patterns, such as a burst of activity in the middle of the night, without needing pre-defined thresholds.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - Security Information and Event Management (SIEM) system or data lake containing aggregated endpoint logs.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the event stream of service discovery commands per host. Alert on detected anomalies.
  - question: Was a service discovery event (T1007) on a host followed within a 30-minute window by other discovery (e.g., T1018 - Remote System Discovery) or lateral movement activities (e.g., T1021.002 - SMB/Windows Admin Shares)?
    context: This question helps to contextualize a service discovery event by looking for what happens next. A service discovery command followed by network scanning or an attempt to connect to another machine's admin share is a classic attack sequence. Correlating these events in a specific order and time frame significantly increases the confidence that the initial discovery was part of a malicious attack chain.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized log aggregation platform (SIEM/Data Lake) capable of correlating endpoint and network data.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Define a rule: IF event_A (technique=T1007) on host_X, THEN IF event_B (technique=T1018 OR T1021.002) from host_X within 30 mins, THEN alert.
  - question: Has a sequence of ATT&CK techniques, beginning with service discovery (T1007), occurred that has a very low joint probability based on historical data?
    context: This question looks for anomalous chains of attacker behaviors. By modeling the probability of one technique following another, we can identify sequences that are statistically rare for the environment. For example, if service discovery (T1007) is rarely followed by remote system discovery (T1018) in normal operations, observing this sequence would be highly suspicious and indicative of an attack.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized log aggregation platform (SIEM/Data Lake) capable of correlating endpoint and network data.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Calculate a transition matrix of P(Technique_B | Technique_A) for all techniques. Alert if a sequence starting with T1007 has a very low joint probability.
  - question: Can a Hidden Markov Model (HMM), based on an observed sequence of ATT&CK techniques, infer a transition to a high-risk attacker intent state, such as 'Discovery' followed by 'Lateral Movement'?
    context: This question uses a Hidden Markov Model to infer the adversary's hidden intent (e.g., 'Reconnaissance', 'Execution') based on the observable sequence of ATT&CK techniques. The model can learn that a transition from a 'Discovery' state to a 'Lateral Movement' state is a high-risk pattern. When it observes a sequence of events (like T1007 followed by T1021.002) that makes this state transition highly probable, it generates an alert, providing a more abstract and powerful way to understand the progression of an attack.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Centralized log aggregation platform (SIEM/Data Lake) capable of correlating endpoint and network data.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: Feed observed ATT&CK technique sequence into a pre-trained HMM. Alert if the model enters a high-risk state sequence (e.g., 'Discovery' -> 'Lateral Movement') with high probability.