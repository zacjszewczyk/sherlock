name: T1218: System Binary Proxy Execution
id: 3c7a6e1f-4b8c-4f8a-9c7d-8e2b6a5f1d0a
description: This playbook helps investigate whether an adversary is attempting to evade defenses by using trusted system binaries for malicious purposes. It focuses on detecting system binary proxy execution (e.g., rundll32.exe, msiexec.exe) that involves suspicious indicators, such as loading remote objects or known-bad files, executing from uncommon directories, being spawned by unusual parent processes (like Office applications), initiating anomalous network connections, or being part of a suspicious process chain (e.g., Office App -> Scripting Host -> Proxy Binary).
type: technique
related:
- TA0005: Defense Evasion
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a system binary proxy process executing with command-line arguments that reference a file or URL matching a known Indicator of Compromise (IOC)?
  context: This question seeks to identify direct evidence of malicious activity by checking if a trusted binary, often used to bypass defenses, is loading a payload (file or URL) that has been previously identified as malicious by threat intelligence. A match provides a high-confidence starting point for an investigation.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (Process Creation)
  - Sysmon Event ID 7 (Image Load)
  - All Windows Endpoints and Servers; Threat Intelligence Platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each process_creation_event WHERE process_name IN (rundll32.exe, regsvr32.exe, msiexec.exe, ...)
        EXTRACT file_path, url FROM command_line
        IF file_path EXISTS:
          GET file_hash
          CHECK file_hash AGAINST threat_intelligence_feed
          IF match THEN ALERT
        IF url EXISTS:
          CHECK url AGAINST threat_intelligence_feed
          IF match THEN ALERT
- question: For any identified IOC match involving a system binary proxy, how rare is the associated parent process or user context, and does this rarity elevate its risk score above a critical threshold?
  context: Not all IOC hits are created equal. This question helps prioritize alerts by adding context. An IOC executed by a rare parent process (e.g., spawned from an Office document) or a privileged user is more likely to be a targeted, malicious event than one originating from a common system process. This helps analysts focus on the highest-risk alerts first.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (Process Creation)
  - Sysmon Event ID 7 (Image Load)
  - All Windows Endpoints and Servers; Threat Intelligence Platform
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      FOR each IOC_alert:
        GET parent_process_name, user_account
        CALCULATE prevalence of parent_process_name over last 30 days
        CALCULATE prevalence of user_account over last 30 days
        COMPUTE risk_score based on inverse prevalence
        IF risk_score > threshold (e.g., 99th percentile) THEN ESCALATE_ALERT
- question: Can a machine learning model, trained on historical alert data, predict whether a new IOC alert involving a system binary proxy is a true positive?
  context: To combat alert fatigue, this question leverages machine learning to automate the initial triage process. By learning from how analysts have previously classified similar alerts, the model can automatically score and prioritize new alerts, allowing security teams to focus their efforts on events that the model predicts are most likely to be genuinely malicious.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 4663
  - Sysmon Event ID 1 (Process Creation)
  - Sysmon Event ID 7 (Image Load)
  - All Windows Endpoints and Servers; Threat Intelligence Platform
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Training Phase
      FEATURES = EXTRACT process_lineage, user_context, time_of_day, host_criticality FROM historical_labeled_alerts
      MODEL = train_classifier(FEATURES, LABELS)
      # Prediction Phase
      ON new_IOC_alert:
        NEW_FEATURES = EXTRACT features from new_IOC_alert
        PREDICTION = MODEL.predict(NEW_FEATURES)
        IF PREDICTION is 'true positive' THEN PRIORITIZE_ALERT
- question: Is a system binary proxy executing and loading a file from an atypical or high-risk directory like Temp, Public, or an unauthorized network share?
  context: Adversaries often place their payloads in world-writable or inconspicuous directories to evade detection and ensure execution. This question uses a rule-based approach to flag executions from these known 'suspicious' locations, as legitimate software rarely operates from them.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - File systems of all Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SUSPICIOUS_PATHS = ["\\AppData\\Local\\Temp\\", "\\Users\\Public\\", "C:\\PerfLogs\\"]
      FOR each process_creation_event WHERE process_name IN (rundll32.exe, mshta.exe, ...)
        EXTRACT file_path FROM command_line
        IF file_path CONTAINS any of SUSPICIOUS_PATHS THEN ALERT
- question: Is a system binary proxy loading a file from a directory that is statistically rare for that specific binary across the enterprise?
  context: This question moves beyond a static list of 'bad' directories. It establishes a dynamic baseline of normal behavior for each proxy binary. By flagging executions from locations that are statistically infrequent (e.g., in the bottom 5% of all locations ever used by that binary), it can uncover novel or targeted attacker techniques that might not use common drop locations.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - File systems of all Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Baseline Phase
      FOR each proxy_binary:
        BUILD frequency_map of directory_paths from command_lines over last 90 days
      # Detection Phase
      ON new process_creation_event for proxy_binary:
        EXTRACT directory_path
        IF prevalence of directory_path < 5th_percentile THEN ALERT
- question: Does the command-line structure (including directory paths, file extensions, and arguments) of a system binary proxy execution fall into a cluster of rare or anomalous behavior?
  context: This question uses unsupervised machine learning to find 'unknown unknowns' in command-line data. By grouping similar command-line executions together, the algorithm can identify small, distinct clusters or outliers that represent unusual patterns. These anomalies, which don't fit any established pattern of normal activity, are strong candidates for investigation.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - File systems of all Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Training/Clustering Phase
      EXTRACT features (path, extension, args) from all historical command lines
      CLUSTERS = DBSCAN(features)
      IDENTIFY small_clusters and outliers
      # Detection Phase
      ON new command_line:
        EXTRACT new_features
        ASSIGN to cluster
        IF cluster is small_cluster OR outlier THEN ALERT
- question: Has a system binary proxy been launched directly by a Microsoft Office application or a web browser?
  context: This is a classic indicator of a phishing or drive-by-download attack. Legitimate system functions rarely require an Office application or browser to directly spawn a proxy binary like rundll32.exe. This question uses a simple but effective rule to detect this high-risk parent-child relationship.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - All Windows Endpoints and Servers, particularly those with Microsoft Office Suite
    or web browsers installed.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      SUSPICIOUS_PARENTS = [winword.exe, excel.exe, ..., chrome.exe, firefox.exe, ...]
      PROXY_CHILDREN = [rundll32.exe, mshta.exe, regsvr32.exe, ...]
      FOR each process_creation_event:
        IF child_process IN PROXY_CHILDREN AND parent_process IN SUSPICIOUS_PARENTS THEN ALERT
- question: Has a system binary proxy been launched by a parent process that is either entirely new or statistically very rare for that specific child process?
  context: This question goes beyond a static list of suspicious parents and instead establishes a behavioral baseline for each proxy binary. It detects anomalies by flagging any parent-child relationship that deviates from the norm, whether it's a completely new pairing or one that occurs very infrequently (e.g., less than 0.1% of the time). This helps find novel attacker methods.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - All Windows Endpoints and Servers, particularly those with Microsoft Office Suite
    or web browsers installed.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      # Baseline Phase
      FOR each proxy_child:
        BUILD frequency_map of parent_processes over last 30 days
      # Detection Phase
      ON new parent-child_creation_event:
        IF parent_process is new for child_process OR frequency < 0.1% THEN ALERT
- question: Does a new process creation event create a link (parent-child relationship) between two previously separate 'communities' of processes, such as connecting an 'Office app' community to an 'OS services' community?
  context: This question applies graph theory to model the entire system's process behavior. Normal operations form distinct clusters or 'communities' (e.g., services spawning services, Office apps spawning Office helpers). An attacker's actions often create an unnatural bridge between these communities, such as an Office app spawning a system-level proxy. Detecting these 'community-crossing' events can reveal sophisticated, multi-stage attacks.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - All Windows Endpoints and Servers, particularly those with Microsoft Office Suite
    or web browsers installed.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Modeling Phase
      GRAPH = build_process_graph(all process_creation_events)
      COMMUNITIES = find_communities(GRAPH)
      # Detection Phase
      ON new process_creation_event (parent -> child):
        parent_community = find_community(parent)
        child_community = find_community(child)
        IF parent_community != child_community AND this_link_is_rare THEN ALERT
- question: Has a system binary proxy, such as regsvr32.exe or cmstp.exe, initiated an outbound network connection to the public internet?
  context: Certain system binaries, particularly those used for registration or installation, have no legitimate reason to make outbound network connections. This question uses a specific behavioral rule to detect when these binaries communicate with external IP addresses, a strong indicator that they are being used to download a second-stage payload or communicate with a C2 server.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Windows Event ID 4663
  - Sysmon Event ID 3 (Network Connection)
  - Sysmon Event ID 11 (File Create)
  - Zeek conn.log
  - Zeek http.log
  - Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      TARGET_PROCESSES = [regsvr32.exe, cmstp.exe]
      FOR each network_connection_event:
        IF process_name IN TARGET_PROCESSES AND destination_ip is NOT RFC1918 THEN ALERT
- question: Is a system binary proxy exhibiting network behavior (e.g., data volume, connection duration, destination port variety) that significantly deviates from its established historical baseline?
  context: Even for binaries that do make network connections, their behavior is often predictable. This question establishes a statistical baseline of normal network activity for each proxy binary. It then flags any new connection that is a statistical outlier (e.g., sending an unusually large amount of data, connecting for an abnormally long time), which could indicate C2 communication or data exfiltration.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Windows Event ID 4663
  - Sysmon Event ID 3 (Network Connection)
  - Sysmon Event ID 11 (File Create)
  - Zeek conn.log
  - Zeek http.log
  - Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Baseline Phase
      FOR each proxy_binary:
        CALCULATE baseline_metrics (avg_bytes, avg_duration, port_entropy) from historical network logs
      # Detection Phase
      ON new network_connection from proxy_binary:
        CALCULATE current_metrics
        IF current_metrics > (baseline_metrics + 3 * std_dev) THEN ALERT
- question: Based on a machine learning model trained on known benign and malicious traffic, is an outbound network connection from a system binary proxy likely to be suspicious?
  context: This question applies supervised machine learning to the network connection itself, rather than just the process. By training a model on features of known good and bad connections (duration, data size, protocol state, etc.), it can predict the maliciousness of new, unseen connections originating from proxy binaries, providing a confidence score for analysts to prioritize their work.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 5156
  - Windows Event ID 4663
  - Sysmon Event ID 3 (Network Connection)
  - Sysmon Event ID 11 (File Create)
  - Zeek conn.log
  - Zeek http.log
  - Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Training Phase
      FEATURES = EXTRACT duration, bytes_sent, proto, conn_state FROM labeled_zeek_logs
      MODEL = train_classifier(FEATURES, LABELS)
      # Prediction Phase
      ON new network_connection from proxy_binary:
        NEW_FEATURES = EXTRACT features from new_connection
        PREDICTION = MODEL.predict(NEW_FEATURES)
        IF PREDICTION is 'suspicious' THEN ALERT
- question: Has a process execution chain of Office Application -> Scripting Host -> System Binary Proxy occurred within a short time window (e.g., 60 seconds)?
  context: This question looks for a specific, high-fidelity attack pattern. A user opens a malicious document (Office App), which spawns a script interpreter (Scripting Host) to execute a payload, which in turn uses a trusted binary (System Binary Proxy) to perform its actions. Detecting this entire sequence in a tight timeframe is a strong indicator of a successful phishing attack.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - All Windows Endpoints, especially those used by front-office personnel or executives.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      DEFINE pattern: parent IN [winword, excel], child IN [cmd, powershell], grandchild IN [rundll32, msiexec]
      CORRELATE process_creation_events on process_guid/parent_pid
      FOR each process_chain:
        IF chain matches pattern AND time_delta < 60 seconds THEN ALERT
- question: Has a rare three-step process chain been observed that matches the general pattern of a user application spawning a scripting host, which then spawns a system binary?
  context: This statistical approach broadens the search from specific process names to generic categories. It identifies the frequency of all 3-step process chains and flags those that are rare (e.g., have happened less than 5 times in 90 days) but fit the malicious archetype. This can uncover new variations of the attack that use different applications or script hosts.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - All Windows Endpoints, especially those used by front-office personnel or executives.
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      # Baseline Phase
      CALCULATE frequency of all 3-process chains over last 90 days
      # Detection Phase
      ON new 3-process_chain:
        IF frequency < 5 AND chain_matches_pattern('App'->'Script'->'Binary') THEN ALERT
- question: Does a newly observed process execution chain deviate significantly from normal sequences, as determined by a sequence-based machine learning model (e.g., LSTM autoencoder)?
  context: This advanced technique uses a neural network to learn the 'grammar' of normal process execution sequences. When a new sequence is observed, the model attempts to reconstruct it. If the sequence is unusual or nonsensical compared to what the model has learned (resulting in a high 'reconstruction error'), it is flagged as a potential anomaly. This can detect novel and complex attack chains that don't fit any predefined rules or statistical patterns.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1 (Process Creation)
  - All Windows Endpoints, especially those used by front-office personnel or executives.
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      # Training Phase
      SEQUENCES = get_all_benign_process_chains(last 30 days)
      MODEL = train_lstm_autoencoder(SEQUENCES)
      # Detection Phase
      ON new process_chain:
        reconstruction_error = MODEL.evaluate(new_process_chain)
        IF reconstruction_error > threshold THEN ALERT