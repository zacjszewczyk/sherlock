name: T1052.001: Exfiltration over USB
id: 8b1a9c3d-f2e5-4b8a-a6d9-c7e0b1f4a3d2
description: This playbook focuses on detecting adversary data exfiltration using USB devices. It covers techniques such as running known malicious tools from a USB, using native utilities like robocopy or PowerShell to copy sensitive data, transferring anomalously large volumes of data, chaining actions like connecting a USB before archiving and copying data, and performing USB write operations from non-interactive accounts or outside of a user's normal working hours.
type: technique
related:
  - TA0010: Exfiltration
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Is a known malicious tool being executed from a USB device?
    context: This question aims to identify the direct execution of recognized malicious software from a removable drive. Adversaries often use custom or publicly available exfiltration tools. Detecting their execution by matching file hashes against a threat intelligence feed is a high-fidelity indicator of a compromise. The process path is checked to confirm the execution source is a removable drive.
    answer_sources:
      - Windows Event ID 4688
      - Threat intelligence feed of file hashes
      - Applicable to all enterprise workstations and servers, particularly those with sensitive data access or used by privileged accounts.
    range: last 90 days
    queries:
      - search: SIEM
        query: SEARCH process_creation_events (e.g., EventID 4688) WHERE process_path starts with removable_drive_letter (e.g., E: to Z:). JOIN with threat_intel_hashes on process_hash. ALERT on match.
  - question: Is a process launched from a USB device using an obfuscated name or command-line arguments?
    context: This question seeks to uncover attempts to hide malicious activity through obfuscation. Adversaries may use packed executables or randomized command-line arguments to evade signature-based detection. A high Shannon entropy score for a process name or its arguments, compared to an established baseline, can indicate such obfuscation techniques.
    answer_sources:
      - Windows Event ID 4688
      - Applicable to all enterprise workstations and servers, particularly those with sensitive data access or used by privileged accounts.
    range: last 90 days
    queries:
      - search: Data Analytics Platform
        query: FOR each process_creation_event from removable_media, CALCULATE shannon_entropy of process_name and command_line. COMPARE to historical_baseline. ALERT if entropy > 95th_percentile.
  - question: Can we predictively identify malicious processes launched from USB devices using machine learning?
    context: This question explores the use of a predictive model to proactively identify malicious processes that may not be caught by signature or entropy-based methods. By training a classification model on features like parent process, user context, and command-line characteristics from known good and bad software, we can score new processes from USBs and alert on those classified as malicious with high confidence.
    answer_sources:
      - Windows Event ID 4688
      - Applicable to all enterprise workstations and servers, particularly those with sensitive data access or used by privileged accounts.
    range: last 90 days
    queries:
      - search: Machine Learning Model
        query: INPUT process_features (parent_process, user, cmd_length, entropy) from USB_launched_process. PREDICT maliciousness_score using trained_classification_model. ALERT if score > high_confidence_threshold.
  - question: Is a native copy utility being used to move files from a sensitive location to a USB device?
    context: This question focuses on detecting the misuse of legitimate system utilities for data exfiltration. Adversaries "live off the land" by using built-in tools like `robocopy`, `xcopy`, or PowerShell's `Copy-Item` to avoid introducing new malware. This query looks for the specific command-line patterns indicating a recursive copy from a sensitive internal path to a removable drive.
    answer_sources:
      - Windows Event ID 4688
      - Applicable to endpoints with access to network shares, document management systems, and code repositories.
    range: last 90 days
    queries:
      - search: SIEM
        query: SEARCH process_creation_events for (robocopy.exe, xcopy.exe, powershell.exe). PARSE command_line for source_path (e.g., C:\Users, \\server\) and destination_path (e.g., [E-Z]:\). ALERT on match, especially with recursive flags.
  - question: Is a user's use of a copy utility to target a USB drive anomalous compared to their own historical behavior?
    context: This question aims to detect unusual behavior on a per-user basis. An employee might legitimately use `xcopy` for routine tasks, but a sudden use of it with recursive flags to copy a whole user profile to a USB would be abnormal. By baselining each user's typical command-line patterns for copy tools, we can flag significant deviations (e.g., >3 standard deviations) as suspicious.
    answer_sources:
      - Windows Event ID 4688
      - Applicable to endpoints with access to network shares, document management systems, and code repositories.
    range: last 90 days
    queries:
      - search: User Behavior Analytics (UBA)
        query: FOR each user, PROFILE command-line usage (frequency, args, flags) for copy_utilities. ON new_event, CALCULATE deviation_from_baseline. ALERT if deviation > 3_std_dev and destination is removable_drive.
  - question: Does a user's sequence of commands indicate reconnaissance followed by data exfiltration to a USB device?
    context: This question looks for a chain of actions that tells a story of malicious intent. A single copy command might be benign, but a sequence like checking user identity (`whoami`), exploring a sensitive network share (`dir \\sensitive\share`), and then copying its contents to a USB drive (`robocopy ... E:\`) is highly indicative of exfiltration. A sequence analysis model can learn normal workflows and flag these suspicious chains.
    answer_sources:
      - Windows Event ID 4688
      - Applicable to endpoints with access to network shares, document management systems, and code repositories.
    range: last 90 days
    queries:
      - search: Sequence Analysis Model (e.g., LSTM)
        query: ANALYZE user_command_sequences within a session. COMPARE sequence against trained_model_of_benign_sequences. ALERT on anomalous sequences like (recon_command -> copy_to_usb).
  - question: Has a user written an unusually large volume or count of files to a USB device in a short time frame?
    context: This question uses a simple, threshold-based approach to detect bulk data exfiltration. While some users may transfer large files, an event involving gigabytes of data or thousands of files being written to a USB drive within a few minutes is highly abnormal and warrants immediate investigation. This requires enabling file system auditing on critical data.
    answer_sources:
      - Windows Event ID 4663 (requires SACL)
      - Applicable to workstations of users in departments handling PII, PHI, or intellectual property.
    range: last 90 days
    queries:
      - search: SIEM
        query: MONITOR file_write_events (e.g., EventID 4663) to removable_drives. AGGREGATE data_volume and file_count per user per 15_minutes. ALERT if data_volume > 1GB OR file_count > 1000.
  - question: Has the amount of data a user or host is writing to a USB device exceeded their historical baseline?
    context: This question refines the volumetric approach by personalizing it. Instead of a single static threshold for everyone, it establishes a rolling 30-day baseline of USB write activity for each user and host. An alert is triggered only when a user's activity significantly exceeds their own normal behavior (e.g., surpasses the 99th percentile), leading to fewer false positives.
    answer_sources:
      - Windows Event ID 4663
      - Applicable to workstations of users in departments handling PII, PHI, or intellectual property.
    range: last 90 days
    queries:
      - search: User Behavior Analytics (UBA)
        query: FOR each user/host, MAINTAIN rolling_30_day_baseline of hourly_USB_write_volume. ON new_activity, ALERT if hourly_volume > 99th_percentile_of_baseline.
  - question: Can we detect anomalous USB data transfers by modeling a user's normal daily and weekly data access patterns?
    context: This question applies advanced time-series analysis to find subtle anomalies. A user might regularly transfer large files at the end of each month. A model like SARIMA or Prophet can learn this seasonality. It would then flag a large transfer as anomalous if it occurred mid-month, even if the volume itself is not unprecedented for that user, because it breaks the established temporal pattern.
    answer_sources:
      - Windows Event ID 4663
      - Applicable to workstations of users in departments handling PII, PHI, or intellectual property.
    range: last 90 days
    queries:
      - search: Time-Series Anomaly Detection Model
        query: MODEL per-user USB_write_activity (volume, count) over time, accounting for seasonality. ALERT if new_activity falls outside the model's predicted_confidence_interval.
  - question: Has a user connected a USB, immediately created an archive of sensitive files, and then written that archive to the USB?
    context: This question looks for the classic "smash and grab" exfiltration pattern: connect a drive, compress sensitive data into a single file, and copy it over. By correlating three distinct event types—a USB connection (Kernel-PnP 400), an archival process creation (4688), and high-volume file writes (4663)—in a short time window, we can detect this specific, high-confidence attack chain.
    answer_sources:
      - Microsoft-Windows-Kernel-PnP/Configuration Event ID 400
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Applicable to all enterprise endpoints, especially high-security zones.
    range: last 90 days
    queries:
      - search: SIEM Correlation Rule
        query: CORRELATE events on a single host within 10 minutes: (1) USB_connect_event, THEN (2) archive_process_creation_event, THEN (3) high_count_of_file_writes_to_USB. ALERT on sequence completion.
  - question: Is the act of a user creating an archive shortly after connecting a USB device statistically improbable for that specific user?
    context: This question adds a layer of user-specific behavioral analysis to the "connect-archive-copy" sequence. A developer might perform this sequence frequently, but an HR employee might never do so. By calculating the historical probability of this action sequence for each user, we can generate a high-fidelity alert when a user performs it for the first time or with very low historical frequency (low p-value).
    answer_sources:
      - Microsoft-Windows-Kernel-PnP/Configuration Event ID 400
      - Windows Event ID 4688
      - Applicable to all enterprise endpoints, especially high-security zones.
    range: last 90 days
    queries:
      - search: User Behavior Analytics (UBA)
        query: FOR each user, CALCULATE historical probability of (archive_creation within 15 mins of USB_connect). ON new_sequence, ALERT if probability is very low (e.g., p-value < 0.01).
  - question: Can we use graph analysis to identify anomalous chains of activity involving users, hosts, processes, and USB drives?
    context: This question models system activity as a complex graph of interacting entities (users, processes, files, etc.). The "connect-archive-copy" sequence forms a specific subgraph pattern. A Graph Neural Network (GNN) can be trained to recognize common, benign subgraph patterns across the enterprise and then identify new or rare subgraphs that represent potentially malicious behavioral chains, even if the individual events are not suspicious on their own.
    answer_sources:
      - Microsoft-Windows-Kernel-PnP/Configuration Event ID 400
      - Windows Event ID 4688
      - Windows Event ID 4663
      - Applicable to all enterprise endpoints, especially high-security zones.
    range: last 90 days
    queries:
      - search: Graph Analytics Platform (GNN)
        query: CONSTRUCT behavioral_graph from event logs. IDENTIFY subgraphs representing event sequences (USB_connect -> archive -> write). USE GNN to flag subgraphs that deviate from learned benign patterns.
  - question: Is a service account or a user outside of normal business hours writing data to a USB device?
    context: This question focuses on two high-confidence indicators of illicit activity. Service accounts should almost never interact with USB devices, so any such activity is highly suspicious. Similarly, a regular user transferring data to a USB drive in the middle of the night is a major red flag. This rule creates high-priority alerts for these specific, hard-to-justify scenarios.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Applicable to all servers and privileged user workstations.
    range: last 90 days
    queries:
      - search: SIEM
        query: ALERT with high priority IF (file_write_to_USB OR process_on_USB) AND (user is a service_account OR event_time is outside_business_hours).
  - question: Is a user writing to a USB device during a time of day or week when they are not normally active?
    context: This question personalizes the "off-hours" detection. Instead of a single global definition of business hours, it builds a profile of each user's normal working schedule based on their login/logoff history. An alert is then triggered if a user writes to a USB drive during a time they are historically inactive (e.g., below the 5th percentile of their activity histogram), providing more accurate off-hours detection.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Applicable to all servers and privileged user workstations.
    range: last 90 days
    queries:
      - search: User Behavior Analytics (UBA)
        query: FOR each user, CREATE activity_histogram by hour/day from login/logoff events. ON new_USB_write_event, ALERT if event_time falls in a low-activity window (e.g., < 5th percentile).
  - question: Can we use unsupervised machine learning to find outlier USB write activities that do not fit any normal pattern?
    context: This question employs an outlier detection approach to find novel or unusual attacks. By clustering all USB write events based on features like account type, time of day, and data volume, the algorithm groups "normal" activities together. Any event that doesn't fit into a cluster (an outlier) is flagged for investigation. This can catch sophisticated attacks that don't trigger specific rules but are anomalous in their combined characteristics.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4688
      - Windows Event ID 4624
      - Windows Event ID 4634
      - Applicable to all servers and privileged user workstations.
    range: last 90 days
    queries:
      - search: Anomaly Detection (e.g., Isolation Forest)
        query: CLUSTER USB_write_events based on features (user_type, time_of_day, volume). IDENTIFY and ALERT on events flagged as outliers or belonging to small, isolated clusters.