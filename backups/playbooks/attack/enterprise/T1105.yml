name: T1105: Ingress Tool Transfer
id: 48d6801a-8c3b-4c27-9c6a-68d18404a1b8
description: This playbook helps determine if an adversary is transferring tools or files into the network. It provides investigative steps to detect various ingress tool transfer techniques, such as downloads via common command-line utilities (PowerShell, certutil, curl), connections to known malicious infrastructure identified through threat intelligence, anomalous network traffic patterns like large one-way data flows, unusual parent-child process relationships (e.g., Microsoft Word spawning PowerShell), and connections from non-browser applications to unsanctioned cloud storage or code repositories. The playbook leverages signature-based, statistical, and machine learning methods to identify these activities across network and endpoint data sources.
type: technique
related:
  - TA0011: Command and Control
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a network connection or file transfer matched a known malicious indicator from a threat intelligence feed?
    context: This question aims to identify direct evidence of compromise by checking if any observed network traffic (IPs, domains, SNI) or transferred files (hashes) match indicators in a threat intelligence database. A match is a high-confidence signal that an adversary is using known malicious infrastructure or malware for tool transfer.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek files.log
      - Internet gateways, external-facing web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek logs (conn, dns, http, ssl, files) WHERE destination_ip OR dns_query OR http_host OR server_name OR file_hash IN threat_intelligence_feed
  - question: Are there any files being transferred with unusually random or high-entropy filenames?
    context: Adversaries often use randomly generated filenames for their malware to evade simple signature-based detections. This question uses Shannon entropy to measure the randomness of filenames. A filename with an entropy score significantly higher than the established baseline for the environment may indicate a malware payload.
    answer_sources:
      - Zeek files.log
      - Internet gateways, external-facing web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek files.log | CALCULATE shannon_entropy(filename) | COMPARE entropy_score against 30-day baseline (99th percentile) | ALERT on outliers
  - question: Can machine learning models identify network connections that are likely malicious based on their characteristics?
    context: This question applies a supervised machine learning model to classify network connections as benign or malicious. By training on features like connection duration, byte counts, JA3/JA3S hashes, and domain properties, the model can learn subtle patterns indicative of malicious activity that may not be caught by traditional signatures, providing a proactive detection capability.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek http.log
      - Internet gateways, external-facing web proxies, and DNS resolvers.
    range: last 90 days
    queries:
      - pseudocode: SCORE all network connections using ML model | ALERT on connections classified as malicious with score > 0.9
  - question: Is a built-in command-line utility (like PowerShell, certutil, bitsadmin) being used to download files from the internet?
    context: Adversaries frequently abuse legitimate 'living-off-the-land' binaries (LOLBins) to download tools, as this blends in with normal administrative activity. This question looks for specific command-line patterns and keywords (e.g., 'DownloadString', '/transfer') associated with file downloads executed by these utilities.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, application servers, and domain controllers.
    range: last 90 days
    queries:
      - pseudocode: SEARCH Windows Event ID 4688 WHERE process_name IN (powershell.exe, certutil.exe, bitsadmin.exe, curl.exe, wget.exe) AND command_line MATCHES regex for download keywords
  - question: Are there any command-line executions that are statistically rare or unusual for the environment?
    context: This question aims to find outliers by analyzing the statistical rarity of command-line arguments. Using TF-IDF, it identifies commands composed of tokens that are infrequently seen across the enterprise. A command with a high cumulative TF-IDF score is anomalous and could represent a malicious actor's unique command string.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, application servers, and domain controllers.
    range: last 90 days
    queries:
      - pseudocode: CALCULATE TF-IDF scores for all command_line tokens over 30 days | SUM scores for each command | ALERT on commands with cumulative score in top 1%
  - question: Can an anomaly detection model identify malicious command-line invocations that deviate from normal patterns?
    context: This question uses an autoencoder, a type of neural network, to learn the structure of normal, benign command lines for common utilities. When a new command is processed, the model attempts to reconstruct it. A high reconstruction error signifies that the command is structurally different from what the model has learned as normal, flagging it as a potential threat.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, application servers, and domain controllers.
    range: last 90 days
    queries:
      - pseudocode: PROCESS new command lines through trained autoencoder | CALCULATE reconstruction_error | ALERT on commands with high error
  - question: Are there any large, one-way network transfers occurring over non-standard web ports?
    context: This question seeks to identify large file downloads that are disguised by using non-HTTP/S ports. It flags connections where the amount of data received (responder bytes) is significantly larger than the data sent (originator bytes) and exceeds a certain size threshold. This pattern is characteristic of a file download and is suspicious on non-web protocols.
    answer_sources:
      - Zeek conn.log
      - Network egress and ingress points, server farm network segments, and critical asset subnets.
    range: last 90 days
    queries:
      - pseudocode: SEARCH Zeek conn.log WHERE protocol=TCP AND dest_port NOT IN (80, 443) AND resp_bytes > 5MB AND (resp_bytes / (orig_bytes + resp_bytes)) > 0.99
  - question: Has any host experienced a statistically significant spike in the amount of data it has downloaded?
    context: This question establishes a baseline of normal download activity (responder bytes) for each source-destination-port combination. It then looks for deviations from this norm. A sudden, sharp increase in downloaded data (e.g., more than 3 standard deviations above the mean) for a specific connection type is a strong indicator of an anomalous and potentially malicious file transfer.
    answer_sources:
      - Zeek conn.log
      - Network egress and ingress points, server farm network segments, and critical asset subnets.
    range: last 90 days
    queries:
      - pseudocode: BASELINE mean and stddev of resp_bytes per (src_host, dest_host, dest_port) over 30 days | ALERT when new connection's resp_bytes > (mean + 3*stddev)
  - question: Is the total volume of data being transferred to a critical asset significantly higher than predicted by forecasting models?
    context: This question uses time-series forecasting (e.g., SARIMA) to model the expected rhythm and seasonality of ingress data traffic for critical assets. By learning daily and weekly patterns, the model can predict the expected volume of data. An alert is generated when the actual observed data volume exceeds the model's prediction, indicating an anomalous influx of data that could be a large tool or data transfer.
    answer_sources:
      - Zeek conn.log
      - Network egress and ingress points, server farm network segments, and critical asset subnets.
    range: last 90 days
    queries:
      - pseudocode: FORECAST expected ingress data volume for critical assets using SARIMA model | ALERT when actual volume exceeds predicted upper bound
  - question: Has a common office application (e.g., Word, Excel) spawned a shell or script that then made an outbound network connection?
    context: This behavior is highly indicative of a malicious document or exploit. Legitimate user applications like Microsoft Word should not typically spawn command shells that connect to the internet. This question correlates process creation events with network connection events to detect this specific, high-risk sequence of actions.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 5156
      - Windows Event ID 4663
      - User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.
    range: last 90 days
    queries:
      - pseudocode: CORRELATE events: (1) Parent process (WINWORD.EXE) spawns (2) Child process (cmd.exe) which then (3) makes outbound network connection | ALERT on sequence
  - question: Has a rare or never-before-seen parent-child process relationship been observed?
    context: Adversaries often create unusual process execution chains that deviate from normal system and user activity. This question identifies anomalous behavior by tracking the frequency of all parent-child process relationships across the enterprise. A pair that has occurred very infrequently (e.g., OUTLOOK.EXE spawning certutil.exe) is flagged as a statistical anomaly worthy of investigation.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.
    range: last 90 days
    queries:
      - pseudocode: TRACK frequency of all parent-child process pairs over 30 days | ALERT on pairs with frequency below a low threshold (e.g., <10)
  - question: Can graph-based machine learning identify anomalous process execution chains?
    context: This question models process activity as a complex graph, where processes are nodes and parent-child relationships are edges. By applying graph-based anomaly detection algorithms (like GraphSAGE), the system can learn the normal 'motifs' or subgraphs of process interactions. It then flags any new subgraphs that are structurally rare or abnormal, such as a browser spawning a shell that downloads a file, providing a sophisticated way to detect complex attack chains.
    answer_sources:
      - Windows Event ID 4688
      - User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.
    range: last 90 days
    queries:
      - pseudocode: BUILD process execution graphs | USE GraphSAGE model to identify and alert on anomalous subgraphs (process interaction patterns)
  - question: Is a non-browser process making a network connection to an unsanctioned cloud storage or file-sharing service?
    context: While users may access services like GitHub or Pastebin via a browser, it is highly suspicious when a command-line tool or script (e.g., powershell.exe, cscript.exe) connects to them. This question correlates network logs with process execution data to specifically detect these non-interactive, programmatic connections to unsanctioned services, which are often used by adversaries to download tools.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Windows Event ID 4688
      - Internet gateways, DNS resolvers, and endpoint process monitoring.
    range: last 90 days
    queries:
      - pseudocode: SEARCH network logs for connections to unsanctioned domains (e.g., pastebin.com) | CORRELATE with process logs on source host | ALERT if initiating process is not an approved browser (e.g., powershell.exe)
  - question: Has any host shown a sudden, anomalous increase in traffic to unsanctioned file-sharing services?
    context: This question profiles the normal web-browsing behavior of each host by categorizing the domains it visits. It establishes a baseline for how much traffic typically goes to different categories, including 'Unsanctioned File Sharing'. An alert is triggered if a host's traffic to this specific category dramatically increases, indicating a potential misuse or compromise of the host for downloading tools or data.
    answer_sources:
      - Zeek dns.log
      - Zeek http.log
      - Internet gateways, DNS resolvers, and endpoint process monitoring.
    range: last 90 days
    queries:
      - pseudocode: PROFILE host traffic by domain category daily | ALERT if traffic to 'Unsanctioned File Sharing' category increases > 3 stddev from 30-day average
  - question: Are there any hosts exhibiting unique or outlier network behaviors compared to their peers?
    context: This question uses unsupervised machine learning (DBSCAN clustering) to group hosts with similar network 'fingerprints' based on features like JA3 hash diversity, port usage, and SNI entropy. Hosts that do not fit into any cluster are flagged as outliers or noise. These outlier hosts have unique network traffic patterns that may indicate malicious activity, such as connections to C2 infrastructure or unauthorized file transfer services, that differ from the established norms.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek ssl.log
      - Internet gateways, DNS resolvers, and endpoint process monitoring.
    range: last 90 days
    queries:
      - pseudocode: CLUSTER hosts based on network activity features using DBSCAN | INVESTIGATE hosts flagged as outliers/noise