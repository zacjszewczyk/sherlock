name: T1546.001: Change Default File Association
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps investigate whether an adversary is maintaining persistence or escalating privileges by modifying default file associations. Adversaries can hijack file extensions by altering registry keys (e.g., `shell\open\command`) to execute malicious code when a user opens a seemingly benign file. This can involve pointing the association to a script, a LOLBin, or a custom tool. Detection strategies involve monitoring for suspicious registry modifications, anomalous process creation events (e.g., a document handler spawning a shell), and resulting malicious network activity.
type: technique
related:
- TA0003: Persistence
- TA0004: Privilege Escalation
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is a known malicious process or command being registered as a default file handler?
  context: Adversaries can achieve persistence by associating a file type with a malicious program. This question aims to detect this by checking if the process modifying the registry or the new command itself is already known to be malicious based on threat intelligence. A positive match is a high-fidelity indicator of compromise.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives (HKEY_CLASSES_ROOT, HKEY_CURRENT_USER) on all Windows endpoints, with a focus on servers hosting critical applications and privileged access workstations.
  - Threat Intelligence Feeds
  range: last 90 days
  queries:
  - 'SEARCH registry_events WHERE event_id IN (4657, 13) AND key_path ENDS_WITH ''\shell\open\command'' AND (process_hash IN threat_intel_hashes OR new_value IN threat_intel_commands)'
- question: Is an unusual or rare process modifying a file association?
  context: Most file association changes are performed by common processes like installers or system utilities. An adversary might use a custom tool or a LOLBin that rarely performs this action. This question focuses on identifying anomalous behavior by flagging modifications made by statistically infrequent processes, which could indicate malicious activity hiding in plain sight.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives (HKEY_CLASSES_ROOT, HKEY_CURRENT_USER) on all Windows endpoints, with a focus on servers hosting critical applications and privileged access workstations.
  range: last 90 days
  queries:
  - 'SEARCH registry_events WHERE event_id IN (4657, 13) AND key_path ENDS_WITH ''\shell\open\command'' | STATS count(process_name) AS process_frequency | FILTER process_frequency < threshold'
- question: Does a file association modification exhibit characteristics of known malicious techniques?
  context: This question uses a machine learning approach to move beyond simple rules. By training a model on features like process name, parent process, signature status, and command entropy, it can identify complex patterns that are indicative of malicious modifications, even if the specific process or command is not on a threat intelligence list.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives (HKEY_CLASSES_ROOT, HKEY_CURRENT_USER) on all Windows endpoints, with a focus on servers hosting critical applications and privileged access workstations.
  range: last 90 days
  queries:
  - 'INPUT registry_events | APPLY ML_model_for_file_association | WHERE prediction == ''malicious'' AND confidence > 0.9'
- question: Is a non-executable file type (e.g., .txt, .jpg) being reconfigured to execute a script or LOLBin?
  context: Adversaries may hijack associations for common, seemingly harmless files like text files or images. When a user opens such a file, a malicious script or binary is executed instead of the expected program. This question aims to detect this by looking for file handlers of non-executables being pointed to script interpreters or LOLBins.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on all Windows workstations and servers, particularly those used by general users who handle documents and images.
  range: last 90 days
  queries:
  - 'SEARCH registry_events WHERE event_id IN (4657, 13) AND key_path MATCHES (''txtfile'', ''jpegfile'', ''pdffile'') AND new_value CONTAINS (''powershell.exe'', ''cscript.exe'', ''rundll32.exe'')'
- question: Is the new command handler for a file association statistically rare or does it contain obfuscated commands?
  context: This question uses two statistical methods to find anomalies. First, it identifies if a program being set as a file handler is uncommon for that file type across the enterprise. Second, it measures the complexity (entropy) of the command string, as high entropy can indicate an obfuscated script or command, a common tactic for adversaries.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on all Windows workstations and servers, particularly those used by general users who handle documents and images.
  range: last 90 days
  queries:
  - 'SEARCH registry_events | BASELINE known_handlers_for_extension | FILTER new_handler NOT IN baseline OR shannon_entropy(new_value) > entropy_threshold'
- question: Are there outlier groups of file association modifications that deviate from normal software installation or update patterns?
  context: This question uses unsupervised machine learning to discover new or unusual patterns of file association changes without prior labeling. Normal software updates create large, dense clusters of similar changes across many machines. Malicious activity often appears as small, isolated clusters, which this method is designed to find.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on all Windows workstations and servers, particularly those used by general users who handle documents and images.
  range: last 90 days
  queries:
  - 'INPUT registry_events | APPLY clustering_algorithm(features=[extension, handler_process, handler_path]) | IDENTIFY anomalous_clusters'
- question: Is a common document-handling application (e.g., Notepad, Explorer) spawning a suspicious child process like a script interpreter?
  context: When a user opens a file with a hijacked association, the legitimate parent application (like Explorer) will spawn a malicious child process. This question looks for these suspicious parent-child relationships, such as explorer.exe launching powershell.exe, which is a strong indicator that a file-opening action triggered a malicious payload.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows endpoints, with emphasis on workstations where users frequently open documents and other files.
  range: last 90 days
  queries:
  - 'SEARCH process_creation_events WHERE event_id IN (4688, 1) AND parent_process IN (''explorer.exe'', ''notepad.exe'', ''acrord32.exe'') AND (child_process IN (''powershell.exe'', ''cscript.exe'', ''mshta.exe'', ''rundll32.exe'', ''certutil.exe'') OR child_path IN (''%APPDATA%'', ''C:\Users\Public\''))'
- question: Has a document-handling application spawned a child process that is rare or has never been seen before in the environment?
  context: Legitimate applications typically spawn a predictable set of child processes. This question establishes a baseline of normal parent-child relationships and flags any new or statistically rare pairings. This anomaly detection approach can uncover novel attacker tools or techniques not caught by signature-based rules.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows endpoints, with emphasis on workstations where users frequently open documents and other files.
  range: last 90 days
  queries:
  - 'SEARCH process_creation_events | GROUP_BY parent_process, child_process | CALCULATE frequency | FILTER frequency < rarity_threshold'
- question: Is there a statistically significant spike in the number of suspicious parent-child process creations across the enterprise?
  context: A single suspicious process creation might be an isolated incident, but a sudden increase in these events across multiple systems can signal a widespread campaign. This question uses time-series analysis to monitor the overall volume of these events and alert on abnormal spikes, providing a macroscopic view of a potential attack.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows endpoints, with emphasis on workstations where users frequently open documents and other files.
  range: last 90 days
  queries:
  - 'AGGREGATE count(suspicious_parent_child_pairs) OVER time | APPLY time_series_anomaly_detection | ALERT on spikes'
- question: Did a process spawned from opening a file make a network connection to a known malicious destination?
  context: A common goal for malware executed via file association hijacking is to establish a command and control (C2) channel. This question directly hunts for this behavior by correlating the process created from a file-opening event with network logs, and then checking if the destination matches known malicious indicators from threat intelligence.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Process and network logs from Windows endpoints, and network traffic metadata from network sensors at egress points and within major network segments.
  range: last 90 days
  queries:
  - 'JOIN process_creation_events, network_connection_events | WHERE parent_process IN (''explorer.exe'', ''acrord32.exe'') AND destination IN threat_intel_feed'
- question: Is a process spawned from a file-opening event connecting to a statistically rare or low-reputation destination?
  context: Even if a destination isn't on a threat intelligence list, it might still be malicious. This question looks for anomalous network behavior by identifying connections to destinations that are unpopular, have a poor reputation, or are rarely contacted by the specific process making the connection, which could indicate a newly established C2 server.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Process and network logs from Windows endpoints, and network traffic metadata from network sensors at egress points and within major network segments.
  range: last 90 days
  queries:
  - 'JOIN process_creation_events, network_connection_events | CALCULATE rarity(destination_ip, destination_domain) FOR process_name | FILTER rarity < threshold'
- question: Does the network activity of a process spawned from a file-opening event deviate from its normal behavior profile?
  context: This question uses machine learning to build a holistic profile of normal network behavior for a given process (e.g., ports, protocols, data volume, duration). It can then flag deviations from this norm, such as Notepad suddenly making a long-running connection on a non-standard port, which would be highly anomalous and suspicious.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Sysmon Event ID 3
  - Zeek conn.log
  - Zeek dns.log
  - Process and network logs from Windows endpoints, and network traffic metadata from network sensors at egress points and within major network segments.
  range: last 90 days
  queries:
  - 'INPUT correlated_process_network_events | APPLY ML_model_for_network_behavior | WHERE anomaly_score > threshold'
- question: Is a file association being modified to include commands or tools related to privilege escalation?
  context: An adversary might modify a file association that is triggered by a privileged user or service. The modified command could include specific tools (like Mimikatz) or techniques to escalate privileges. This question searches for the tell-tale strings of these tools within the new command handler value.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on sensitive systems, including Domain Controllers, Certificate Authority servers, and Privileged Access Workstations (PAWs).
  range: last 90 days
  queries:
  - 'SEARCH registry_events WHERE event_id IN (4657, 13) AND key_path ENDS_WITH ''\shell\open\command'' AND new_value MATCHES (''invoke-mimi'', ''PrintSpoofer.exe'', ''JuicyPotato.exe'')'
- question: Does the new command handler for a file association contain statistically rare command-line arguments?
  context: Instead of looking for known bad strings, this question hunts for unknown-unknowns by baselining all command-line arguments used in file handlers across the enterprise. Any argument that is statistically rare is flagged for investigation, as it may represent a novel or custom privilege escalation technique.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on sensitive systems, including Domain Controllers, Certificate Authority servers, and Privileged Access Workstations (PAWs).
  range: last 90 days
  queries:
  - 'SEARCH registry_events | PARSE arguments from new_value | CALCULATE frequency(argument) | FILTER frequency < rarity_threshold'
- question: Does the command line in a modified file association classify as malicious for privilege escalation based on a machine learning model?
  context: This question leverages a text classification model trained to distinguish between benign and malicious command lines. This allows for the detection of complex privilege escalation attempts that might not use a single, easily-grepped keyword but exhibit a pattern of malicious characteristics.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on sensitive systems, including Domain Controllers, Certificate Authority servers, and Privileged Access Workstations (PAWs).
  range: last 90 days
  queries:
  - 'INPUT registry_events | APPLY ML_model_for_privesc_commands | WHERE prediction == ''malicious'' AND confidence > 0.9'
- question: Is a file type normally handled by a privileged service being re-associated with an executable in a user-writable directory?
  context: An adversary can gain privilege escalation by tricking a privileged service into running their code. This is done by hijacking a file type (e.g., a .log or .cfg file) that the service opens, and pointing its handler to a malicious executable placed in a location the adversary can write to, like %APPDATA%.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on servers and workstations, with a specific focus on file associations for extensions like .log, .xml, and .ini that may be opened by privileged system services.
  range: last 90 days
  queries:
  - 'SEARCH registry_events WHERE file_extension IN (''log'', ''xml'', ''ini'', ''cfg'') AND new_handler_path IN (''C:\Users\'', ''%APPDATA%'', ''%TEMP%'')'
- question: Is a file association being modified to point to an executable in a statistically rare or non-standard location?
  context: Legitimate software typically resides in standard locations like Program Files. This question identifies file association modifications where the new handler is located in an unusual directory. This is a strong indicator of a malicious executable planted by an attacker for privilege escalation or persistence.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on servers and workstations, with a specific focus on file associations for extensions like .log, .xml, and .ini that may be opened by privileged system services.
  range: last 90 days
  queries:
  - 'SEARCH registry_events | BASELINE known_handler_paths | FILTER new_handler_path NOT IN baseline'
- question: Are there anomalous clusters of file association changes involving unsigned executables in user-writable locations?
  context: This question uses clustering to group similar file association modifications. It specifically looks for clusters that represent a dangerous combination of factors an executable that lacks a valid digital signature, is located in a user-controlled directory, and is being newly associated with a file type. Such clusters are highly suspicious.
  answer_sources:
  - Windows Event ID 4657
  - Sysmon Event ID 13
  - Registry hives on servers and workstations, with a specific focus on file associations for extensions like .log, .xml, and .ini that may be opened by privileged system services.
  range: last 90 days
  queries:
  - 'INPUT registry_events | APPLY clustering_algorithm | IDENTIFY clusters WHERE signature_status=''unsigned'' AND handler_path IN (''C:\Users\'')'
- question: Has a system service running as SYSTEM spawned an unexpected interactive process like cmd.exe or powershell.exe?
  context: System services should not normally launch interactive shells. Such an event is a powerful indicator that a privileged process has been compromised or tricked into executing arbitrary commands, possibly through a hijacked file association that the service interacted with.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows servers and critical workstations, particularly those running services or scheduled tasks as NT AUTHORITY\SYSTEM.
  range: last 90 days
  queries:
  - 'SEARCH process_creation_events WHERE user=''NT AUTHORITY\SYSTEM'' AND parent_process IN (''services.exe'', ''svchost.exe'') AND child_process IN (''cmd.exe'', ''powershell.exe'', ''wscript.exe'')'
- question: Has a SYSTEM-level process spawned a child process that is rare or has never been seen before in the environment?
  context: This question applies behavioral baselining to the most privileged processes on the system. By understanding what child processes are normal for a given SYSTEM process, it can immediately flag any deviation as a high-priority anomaly, potentially indicating the successful execution of a privilege escalation payload.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows servers and critical workstations, particularly those running services or scheduled tasks as NT AUTHORITY\SYSTEM.
  range: last 90 days
  queries:
  - 'SEARCH process_creation_events WHERE user=''NT AUTHORITY\SYSTEM'' | BASELINE known_child_processes for parent_process | FILTER child_process NOT IN baseline'
- question: Did a privileged process execute a sequence of actions that is anomalous compared to its learned normal behavior?
  context: This question uses advanced machine learning to model the entire lifecycle of a privileged process's activity (child processes, file mods, network connections). It can detect sophisticated attacks where a single action isn't suspicious, but the sequence of actions is—for example, a print service reading a file, then spawning cmd.exe, then making a network connection.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows servers and critical workstations, particularly those running services or scheduled tasks as NT AUTHORITY\SYSTEM.
  range: last 90 days
  queries:
  - 'INPUT sequence_of_events for privileged_processes | APPLY sequence_autoencoder | ALERT on high_reconstruction_error'
- question: Did opening a common file trigger a UAC prompt for a process that isn't the expected handler or a known utility?
  context: This question targets UAC bypass or abuse. An attacker might configure a file association to launch a malicious process that requires elevation. When the user opens the file, they get an unexpected UAC prompt. This rule detects this by looking for elevation events originating from document handlers that spawn an unapproved application.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows workstations, especially those used by non-administrator users where UAC is enforced.
  range: last 90 days
  queries:
  - 'SEARCH process_creation_events WHERE elevation_type=''%%1936'' AND parent_process IN (document_handlers) AND child_process NOT IN (uac_allowlist)'
- question: Is there an abnormal number of UAC elevation prompts originating from a specific user or application?
  context: A sudden increase in UAC prompts for a user or coming from a specific application (like Explorer) can indicate a problem. It could be a misconfiguration, but it could also be an attacker attempting to trick a user into elevating a malicious process via a hijacked file association. This question uses statistical analysis to find these spikes.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows workstations, especially those used by non-administrator users where UAC is enforced.
  range: last 90 days
  queries:
  - 'AGGREGATE count(uac_elevation_events) by user, parent_process OVER time | ALERT on count > (mean + 3*stdev)'
- question: Does a UAC elevation event exhibit characteristics of a suspicious or malicious attempt?
  context: This question uses a machine learning model to score the risk of each UAC elevation event. By considering features like the parent, the child, and the command line, the model can learn to distinguish legitimate elevation requests from suspicious ones, such as those initiated by a document handler to launch an unknown executable.
  answer_sources:
  - Windows Event ID 4688
  - Sysmon Event ID 1
  - Process execution logs from all Windows workstations, especially those used by non-administrator users where UAC is enforced.
  range: last 90 days
  queries:
  - 'INPUT uac_elevation_events | APPLY ML_model_for_uac | WHERE prediction == ''suspicious'' AND confidence > 0.9'