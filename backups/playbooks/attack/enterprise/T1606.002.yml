name: T1606.002: SAML Tokens
id: d8e3b1c0-f4d2-4a9e-8b1c-0e8d9f4a5b6c
description: This playbook investigates whether an adversary is forging SAML tokens to gain unauthorized credential access. This involves looking for signs of forgery such as the use of known-bad signing certificates, abnormally long token lifetimes, structural inconsistencies, or the presence of artifacts from known forgery tools. It also focuses on detecting behavioral anomalies like successful authentications at a Service Provider without a corresponding token issuance event at the Identity Provider (indicative of Golden SAML), impossible travel scenarios, and unusual post-authentication activities, such as immediate privilege escalation.
type: technique
related:
- TA0006: Credential Access
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are SAML assertions being signed by certificates with thumbprints or issuer names that match known-bad indicators?
  context: This question provides a high-fidelity method for detecting known malicious activity. If a SAML token is signed with a certificate whose thumbprint or issuer is on a threat intelligence watchlist, it is highly probable that the token is forged as part of an attack. This allows for direct detection based on established indicators of compromise.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Zeek x509.log
  - Windows Event ID 1202
  - AD FS / Identity Provider servers
  - Cloud Identity Provider consoles (e.g., Entra ID, Okta)
  - network gateways with TLS inspection
  - reverse proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Requires TLS inspection
      FOR each HTTP transaction with a SAML assertion:
        PARSE SAML assertion to extract signing certificate thumbprint and issuer name.
        COMPARE thumbprint and issuer against a watchlist of known-bad indicators.
        IF match found:
          ALERT on high-severity indicator match.
- question: Are there any rarely used signing certificates or issuers associated with multiple or high-privilege account authentications?
  context: This question aims to uncover newly introduced malicious certificates that are not yet part of threat intelligence feeds. An adversary might forge tokens using a new, self-signed certificate. Such a certificate would have a very low usage frequency. If this rare certificate is used to authenticate multiple accounts or a single high-privilege account, it is highly suspicious.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Zeek x509.log
  - Windows Event ID 1202
  - AD FS / Identity Provider servers
  - Cloud Identity Provider consoles (e.g., Entra ID, Okta)
  - network gateways with TLS inspection
  - reverse proxies
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      // Calculate frequency of all certificate thumbprints and issuers over the last 30 days.
      FOR each new SAML authentication:
        EXTRACT certificate thumbprint and issuer.
        CHECK if the frequency of the thumbprint or issuer is a statistical outlier (e.g., below 5th percentile).
        IF outlier AND (associated with high-privilege user OR used for multiple user accounts):
          ALERT on suspicious rare signing certificate.
- question: Can machine learning classify new SAML signing certificates as suspicious based on their attributes?
  context: This question explores a proactive, predictive approach to identifying malicious certificates. By training a model on the characteristics of known-good and known-bad certificates (e.g., validity period, key strength, issuer details, self-signed status), it becomes possible to classify newly observed certificates as 'suspicious' or 'benign', enabling detection of novel threats without relying on pre-existing indicators.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - Zeek x509.log
  - Windows Event ID 1202
  - AD FS / Identity Provider servers
  - Cloud Identity Provider consoles (e.g., Entra ID, Okta)
  - network gateways with TLS inspection
  - reverse proxies
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Requires a pre-trained classification model (e.g., Random Forest)
      FOR each new SAML signing certificate observed:
        EXTRACT features (validity period, key strength, issuer attributes, self-signed status).
        INPUT features into the classification model.
        IF model classifies certificate as 'suspicious':
          ALERT for investigation.
- question: Are there any SAML assertions with lifetimes exceeding organizational policy or containing artifacts from known forgery tools?
  context: This question helps detect forgery attempts where adversaries manipulate token validity to maintain persistent access. A token with an unusually long lifetime (e.g., > 8 hours) is a red flag. Additionally, searching for specific string artifacts left by known forgery tools like ADFSpoof can provide a high-confidence signal of a specific attack technique.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - AD FS / Identity Provider servers
  - application servers acting as Service Providers
  - network segments with full TLS inspection
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Requires TLS inspection
      FOR each HTTP transaction with a SAML assertion:
        PARSE assertion to get NotOnOrAfter and NotBefore timestamps.
        CALCULATE lifetime = NotOnOrAfter - NotBefore.
        IF lifetime > organizational_policy_max_duration (e.g., 8 hours):
          ALERT on abnormally long token lifetime.
        SEARCH assertion content for known artifacts of forgery tools (e.g., ADFSpoof strings).
        IF artifact found:
          ALERT on forgery tool artifact detection.
- question: Are there any SAML tokens with lifetimes or claim block complexity that are statistical outliers for their respective service provider or user?
  context: This question uses baselining to find anomalies in token structure. An attacker might forge a token with a lifetime that, while not violating a hard policy, is unusual for a specific application. Similarly, they might stuff a token with extra claims to escalate privileges, leading to an abnormally high claim complexity (entropy). Detecting deviations from the norm for a given service provider or user can reveal such manipulation.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - AD FS / Identity Provider servers
  - application servers acting as Service Providers
  - network segments with full TLS inspection
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      // Baseline normal token lifetimes per service provider (SP) over 30 days.
      // Baseline normal claim block entropy per user over 30 days.
      FOR each new SAML token:
        IF token_lifetime > 99th_percentile_for_its_SP:
          ALERT on anomalous token lifetime.
        CALCULATE entropy of token's claims block.
        IF claims_entropy is a significant outlier for the user:
          ALERT on anomalous claim complexity.
- question: Can a time-series model detect anomalous sequences of SAML token attributes for a user, such as a sudden change in lifetime or claims?
  context: This question looks for malicious behavior by analyzing patterns over time rather than single events. An attacker's actions might manifest as a sequence of unusual token requests (e.g., a token with a normal lifetime followed by one with a very long lifetime and unusual claims). A time-series model trained on a user's normal token request patterns can flag such anomalous sequences that might otherwise be missed.
  answer_sources:
  - Zeek http.log
  - Zeek files.log
  - AD FS / Identity Provider servers
  - application servers acting as Service Providers
  - network segments with full TLS inspection
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Requires a pre-trained time-series model (e.g., LSTM) per user.
      FOR each user's stream of SAML tokens:
        CREATE a sequence of token attributes (lifetime, claim count, etc.).
        INPUT sequence into the user's LSTM model.
        IF model flags the sequence as anomalous:
          ALERT on anomalous token request pattern.
- question: Are there successful SAML logins at Service Providers that have no corresponding token issuance event at the Identity Provider?
  context: This is a critical question for detecting 'Golden SAML' or 'Phantom SAML' attacks. In these attacks, an adversary uses a stolen signing key to forge a token from scratch. The Service Provider (SP) accepts the validly signed token, but the Identity Provider (IdP) has no record of issuing it. Correlating SP logs with IdP logs and finding logins at the SP without a matching issuance event at the IdP is a strong indicator of this attack.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 1202
  - Windows Event ID 1200
  - Windows Event ID 4769
  - AD FS / Identity Provider servers
  - Domain Controllers
  - key Service Provider application servers
  - network gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each successful SP SAML login for user 'U' at time 'T':
        SEARCH IdP logs (e.g., Windows Event ID 1200/1202) for user 'U' between T-2min and T.
        IF no corresponding IdP log is found:
          ALERT on potential 'Golden SAML' or 'Phantom Login' event.
- question: Is the ratio of Service Provider logins to Identity Provider token issuances deviating significantly from the historical baseline for a given application?
  context: This question provides a macro-level view to detect a potential flood of forged tokens. While a single uncorrelated login could be a logging glitch, a statistically significant increase in the ratio of SP logins to IdP token issuances suggests that many logins are occurring without the IdP's knowledge. This is a strong sign of a large-scale forgery campaign against a specific application.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 1202
  - Windows Event ID 1200
  - Windows Event ID 4769
  - AD FS / Identity Provider servers
  - Domain Controllers
  - key Service Provider application servers
  - network gateways
  range: last 30 days
  queries:
  - technology: pseudocode
    query: |
      // Establish a 30-day baseline ratio of (SP logins / IdP tokens) per application.
      ON an hourly basis:
        CALCULATE the current hour's ratio for each application.
        IF current_ratio deviates from baseline by > 3 standard deviations:
          ALERT on anomalous SP-to-IdP login ratio.
- question: Can clustering algorithms identify groups of related 'phantom' logins that consistently lack a corresponding Identity Provider log?
  context: This question applies unsupervised machine learning to find attack campaigns. Instead of examining events individually, a clustering algorithm (like DBSCAN) can group logins by common features (source IP, user agent, target SP). If a distinct cluster forms where all events are 'phantom' logins (lacking an IdP log), it strongly indicates a coordinated attack from a single adversary.
  answer_sources:
  - Zeek http.log
  - Zeek conn.log
  - Windows Event ID 1202
  - Windows Event ID 1200
  - Windows Event ID 4769
  - AD FS / Identity Provider servers
  - Domain Controllers
  - key Service Provider application servers
  - network gateways
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For all login events, create a feature set: [user, source_ip, sp, IdP_Log_Present (boolean)]
      APPLY a clustering algorithm (e.g., DBSCAN) to the feature set.
      ANALYZE resulting clusters.
      IF a cluster is identified where 'IdP_Log_Present' is consistently false:
        ALERT on a potential phantom login campaign.
- question: Has a user authenticated via SAML from two geographically distant locations in an impossibly short amount of time?
  context: This is a classic 'Impossible Travel' detection method used to identify account compromise. If a user's account is used to log in from one location and then, a short time later, from a location that is physically impossible to travel to in that time frame, it is a strong indicator that at least one of the sessions is illegitimate, possibly through a forged token.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4624
  - Network gateways
  - VPN concentrators
  - cloud infrastructure VPCs
  - application servers logging authentication events
  - IdP servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each successful SAML login for a user:
        GET source IP, timestamp, and user's previous login IP and timestamp.
        ENRICH both IPs with geolocation data.
        CALCULATE distance and time difference.
        CALCULATE required travel speed.
        IF speed > impossible_threshold (e.g., 1000 km/h):
          ALERT on 'Impossible Travel'.
- question: Is a user authenticating via SAML from a country, network (ASN), or at a time of day that is rare for their established behavior?
  context: This question moves beyond 'impossible travel' to 'improbable behavior'. It builds a historical profile of a user's normal login patterns (common countries, networks, and hours). A new login that deviates significantly from this established baseline, even if not physically impossible, is flagged as risky. This can catch more subtle attacks, such as an attacker operating from an unusual network within the same country.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4624
  - Network gateways
  - VPN concentrators
  - cloud infrastructure VPCs
  - application servers logging authentication events
  - IdP servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // For each user, maintain a 90-day baseline of frequent source countries, ASNs, and login hours.
      FOR each new SAML login:
        EXTRACT source country, ASN, and hour.
        IF country is not in user's top 95% frequent locations OR
           ASN is not in user's top 95% frequent ASNs OR
           hour is in user's least common 5% of login hours:
          INCREASE risk score and ALERT if score exceeds threshold.
- question: Can a user-specific machine learning model (One-Class SVM) identify SAML logins that are outliers compared to the user's normal multi-faceted behavior?
  context: This question proposes a sophisticated, holistic approach to user behavior anomaly detection. A One-Class SVM model is trained on multiple features of a user's normal logins (e.g., IP subnet, user agent, time of day). The model learns the complex boundary of 'normal' for that user. Any new login that falls outside this boundary is classified as an outlier, indicating it doesn't match the user's established pattern and may be malicious.
  answer_sources:
  - Zeek conn.log
  - Zeek http.log
  - Windows Event ID 4624
  - Network gateways
  - VPN concentrators
  - cloud infrastructure VPCs
  - application servers logging authentication events
  - IdP servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Requires a pre-trained One-Class SVM model for each user.
      FOR each new SAML login:
        EXTRACT features (source subnet, user agent, time of day, day of week).
        INPUT feature vector into the user's One-Class SVM model.
        IF model classifies the login as an outlier:
          ALERT on anomalous user behavior.
- question: Is a user session initiated via SAML immediately followed by the assignment of special privileges, especially if the user is not a typical administrator?
  context: This question focuses on detecting malicious post-authentication behavior. An attacker who gains access with a forged token will often attempt to escalate privileges or persist their access immediately. Correlating a SAML logon event with a subsequent sensitive action, such as a special privilege assignment (Event ID 4672), within a short time window is a strong indicator of compromise, particularly if the user is not a standard administrator.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4672
  - Windows Event ID 4673
  - Domain Controllers
  - high-value servers (e.g., database, financial)
  - endpoint devices of privileged users
  - Certificate Authority servers
  - code repositories and CI/CD pipeline servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each SAML logon (e.g., Event ID 4624 with Logon Type 3/10):
        GET the Logon ID.
        SEARCH for subsequent events with the same Logon ID within 10 minutes.
        IF a Special Privilege Assignment event (ID 4672) is found AND user is not a pre-approved admin:
          ALERT on suspicious post-login privilege escalation.
- question: Following a SAML authentication, is the user executing commands with unusually high complexity or entropy compared to their normal behavior?
  context: This question aims to detect malicious command-line activity that often follows a compromise. Attackers frequently use obfuscated scripts or long, complex one-liners (e.g., in PowerShell) to execute their payload. By baselining the normal command-line entropy for a user or role, a sudden, significant spike in entropy can effectively reveal this abnormal and likely malicious activity.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4672
  - Windows Event ID 4673
  - Domain Controllers
  - high-value servers (e.g., database, financial)
  - endpoint devices of privileged users
  - Certificate Authority servers
  - code repositories and CI/CD pipeline servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Establish a baseline of command-line argument entropy per user/role.
      FOR each process creation (Event ID 4688) following a SAML logon:
        CALCULATE the entropy of the command-line arguments.
        IF entropy > (user's baseline + 3 standard deviations):
          ALERT on anomalous command-line execution.
- question: Can a graph-based model detect anomalous patterns of activity (e.g., user -> process -> network connection) following a SAML authentication?
  context: This question proposes using graph analytics to model the entire chain of post-authentication activity. Normal user activity creates predictable graphs (e.g., user logs in, opens Outlook). An attacker's actions, such as a non-admin user's session spawning PowerShell to connect to a domain controller, would create a rare or anomalous graph structure. A model trained on normal activity graphs can detect these deviations as high-risk events.
  answer_sources:
  - Zeek http.log
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4672
  - Windows Event ID 4673
  - Domain Controllers
  - high-value servers (e.g., database, financial)
  - endpoint devices of privileged users
  - Certificate Authority servers
  - code repositories and CI/CD pipeline servers
  range: last 90 days
  queries:
  - technology: pseudocode
    query: |
      // Requires a graph anomaly detection model trained on normal activity.
      FOR each new SAML session:
        CONSTRUCT an activity graph (nodes: user, process, destination; edges: actions).
        INPUT the new sub-graph into the anomaly detection model.
        IF the model flags the graph structure as anomalous:
          ALERT on rare post-authentication activity pattern.