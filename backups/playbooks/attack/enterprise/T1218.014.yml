name: T1218.014: MMC
id: f2c8a3b1-5e6d-4f7a-8b9c-1d0e2f3a4b5c
description: Is an adversary abusing the Microsoft Management Console (mmc.exe) for defense evasion? This playbook helps investigate potential abuse of mmc.exe by looking for executions with malicious console files (.msc), suspicious command-line arguments, unusual parent processes, non-standard file paths, anomalous network connections, and suspicious COM object registrations.
type: technique
related:
- TA0005: Defense Evasion
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Is mmc.exe being executed with a console file (.msc) whose hash is a known malicious indicator?
  context: Adversaries may use pre-crafted malicious .msc files to execute code. Matching the hash of the executed .msc file against a threat intelligence feed of known malicious file hashes is a high-fidelity way to detect the use of known malicious tools or payloads delivered via MMC.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name = "mmc.exe"
      EXTRACT msc_file_path from command_line
      CALCULATE hash(msc_file_path) as msc_hash
      JOIN msc_hash with threat_intel_hashes
      RETURN matching_events
- question: Has mmc.exe executed a console file (.msc) from a path that is statistically rare across the environment?
  context: Legitimate .msc files are often system-level and executed frequently or from common locations. Adversaries, however, may drop a custom .msc file in an unusual location for a one-off execution. Identifying .msc file executions that are exceptionally rare (e.g., lowest 5th percentile of frequency) can help uncover these non-standard, potentially malicious activities.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: Last 30 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events in last 30 days
      WHERE process_name = "mmc.exe"
      EXTRACT msc_file_path from command_line
      GROUP BY msc_file_path and COUNT
      IDENTIFY paths with count in bottom 5%
      RETURN rare_msc_executions
- question: Does the file path of an executed .msc file have characteristics indicative of maliciousness based on a machine learning model?
  context: This question moves beyond simple rarity to a more sophisticated analysis of the file path itself. Malicious file paths often have tells, such as being located in temporary or user-writable directories, having high-entropy (random-looking) directory names, or having an unusual path depth. A machine learning model can be trained to recognize these patterns and score new .msc file executions for their likelihood of being malicious, providing a proactive detection capability.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new "mmc.exe" execution event:
        EXTRACT msc_file_path
        CALCULATE features (path_depth, entropy, etc.)
        APPLY pre-trained_ML_model(features) to get score
        IF score > threshold:
          ALERT on suspicious_msc_path
- question: Is mmc.exe being executed with suspicious command-line arguments like '-Embedding' or commands for deleting backup catalogs?
  context: Adversaries abuse specific mmc.exe command-line arguments for malicious purposes. The `-Embedding` flag can be used to run COM scriptlets, a known persistence and execution technique. Other arguments, like those used with `wbadmin.msc` to `delete catalog`, are explicitly destructive and can be used to sabotage backups, which is a key defense evasion and impact tactic. Detecting these specific patterns is a high-confidence indicator of malicious activity.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints and Servers, Domain Controllers, Backup Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name = "mmc.exe"
      AND (command_line contains "-Embedding" OR command_line matches regex "wbadmin.msc.*delete catalog")
      RETURN suspicious_mmc_commands
- question: Is mmc.exe being executed with an unusually complex or random-looking command-line string?
  context: To avoid simple keyword-based detections, adversaries may obfuscate commands passed on the command line. This obfuscation often results in a command-line string with higher-than-normal entropy (randomness). By establishing a baseline of normal command-line entropy for mmc.exe on each host, you can detect outliers that may represent obfuscated, malicious commands.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints and Servers, Domain Controllers, Backup Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new "mmc.exe" execution event:
        CALCULATE entropy(command_line) as current_entropy
        GET historical_mean_entropy and std_dev for host
        IF current_entropy > (historical_mean_entropy + 3 * std_dev):
          ALERT on anomalous_command_line_entropy
- question: Does an mmc.exe execution have a command line that is flagged as anomalous by an unsupervised machine learning model?
  context: This approach uses machine learning to learn what 'normal' mmc.exe command lines look like in your environment without needing pre-labeled malicious examples. An unsupervised model like Isolation Forest can identify command lines that are outliers from this learned norm. This is effective for catching novel or unique obfuscation techniques that might not be caught by entropy analysis alone.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - All Windows Endpoints and Servers, Domain Controllers, Backup Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new "mmc.exe" execution event:
        VECTORIZE command_line (e.g., TF-IDF)
        APPLY pre-trained_anomaly_model(vector) to get score
        IF score indicates anomaly:
          ALERT on anomalous_mmc_command_line
- question: Was mmc.exe spawned by a suspicious parent process like an Office application, browser, or script host?
  context: Legitimate use of mmc.exe is typically interactive, launched by an administrator directly or via `explorer.exe`. When mmc.exe is spawned by a non-interactive process like a script host (`wscript.exe`, `powershell.exe`) or a user application like Word or a web browser, it is highly suspicious. This often indicates that a malicious script, document, or web payload is attempting to use mmc.exe for defense evasion or code execution.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - User Workstations, Terminal Servers, Application Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name = "mmc.exe"
      AND parent_process_name IN ["winword.exe", "excel.exe", "outlook.exe", "powershell.exe", "wscript.exe", "cscript.exe", "msedge.exe", "chrome.exe"]
      RETURN suspicious_parent_process_events
- question: Has mmc.exe been launched by a parent process that is statistically rare for this type of interaction?
  context: Rather than relying on a fixed deny-list of parent processes, this method statistically analyzes all parent-child process pairs involving mmc.exe across the enterprise. It identifies execution chains that are uncommon in your specific environment. This can uncover novel or environment-specific abuse patterns that a static list might miss, such as a custom in-house application unexpectedly spawning mmc.exe.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - User Workstations, Terminal Servers, Application Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE child_process_name = "mmc.exe"
      GROUP BY parent_process_name and COUNT
      IDENTIFY parent-child pairs with count in bottom 1%
      RETURN rare_parent_process_events
- question: Did the execution of mmc.exe follow a sequence of process creations that deviates from normal, modeled behavior on the host?
  context: This advanced technique models the typical 'story' of process execution on a host. By learning the normal sequences (e.g., `explorer.exe` -> `cmd.exe` -> `mmc.exe`), a sequence-based model can flag an `mmc.exe` execution as improbable if its parent process doesn't fit the learned pattern. This is powerful for detecting when an adversary injects a step into a process chain that breaks the normal workflow, such as `outlook.exe` -> `powershell.exe` -> `mmc.exe`.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - User Workstations, Terminal Servers, Application Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new "mmc.exe" execution event with parent_process:
        CALCULATE transition_probability from parent_process to "mmc.exe" using sequence_model
        IF probability < threshold:
          ALERT on improbable_process_sequence
- question: Is mmc.exe loading a console file (.msc) from a non-standard location like a user profile, temp folder, or network share?
  context: Legitimate Microsoft Management Console files are almost always located in system directories like `C:\Windows\System32`. When mmc.exe is instructed to load a `.msc` file from a user-writable location (e.g., `C:\Users\...`, `%TEMP%`) or a network share, it's a strong indicator that an adversary has placed a custom, malicious file there to be executed. This is a common tactic for bypassing application controls that might otherwise block executables from running in those locations.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - User Workstations, File Servers, Network Shares
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH process_creation_events
      WHERE process_name = "mmc.exe"
      EXTRACT msc_file_path from command_line
      IF msc_file_path matches regex for user_dirs, temp_dirs, or network_shares:
        RETURN suspicious_msc_location_events
- question: Has a user executed an .msc file from a directory that is unusual for both that specific user and the organization as a whole?
  context: This method enhances simple location-based alerting by adding user and organizational context. It establishes a baseline of 'normal' .msc execution directories for each user. An alert is triggered only when an execution occurs from a directory that is not only new for the user but also rare across the entire organization. This dual condition helps reduce false positives from legitimate but infrequent administrative tasks while effectively highlighting truly anomalous behavior.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - User Workstations, File Servers, Network Shares
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new "mmc.exe" execution with msc_file_path and user:
        EXTRACT directory from msc_file_path
        IF directory is not in user's historical_directory_baseline AND directory is rare across organization:
          ALERT on doubly_rare_msc_location
- question: Does the file path of an executed .msc file receive a high suspicion score from a classification model?
  context: This question leverages a machine learning model trained to identify suspicious path characteristics. Features like path depth, directory name keywords (e.g., 'temp'), and whether the path is user-writable are used to predict if a path is malicious. This provides a more robust and automated way to flag suspicious locations compared to static rules or simple rarity analysis, as it can learn complex combinations of features that indicate malice.
  answer_sources:
  - Sysmon Event ID 1
  - Windows Event ID 4688
  - User Workstations, File Servers, Network Shares
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new "mmc.exe" execution event:
        EXTRACT msc_file_path
        CALCULATE features (path_depth, keywords, writability)
        APPLY pre-trained_path_classifier(features) to get score
        IF score > threshold:
          ALERT on suspicious_msc_path_model
- question: Has the mmc.exe process initiated an outbound network connection, especially to an external IP address?
  context: The `mmc.exe` process is a local administrative utility and has no legitimate reason to make outbound network connections. Any network connection originating from `mmc.exe` is extremely anomalous and a high-fidelity indicator of compromise. This could represent a command-and-control (C2) channel, data exfiltration, or the downloading of a second-stage payload.
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - Network Egress Points, All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH network_connection_events
      WHERE process_name = "mmc.exe"
      AND destination_ip is not private_ip_space
      RETURN mmc_network_events
- question: Has mmc.exe connected to a destination IP address that is a low-frequency outlier across the enterprise?
  context: Since any network connection from mmc.exe is suspicious, investigating the rarity of the destination IP can help prioritize the response. A connection to a brand new, never-before-seen IP address is more critical than a connection to an IP that, while still suspicious, might have been seen before (perhaps due to a misconfigured tool). Treating any low-frequency destination as highly suspicious ensures that novel C2 infrastructure is quickly identified.
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - Network Egress Points, All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH network_connection_events
      WHERE process_name = "mmc.exe"
      GROUP BY destination_ip and COUNT
      IDENTIFY destination_ips with very low count (e.g., 1 or 2)
      RETURN rare_mmc_destination_ips
- question: Is there any non-zero volume of outbound network traffic from the mmc.exe process, as detected by a time-series anomaly model?
  context: The baseline for network traffic from `mmc.exe` should be zero. This question proposes using a time-series anomaly detection model to monitor this specific metric. The advantage of this approach is its extreme sensitivity. Any deviation from zero—any packet of data sent—will register as a significant anomaly and trigger a high-severity alert. This is a very robust method for detecting C2 activity or data staging by a compromised mmc.exe process.
  answer_sources:
  - Sysmon Event ID 3
  - Zeek conn.log
  - Network Egress Points, All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      MONITOR time-series of outbound_bytes from "mmc.exe" process on each host
      APPLY anomaly_detection_model
      IF outbound_bytes > 0:
        ALERT on mmc_network_traffic_anomaly
- question: Has a suspicious COM class (CLSID) been registered in the registry shortly before being invoked by mmc.exe with the '-Embedding' flag?
  context: This detects a specific, multi-stage attack chain known as COM hijacking. An adversary first creates a registry entry under `HKCR\CLSID\` that points a legitimate-looking COM object to a malicious script or executable. Then, they use `mmc.exe -Embedding` with a specially crafted `.msc` file to call that COM object, executing their code. Correlating the registry modification with the subsequent `mmc.exe` execution provides strong evidence of this defense evasion technique.
  answer_sources:
  - Sysmon Event ID 1
  - Sysmon Event ID 13
  - Windows Event ID 4688
  - Windows Registry on all endpoints, All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      SEARCH for registry_set_events under "HKCR\CLSID\" pointing to suspicious_path
      WITHIN a short timeframe (e.g., 5 minutes):
        SEARCH for process_creation_events where process_name = "mmc.exe" and command_line contains "-Embedding"
      CORRELATE events on hostname
      RETURN correlated_com_hijacking_events
- question: Has a new or modified COM server registration in the registry (`InprocServer32`) been identified as a statistical outlier?
  context: This is a discovery technique for finding potentially malicious COM registrations before they are even used. By profiling the characteristics of legitimate COM server paths in the registry (e.g., path entropy, depth), you can build a baseline of normalcy. When a new COM object is registered, its server path can be analyzed. If it has outlier characteristics (e.g., it's in a user's `Downloads` folder, has a random-looking name), it can be flagged for investigation as a potential persistence mechanism.
  answer_sources:
  - Sysmon Event ID 13
  - Windows Registry on all endpoints, All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new or modified registry value at "InprocServer32":
        EXTRACT file_path
        CALCULATE features (entropy, depth, etc.)
        COMPARE features to baseline of legitimate COM servers
        IF features are statistical outlier:
          ALERT on suspicious_com_registration
- question: Does a machine learning model classify a new COM registry entry as high-risk or malicious?
  context: This is the most advanced approach for detecting malicious COM hijacking. A classification model is trained on a large set of known-good and known-bad COM registry entries. It learns the complex patterns that differentiate them, using features like the server path, threading model, and whether the server is a signed Microsoft binary. This model can then be deployed to score all new COM registrations in real-time, providing a proactive and automated defense against this persistence technique.
  answer_sources:
  - Sysmon Event ID 13
  - Windows Registry on all endpoints, All Windows Endpoints and Servers
  range: Last 90 days
  queries:
  - technology: pseudocode
    query: |
      FOR each new registry entry under "HKCR\CLSID\":
        EXTRACT features (server_path, threading_model, etc.)
        APPLY pre-trained_COM_classifier(features) to get score
        IF score > threshold:
          ALERT on high-risk_com_registration