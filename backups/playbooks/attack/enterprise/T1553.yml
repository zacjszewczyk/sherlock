name: T1553: Subvert Trust Controls
id: 5a9b1a0c-68b2-4f38-9e54-18c7c7f3c4e1
description: This playbook helps investigate whether an adversary is attempting to bypass security controls by subverting trust mechanisms. This involves looking for the use of binaries signed with known-bad certificates, installation of malicious certificates into trust stores, execution of tools like certutil.exe to modify certificate settings, launching executables with anomalous or low-prevalence certificates, and removing the Zone.Identifier Alternate Data Stream from downloaded files to bypass security warnings.
type: technique
related:
  - TA0005: Defense Evasion
contributors: Zachary Szewczyk, Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Have any processes been executed that are signed by a certificate with a known malicious thumbprint or issuer?
    context: This question aims to detect the direct use of compromised or malicious code-signing certificates. Adversaries may use stolen certificates or certificates from malicious CAs to sign their malware, making it appear legitimate and bypassing basic signature checks. Correlating process execution data with threat intelligence feeds is a direct way to uncover this activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek x509.log
      - All Endpoints and Servers
      - Network Egress/Ingress Points
      - Domain Controllers
      - Threat Intelligence Feeds
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH process_creation_events OR network_certificate_logs
          JOIN certificate_thumbprint, certificate_issuer WITH threat_intel_feed
          WHERE match_found
          RETURN host, process_name, certificate_details
  - question: Are there any newly observed certificates with unusually high entropy in their issuer or subject common name fields, suggesting algorithmic generation?
    context: Adversaries may programmatically generate large numbers of certificates. These often have randomized, high-entropy names in the issuer or subject fields, unlike legitimate certificates which have human-readable names. Detecting these statistical anomalies can reveal malicious certificate infrastructure before it is explicitly blacklisted.
    answer_sources:
      - Zeek x509.log
      - All Endpoints and Servers
      - Network Egress/Ingress Points
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH new_certificate IN network_certificate_logs
          CALCULATE entropy(issuer_cn) AND entropy(subject_cn)
          IF entropy > baseline_99th_percentile
          ALERT certificate_details, host
  - question: Have any newly observed certificates been classified as malicious by a machine learning model based on their properties?
    context: This question uses a machine learning approach to proactively identify malicious certificates. By training a model on various features like validity period, key length, self-signed status, and name entropy, we can classify certificates that exhibit a combination of suspicious characteristics, even if no single feature is damning on its own. This provides a more robust and adaptive detection method.
    answer_sources:
      - Zeek x509.log
      - Sysmon Event ID 1
      - All Endpoints and Servers
      - Network Egress/Ingress Points
      - Domain Controllers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH new_certificate
          EXTRACT features (validity, key_length, self_signed, entropy, etc.)
          PREDICT classification using RandomForestModel
          IF prediction == 'malicious' AND confidence > 0.85
          ALERT certificate_details, host
  - question: Have any commands been executed using tools like certutil.exe, PowerShell, or reg.exe to add certificates to a root trust store or modify certificate-related registry keys?
    context: This question targets the explicit manipulation of system trust stores. An adversary who gains administrative privileges may install their own malicious root Certificate Authority (CA) certificate. This would allow them to sign malicious code or intercept TLS traffic without generating warnings. Monitoring for the specific commands used to perform these actions is a critical detection step.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - Sysmon Event ID 13
      - Windows Event ID 4657
      - All Endpoints and Servers
      - Domain Controllers
      - Certificate Authority Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH commandline_logs OR powershell_script_logs
          FOR REGEX 'certutil .* -addstore .* root' OR 'Import-Certificate .*\\Root' OR 'reg add HKLM\\SOFTWARE\\Microsoft\\SystemCertificates'
          ALERT host, user, commandline
  - question: Has certutil.exe or reg.exe been used with a historically rare combination of command-line arguments to manipulate certificate stores?
    context: Legitimate administrative activity involving certificate management tools often follows predictable patterns. Adversarial use, however, may involve unusual or unique combinations of command-line arguments. By baselining normal usage and alerting on statistical outliers, we can detect suspicious manipulations that might otherwise blend in with administrative noise.
    answer_sources:
      - Windows Event ID 4688
      - All Endpoints and Servers
      - Domain Controllers
      - Certificate Authority Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH execution of 'certutil.exe' or 'reg.exe'
          CALCULATE historical_probability(command_arguments)
          IF probability < 0.0001
          ALERT host, user, commandline
  - question: Has an anomalous sequence of commands, such as a file download followed by a certificate installation, been observed in a user session?
    context: This question seeks to identify suspicious behavior by analyzing the entire sequence of actions in a user session, rather than individual commands in isolation. A typical malicious pattern involves downloading a tool or certificate and then immediately installing it. A sequence-to-sequence model can learn normal command progressions and flag deviations like this, which strongly indicate malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - All Endpoints and Servers
      - Domain Controllers
      - Certificate Authority Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          MODEL user_session_command_sequences with LSTM_autoencoder
          FOR EACH new_session_sequence
          CALCULATE reconstruction_error
          IF reconstruction_error > dynamic_threshold
          ALERT host, user, session_commands
  - question: Has a certificate file been downloaded from an external source and then installed into a system trust store within a short time window (e.g., 5 minutes)?
    context: This question directly targets the 'download and install' pattern of subverting trust. Legitimate software installation may do this, but it's also a common TTP for adversaries to introduce a malicious root certificate. Correlating network file transfer events with local certificate installation commands on the same host provides strong evidence of this technique.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - Zeek conn.log
      - Network Egress/Ingress Points
      - User Workstations
      - Public-Facing Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH for certificate_file_downloads (Zeek files.log)
          WITHIN 5 minutes on same host, SEARCH for certificate_install_commands (Win 4688, PS 4104)
          IF both_found
          ALERT host, file_details, commandline
  - question: Has a host experienced a statistically significant spike in the number of certificate installations, especially if preceded by downloads from low-reputation sources?
    context: This question aims to detect an abnormal volume of certificate installations on a single host. A sudden burst of installations, especially when compared to the host's own historical baseline, can indicate a script or attacker installing multiple malicious certificates. Enriching this with network reputation data adds critical context, prioritizing alerts where the source of the preceding downloads is suspicious.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Zeek conn.log
      - Network Egress/Ingress Points
      - User Workstations
      - Public-Facing Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH host
          CALCULATE daily_cert_install_rate_30day_avg_and_stddev
          IF today_install_count > (avg + 3*stddev)
          ENRICH with download_source_reputation
          ALERT host, install_count, source_reputation
  - question: Has there been an enterprise-wide, statistically significant spike in certificate installation activity that deviates from normal daily or weekly patterns?
    context: This question looks for coordinated, large-scale campaigns across the entire organization. A widespread attack might cause a surge in certificate installations that is anomalous when viewed at the enterprise level. Time-series anomaly detection can identify these coordinated spikes by accounting for normal business rhythms (e.g., time of day, day of week).
    answer_sources:
      - Windows Event ID 4688
      - Windows PowerShell Logging Event ID 4104
      - Network Egress/Ingress Points
      - User Workstations
      - Public-Facing Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          AGGREGATE enterprise_cert_install_counts by hour
          APPLY Seasonal-Hybrid ESD algorithm to time-series
          IF anomaly_detected
          ALERT timestamp, anomalous_count, expected_count
  - question: Has a process been executed that is signed by a certificate not on the established allowlist of known-good software?
    context: This question implements a strict trust policy. By maintaining an allowlist of approved code-signing certificates, any executable signed by an unknown or unapproved certificate is immediately flagged for investigation. This is a highly effective method for preventing the execution of unauthorized or malicious software.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Zeek pe.log
      - All Endpoints and Servers
      - Software Distribution Points
      - Developer Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH process_creation_event with a signature
          CHECK IF certificate_thumbprint IN known_good_cert_allowlist
          IF NOT IN allowlist
          ALERT host, process_name, certificate_details
  - question: Has an executable been launched that is signed by a certificate with very low prevalence in the environment or an unusually short validity period?
    context: This question hunts for suspicious certificates based on rarity and lifespan. Legitimate software is typically signed with certificates that are widely distributed and have a standard validity period. Adversaries often use ad-hoc, self-signed, or short-lived certificates for their tools, which will have a very low prevalence across the enterprise. Flagging these is a strong heuristic for malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
      - Software Distribution Points
      - Developer Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH signed_process_execution
          CALCULATE prevalence(certificate_thumbprint) across all hosts
          IF prevalence < 0.1% OR validity_period < 90 days
          ALERT host, process_name, certificate_details
  - question: Have any executed files been signed by outlier certificates that do not cluster with known, legitimate software certificate groups?
    context: This question uses unsupervised machine learning to find anomalous certificates. Certificates used by legitimate software vendors tend to share common features. A clustering algorithm can group these similar certificates together. Certificates that do not fit into any cluster are outliers and warrant investigation, as they don't conform to the established trust patterns in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - All Endpoints and Servers
      - Software Distribution Points
      - Developer Workstations
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          COLLECT certificate_features from all executed files
          RUN DBSCAN clustering on features
          FOR EACH certificate classified as 'noise'
          ALERT certificate_details, hosts_seen_on
  - question: Have any commands been run to remove the Zone.Identifier stream from a file, potentially to bypass security warnings for internet-downloaded files?
    context: This question targets a specific technique for bypassing Mark-of-the-Web (MOTW) controls. Windows adds a Zone.Identifier Alternate Data Stream (ADS) to files downloaded from the internet, which causes security warnings upon execution. Adversaries use tools to remove this ADS. Detecting the use of these commands, especially shortly after a file download, is a strong indicator of malicious intent.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 15
      - Windows Event ID 4663
      - User Workstations
      - Email Gateway
      - Web Proxies
      - File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          SEARCH commandline_logs for 'streams.exe -d' OR 'Unblock-File' OR 'Remove-Item -Stream Zone.Identifier'
          CORRELATE with recent file download to the same file
          ALERT host, user, commandline, file_path
  - question: Has a file downloaded from the internet been executed by an unusual parent process (e.g., wscript.exe, mshta.exe) instead of a common user-driven process (e.g., explorer.exe)?
    context: This question focuses on how a downloaded file is executed. Typically, a user double-clicks a file, making explorer.exe the parent. Adversaries often use scripting engines or other non-interactive processes to launch their payloads. Baselining normal parent-child relationships for downloaded files and alerting on deviations can uncover this non-standard execution flow.
    answer_sources:
      - Zeek files.log
      - Sysmon Event ID 1
      - Sysmon Event ID 15
      - User Workstations
      - Email Gateway
      - Web Proxies
      - File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH execution of internet_downloaded_file
          CHECK parent_process_name
          IF parent_process has low historical frequency for this action
          ALERT host, parent_process, child_process
  - question: Has a machine learning model flagged the execution of a downloaded file as suspicious based on a combination of factors like source reputation, execution delay, and ADS manipulation?
    context: This question leverages a supervised machine learning model to make a holistic judgment about the risk of a file execution. By combining multiple weak signals—such as download source reputation, time between download and execution, parent process, and ADS manipulation—the model can identify suspicious events with higher confidence than any single rule could.
    answer_sources:
      - Zeek files.log
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 15
      - User Workstations
      - Email Gateway
      - Web Proxies
      - File Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: |
          FOR EACH execution of downloaded_file
          EXTRACT features (source_rep, time_delta, parent_process, ads_manipulation_flag)
          PREDICT with GradientBoostingClassifier
          IF prediction == 'suspicious' AND confidence is high
          ALERT all_event_details