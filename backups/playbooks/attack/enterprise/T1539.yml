name: T1539: Steal Web Session Cookie
id: c1b9a8e0-f8d2-4e9c-8b7a-6f0d3e5c9a1b
description: >-
  Investigates whether an adversary has stolen web session cookies to impersonate a user. This can be detected by observing executable files matching known cookie-stealing tools, network connections to malicious infrastructure, processes with command-line arguments indicative of cookie theft, unauthorized processes accessing browser cookie files, non-browser processes requesting high-privilege handles to browser processes, network traffic anomalies like unexpected SSL certificates, or browser processes spawning anomalous child processes like command shells.
type: technique
related:
  - TA0006: Credential Access
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
investigative_questions:
  - question: Have any observed file hashes or network connections matched known indicators of cookie-stealing malware or Adversary-in-the-Middle (AitM) infrastructure?
    context: This question aims to identify the most direct evidence of a known threat by comparing observed data against curated threat intelligence. A match provides a high-confidence signal that a known cookie-stealing tool or AitM framework is active in the environment.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - User Workstations
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH file_logs and network_logs WHERE hash IN (threat_intel_cookie_stealer_hashes) OR destination_ip IN (threat_intel_AitM_ips) OR destination_domain IN (threat_intel_AitM_domains);
  - question: Have any file hashes or destination domains appeared with unusually low prevalence across the enterprise, suggesting they are rare and potentially malicious?
    context: This question helps uncover unknown or novel threats by focusing on statistical rarity. Adversary tools and infrastructure are often not widely distributed, so identifying executables or domains that are unique or have appeared on very few hosts can be an effective hunting technique.
    answer_sources:
      - Windows Event ID 4688
      - Zeek dns.log
      - User Workstations
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CALCULATE prevalence of file_hashes and destination_domains over a 30-day window; ALERT on any hash or domain with a prevalence below the 1st percentile.
  - question: Has a machine learning model classified any newly observed executable files as malicious or related to credential theft?
    context: This question leverages predictive analytics to identify potentially malicious files that may not yet be in threat intelligence feeds. By analyzing file characteristics, a machine learning model can provide a probabilistic assessment of whether a new file is designed for credential theft.
    answer_sources:
      - Windows Event ID 4688
      - Zeek files.log
      - User Workstations
      - Network Egress Points
      - Web Proxies
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR each newly_observed_executable_hash, SUBMIT to file_classification_ML_model; IF classification is 'credential_theft' AND confidence > 0.85, GENERATE alert.
  - question: Have any command-line executions or PowerShell scripts contained strings or paths indicative of cookie theft tools?
    context: This question looks for explicit evidence of tool usage within command-line arguments or script content. Adversaries may directly reference cookie theft functions or paths to browser data stores, and finding these strings is a strong indicator of malicious intent.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - Terminal Servers
      - Developer Laptops
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process_creation_logs and script_block_logs FOR keywords LIKE 'sekurlsa::cookies', 'lazagne.exe browsers', or paths LIKE '%AppData\\Local\\Google\\Chrome\\User Data\\Default\\Cookies%'; ALERT on match.
  - question: Have any PowerShell or command-line executions exhibited unusually high entropy, suggesting obfuscation?
    context: This question aims to detect obfuscated commands or scripts, a common technique used by adversaries to hide their actions. A sudden spike in the complexity (entropy) of a command for a given user, compared to their normal activity, suggests an attempt to evade detection.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - Terminal Servers
      - Developer Laptops
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR processes like 'powershell.exe', CALCULATE Shannon entropy of command_line or script_block; IF entropy > 98th percentile of the user's historical baseline, FLAG for review.
  - question: Has a machine learning model classified any command-line executions as malicious based on their features?
    context: This question uses machine learning to move beyond simple keyword matching and analyze the structural properties of a command. By learning from known malicious and benign examples, a model can identify suspicious commands even if they don't contain obvious malicious strings.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 4104
      - User Workstations
      - Terminal Servers
      - Developer Laptops
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          EXTRACT features (length, character_distribution, keyword_counts) from command lines; PREDICT maliciousness with a trained classifier; ALERT on high-confidence malicious predictions.
  - question: Has a non-whitelisted process attempted to access a browser's cookie database file?
    context: This question establishes a "zero trust" policy for a critical assetâ€”the cookie database. By creating a strict whitelist of approved applications (browsers, backup agents) and alerting on any other process that tries to access it, you can reliably detect unauthorized attempts to steal cookies.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          ENABLE auditing on browser cookie directories; MONITOR for access events (EID 4663/4656); ALERT if Process_Name is NOT IN (approved_browser_list).
  - question: Has the set of processes accessing cookie store files on a host deviated significantly from its established baseline?
    context: This question identifies anomalous behavior on a per-host basis. While a process might be legitimate, its access to a cookie file could be unusual for a specific machine. This helps detect instances where legitimate tools might be misused on a compromised host.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CREATE baseline of processes accessing cookie stores per host over 30 days; DAILY compare current accessing processes to baseline using Jaccard similarity; ALERT if score < 0.8.
  - question: Has a machine learning model identified any anomalous access events to browser cookie stores?
    context: This question uses anomaly detection to find subtle or complex patterns of unauthorized access that rule-based methods might miss. The model learns what "normal" access looks like (process, user, time of day) and flags any event that deviates from this learned norm.
    answer_sources:
      - Windows Event ID 4663
      - Windows Event ID 4656
      - User Workstations
      - Virtual Desktop Infrastructure (VDI) instances
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          TRAIN one-class SVM or isolation forest on benign cookie store access patterns; SCORE new access events in real-time; ALERT on events identified as outliers.
  - question: Has a non-system or untrusted process requested a high-privilege handle to a browser process?
    context: This question focuses on memory scraping, a technique for stealing cookies directly from a browser's memory. Requesting a handle with `PROCESS_VM_READ` access is a key step in this process, and monitoring for such requests from unexpected applications is a critical detection.
    answer_sources:
      - Windows Event ID 4656
      - Windows Event ID 4688
      - User Workstations
      - Critical System Servers with browser access
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          MONITOR handle request events (EID 4656) where Object_Name is a browser process; ALERT if Source_Process_Name is not a known system/security process AND AccessList contains 'PROCESS_VM_READ'.
  - question: Has a process requested a handle to a browser for the first time, or has the rate of high-privilege requests from a host become anomalously high?
    context: This question uses statistical methods to find suspicious handle requests. A process requesting a handle to a browser for the first time across the entire enterprise is inherently suspicious. Likewise, a sudden burst of such requests on a single host can indicate an active memory scraping attack.
    answer_sources:
      - Windows Event ID 4656
      - Windows Event ID 4688
      - User Workstations
      - Critical System Servers with browser access
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          ALERT when a source process requests a handle to a browser process for the first time enterprise-wide; separately, ALERT if the rate of high-privilege requests on a host exceeds 3 standard deviations from its daily average.
  - question: Has the volume of high-privilege handle requests targeting browser processes significantly exceeded the forecasted volume?
    context: This question uses time-series forecasting to detect large-scale or coordinated memory scraping activity. By predicting the normal hourly volume of handle requests, the system can automatically flag significant, unexpected spikes that might represent an attack campaign.
    answer_sources:
      - Windows Event ID 4656
      - Windows Event ID 4688
      - User Workstations
      - Critical System Servers with browser access
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          MODEL the hourly volume of 'PROCESS_VM_READ' requests to browsers using ARIMA; ALERT when the observed volume significantly exceeds the predicted upper confidence interval.
  - question: Has network traffic to a high-value domain used an SSL certificate from an unexpected or unapproved Certificate Authority?
    context: This question is designed to detect Adversary-in-the-Middle (AitM) attacks. If an adversary is proxying traffic to a legitimate site (like a corporate SSO portal), they must present their own SSL certificate. Comparing the certificate's issuer to a whitelist of expected CAs can expose this impersonation.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          FOR traffic to high-value domains (e.g., O365, SSO), extract SSL issuer from ssl.log; ALERT if issuer is NOT IN (whitelisted_CAs).
  - question: Has a user's session to a high-value domain exhibited a rare JA3/JA3S fingerprint or an unusually large cookie header?
    context: This question seeks to identify session hijacking or AitM by looking for anomalies in session metadata. A change in the JA3/JA3S fingerprint (representing the client's SSL/TLS implementation) or a sudden increase in cookie size can indicate that a session has been compromised or is being proxied.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          BASELINE JA3/JA3S hashes and cookie lengths per user/domain; ALERT if a session uses a JA3/JA3S hash never seen for that user/domain OR if cookie length exceeds the 99th percentile of the historical distribution.
  - question: Has a machine learning clustering algorithm identified any user browsing sessions as anomalous outliers?
    context: This question uses unsupervised machine learning to find anomalous browsing patterns without prior knowledge of what is "bad." By clustering sessions based on multiple network features, the algorithm can isolate sessions that do not fit any normal pattern, which may represent sophisticated AitM or session hijacking.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek ssl.log
      - Zeek dns.log
      - Network Egress Points
      - DNS Servers
      - VPN Concentrators
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          CLUSTER web sessions to sensitive apps using features (IP, user-agent, JA3, cookie length); FLAG sessions classified as outliers or noise by the DBSCAN algorithm for investigation.
  - question: Has a web browser process spawned a command shell or scripting interpreter as a child process?
    context: This question targets a common post-exploitation pattern where an adversary, having compromised a browser, uses it to launch further tools. Browsers should not normally spawn processes like `cmd.exe` or `powershell.exe`, making this a high-fidelity indicator of malicious activity.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - User Workstations
      - Web Proxies
      - DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          SEARCH process creation events (EID 4688) WHERE ParentProcessName IN ('chrome.exe', 'msedge.exe', 'firefox.exe') AND NewProcessName IN ('cmd.exe', 'powershell.exe', 'wscript.exe'); GENERATE high-severity alert.
  - question: Has a rare parent-child process relationship involving a browser as the parent been observed?
    context: This question expands on the previous one by using statistical rarity to find not just known-bad child processes, but any unusual process spawned by a browser. This can help detect novel or less common tools an adversary might use after compromising a browser.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - User Workstations
      - Web Proxies
      - DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          ANALYZE frequency of all parent-child relationships enterprise-wide; ALERT on relationships where a browser is the parent and the prevalence is below the 0.1st percentile.
  - question: Has a machine learning model classified a parent-child process relationship, where a browser is the parent, as malicious?
    context: This question applies machine learning to add context to the detection of browser-spawned processes. A model can learn to distinguish between potentially benign edge cases and truly malicious activity by considering features like command-line arguments and user context, reducing false positives.
    answer_sources:
      - Windows Event ID 4688
      - Zeek conn.log
      - User Workstations
      - Web Proxies
      - DNS Servers
    range: last 90 days
    queries:
      - technology: pseudocode
        query: >-
          TRAIN a random forest model to classify parent-child relationships as malicious; SCORE new events where a browser is the parent; ALERT on high-confidence malicious predictions.