name: T1596.005: Scan Databases
id: d6e8f7c2-5a39-4b1d-8c9a-7e6f5d4c3b2a
description: This playbook focuses on detecting if an adversary is conducting reconnaissance by leveraging information from public scan databases such as Shodan or Censys. It provides investigative steps to identify inbound connections from known scanning infrastructure, detect signatures of automated scanning tools against web applications, correlate traffic patterns with publicly known exposed ports, monitor for traffic spikes after a service is newly exposed, and identify subsequent credential attacks like password spraying against these discovered services.
type: technique
related:
  - TA0043: Reconnaissance
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have we received any inbound connections from IP addresses known to be part of internet-wide scanning infrastructure?
    context: This question aims to identify direct reconnaissance activity from known public scanners like Shodan or Censys. By matching inbound connection source IPs against a curated threat intelligence feed of scanners, we can detect even initial probing attempts, regardless of whether a full connection was established. This provides an early warning that our assets are being cataloged by these services.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Perimeter network devices, including internet-facing firewalls, web servers, and VPN concentrators.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: JOIN conn.log (source_ip) WITH threat_intel_feed (scanner_ip) WHERE event_time > NOW() - 90d
  - question: Has there been a statistically significant increase in the daily volume of unique scanning IPs connecting to our external services?
    context: This question moves beyond single-connection alerts to detect broader campaigns. An unusual spike in the number of unique IPs from scanning services targeting our network could indicate a coordinated effort or heightened interest in our infrastructure. By baselining normal scanning activity and alerting on deviations, we can identify when we are being focused on more than usual.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Perimeter network devices, including internet-facing firewalls, web servers, and VPN concentrators.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE daily_unique_scanner_ip_count. BASELINE over 30 days. ALERT if daily_count > 95th_percentile(baseline).
  - question: Can we predict if a new, previously unknown inbound connection is likely from a scanner based on its characteristics?
    context: This question seeks to proactively identify scanning behavior from sources not yet on public threat intelligence lists. By training a machine learning model on the features of known scanner connections (e.g., protocol, port, connection state, duration), we can develop a predictive capability to score new inbound connections and flag those that exhibit scanner-like behavior, enabling earlier detection of emerging scanning infrastructure.
    answer_sources:
      - Zeek conn.log
      - Threat Intelligence Feed
      - Perimeter network devices, including internet-facing firewalls, web servers, and VPN concentrators.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: PREDICT probability(is_scanner) using logistic_regression_model on new conn.log events. Features- proto, resp_p, duration, conn_state.
  - question: Have we observed any web requests with signatures matching known automated scanning or exploitation tools?
    context: This question focuses on identifying specific tools used by adversaries for reconnaissance, such as Nuclei or Metasploit. By looking for characteristic User-Agent strings, URI paths, or request payloads, we can detect active scanning attempts against our web applications and APIs, providing direct evidence of malicious intent.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - IDS/IPS Alerts
      - Public-facing web applications, API gateways, and load balancers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH http.log or ids.alerts for signatures like User-Agent='Nuclei' or URI contains '/.env'.
  - question: Are any source IPs generating web requests with unusually high URI entropy, suggesting directory or parameter fuzzing?
    context: This question aims to detect automated attempts to discover hidden files, directories, or API endpoints. Attackers often use fuzzing techniques that generate a large number of requests with random or sequential variations in the URI. Calculating the Shannon entropy of URIs from a single source IP can quantify this randomness; a high entropy value is a strong indicator of such brute-force discovery attempts.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - IDS/IPS Alerts
      - Public-facing web applications, API gateways, and load balancers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE shannon_entropy(http.uri) per source_ip over 5min_window. ALERT if entropy > 3 * stdev(all_source_ip_entropy).
  - question: Is there an anomalous spike in web requests containing high-risk keywords that could indicate a widespread exploitation attempt?
    context: This question aims to detect emerging, large-scale attacks that leverage recent vulnerability disclosures, often found via scan databases. By forecasting the normal frequency of requests containing keywords like 'cve-', 'jndi:', or 'log4j', we can use a time-series model to automatically flag significant deviations from the expected trend, signaling a potential mass exploitation event.
    answer_sources:
      - Zeek http.log
      - Zeek conn.log
      - IDS/IPS Alerts
      - Public-facing web applications, API gateways, and load balancers.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: FORECAST request_frequency(keywords='cve-', 'jndi:') using ARIMA model. ALERT if observed_frequency deviates significantly from forecast.
  - question: Has an external IP address connected to a large number of ports that we know are publicly listed for a specific asset in a scan database?
    context: This question seeks to directly link an external actor's behavior to intelligence gathered from a public scan database like Shodan. By proactively cataloging our own exposed ports and then monitoring for external IPs that rapidly connect to a significant subset of those specific ports, we can infer that the actor is using a pre-compiled list from such a database for targeted reconnaissance.
    answer_sources:
      - Zeek conn.log
      - External Scan Database API
      - Network perimeter and DMZ, specifically monitoring traffic to all registered public IP addresses.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: IF source_ip connects to > 5 ports from 'known_exposed_ports_list' for a host within 10 minutes, THEN ALERT.
  - question: Is there a high degree of similarity between the ports an external IP is connecting to and the ports known to be exposed for that target?
    context: This question provides a quantitative measure to confirm if an actor is using a list from a scan database. The Jaccard similarity index precisely calculates the overlap between the set of ports an IP connects to and the set of ports listed in a scan database. A high similarity score (e.g., >0.8) is a strong statistical indicator that the reconnaissance is not random but is based on pre-existing intelligence.
    answer_sources:
      - Zeek conn.log
      - External Scan Database API
      - Network perimeter and DMZ, specifically monitoring traffic to all registered public IP addresses.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE jaccard_similarity(observed_ports, known_exposed_ports) per source_ip. ALERT if index > 0.8.
  - question: Can we use unsupervised machine learning to identify anomalous clusters of connections that represent targeted port scanning?
    context: This question aims to find targeted reconnaissance without relying on pre-compiled lists of exposed ports. By using a clustering algorithm like DBSCAN on connection logs, we can group connections by features like source IP, destination IP, and port. Small, dense clusters representing one IP connecting to many ports on a single host, which are distinct from the larger clusters of normal traffic, can automatically surface suspicious port scanning activity that mirrors scan database results.
    answer_sources:
      - Zeek conn.log
      - External Scan Database API
      - Network perimeter and DMZ, specifically monitoring traffic to all registered public IP addresses.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CLUSTER conn.log events using DBSCAN(features=src_ip, dst_ip, dst_port). IDENTIFY small, dense clusters as potential targeted scanning.
  - question: Have we seen connection attempts from known malicious IPs to a service that was just recently exposed by a firewall change?
    context: This question correlates network configuration changes with immediate follow-on reconnaissance. Internet-wide scanners can detect newly exposed services very quickly. By creating a temporary, high-sensitivity monitoring window immediately after a firewall rule exposes a new service, we can quickly detect if that service is being targeted by actors who leverage this rapid discovery.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4625
      - Firewall/Network Device Change Logs
      - Authentication servers (e.g., Active Directory Domain Controllers), VPN gateways, Remote Desktop gateways, and change management logs for network devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: ON firewall_change_event(action='permit'), MONITOR target_port for 48h. ALERT if conn_source_ip is on threat_intel_list.
  - question: After exposing a new service, did the connection volume to that service port spike to a level that is statistically anomalous compared to its historical baseline?
    context: This question uses historical data to determine if the traffic to a newly exposed service is unusual. Exposing a service to the internet can lead to a massive spike in connections from scanners. Comparing the post-exposure traffic volume against a historical baseline and alerting on significant increases (e.g., above the 99th percentile) provides a data-driven way to confirm that the new service has been discovered and is being probed.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4625
      - Firewall/Network Device Change Logs
      - Authentication servers (e.g., Active Directory Domain Controllers), VPN gateways, Remote Desktop gateways, and change management logs for network devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: BASELINE hourly_connection_count per port. ON firewall_change_event, ALERT if new_port_connection_count > 99th_percentile(baseline).
  - question: Can an automated time-series model detect an unexpected spike in traffic to an external service, potentially indicating it was just discovered by scanners?
    context: This question focuses on automating the detection of discovery-related traffic spikes without manual correlation to change logs. A time-series anomaly detection model can learn the normal traffic patterns for external services and automatically flag any significant, unexpected increase in activity that could be the result of a service being newly exposed and immediately targeted by internet-wide scanners.
    answer_sources:
      - Zeek conn.log
      - Windows Event ID 4625
      - Firewall/Network Device Change Logs
      - Authentication servers (e.g., Active Directory Domain Controllers), VPN gateways, Remote Desktop gateways, and change management logs for network devices.
    range: last 90 days
    queries:
      - technology: pseudocode
        query: DETECT anomalies in traffic volume per port using time-series_model(Seasonal-Hybrid ESD). ALERT on significant positive anomalies.
  - question: Is any single external IP address responsible for a high number of failed logins across multiple user accounts in a short time frame?
    context: This question seeks to identify a classic password spraying attack using a simple, threshold-based rule. Password spraying involves an attacker using one or a few passwords against many different usernames. A rule that alerts when a single IP generates a high volume of failed logins (Event ID 4625) across several accounts is a direct and effective way to detect this common follow-on attack after a service is discovered via scanning.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Zeek conn.log
      - Externally-facing authentication services such as Microsoft Exchange (OWA), RDP Gateways, and Active Directory Federation Services (ADFS).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: SEARCH for source_ip with COUNT(failed_logins) > 20 AND COUNT(distinct_users) > 5 within 10 minutes.
  - question: Are any external source IPs exhibiting a statistically improbable ratio of failed-to-successful logins?
    context: This question uses a statistical ratio to identify brute-force or password spraying attacks. Normal user activity will have a very low ratio of failed to successful logins. An attacker, however, will have an extremely high ratio. Alerting when this ratio is abnormally high (e.g., >20:1) and involves multiple accounts effectively distinguishes malicious brute-force attempts from users who simply forgot their password.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Zeek conn.log
      - Externally-facing authentication services such as Microsoft Exchange (OWA), RDP Gateways, and Active Directory Federation Services (ADFS).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: CALCULATE ratio = COUNT(failed_logins) / COUNT(successful_logins) per source_ip. ALERT if ratio > 20 AND COUNT(distinct_users) > 5.
  - question: Can a machine learning model be used to predict, with a high degree of confidence, whether a source IP is conducting a password spraying attack?
    context: This question aims to create a more sophisticated detection for password spraying by combining multiple behavioral indicators into a machine learning model. By training a classifier on features like login rate, number of unique accounts targeted, and whether the service was recently exposed, the model can learn the complex patterns of an attack and provide a probability score, allowing for more confident alerting and fewer false positives.
    answer_sources:
      - Windows Event ID 4625
      - Windows Event ID 4624
      - Zeek conn.log
      - Externally-facing authentication services such as Microsoft Exchange (OWA), RDP Gateways, and Active Directory Federation Services (ADFS).
    range: last 90 days
    queries:
      - technology: pseudocode
        query: PREDICT probability(is_password_sprayer) using Random_Forest_model. Features- login_rate, unique_accounts, time_delta, service_is_newly_exposed.