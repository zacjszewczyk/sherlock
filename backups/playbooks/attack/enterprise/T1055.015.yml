name: T1055.015: ListPlanting
id: 9a8f7b6c-5d4e-4f3a-2b1c-0a9e8d7c6b5a
description: This playbook helps identify adversaries attempting to elevate privileges or evade defenses using the ListPlanting technique (T1055.015). This involves injecting code into high-integrity GUI processes by manipulating ListView controls via Windows messages (e.g., LVM_SORTITEMS). Detections focus on identifying known ListPlanting tools via hash or memory signatures, spotting anomalous cross-process interactions (especially from low to high integrity), observing non-GUI processes making GUI-related API calls, and detecting suspicious follow-on activity from compromised trusted processes like explorer.exe, such as spawning command-line interpreters, loading untrusted DLLs, connecting to malicious C2 servers, or staging data for exfiltration.
type: technique
related:
  - TA0004: Privilege Escalation
  - TA0005: Defense Evasion
contributors:
  - Zachary Szewczyk
  - Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Has a known ListPlanting tool been executed, or has ListPlanting-like code been detected in a process's memory?
    context: This question aims to identify the use of ListPlanting by matching executable file hashes against threat intelligence feeds or by finding specific code patterns in memory using YARA rules. This provides a high-confidence indicator that a known malicious tool is being used.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Antivirus/EDR Detection Logs
      - EDR Memory Scan Logs
      - User workstations
      - Administrative workstations
      - Terminal servers
      - Enterprise SIEM
    range: last 90 days
    queries:
      - pseudocode: JOIN process_creation_logs WITH threat_intel_hashes; QUERY edr_memory_scans FOR yara_rule_matches('ListPlanting');
  - question: Has an extremely rare executable been run, especially as a child of a common GUI process?
    context: This question seeks to uncover novel or unknown ListPlanting tools by focusing on statistical outliers. Adversaries often use custom or newly compiled tools that will have a very low prevalence in an environment. Execution by a parent like explorer.exe is suspicious because it's a common target for process injection techniques.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Antivirus/EDR Detection Logs
      - EDR Memory Scan Logs
      - User workstations
      - Administrative workstations
      - Terminal servers
      - Enterprise SIEM
    range: last 90 days
    queries:
      - pseudocode: CALCULATE hash_prevalence FROM process_creation_logs; ALERT ON process_execution WHERE hash_prevalence < 0.01% AND parent_process = 'explorer.exe';
  - question: Does a process originating from a common GUI application exhibit characteristics of a malicious process injection tool?
    context: This question uses a machine learning model to score the likelihood of a process being malicious based on a combination of features. It helps detect sophisticated or obfuscated ListPlanting attacks that might evade simpler symbolic or statistical checks by analyzing a holistic set of behavioral and metadata attributes.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Antivirus/EDR Detection Logs
      - EDR Memory Scan Logs
      - User workstations
      - Administrative workstations
      - Terminal servers
      - Enterprise SIEM
    range: last 90 days
    queries:
      - pseudocode: SCORE process_events WITH classification_model; INVESTIGATE high_malicious_score WHERE parent_process IN ['explorer.exe', 'browser.exe'];
  - question: Has a lower-integrity process accessed, allocated memory in, and sent LVM_SORTITEMS messages to a higher-integrity process in a short time frame?
    context: This question directly targets the core mechanism of the ListPlanting technique. It looks for a specific sequence of events (process access, remote memory allocation, and the LVM_SORTITEMS message) that strongly indicates an attempt to execute code in the context of a higher-privileged process.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 8
      - API Monitoring Logs
      - User workstations
      - Domain Controllers (if admin tools are used)
      - Management servers with GUI tools
    range: last 90 days
    queries:
      - pseudocode: CORRELATE (ProcessAccess, CreateRemoteThread/VirtualAllocEx, LVM_SORTITEMS_API_call) WHERE source_integrity < target_integrity AND time_delta < 5s;
  - question: Is any process accessing higher-integrity processes at an anomalously high rate?
    context: This question identifies potential precursor activity to process injection. An unusual spike in a process attempting to gain handles to higher-integrity processes, especially critical ones like lsass.exe, can indicate reconnaissance or an impending injection attempt, even if the full ListPlanting sequence isn't observed.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 8
      - API Monitoring Logs
      - User workstations
      - Domain Controllers (if admin tools are used)
      - Management servers with GUI tools
    range: last 90 days
    queries:
      - pseudocode: BASELINE ProcessAccess rate per process_name; ALERT on process_instance WHERE access_rate > 99th_percentile AND target_integrity > source_integrity;
  - question: Has there been an anomalous spike in LVM_SORTITEMS or LVM_SETITEMPOSITION messages between processes of different integrity levels?
    context: This question uses time-series anomaly detection to find sudden, uncharacteristic bursts of specific Windows messages used in shatter attacks like ListPlanting. This approach is effective at detecting the attack even if the adversary uses different API calls for memory allocation, as it focuses on the key message-based trigger.
    answer_sources:
      - Sysmon Event ID 10
      - Sysmon Event ID 8
      - API Monitoring Logs
      - User workstations
      - Domain Controllers (if admin tools are used)
      - Management servers with GUI tools
    range: last 90 days
    queries:
      - pseudocode: MODEL message_frequency (LVM_SORTITEMS) between process_pairs; ALERT ON anomalous_spikes WHERE integrity_levels_differ;
  - question: Is a non-GUI application sending a high volume of ListView-related Windows messages?
    context: This question identifies a fundamental contradiction in process behavior. Console applications or services should not be interacting with GUI elements like ListViews. A high volume of such messages from a non-GUI process is a strong indicator that it is maliciously manipulating another process's GUI for code injection.
    answer_sources:
      - API Monitoring Logs
      - EDR Telemetry
      - User workstations
      - Application servers
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: ALERT ON process WHERE (pe_subsystem != GUI) AND (count(SendMessage/PostMessage with LVM_*) > 50 in 1min);
  - question: Is any process, particularly a console application, sending an abnormally high number of SendMessage/PostMessage API calls?
    context: This question establishes a baseline of normal API call behavior for each process type and alerts on significant deviations. It can catch ListPlanting attempts even if the process is not strictly a non-GUI application, by flagging any process that suddenly starts behaving like a GUI manipulator when it normally doesn't.
    answer_sources:
      - API Monitoring Logs
      - EDR Telemetry
      - User workstations
      - Application servers
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: PROFILE SendMessage_rate per process_name; ALERT ON process_instance WHERE call_count > (mean + 3*std_dev);
  - question: Does any process cluster as an outlier due to a high frequency of LVM_* messages combined with non-GUI characteristics?
    context: This question uses unsupervised machine learning to find processes that don't fit into normal behavioral clusters. It can identify novel or obfuscated tools that combine a high rate of LVM message calls with other features (like PE header flags or file path) that are inconsistent with legitimate GUI applications.
    answer_sources:
      - API Monitoring Logs
      - EDR Telemetry
      - User workstations
      - Application servers
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: CLUSTER processes by (api_call_frequency, pe_header_flags); INVESTIGATE outliers with high LVM_* message frequency;
  - question: Has a high-integrity explorer.exe process spawned a command-line interpreter?
    context: This question looks for a classic post-exploitation action. Once an adversary has injected code into a high-integrity process like explorer.exe, a common next step is to spawn a shell (cmd.exe, powershell.exe) to execute commands with elevated privileges. This is highly suspicious behavior for explorer.exe.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - User workstations
      - Network egress points
      - DNS servers
      - Core network switches
    range: last 90 days
    queries:
      - pseudocode: ALERT ON process_creation WHERE parent_process = 'explorer.exe' AND parent_integrity = 'High' AND child_process IN ('cmd.exe', 'powershell.exe');
  - question: Has explorer.exe spawned a very rare child process or connected to a very rare network destination?
    context: This question hunts for anomalous follow-on activity after a successful injection. By baselining the typical child processes and network destinations for explorer.exe, it can flag statistically rare events that might indicate an adversary using a custom tool or connecting to a new command-and-control server.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - User workstations
      - Network egress points
      - DNS servers
      - Core network switches
    range: last 90 days
    queries:
      - pseudocode: BASELINE child_process_frequency for explorer.exe; ALERT on child_process with frequency < 0.1%; BASELINE destination_rarity for explorer.exe; ALERT on connection to destination in bottom 1% percentile;
  - question: Is a specific instance of explorer.exe behaving differently from its peers across the enterprise?
    context: This question uses peer group analysis to spot a compromised explorer.exe instance. It compares the behavior of one instance (its child processes, network connections, file access patterns) against all others. An instance that stands out from its peers is a strong candidate for investigation, as it suggests its behavior is being driven by malicious injected code rather than normal user activity.
    answer_sources:
      - Windows Event ID 4688
      - Sysmon Event ID 1
      - Sysmon Event ID 3
      - Zeek conn.log
      - User workstations
      - Network egress points
      - DNS servers
      - Core network switches
    range: last 90 days
    queries:
      - pseudocode: COMPARE explorer.exe instance behavior to peer group baseline; FLAG instances with anomalous child processes, network connections, or file access;
  - question: Has explorer.exe connected to a known malicious destination or used a known malicious TLS/SSH fingerprint?
    context: This question aims to detect command-and-control (C2) communication or data exfiltration being masked by a trusted process. It correlates endpoint process information with network data and threat intelligence to identify when a legitimate-looking process is communicating with a known-bad actor.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek ssh.log
      - Sysmon Event ID 3
      - Network egress points
      - Proxy servers
      - DNS resolvers
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: JOIN sysmon_net_conn WITH zeek_logs ON connection_tuple; ALERT WHERE process_name = 'explorer.exe' AND (dest_ip IN c2_feed OR ja3 IN malicious_ja3_feed);
  - question: Is explorer.exe connecting to a domain with high character entropy, suggesting it might be algorithmically generated?
    context: This question seeks to identify connections to Domain Generation Algorithm (DGA) domains, a common technique for C2 infrastructure. Legitimate domains used by explorer.exe are typically human-readable, whereas DGA domains are random-looking. High entropy is a strong statistical indicator of DGA activity.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek ssh.log
      - Sysmon Event ID 3
      - Network egress points
      - Proxy servers
      - DNS resolvers
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: CALCULATE shannon_entropy of domain_name in dns_logs; ALERT WHERE process_name = 'explorer.exe' and entropy > 4.5;
  - question: Is the volume or duration of network traffic from explorer.exe on a given host anomalous compared to its historical forecast?
    context: This question uses time-series forecasting to detect unusual data transfer patterns. A sudden, unexplained increase in outbound data volume from explorer.exe could signify data exfiltration, even if the destination isn't on a threat list. This method helps find C2 channels that use legitimate-looking domains.
    answer_sources:
      - Zeek conn.log
      - Zeek ssl.log
      - Zeek ssh.log
      - Sysmon Event ID 3
      - Network egress points
      - Proxy servers
      - DNS resolvers
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: FORECAST outbound_bytes and connection_duration for explorer.exe per host; ALERT on significant positive deviations from forecast;
  - question: Has a trusted GUI process like explorer.exe loaded a DLL from a suspicious, user-writable location?
    context: This question targets a common persistence and defense evasion technique where an adversary places a malicious DLL in a non-standard directory and causes a trusted process to load it. Standard system DLLs are loaded from protected directories like System32, so loading from a user's Temp or Downloads folder is highly suspicious.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 8
      - EDR Memory Scan Logs
      - User workstations
      - Critical servers with GUI management tools
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: ALERT ON ImageLoad event WHERE process_name IN ('explorer.exe', 'mmc.exe') AND loaded_dll_path IN ('C:\\Users\\*', 'C:\\Temp\\*', 'C:\\ProgramData\\*');
  - question: Has explorer.exe loaded a DLL that is statistically rare across the enterprise?
    context: This question helps identify custom or uncommon malicious DLLs by leveraging enterprise-wide prevalence data. A DLL loaded by explorer.exe on only one or two machines is a strong anomaly and warrants investigation, as it is unlikely to be a standard component.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 8
      - EDR Memory Scan Logs
      - User workstations
      - Critical servers with GUI management tools
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: CALCULATE prevalence_score for each DLL hash loaded by explorer.exe; ALERT ON ImageLoad WHERE dll_prevalence < 5 hosts;
  - question: Has explorer.exe exhibited a low-probability sequence of events, such as remote memory allocation followed by an image load from a temporary directory and a new network connection?
    context: This question uses a sequence analysis model to detect a logical chain of events indicative of a sophisticated attack. While each event alone might be benign, their occurrence in a specific, rare sequence (allocate memory, load untrusted DLL, connect to C2) has a high probability of being malicious.
    answer_sources:
      - Sysmon Event ID 7
      - Sysmon Event ID 8
      - EDR Memory Scan Logs
      - User workstations
      - Critical servers with GUI management tools
      - Endpoint Detection and Response (EDR) platform
    range: last 90 days
    queries:
      - pseudocode: MODEL benign event sequences for explorer.exe; FLAG sequences with low probability, e.g., (RemoteMemAlloc -> ImageLoadFromTemp -> NetConn);
  - question: Has explorer.exe been used as a parent process to launch a data archiving utility?
    context: This question looks for data staging activity. It is highly unusual for explorer.exe to directly spawn a command-line archiving tool. This behavior suggests an adversary, having already compromised the process, is now using its privileges to collect and compress data for exfiltration.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - File servers
      - User workstations
      - Document management systems
      - Endpoint logs
    range: last 90 days
    queries:
      - pseudocode: ALERT ON process_creation WHERE parent_process = 'explorer.exe' AND child_process IN ('7z.exe', 'rar.exe', 'tar.exe', 'zip.exe', 'compact.exe');
  - question: Is the explorer.exe process on a specific host creating files at an anomalously high rate for this time of day?
    context: This question aims to detect bulk file operations consistent with data staging by establishing a fine-grained temporal baseline. An adversary collecting files will cause a spike in file creation events that deviates significantly from the normal, user-driven activity expected from explorer.exe at a particular hour.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - File servers
      - User workstations
      - Document management systems
      - Endpoint logs
    range: last 90 days
    queries:
      - pseudocode: BASELINE hourly file_creation_rate for explorer.exe per host; ALERT when current_rate > 99.5th_percentile of historical baseline for that hour;
  - question: Does the file I/O pattern of an explorer.exe instance deviate significantly from its peers?
    context: This question uses peer group analysis to find an explorer.exe instance that is being used for data staging. A compromised instance will exhibit different file I/O patterns (e.g., accessing many different directories, creating files with unusual extensions, high write-to-read ratio) compared to its peers that are performing normal user functions.
    answer_sources:
      - Sysmon Event ID 11
      - Sysmon Event ID 1
      - Windows Event ID 4688
      - File servers
      - User workstations
      - Document management systems
      - Endpoint logs
    range: last 90 days
    queries:
      - pseudocode: COMPARE explorer.exe I/O patterns (read/write ratio, dir count, extension entropy) against peer group; FLAG instances that are >3 std_dev from peer centroid;
  - question: Is explorer.exe sending a large amount of data to an external IP address with very little data being received in return?
    context: This question looks for a classic data exfiltration pattern where data is uploaded to an adversary-controlled server. A high outbound-to-inbound data ratio, especially for large transfers to non-corporate IP addresses, is a strong indicator of malicious activity masked by a trusted process.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 3
      - Network egress points
      - DNS servers
      - Core switches providing flow data
    range: last 90 days
    queries:
      - pseudocode: CORRELATE sysmon_net_conn WITH zeek_conn_log; ALERT WHERE process = 'explorer.exe' AND (outbound_bytes / inbound_bytes > 100:1) AND (total_bytes > 10MB) AND dest_ip is external;
  - question: Is explorer.exe making network connections to a specific destination with a highly regular, machine-like periodicity?
    context: This question targets C2 beaconing behavior. Automated malware often communicates with its C2 server on a fixed interval (e.g., every 60 seconds). By calculating the standard deviation of time between connections to the same destination, a value near zero indicates robotic, non-human behavior that is highly suspicious for explorer.exe.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 3
      - Network egress points
      - DNS servers
      - Core switches providing flow data
    range: last 90 days
    queries:
      - pseudocode: FOR each src-dst pair with src_process='explorer.exe', CALCULATE std_dev of time_delta between connections; ALERT if std_dev is near zero over >10 connections;
  - question: Does a network connection from explorer.exe classify as an outlier when compared to a model of benign connections?
    context: This question uses an unsupervised machine learning model to identify anomalous network connections that don't match known patterns of benign activity. By training a model on features of normal connections, it can flag new connections that are outliers, even if they don't trigger specific rules, helping to detect novel C2 techniques.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Sysmon Event ID 3
      - Network egress points
      - DNS servers
      - Core switches providing flow data
    range: last 90 days
    queries:
      - pseudocode: TRAIN one-class SVM on benign explorer.exe connection features; SCORE new connections and ALERT on outliers;