name: T1113: Screen Capture
id: f7b5a8e1-5a0a-4b0a-8c5a-3e8f6a2b1c4d
description: This playbook helps determine if an adversary is collecting sensitive data via screen capture. This is achieved by looking for various indicators, such as the execution of known unauthorized screen capture tools identified via threat intelligence; the suspicious use of native Windows utilities (like psr.exe or Snipping Tool) or PowerShell for automated or hidden captures; non-interactive processes creating image files; screen capture tools running under system-level accounts; statistically significant spikes in outbound image file transfers, especially to untrusted destinations; and periodic, machine-like execution patterns of screen capture tools that deviate from normal user behavior.
type: technique
related:
  - TA0009: Collection
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Are there any process creation events or network file transfers that match known unauthorized screen capture utilities based on threat intelligence feeds?
    context: This question aims to detect the presence of known malicious or unauthorized screen capture tools by matching process hashes, process names, filenames, or MIME types against a curated list of indicators. A match provides a high-confidence signal that a known malicious tool is active on the network, enabling a rapid response.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - User workstations, Virtual Desktop Infrastructure (VDI) instances, Network egress points (e.g., firewalls, proxies).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process_creation_logs OR network_file_logs
          WHERE (process_hash IN threat_intel_hashes OR process_name IN threat_intel_names)
          OR (file_name MATCHES screen_capture_regex OR mime_type MATCHES screen_capture_regex)
  - question: Have any processes matching screen capture tool name patterns, but not on an allowlist, been observed with a very low prevalence across the enterprise?
    context: This question seeks to identify potentially malicious screen capture tools that are not yet part of a formal threat intelligence feed. By focusing on rare processes that masquerade as legitimate tools, analysts can uncover custom or newly deployed malware that would be missed by signature-based detection alone. Low prevalence is a strong indicator of a targeted, non-standard tool.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - User workstations, Virtual Desktop Infrastructure (VDI) instances, Network egress points (e.g., firewalls, proxies).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Step 1: Calculate prevalence of all process hashes over 30 days.
          // Step 2: Search for rare processes matching pattern.
          SEARCH process_creation_logs
          WHERE process_name MATCHES screen_capture_pattern
          AND process_hash NOT IN allowlist
          AND prevalence(process_hash) < 0.01
  - question: Has a machine learning model identified any processes as potentially malicious that are also associated with screen capture-related activities like specific file I/O or API calls?
    context: This question leverages a machine learning model to detect previously unseen or obfuscated screen capture malware. The model analyzes process metadata to score its likelihood of being malicious. This approach helps identify novel threats that don't match known signatures or statistical rarities, providing a more sophisticated layer of defense against advanced adversaries.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Zeek files.log
      - User workstations, Virtual Desktop Infrastructure (VDI) instances, Network egress points (e.g., firewalls, proxies).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process_events with ml_scores
          WHERE ml_score > high_threshold
          AND (process_behavior includes 'screen_capture_api' OR process_behavior includes 'image_file_io')
  - question: Are native Windows utilities or PowerShell being used with command-line arguments or script content that indicate automated or hidden screen capture?
    context: This question focuses on the malicious use of legitimate tools ('living off the land'). Adversaries abuse built-in utilities like psr.exe, snippingtool.exe, and PowerShell with specific arguments or .NET API calls to capture the screen without installing new software, making detection more difficult. Identifying these specific patterns is key to uncovering this technique.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - User workstations, especially those of privileged users or personnel handling sensitive data (e.g., finance, legal, R&D).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process_creation_logs OR powershell_script_block_logs
          WHERE (process_name IN ('psr.exe', 'snippingtool.exe') AND command_line MATCHES suspicious_args)
          OR (process_name = 'powershell.exe' AND script_block_content MATCHES '.CopyFromScreen')
  - question: Have there been any executions of PowerShell or other utilities with abnormally complex or high-entropy command lines?
    context: Adversaries often obfuscate their commands to evade simple keyword-based detections. This question uses statistical analysis to find outliers. An unusually long or random-looking (high-entropy) command line for a common process like PowerShell can indicate an obfuscated script, potentially used for malicious activities like screen capture.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - User workstations, especially those of privileged users or personnel handling sensitive data (e.g., finance, legal, R&D).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // For each user/process combination, calculate baseline mean/std dev of command line length and entropy.
          SEARCH new_process_creation_events
          CALCULATE z_score for command_line_length and command_line_entropy
          WHERE z_score > 3.0
  - question: Have any screen capture utilities been executed with a strong, machine-like periodicity on any given host?
    context: This question aims to distinguish automated malicious activity from normal user behavior. Humans typically do not take screenshots at exact, repeating intervals. Identifying a process that executes with a consistent, periodic frequency is a strong indicator of an automated script or malware used for persistent surveillance.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4104 (PowerShell Script Block Logging)
      - User workstations, especially those of privileged users or personnel handling sensitive data (e.g., finance, legal, R&D).
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          FOR each host:
            GET timestamps of screen_capture_utility_executions
            APPLY time-series analysis (e.g., FFT, autocorrelation)
            ALERT if a strong periodic signal is detected
  - question: Has a non-interactive process, such as a Windows service, been observed creating image files?
    context: Legitimate user-facing applications create screenshots, but system services or other non-interactive processes typically do not. This question looks for the anomalous behavior of a background process creating files with image extensions (.png, .jpg), which strongly suggests an automated, hidden screen capture mechanism is at play.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 4688
      - Endpoint file systems (especially temp directories like C:\Windows\Temp\, AppData\Local\Temp), Shared network drives, and staging servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          JOIN process_creation_events (Sysmon EID 1) with file_creation_events (Sysmon EID 11)
          WHERE process_parent IN ('services.exe', 'svchost.exe', 'taskhostw.exe')
          AND file_extension IN ('.png', '.jpg', '.bmp', '.gif')
  - question: Have any statistically rare combinations of process, parent process, file extension, and target directory been observed for file creation events?
    context: This question uses statistical analysis to find anomalous file creation activity that deviates from established enterprise-wide norms. By baselining normal activity, it can flag a file creation event as a rare occurrence (e.g., a process that has never written a .png file to C:\Windows\Temp before), which could indicate a novel or evasive threat.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 4688
      - Endpoint file systems (especially temp directories like C:\Windows\Temp\, AppData\Local\Temp), Shared network drives, and staging servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Build a frequency table of (process, parent, extension, directory) tuples over 30 days.
          SEARCH new_file_creation_events
          WHERE frequency_of(process, parent, extension, directory) < 0.1 percentile
  - question: Has an unsupervised machine learning model detected any anomalous file creation events?
    context: This question applies an anomaly detection model to learn the characteristics of normal file creation behavior across the enterprise. The model can then identify outliers that do not conform to this learned norm, even if the specific behavior has not been explicitly defined as malicious. This is effective for catching novel attack techniques that evade signature and rule-based systems.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 11 (Sysmon)
      - Windows Event ID 4688
      - Endpoint file systems (especially temp directories like C:\Windows\Temp\, AppData\Local\Temp), Shared network drives, and staging servers.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Train an Isolation Forest or similar model on baseline file creation event features.
          SCORE new_file_creation_events with the model
          ALERT on events with a high anomaly score
  - question: Has a known screen capture utility been executed by a system-level account or a non-interactive parent process?
    context: Screen capture tools are user-facing utilities. Their execution under a system account (like NT AUTHORITY\SYSTEM) or being spawned by a non-interactive process (like a remote admin tool or service host) is highly anomalous. This question looks for this specific high-fidelity indicator of malicious, automated screen capture.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Process execution logs on all endpoints, particularly Domain Controllers and critical application servers where interactive GUI use is rare.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          SEARCH process_creation_events
          WHERE process_name IN known_capture_utilities
          AND (user_context = 'NT AUTHORITY\SYSTEM' OR parent_process IN ('wmic.exe', 'psexec.exe', 'svchost.exe'))
  - question: Has a screen capture utility been observed with a parent process that is statistically rare for it?
    context: Every process typically has a common set of parent processes (e.g., explorer.exe is a common parent for many user-launched applications). This question identifies when a screen capture tool is launched by an unusual parent, which could indicate process injection or execution via a non-standard method, such as a malicious script or remote administration tool.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Process execution logs on all endpoints, particularly Domain Controllers and critical application servers where interactive GUI use is rare.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // For each child process, maintain a frequency distribution of its parent processes.
          SEARCH process_creation_events
          WHERE process_name IN known_capture_utilities
          AND parent_process is not in the top 99% of historical parents
  - question: Has a machine learning model classified any screen capture tool executions as 'non-interactive'?
    context: This question uses a supervised ML model trained to differentiate between interactive (user-driven) and non-interactive (automated) process executions. Applying this model to screen capture events provides a high-confidence method for detecting when these tools are being used for malicious, automated surveillance rather than legitimate user activity.
    answer_sources:
      - Windows Event ID 4688
      - Windows Event ID 1 (Sysmon)
      - Process execution logs on all endpoints, particularly Domain Controllers and critical application servers where interactive GUI use is rare.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Train a classifier on features like Session ID, User Account type, and Parent Process.
          SCORE screen_capture_utility_executions with the model
          ALERT where classification = 'non-interactive' with high confidence
  - question: Has a host that recently executed a suspicious screen capture process also been observed transferring image files to a destination with a poor reputation?
    context: This question correlates on-host activity with network activity to build a more complete attack narrative. It connects the act of capturing data (suspicious process execution) with the act of exfiltrating it (transferring image files to a known bad IP). This correlation provides much stronger evidence of a successful attack than either indicator would alone.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Network egress points (monitoring Zeek sensors), DNS resolution logs, and endpoint process execution logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          JOIN endpoint_process_logs with network_file_logs by source_ip and timestamp (within 5 mins)
          WHERE process_is_suspicious_capture = TRUE
          AND file_mime_type = 'image/*'
          AND destination_ip IN reputation_blacklist
  - question: Has any host exhibited a statistically significant spike in the volume or count of outbound image files?
    context: This question aims to detect data exfiltration by monitoring for unusual volumes of outbound image traffic from any single host. By establishing a historical baseline for each host, it can automatically flag activity that exceeds normal behavior (e.g., transferring 3 standard deviations more image data than usual), which may indicate a batch of captured screenshots being sent to an adversary.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Network egress points (monitoring Zeek sensors), DNS resolution logs, and endpoint process execution logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // For each host, establish a 30-day rolling baseline (mean, std dev) of hourly image file count and volume.
          SEARCH hourly_file_transfer_aggregates
          WHERE file_mime_type = 'image/*'
          AND (file_count > (mean + 3*std_dev) OR file_volume > (mean + 3*std_dev))
  - question: Has the total network-wide volume of outbound image traffic exceeded forecasted levels?
    context: This question provides a macro-level view of potential data exfiltration. It uses a time-series forecasting model to predict the expected amount of outbound image traffic for the entire network, accounting for normal business cycles. If the actual traffic significantly exceeds the model's prediction, it could indicate a large-scale, coordinated exfiltration event across multiple compromised hosts.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - Zeek conn.log
      - Zeek files.log
      - Zeek dns.log
      - Network egress points (monitoring Zeek sensors), DNS resolution logs, and endpoint process execution logs.
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Train a SARIMA or Prophet model on historical network-wide outbound image traffic volume.
          COMPARE actual_traffic_volume with forecasted_upper_confidence_bound
          ALERT if actual > forecast
  - question: Was a screen capture process executed while the active window title contained sensitive keywords?
    context: If active window title logging is available, this question provides powerful context by directly linking screen capture activity to the access of sensitive information. An alert that shows a screenshot was taken while a window titled 'VPN Login' or 'Password Manager' was active is a very high-fidelity indicator of credential or session theft.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations, Endpoints assigned to privileged users (e.g., domain admins, executives)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Requires EDR with active window title logging.
          SEARCH screen_capture_process_events
          WHERE active_window_title CONTAINS ('password', 'mfa', 'secret', 'vpn')
  - question: Have any screen capture processes been executed outside a user's normal working hours or with machine-like periodicity?
    context: This question aims to identify anomalous temporal patterns in screen capture activity. It establishes a baseline of a user's normal activity and looks for two types of deviations: executions outside of normal working hours (e.g., 3 AM) and executions that occur with a non-human, robotic cadence (e.g., every 5 minutes exactly). Both are strong indicators of automated malicious activity.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations, Endpoints assigned to privileged users (e.g., domain admins, executives)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // Profile user's typical activity hours.
          SEARCH screen_capture_events
          WHERE execution_time is >2 std dev from user's mean activity time
          OR time_delta_between_consecutive_events has very low std dev
  - question: Has a machine learning model identified any screen capture events as behavioral outliers for a specific user?
    context: This question uses unsupervised machine learning to model a user's normal screen capture behavior based on features like time of day and day of week. Any new screen capture event that does not fit into the user's established 'normal' clusters is flagged as an anomaly. This can detect a compromised account being used for surveillance in a way that deviates from the legitimate user's habits.
    answer_sources:
      - Windows Event ID 1 (Sysmon)
      - Windows Event ID 4688
      - User workstations, Endpoints assigned to privileged users (e.g., domain admins, executives)
    range: last 90 days
    queries:
      - technology: Pseudocode
        query: |
          // For each user, apply DBSCAN or similar clustering to historical screen capture events.
          SCORE new screen_capture_events
          ALERT if event is classified as an outlier/noise by the model