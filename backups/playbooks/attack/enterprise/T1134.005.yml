name: T1134.005: SID-History Injection
id: c4d4b3a0-61f1-4e7a-9a0d-8c7b6f5e4d3c
description: This playbook helps analysts investigate potential privilege escalation and defense evasion using SID-History Injection (T1134.005). It addresses whether an adversary has modified the sIDHistory attribute to gain elevated permissions. Key investigative paths include detecting the execution of known injection tools (e.g., mimikatz) on Domain Controllers via command-line analysis; identifying unauthorized or anomalous modifications to the sIDHistory attribute in directory service logs (e.g., adding privileged SIDs, targeting dormant accounts, or modifications from unauthorized sources); correlating sIDHistory changes with subsequent suspicious logons to critical systems; and auditing Active Directory for undocumented SIDs in user object attributes. The goal is to uncover the full attack chain from the initial injection to the subsequent abuse of elevated privileges.
type: technique
related:
- TA0004: Privilege Escalation
- TA0005: Defense Evasion
contributors:
- Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Are known SID-History injection tools being executed on Domain Controllers based on command-line arguments?
  context: This question focuses on detecting the direct use of known malicious tools like Mimikatz. Adversaries use specific commands (e.g., 'sid::add', 'sid::patch') to perform SID-History injection. Monitoring process creation events (Windows Event ID 4688) on critical assets like Domain Controllers for these specific command-line strings provides a high-fidelity indicator of an active attack.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH process_creation_events (EventID 4688) ON host_group='Domain Controllers' WHERE command_line CONTAINS ('sid::add' OR 'sid::patch' OR 'Invoke-SIDHistory' OR 'Add-DomainObjectSidHistory' OR 'lsadump::dcsync')
- question: Is there evidence of obfuscated command-line arguments on Domain Controllers that could indicate SID-History injection tool usage?
  context: Adversaries often obfuscate their commands to evade simple signature-based detection. By calculating the Shannon entropy of command-line arguments, we can identify strings with high randomness, which is a common characteristic of obfuscation. Establishing a baseline and alerting on outliers (e.g., top 2%) can reveal attempts to hide malicious tool execution.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: CALCULATE Shannon_entropy for command_line in process_creation_events (EventID 4688) ON host_group='Domain Controllers'. ALERT if entropy > 98th_percentile_baseline.
- question: Can machine learning models identify malicious command-line activity indicative of SID-History injection on Domain Controllers?
  context: This question explores a more advanced, behavioral approach. By training a supervised machine learning model (like Random Forest) on a labeled dataset of both malicious and benign command-line strings, we can create a classifier that scores new, unseen commands in real-time. This helps detect novel or slightly modified attack patterns that static rules might miss.
  answer_sources:
  - Windows Event ID 4688
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform
    query: APPLY classification_model to command_line in process_creation_events (EventID 4688) ON host_group='Domain Controllers'. ALERT if probability(malicious) > threshold.
- question: Have any well-known privileged SIDs been added to a user's sIDHistory attribute?
  context: This question looks for blatant privilege escalation attempts. Adversaries may inject well-known, high-privilege SIDs (like those for Domain Admins or Enterprise Admins) into a compromised user's sIDHistory. Monitoring for Directory Service Change events (Windows Event ID 5136) where the added SID matches a known privileged one is a critical detection method.
  answer_sources:
  - Windows Event ID 5136
  - Zeek ldap.log
  - Domain Controllers
  - Network segments containing LDAP traffic to Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH directory_service_changes (EventID 5136) WHERE attribute='sIDHistory' AND value IN ('S-1-5-domain-512', 'S-1-5-domain-519')
- question: Have there been an anomalous number of sIDHistory modifications for a single user?
  context: Legitimate sIDHistory modifications during a domain migration are typically infrequent events for any given user. An adversary, however, might make multiple attempts or changes. By establishing a baseline for modification rates, we can flag any user account with an unusual frequency of changes (e.g., more than one in 24 hours) as suspicious.
  answer_sources:
  - Windows Event ID 5136
  - Zeek ldap.log
  - Domain Controllers
  - Network segments containing LDAP traffic to Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: COUNT sIDHistory_modifications (EventID 5136) by user over 24h. ALERT if count > 1 OR count > 99th_percentile_baseline. EXCLUDE known_migration_accounts.
- question: Can machine learning models identify anomalous sIDHistory modification events?
  context: This question aims to detect subtle or novel attack patterns that defy simple rules. An unsupervised anomaly detection model (like Isolation Forest) can be trained on features of normal sIDHistory modifications (e.g., source IP, time of day, source account). The model can then identify new events that are rare and deviate significantly from established benign activity.
  answer_sources:
  - Windows Event ID 5136
  - Zeek ldap.log
  - Domain Controllers
  - Network segments containing LDAP traffic to Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform
    query: APPLY anomaly_detection_model to features(source_ip, source_account, time_of_day) from sIDHistory_modifications (EventID 5136). ALERT if anomaly_score is high.
- question: Has a user logged into a critical system for the first time immediately after their sIDHistory was modified?
  context: This question correlates the SID injection event with its immediate purpose: accessing new resources. A key indicator of attack is when a user's sIDHistory is modified, and then that same user immediately logs into a high-value asset (like a Domain Controller) where they have no prior access history. This stateful correlation is a powerful way to detect privilege abuse.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - Domain Controllers
  - Critical servers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: CORRELATE sIDHistory_modification (EventID 5136) for user WITH successful_logon (EventID 4624) by same user to host in 'Critical Asset' list within 30 minutes. EXCLUDE approved_migration_accounts.
- question: Following an sIDHistory modification, has a user logged into a host that is rare for them?
  context: Beyond just first-time access, any logon to a host that is historically infrequent for a user, especially after an sIDHistory modification, is suspicious. By maintaining a baseline of normal user-to-host logon activity, we can calculate a rarity score for new logons. A high rarity score post-modification suggests the user is leveraging new privileges to move laterally.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - Domain Controllers
  - Critical servers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: UEBA/SIEM
    query: ON sIDHistory_modification (EventID 5136) for user, MONITOR subsequent logons (EventID 4624). CALCULATE rarity_score based on historical user-host frequency. ALERT if score is high.
- question: Does a user's activity sequence show a pattern of SID injection followed by privileged access?
  context: This question seeks to identify a specific chain of events that strongly indicates an attack. A sequence analysis model (like an HMM or RNN) can be trained to recognize normal user behavior. It can then flag a sequence like 'sIDHistory modification -> logon to new critical asset -> privileged command execution' as a high-probability attack path that deviates from benign patterns.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - Domain Controllers
  - Critical servers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform
    query: APPLY sequence_analysis_model to user_activity_stream. ALERT if sequence matches ('sIDHistory_mod' -> 'logon_new_critical_host' -> 'privileged_cmd').
- question: Has the total number of sIDHistory modifications on a Domain Controller exceeded a simple threshold in a short time?
  context: This question uses a simple volume-based approach to detect bulk changes. An adversary attempting to modify multiple accounts, or a malfunctioning script, might generate a large number of sIDHistory modification events in a short period. A fixed threshold (e.g., more than 5 events in an hour) can serve as a basic but effective tripwire for such activity.
  answer_sources:
  - Windows Event ID 5136
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: COUNT sIDHistory_modifications (EventID 5136) per hour. ALERT if count > 5.
- question: Has the rate of sIDHistory modifications on a Domain Controller recently spiked compared to its moving average?
  context: This question enhances simple thresholding by using a dynamic baseline. By calculating a moving average of sIDHistory modification events, the system can adapt to normal fluctuations in activity. An alert is triggered only when the current count significantly deviates (e.g., by more than three standard deviations) from this moving average, making it more resilient to false positives than a fixed threshold.
  answer_sources:
  - Windows Event ID 5136
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: CALCULATE moving_average and standard_deviation for hourly sIDHistory_modification (EventID 5136) counts. ALERT if current_count > (moving_average + 3 * std_dev).
- question: Does the volume of sIDHistory modifications represent a statistically significant anomaly in the time-series data?
  context: This is the most advanced approach to volume-based detection. A time-series anomaly detection algorithm (like Seasonal-Hybrid ESD) can model complex patterns, including seasonality (e.g., planned weekend migrations) and long-term trends. It can then identify spikes that are statistically significant departures from the established norm, providing high-fidelity alerts for events that are truly unusual.
  answer_sources:
  - Windows Event ID 5136
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform
    query: APPLY time_series_anomaly_detection_model to sIDHistory_modification (EventID 5136) event counts. ALERT on statistically significant spikes.
- question: Was an sIDHistory modification performed by an unauthorized user or from an unapproved system?
  context: Legitimate sIDHistory modifications are typically performed by a small, authorized set of administrators from specific workstations as part of a planned migration. This question aims to detect any modification that deviates from this standard. By maintaining an allow-list of authorized accounts and source IPs/hostnames, any modification from a source not on the list is immediately suspicious.
  answer_sources:
  - Windows Event ID 5136
  - Zeek ldap.log
  - Windows Event ID 4624
  - Domain Controllers
  - Administrative workstations
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: SEARCH sIDHistory_modifications (EventID 5136) WHERE source_account NOT IN approved_admins_list OR source_ip NOT IN approved_systems_list.
- question: Was an sIDHistory modification performed by a rare combination of user and source IP?
  context: This question seeks to identify unusual administrative activity without relying on a static allow-list. By analyzing historical data, we can determine how frequently a specific administrator account performs sIDHistory modifications from a specific IP address. An event originating from a user/IP combination that has rarely or never performed this action before is a statistical anomaly worth investigating.
  answer_sources:
  - Windows Event ID 5136
  - Zeek ldap.log
  - Windows Event ID 4624
  - Domain Controllers
  - Administrative workstations
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: UEBA/SIEM
    query: FOR each sIDHistory_modification (EventID 5136), CALCULATE historical frequency of (source_account, source_ip) pair. ALERT if frequency is in the 1st percentile (extremely rare).
- question: Can a machine learning model distinguish legitimate sIDHistory modifications from anomalous ones?
  context: This question uses a behavioral modeling approach to define 'normal' administrative action. A One-Class SVM model can be trained on the features of legitimate sIDHistory modification events (source IP block, user's group memberships, time of day). It creates a boundary around normal activity, and any new event that falls outside this boundary is flagged as a potential threat.
  answer_sources:
  - Windows Event ID 5136
  - Zeek ldap.log
  - Windows Event ID 4624
  - Domain Controllers
  - Administrative workstations
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform
    query: APPLY One-Class_SVM_model to features of sIDHistory_modification (EventID 5136). ALERT if event is classified as an outlier.
- question: Was the sIDHistory of a dormant or service account modified?
  context: This question focuses on the type of account being targeted. Dormant accounts (e.g., no logon for 90+ days) and service accounts not involved in migrations are highly unlikely targets for legitimate sIDHistory changes. An adversary might target these accounts because they are less monitored. Alerting on modifications to these account types can reveal attempts to gain privileges stealthily.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - PowerShell Get-ADUser output
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: ON sIDHistory_modification (EventID 5136), CHECK if target_account is in 'dormant_accounts_list' or 'service_accounts_list'. ALERT if true and not part of approved change.
- question: Was the sIDHistory of an account that has been inactive for an unusually long time modified?
  context: This question uses the dormancy period of an account as a risk feature. Instead of a fixed 90-day threshold, it looks for statistical outliers. When an sIDHistory modification occurs, we can check the 'days since last logon' for the target account. If that duration is in the 95th percentile or higher (i.e., among the most dormant accounts in the organization), it should be flagged for immediate review.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - PowerShell Get-ADUser output
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: UEBA/SIEM
    query: ON sIDHistory_modification (EventID 5136), GET 'days_since_last_logon' for target_account. ALERT if value is in 95th percentile or higher.
- question: Did an account classified as 'dormant' or 'service' by a clustering model have its sIDHistory modified?
  context: This question uses machine learning to dynamically categorize accounts. K-Means clustering can group user accounts based on their activity patterns (logon frequency, times, resources accessed). If an account residing in a cluster identified as 'dormant' or 'service accounts' suddenly has its sIDHistory modified, this represents a significant deviation from its group's behavior and is a strong anomaly indicator.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - PowerShell Get-ADUser output
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform
    query: ON sIDHistory_modification (EventID 5136), get account_cluster_id. ALERT if cluster_id corresponds to 'dormant' or 'service' account profile.
- question: Did a user with a populated sIDHistory perform a privileged action not granted by their explicit group memberships?
  context: This question seeks to detect the actual abuse of injected SIDs. It requires correlating a privileged action (like adding a user to 'Domain Admins', Event ID 4728) with the actor's permissions. If the user who performed the action is not an explicit member of a group authorized to do so, but their account has a populated sIDHistory, it is strong evidence that they are leveraging injected privileges.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4728
  - Windows Event ID 4732
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: SIEM
    query: ON privileged_action (e.g., EventID 4728), CHECK if performing_user has populated sIDHistory AND is NOT in authorized_group_list for that action. ALERT if both are true.
- question: Did a user with a populated sIDHistory perform an action that is a statistical outlier for them and their peers?
  context: This question leverages a User and Entity Behavior Analytics (UEBA) approach. A UEBA system profiles the typical behavior of each user and their peer groups (users with similar roles and permissions). If a user whose account has a populated sIDHistory performs an action that is a major statistical outlier compared to their own past behavior and that of their peers, it indicates potential abuse of un-profiled, injected privileges.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4728
  - Windows Event ID 4732
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: UEBA
    query: ON any action by user with populated sIDHistory, CALCULATE anomaly_score based on user's and peers' behavioral baseline. ALERT if score is high.
- question: Can a graph-based model detect when a user leverages an implicit permission from an injected SID?
  context: This question models Active Directory permissions as a graph. A user's explicit permissions form a set of paths to resources. An injected SID creates a new, 'implicit' edge in this graph. A graph-based anomaly detection model can identify when a user performs an action that leverages this implicit edge, which would be topologically improbable or distant based on their original, explicit position in the graph.
  answer_sources:
  - Windows Event ID 5136
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Windows Event ID 4728
  - Windows Event ID 4732
  - Domain Controllers
  - SIEM/Log Aggregator
  range: last 90 days
  queries:
  - technology: ML Platform/Graph Database
    query: MODEL AD permissions as a graph. ON user action, DETECT if access path relies on an 'implicit edge' created by an injected SID. ALERT if detected.
- question: Are there any accounts in Active Directory with undocumented sIDHistory attributes?
  context: This question focuses on periodic, systematic auditing to find lingering signs of compromise. A script should be run on a regular schedule (e.g., weekly) to query all AD user objects for a populated sIDHistory attribute. The results are then compared against an allow-list of accounts from documented, approved migration projects. Any account with an sIDHistory that isn't on the list is a high-priority finding.
  answer_sources:
  - PowerShell Get-ADUser output
  - Change Management Records
  - Domain Controllers
  - Change Management System/Ticketing System
  range: last 90 days
  queries:
  - technology: PowerShell/Scripting
    query: SCHEDULED_JOB Get-ADUser -Filter 'sIDHistory -like "*"' -Properties sIDHistory. COMPARE results against approved_migration_list. ALERT on any delta.
- question: Has the number or composition of accounts with populated sIDHistory attributes changed anomalously?
  context: This question tracks the overall posture of the environment over time. By trending the total count of accounts with a populated sIDHistory, a sudden increase not tied to a planned migration can be detected. Furthermore, analyzing the composition (e.g., percentage of privileged vs. non-privileged accounts) can reveal a suspicious trend, such as a growing number of non-privileged accounts having SIDs added.
  answer_sources:
  - PowerShell Get-ADUser output
  - Change Management Records
  - Domain Controllers
  - Change Management System/Ticketing System
  range: last 90 days
  queries:
  - technology: Scripting/SIEM
    query: TREND daily count of accounts with populated sIDHistory. ALERT on anomalous spike. CALCULATE percentage of privileged accounts in this set. ALERT if percentage of non-privileged accounts rises.
- question: Can we automatically validate sIDHistory attributes against change management documentation?
  context: This question describes an advanced, automated audit process. It involves using a Natural Language Processing (NLP) model to parse unstructured data from change management tickets and project documents. The model extracts key information like authorized user accounts and valid timeframes for migration. This structured data is then used to automatically and continuously validate the live state of Active Directory, flagging any sIDHistory attributes that are not documented.
  answer_sources:
  - PowerShell Get-ADUser output
  - Change Management Records
  - Domain Controllers
  - Change Management System/Ticketing System
  range: last 90 days
  queries:
  - technology: NLP/ML Platform
    query: USE NLP model to parse change_tickets and extract authorized_accounts and timeframes. CONTINUOUSLY compare Get-ADUser results against NLP output. ALERT on discrepancies.