name: "T1176.002: IDE Extensions"
id: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
description: |
  This playbook helps to determine if an adversary is maintaining persistence through compromised Integrated Development Environment (IDE) extensions. Malicious extensions can be used to execute code, exfiltrate data, or provide a backdoor into a developer's environment. This playbook investigates several indicators of compromise: the presence of extension files with known malicious hashes; network connections from IDEs to suspicious destinations; IDEs spawning unusual child processes (e.g., shells, network tools); extensions being installed from unapproved sources; IDEs accessing sensitive files outside of normal project scopes (e.g., credential stores, SSH keys); and network traffic patterns indicative of command-and-control (C2) beaconing or data exfiltration.
type: "technique"
related:
  - "TA0003: Persistence"
contributors:
  - "Zachary Szewczyk"
  - "Ask Sage"
created: "2025-10-01"
modified: "2025-10-01"
version: "1.0"
tags: "none"
questions:
  - question: "Are newly created IDE extension files known to be malicious, or are IDE processes communicating with known malicious infrastructure?"
    context: |
      This question uses a symbolic logic approach to find known threats. It involves continuously monitoring file creation events in standard IDE extension directories. When a new file is created, its hash is calculated and checked against a threat intelligence feed of malicious file signatures. Concurrently, it monitors all network traffic originating from IDE processes and cross-references the destination IP addresses and domains against a CTI blocklist. A match in either check provides a high-confidence indicator of compromise.
    answer_sources:
      - "Windows Event ID 4663"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 11 (FileCreate)"
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Developer workstations, build servers, network egress points, threat intelligence platforms."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH file_creation_events WHERE directory IN (ide_extension_dirs) | HASH file | LOOKUP hash in threat_intel_feed | ALERT on match."
      - "Pseudocode: SEARCH network_logs WHERE process_name IN (ide_processes) | LOOKUP destination_ip_or_domain in threat_intel_feed | ALERT on match."
  - question: "Are IDE processes making DNS queries for domains that are statistically rare or have high entropy, suggesting potential DGA or private C2 infrastructure?"
    context: |
      This question applies a statistical method to uncover potentially unknown malicious domains. For every domain queried by an IDE process, it calculates two metrics: Shannon entropy of the domain name and its rarity across the enterprise. High entropy can indicate a domain is algorithmically generated (DGA), a common technique for C2 infrastructure. High rarity (i.e., a domain accessed by very few other hosts) can indicate a private C2 server. Flagging domains that are outliers on these metrics can help identify suspicious C2 channels.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Developer workstations, build servers, network egress points, threat intelligence platforms."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH dns_logs JOIN process_logs WHERE process_name IN (ide_processes) | For each domain, CALCULATE shannon_entropy, CALCULATE enterprise_rarity_over_30_days | ALERT WHERE entropy > 3.5 OR rarity > 99th_percentile."
  - question: "Can a machine learning model classify network connections from IDE processes as malicious C2 communication based on their network features?"
    context: |
      This question leverages a supervised machine learning model to detect malicious network traffic that may not appear on traditional blocklists. The model is trained on a labeled dataset of benign and malicious network connections, using features like connection duration, bytes sent/received, protocol, connection state, and TLS fingerprinting (JA3/JA3S hashes). Once trained, the model can score live network traffic from IDEs and alert on connections it classifies as malicious with a high degree of confidence, enabling the detection of novel C2 channels.
    answer_sources:
      - "Zeek conn.log"
      - "Zeek dns.log"
      - "Zeek ssl.log"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Developer workstations, build servers, network egress points, threat intelligence platforms."
    range: "last 90 days"
    queries:
      - "Pseudocode: FROM ide_network_connections | EXTRACT features (duration, bytes, proto, state, ja3) | APPLY supervised_classifier_model | ALERT WHERE prediction == 'malicious' AND confidence > 0.90."
  - question: "Are IDE processes spawning child processes with suspicious command-line arguments, such as obfuscation tools or network utilities?"
    context: |
      This question uses a symbolic logic approach to detect malicious execution chains originating from an IDE. It involves creating a specific detection rule that monitors for process creation events where a known IDE executable is the parent process. The rule inspects the command line of the child process for high-risk patterns, such as the use of `powershell -enc` (encoded command), `Invoke-Expression`, `curl`, `wget`, or other tools commonly used for downloading and executing malicious payloads.
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Developer workstations, virtual desktop infrastructure (VDI) used for development, build servers."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH process_creation_events WHERE parent_process IN (ide_processes) AND command_line MATCHES REGEX ('powershell -enc', '-w hidden', 'IEX', 'curl', 'wget')."
  - question: "Are there statistically anomalous parent-child process relationships or command-line arguments originating from IDE processes?"
    context: |
      This question uses statistical analysis to find deviations from normal behavior. It establishes a baseline of normal child processes and command-line argument structures for each IDE over a 30-day period. It then flags two types of anomalies: 1) A rare parent-child relationship (e.g., an IDE spawning a system process it normally never interacts with), identified using a z-score. 2) A command line with unusually high entropy, which could indicate obfuscation. This helps detect abnormal execution without relying on known-bad signatures.
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Developer workstations, virtual desktop infrastructure (VDI) used for development, build servers."
    range: "last 90 days"
    queries:
      - "Pseudocode: For each ide_process | BASELINE normal_child_processes_and_cmd_entropy over 30_days | SEARCH new_process_creation_events | CALCULATE z-score_for_child_process_rarity, CALCULATE entropy_for_command_line | ALERT WHERE z-score > 3 OR entropy > 95th_percentile."
  - question: "Can an unsupervised machine learning model detect anomalous command-line arguments used in processes spawned by IDEs?"
    context: |
      This question employs an unsupervised anomaly detection model (e.g., an isolation forest) to identify novel malicious command lines. The model is trained on a large dataset of command-line arguments from processes spawned by IDEs, learning a representation of 'normal' activity. It can then score new command lines in real-time. Any command line that receives a high anomaly score is flagged for review, allowing for the detection of previously unseen attack techniques that would be missed by signature-based methods.
    answer_sources:
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Developer workstations, virtual desktop infrastructure (VDI) used for development, build servers."
    range: "last 90 days"
    queries:
      - "Pseudocode: FROM ide_child_process_command_lines | VECTORIZE arguments (e.g., TF-IDF) | TRAIN unsupervised_anomaly_detection_model | For each new_command_line, CALCULATE anomaly_score | ALERT WHERE score > 99th_percentile_threshold."
  - question: "Are IDE extensions being installed from unapproved network locations or by unauthorized processes?"
    context: |
      This question uses symbolic logic to detect non-standard extension installation methods. It has two components. First, it correlates network downloads to file writes in extension directories, alerting if the download source domain is not on an explicit allowlist of approved marketplaces. Second, it monitors the parent process responsible for writing files to extension directories. If the parent is not a recognized IDE or its package manager (e.g., `powershell.exe`, `cmd.exe`), it indicates a manual sideloading attempt, which is highly suspicious.
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 11 (FileCreate)"
      - "Developer workstations, network egress points, internal software repositories."
    range: "last 90 days"
    queries:
      - "Pseudocode: CORRELATE network_logs with file_creation_events in extension_dirs | ALERT WHERE download_domain NOT IN (allowlist_of_marketplaces)."
      - "Pseudocode: SEARCH file_creation_events in extension_dirs | GET parent_process | ALERT WHERE parent_process NOT IN (ide_processes, package_managers)."
  - question: "Are IDE extensions being downloaded from statistically rare domains?"
    context: |
      This question uses a statistical approach to identify suspicious download sources. It profiles all network domains that serve files written to IDE extension directories, calculating the prevalence of each domain (i.e., how many unique hosts download from it) across the enterprise over a 90-day period. Downloads from domains with very low prevalence (e.g., in the bottom 5th percentile) are flagged. This can uncover sideloading from private repositories or malicious sites that are not widely used.
    answer_sources:
      - "Zeek conn.log"
      - "Sysmon Event ID 11 (FileCreate)"
      - "Developer workstations, network egress points, internal software repositories."
    range: "last 90 days"
    queries:
      - "Pseudocode: For each source_domain for extension_downloads | CALCULATE prevalence (unique hosts) over 90_days | ALERT WHERE domain_prevalence < 5th_percentile."
  - question: "Is there an anomalous spike in the volume of data being downloaded to IDE extension directories, potentially indicating a supply chain attack?"
    context: |
      This question uses a time-series anomaly detection model to identify large-scale, coordinated events. It monitors the volume of data (in bytes) downloaded to extension directories, aggregated hourly. The model learns the normal patterns, including seasonality (e.g., higher activity during work hours). A sudden, massive spike in download volume that deviates significantly from the model's forecast can indicate a supply chain attack where a malicious extension is being pushed to many developers simultaneously.
    answer_sources:
      - "Zeek conn.log"
      - "Sysmon Event ID 11 (FileCreate)"
      - "Developer workstations, network egress points, internal software repositories."
    range: "last 90 days"
    queries:
      - "Pseudocode: AGGREGATE hourly download_volume_to_extension_dirs | APPLY time_series_anomaly_model (e.g., Prophet) | ALERT WHERE observed_volume is outside 99% confidence_interval."
  - question: "Is a process associated with an IDE accessing sensitive files or directories like credential stores or SSH keys?"
    context: |
      This question uses a high-fidelity symbolic rule to detect credential and data theft attempts. It alerts whenever a process whose ancestry traces back to a known IDE executable performs a file access operation on a predefined list of sensitive paths. This list should include user credential stores (`.aws/`, `.gcp/`), SSH key directories (`.ssh/`), browser password databases, and critical system directories. Access to these areas by an IDE is almost always unauthorized and highly indicative of malicious activity.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 11 (FileCreate)"
      - "Developer workstations, servers hosting sensitive user profiles (e.g., file servers, domain controllers), code repositories."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH file_access_events WHERE process_ancestry CONTAINS (ide_processes) AND target_path IN (sensitive_paths_list)."
  - question: "Is an IDE process accessing files in directories that are statistically outside of its normal project scope for a given user?"
    context: |
      This question uses a statistical method to detect when an IDE is 'snooping' outside of its expected boundaries. For each user, it establishes a baseline of parent directories normally accessed by their IDE processes, representing their typical project scope. For each new file access, it calculates the Jaccard distance between the file's parent directory and the user's baseline. A high distance score indicates the IDE is accessing a location with little to no overlap with its normal activity, which is suspicious.
    answer_sources:
      - "Sysmon Event ID 11 (FileCreate)"
      - "Developer workstations, servers hosting sensitive user profiles (e.g., file servers, domain controllers), code repositories."
    range: "last 90 days"
    queries:
      - "Pseudocode: For each user, BASELINE normal_IDE_access_directories over 30_days | For each new_file_access, CALCULATE jaccard_distance between new_dir and baseline_dirs | ALERT WHERE distance > 0.8."
  - question: "Can a graph-based machine learning model identify anomalous interactions, such as an IDE process accessing a credential file?"
    context: |
      This question applies advanced machine learning to model system behavior as a heterogeneous graph, with nodes representing processes, files, and network destinations, and edges representing their interactions. By applying graph embedding and clustering algorithms, the model can identify 'normal' clusters of development activity. Any node or edge that is classified as an outlier or noise by the clustering algorithm represents an anomalous interaction, such as an IDE process suddenly accessing a sensitive credential file it has never touched before.
    answer_sources:
      - "Windows Event ID 4688"
      - "Windows Event ID 4663"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 11 (FileCreate)"
      - "Developer workstations, servers hosting sensitive user profiles (e.g., file servers, domain controllers), code repositories."
    range: "last 90 days"
    queries:
      - "Pseudocode: CONSTRUCT activity_graph (nodes: processes, files; edges: interactions) | APPLY graph_embedding and clustering (e.g., DBSCAN) | ALERT on outlier_nodes_or_edges."
  - question: "Are IDE processes making network connections to known malicious destinations or attempting DNS tunneling?"
    context: |
      This question uses symbolic logic to detect clear signs of malicious networking. First, it correlates process and network logs to identify traffic from IDEs and alerts if any connection is made to a destination IP or domain on a threat intelligence blocklist. Second, it hunts for DNS tunneling, a covert C2 technique, by looking for network traffic where the service is identified as DNS but the destination port is not the standard port 53.
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 3 (NetworkConnect)"
      - "Developer workstations, network egress points (firewalls, proxies), DNS servers."
    range: "last 90 days"
    queries:
      - "Pseudocode: SEARCH network_logs WHERE process_name IN (ide_processes) AND destination IN (threat_intel_feed)."
      - "Pseudocode: SEARCH network_logs WHERE service == 'dns' AND destination_port != 53."
  - question: "Are network connections from IDE processes exhibiting periodic beaconing behavior or anomalously large data exfiltration?"
    context: |
      This question uses statistical methods to find C2 patterns in network traffic. It looks for two indicators. First, it detects 'heartbeat' beaconing by grouping connections by source/destination and calculating the standard deviation of the time between connections; a very low deviation indicates a fixed, automated interval. Second, it detects data exfiltration by creating a baseline of normal outbound data volume for each user's IDE and alerting when any new connection significantly exceeds this threshold (e.g., the 99th percentile).
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 3 (NetworkConnect)"
      - "Developer workstations, network egress points (firewalls, proxies), DNS servers."
    range: "last 90 days"
    queries:
      - "Pseudocode: For each source-dest_pair from IDEs, CALCULATE stdev_of_time_delta_between_connections | ALERT WHERE stdev < 1.0 AND connection_count > 5."
      - "Pseudocode: For each user, BASELINE normal_bytes_sent from IDEs over 30_days | ALERT WHERE new_connection_bytes > 99th_percentile."
  - question: "Can a time-series decomposition model detect anomalies in network traffic patterns from IDE processes that are not explained by normal trends or seasonality?"
    context: |
      This question applies a time-series decomposition model to IDE network traffic, aggregated per host per minute. The model separates the traffic data into three components: trend (long-term direction), seasonality (repeating patterns, like daily work cycles), and residual (the unexplained remainder). A sudden, large spike in the residual component represents an anomaly that is not part of the normal workflow. Alerting on high residual values can uncover hidden C2 activity that might be lost in overall network noise.
    answer_sources:
      - "Zeek conn.log"
      - "Windows Event ID 4688"
      - "Sysmon Event ID 1 (ProcessCreate)"
      - "Sysmon Event ID 3 (NetworkConnect)"
      - "Developer workstations, network egress points (firewalls, proxies), DNS servers."
    range: "last 90 days"
    queries:
      - "Pseudocode: AGGREGATE per-minute traffic from IDEs | APPLY time-series_decomposition_model | CALCULATE residual_component | ALERT WHERE residual > 3 * stdev(residuals)."