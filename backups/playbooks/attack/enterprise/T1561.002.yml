name: T1561.002: Disk Structure Wipe
id: f47ac10b-58cc-4372-a567-0e02b2c3d479
description: This playbook helps determine if an adversary is attempting to impact system availability by wiping disk structures. This involves detecting known disk-wiping malware, unauthorized write access to raw physical disks or critical boot files, execution of destructive commands on network devices, installation of suspicious unsigned kernel drivers, and worm-like propagation behavior used to spread wiper malware.
type: technique
related:
- TA0040: Impact
contributors:
- Zachary Szewczyk
- Ask Sage
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
- question: Has a process been created or a service installed whose name or hash matches a known wiper malware signature?
  context: This question seeks to identify the most direct evidence of a wiper attack by matching process or service activity against a threat intelligence feed of known malware. A positive match on a signature for malware like Shamoon, StoneDrill, or NotPetya provides a high-confidence alert that a destructive payload is active. This is a fundamental, signature-based detection approach.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Critical Application Servers, Domain Controllers, File Servers, User Workstations
  range: last 90 days
  queries:
  - siem: |-
      SEARCH process creation (EID 4688) OR service creation (EID 7045)
      WHERE (file_hash IN wiper_threat_intel_feed) OR (process_name IN wiper_threat_intel_feed)
      ALERT on any match
- question: Has a statistically rare process or service been observed with a name containing keywords related to disk wiping?
  context: This question aims to uncover unknown or modified wipers that evade signature-based detection. By establishing a baseline of normal process and service names, analysts can flag new activity that is statistically rare across the enterprise. Coupling rarity with the presence of high-risk keywords (e.g., 'wipe', 'disk', 'erase') helps to surface novel threats that exhibit suspicious naming conventions.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Critical Application Servers, Domain Controllers, File Servers, User Workstations
  range: last 90 days
  queries:
  - pseudocode: |-
      CALCULATE enterprise-wide frequency of all process/service names over 90 days
      FOR each new process/service event:
        IF (frequency < 0.1%) AND (name CONTAINS 'wipe' OR 'disk' OR 'erase' OR 'mbr'):
          ALERT
- question: Has a machine learning model classified any new process as a potential wiper based on its characteristics?
  context: This question leverages a machine learning classifier to detect sophisticated wipers that may not have obvious names or signatures. By training a model on a rich set of features—such as process name entropy, command-line structure, parent process, and user context—the system can learn to distinguish between benign and malicious execution patterns, generating high-probability alerts for activity that strongly resembles a wiper.
  answer_sources:
  - Windows Event ID 4688
  - Windows Event ID 7045
  - Critical Application Servers, Domain Controllers, File Servers, User Workstations
  range: last 90 days
  queries:
  - pseudocode: |-
      FOR each new process event:
        EXTRACT features (name_entropy, cli_args, parent_process, user_context)
        SCORE event with pre-trained classification model (e.g., Random Forest)
        IF score > high_confidence_threshold:
          ALERT
- question: Has a non-allowlisted process attempted to write to a raw physical disk object?
  context: This question looks for a highly privileged and suspicious action: direct manipulation of a disk's master boot record (MBR) or partition table. By enabling System Access Control Lists (SACLs) on physical disk objects (e.g., `\\.\PhysicalDrive*`), any write attempt will be logged. An alert on this activity from any process not on a strict allowlist (like legitimate disk utilities) is a critical indicator of a wiper attempting to make a system unbootable.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Boot sectors of critical servers (especially Domain Controllers, Hypervisors) and executive workstations, System partitions
  range: last 90 days
  queries:
  - siem: |-
      SEARCH object access events (EID 4663 or 4656)
      WHERE (object_name contains '\\.\PhysicalDrive') AND (access_mask contains 'Write') AND (process_name NOT IN disk_utility_allowlist)
      ALERT on any match
- question: Has any process shown a statistically anomalous frequency of access to raw disk objects?
  context: This question provides a behavioral approach to detecting unauthorized raw disk access. By baselining which processes normally access raw disk objects and at what frequency, an analyst can detect abnormal spikes in activity. A process that suddenly starts accessing these objects far more than its historical average (measured by Z-score), or a process that has never accessed them before, could indicate a compromised or malicious tool being used for destructive purposes.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Boot sectors of critical servers (especially Domain Controllers, Hypervisors) and executive workstations, System partitions
  range: last 90 days
  queries:
  - pseudocode: |-
      BASELINE hourly raw disk access frequency per process per host
      FOR each new raw disk access event:
        CALCULATE Z-score for the process's access frequency in the last hour
        IF (Z-score > 3) OR (process has no baseline):
          ALERT
- question: Has an anomaly detection model flagged any raw disk access events as high-risk deviations from normal behavior?
  context: This question uses an unsupervised machine learning model to find unusual raw disk access without predefined rules. The model learns the complex patterns of normal access, considering features like the process name, user account, and type of access requested. It can then flag any event that significantly deviates from this learned norm as a high-risk anomaly, potentially identifying a novel wiper technique.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4656
  - Boot sectors of critical servers (especially Domain Controllers, Hypervisors) and executive workstations, System partitions
  range: last 90 days
  queries:
  - pseudocode: |-
      FOR each raw disk access event:
        EXTRACT features (process_name, user_account, access_mask)
        SCORE event with pre-trained anomaly detection model (e.g., Isolation Forest)
        IF anomaly_score is high:
          ALERT
- question: Has a destructive command like 'format' or 'erase' been executed on a network device, potentially by an unauthorized user?
  context: This question addresses the threat of adversaries wiping the configuration or storage of critical network infrastructure like routers and switches. By monitoring network device AAA logs for specific, highly destructive commands (e.g., 'format flash:', 'erase startup-config'), an organization can get an immediate, high-severity alert. Correlating this with the user's role helps distinguish between a catastrophic mistake by a senior administrator and a malicious act.
  answer_sources:
  - Network Device AAA Logs
  - Core Routers, Core Switches, Firewalls, SAN Fabric Switches
  range: last 90 days
  queries:
  - siem: |-
      SEARCH aaa logs
      WHERE (command contains 'format flash:') OR (command contains 'erase startup-config') OR (command contains 'write erase')
      ENRICH with user role
      ALERT if user is not in 'Senior Network Administrators' group
- question: Has a network administrator executed statistically rare and destructive commands or exhibited unusual command session patterns?
  context: This question aims to detect compromised administrator accounts or insider threats on network devices. It moves beyond simple keyword matching by baselining the typical command usage for each administrator. An alert is triggered if an admin uses a destructive command that is statistically rare for them, or if their session behavior changes (e.g., command entropy drops), which could indicate automated, repetitive commands from a script rather than interactive management.
  answer_sources:
  - Network Device AAA Logs
  - Core Routers, Core Switches, Firewalls, SAN Fabric Switches
  range: last 90 days
  queries:
  - pseudocode: |-
      BASELINE command frequency and session entropy per network admin
      FOR each new command session:
        CALCULATE session entropy and check for rare destructive commands
        IF (destructive command is rare for user) OR (session entropy is anomalously low):
          ALERT
- question: Has a sequence-based anomaly detection model identified an unusual sequence of commands on a network device, such as a direct login to a 'format' command?
  context: This question applies machine learning to understand the 'grammar' of network administration. A model like an LSTM is trained on normal sequences of commands. It learns that admins typically run diagnostic commands ('show version', etc.) before making changes. An alert is triggered if the model detects a sequence that violates this grammar, such as a login followed immediately by a 'format' command, indicating a likely attack.
  answer_sources:
  - Network Device AAA Logs
  - Core Routers, Core Switches, Firewalls, SAN Fabric Switches
  range: last 90 days
  queries:
  - pseudocode: |-
      INPUT sequence of commands from an admin session into a pre-trained LSTM model
      MODEL predicts probability of next command in sequence
      IF actual command has very low probability (is anomalous):
        ALERT
- question: Has a new service been created for an unsigned kernel-mode driver that is not on an established allowlist?
  context: This question targets a common technique for sophisticated wipers: installing a malicious kernel-mode driver to gain deep system access. This is a highly specific and high-confidence query that correlates multiple events: a service creation (Event 7045), a code integrity failure indicating the driver is unsigned (Event 5038), and a check against an allowlist of known-good drivers. A match indicates a probable rootkit or driver-based wiper.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 6008
  - Windows Event ID 5038
  - Windows Event ID 7000
  - Domain Controllers, Hypervisors, Database Servers, Tier 0 assets
  range: last 90 days
  queries:
  - siem: |-
      JOIN (EID 7045 WHERE ServiceType='kernel-mode') with (EID 5038 on ImagePath)
      WHERE (service_name NOT IN driver_allowlist)
      ALERT on any match
- question: Have any new driver installations shown statistically unusual entropy in their 'Image Path' or 'Service Name'?
  context: This question seeks to identify suspicious drivers by analyzing their naming conventions. Malware authors may use algorithmically generated names (high entropy) to evade signature-based detection or overly generic names (low entropy) to blend in. By calculating the Shannon entropy of names and flagging those that are statistical outliers, analysts can identify potentially malicious drivers without needing a prior signature.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 6008
  - Windows Event ID 5038
  - Windows Event ID 7000
  - Domain Controllers, Hypervisors, Database Servers, Tier 0 assets
  range: last 90 days
  queries:
  - pseudocode: |-
      CALCULATE historical distribution of entropy for driver Service Names and Image Paths
      FOR each new driver installation (EID 7045):
        CALCULATE entropy of Service Name and Image Path
        IF entropy is in top or bottom 5th percentile of distribution:
          ALERT
- question: Has a time-series analysis correlated a spike in unsigned driver installations with a subsequent increase in unexpected shutdowns across the enterprise?
  context: This question looks for the macro-level effects of a coordinated wiper campaign. Instead of focusing on a single host, it uses time-series analysis to find a statistical correlation between a wave of unsigned driver installations (a potential delivery mechanism) and a subsequent wave of unexpected shutdowns (the impact). A strong correlation across the enterprise is a powerful indicator of a widespread, driver-based attack.
  answer_sources:
  - Windows Event ID 7045
  - Windows Event ID 6008
  - Windows Event ID 5038
  - Windows Event ID 7000
  - Domain Controllers, Hypervisors, Database Servers, Tier 0 assets
  range: last 90 days
  queries:
  - pseudocode: |-
      CREATE time-series of (count of unsigned driver installs) and (count of unexpected shutdowns)
      CALCULATE cross-correlation between the two time-series
      IF correlation is high and driver installs lead shutdowns:
        ALERT
- question: Has a non-allowlisted process deleted or modified critical boot files like BCD or winload.exe?
  context: This question focuses on direct attacks against the Windows boot process. By enabling file system auditing on critical files (e.g., BCD, winload.exe), an organization can log all modification and deletion attempts. A SIEM rule can then generate a high-priority alert if any process not on a very strict allowlist (e.g., `TrustedInstaller.exe`) attempts to write to or delete these files, indicating a direct attempt to render the system unbootable.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - System partitions (e.g., C:\Boot), Windows\System32 directories on all endpoints and servers, Boot Configuration Data stores
  range: last 90 days
  queries:
  - siem: |-
      SEARCH file access events (EID 4663)
      WHERE (file_path IN critical_boot_files_list) AND (access_type IN ('DELETE', 'WRITE_DATA')) AND (process_name NOT IN boot_utility_allowlist)
      ALERT on any match
- question: Has there been a statistically significant increase in the rate of file modifications within critical system directories on any host?
  context: This question provides a behavioral approach to detecting tampering in critical system directories like C:\Boot. Instead of monitoring individual files, it monitors the overall rate of change within these directories. By using a sliding window to calculate a moving average and standard deviation of modification events, it can detect a sudden, anomalous spike in activity that exceeds a dynamic threshold, which could be indicative of a wiper scrambling files.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - System partitions (e.g., C:\Boot), Windows\System32 directories on all endpoints and servers, Boot Configuration Data stores
  range: last 90 days
  queries:
  - pseudocode: |-
      FOR each host, BASELINE rate of file modifications in C:\Boot\*
      CALCULATE moving average and standard deviation
      IF current rate > (moving_average + 3 * std_dev):
        ALERT
- question: Has a graph-based analysis detected a new or rare process rapidly modifying multiple critical system files?
  context: This question models system activity as a graph, where processes and files are nodes and actions are edges. A wiper's activity would appear as an anomalous subgraph: a new or rare process node creating multiple 'modify' or 'delete' edges to critical file nodes in a short timeframe. Using community detection or similar graph algorithms can spot these concentrated bursts of malicious activity, especially if they appear across multiple hosts.
  answer_sources:
  - Windows Event ID 4663
  - Windows Event ID 4688
  - System partitions (e.g., C:\Boot), Windows\System32 directories on all endpoints and servers, Boot Configuration Data stores
  range: last 90 days
  queries:
  - pseudocode: |-
      MODEL process and file activity as a graph
      IDENTIFY subgraphs where a single process node connects to many critical file nodes via 'write' or 'delete' edges in a short time window
      IF subgraph is anomalous or appears on multiple hosts:
        ALERT
- question: Is there evidence of a 'spray and pray' login attempt followed by a successful login and subsequent file transfer or remote process creation?
  context: This question identifies the full chain of a common worm propagation technique. It correlates multiple data sources to detect an adversary attempting to guess credentials across many hosts (high rate of logon failures), eventually succeeding, and then immediately using that access to spread malware via SMB file transfer or remote process creation. Detecting this specific sequence is a strong indicator of an automated attack.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek smb_files.log
  - Authentication logs from Domain Controllers, Network traffic at key network chokepoints, Endpoint process and network logs from server VLANs
  range: last 90 days
  queries:
  - siem: |-
      TRIGGER on source_ip with >10 logon failures (EID 4625) to >5 hosts in 5 min
      IF same source_ip has successful logon (EID 4624)
      AND is immediately followed by new executable transfer (Zeek smb_files.log) or remote process creation (EID 4688):
        ALERT
- question: Has any host exhibited a statistically anomalous fan-out of SMB/RPC connections, suggesting worm-like propagation?
  context: This question focuses on the network behavior of a compromised host trying to spread malware. By profiling the normal 'fan-out' (the number of unique destinations a host connects to on port 445/SMB), an organization can detect when a host's behavior changes dramatically. A system that suddenly connects to hundreds of other hosts, far exceeding its 99th percentile baseline, is a strong candidate for being the patient zero of a worm.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek smb_files.log
  - Authentication logs from Domain Controllers, Network traffic at key network chokepoints, Endpoint process and network logs from server VLANs
  range: last 90 days
  queries:
  - pseudocode: |-
      FOR each host, PROFILE hourly count of unique destinations on port 445
      CALCULATE 99th percentile of this count
      IF current hourly count > 99th_percentile_baseline:
        ALERT
- question: Has a Hidden Markov Model detected a state transition from 'Normal Operations' to 'Wiper Propagation' on any host?
  context: This question uses a sophisticated state-based model to understand the adversary lifecycle. A Hidden Markov Model (HMM) is trained to recognize the characteristics of different states, such as 'Normal' (low failed logins, low SMB traffic) and 'Propagation' (high failed logins, high remote execution). The model can then detect the transition between these states based on a time-series of log data, providing an alert that an attack is underway.
  answer_sources:
  - Windows Event ID 4625
  - Windows Event ID 4624
  - Windows Event ID 4688
  - Zeek conn.log
  - Zeek smb_files.log
  - Authentication logs from Domain Controllers, Network traffic at key network chokepoints, Endpoint process and network logs from server VLANs
  range: last 90 days
  queries:
  - pseudocode: |-
      INPUT time-series of features (failed logins, remote exec, smb volume) into a pre-trained HMM
      IF model transitions from 'Normal' state to 'Propagation' state:
        ALERT