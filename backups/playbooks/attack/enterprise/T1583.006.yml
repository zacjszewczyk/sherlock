name: T1583.006: Web Services
id: 3e6a9f1b-8c4d-4e2a-9b1c-0d7e5f3a2b1d
description: This playbook helps investigate whether an adversary is developing or leveraging resources using external web services (e.g., GitHub, Pastebin, Discord) for malicious purposes. It focuses on detecting suspicious activity such as connections to known malicious indicators hosted on these services, outbound requests matching malware patterns, anomalous user behavior related to resource creation, unusual data transfer sizes or frequencies, and connections to newly observed, low-prevalence resources.
type: technique
related:
  - TA0042: Resource Development
contributors:
  - Zachary Szewczyk
created: 2025-10-01
modified: 2025-10-01
version: 1.0
tags: none
questions:
  - question: Have any internal hosts connected to a URL, domain, or IP address on a web service that is a known malicious indicator?
    context: This question aims to detect direct connections to command-and-control (C2) servers, malware drop sites, or other malicious infrastructure hosted on legitimate web services. Correlating network egress logs with high-fidelity threat intelligence is a fundamental step in identifying known threats. A match indicates a high probability of compromise or malicious activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH outbound_network_logs (conn.log, dns.log, http.log) WHERE destination_ip OR destination_domain OR destination_uri IN threat_intelligence_feed_of_web_services_indicators;
  - question: Are there any connections to common web services (e.g., GitHub, Pastebin, Discord) with unusually high URI entropy?
    context: Adversaries often use algorithmically generated URIs for C2 communications to evade simple signature-based detection. These URIs can appear random and have high entropy. By establishing a baseline for normal URI entropy on legitimate services, we can spot outliers that may represent this type of C2 activity.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - language: pseudocode
        query: CALCULATE shannon_entropy(http.log.uri_path, http.log.uri_query) FOR connections TO common_web_services; ALERT WHERE entropy > 99th_percentile_baseline;
  - question: Has there been a statistically significant deviation in traffic volume (bytes or connections) to popular web services?
    context: A sudden, anomalous spike or change in the volume of traffic to a web service can indicate the activation of a C2 channel, large-scale data staging for exfiltration, or the mass download of malicious tools. Time-series analysis helps to distinguish these events from normal fluctuations in network traffic.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek dns.log
      - Network Egress Points (e.g., Firewalls, Proxies)
    range: last 90 days
    queries:
      - language: pseudocode
        query: MODEL traffic_volume (bytes, connections) FROM conn.log TO popular_web_services using ARIMA/LSTM; ALERT on significant_deviation FROM forecast;
  - question: Are there any outbound HTTP/S requests to web services with URI structures or SSL fingerprints matching known malware patterns?
    context: Malware frequently uses specific, predictable URI patterns for staging, tool retrieval, or C2 on platforms like GitHub or Pastebin. Additionally, malware families may use specific TLS/SSL libraries, resulting in unique JA3/JA3S fingerprints. Matching against these patterns and fingerprints can uncover malicious activity even when the destination IP or domain is not on a threat list.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek files.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH http.log WHERE uri MATCHES regex_list_of_malicious_patterns; CORRELATE with ssl.log WHERE ja3_hash OR ja3s_hash IN known_malicious_fingerprints;
  - question: Are users downloading file types from code or file-hosting sites that are inconsistent with their job role or are typical of malware stagers?
    context: This question seeks to identify suspicious file downloads that may be part of an initial access or execution phase. For example, a user in a non-technical role downloading an executable or PowerShell script from GitHub is highly anomalous. Small file sizes can also be indicative of a stager, which is a small piece of code designed to download a larger payload.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek files.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH files.log WHERE file_type IN ('application/x-dosexec', 'application/x-powershell'); BASELINE file_types_per_user_role; ALERT on deviation OR file_size < 10KB;
  - question: Have any connections to web services been classified as 'suspicious C2-like' by a machine learning model?
    context: This question leverages a machine learning model to perform advanced classification. By training on a variety of features (URI length, user-agent rarity, JA3 hash, parent process), the model can learn the subtle characteristics of C2 traffic disguised as legitimate web service activity, providing a more robust detection method than single-indicator checks.
    answer_sources:
      - Zeek http.log
      - Zeek ssl.log
      - Zeek files.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - language: pseudocode
        query: CLASSIFY connections to web_services using Random_Forest_model on features (uri_length, user_agent, ja3_hash, parent_process); ALERT where classification is 'suspicious_c2_like' with high_confidence;
  - question: Has any user accessed multiple resource creation pages (e.g., sign-up, new API key, new repository) across several distinct web services in a short period?
    context: An adversary who has compromised an account may need to set up infrastructure across multiple services. This can manifest as a flurry of activity related to creating accounts, repositories, or API tokens. Monitoring for this specific sequence of actions can detect the initial stages of resource development.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal Network Segments (User Workstations)
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH http.log WHERE uri_path MATCHES (signup, new, generate_key, create-repo); COUNT distinct_services_per_user in 1_hour_window; ALERT if count > 3;
  - question: Has any user's activity on resource-creation pages shown a statistically significant increase compared to their own historical baseline?
    context: This question focuses on detecting anomalous behavior at the individual user level. Even if a user's role involves some resource creation, a sudden, sharp increase in this activity can be a strong indicator that their account has been compromised and is being used by an adversary to build out operational infrastructure.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal Network Segments (User Workstations)
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - language: pseudocode
        query: BASELINE daily/weekly count of visits to resource_creation_pages per_user; CALCULATE Z-score against 30-day rolling baseline; ALERT if Z-score > 3;
  - question: Is any user exhibiting web browsing behavior, specifically related to development or infrastructure services, that is a significant deviation from their peer group?
    context: Users in similar roles tend to have similar web browsing habits. Peer group analysis formalizes this concept. When a user's activity suddenly deviates from their group—for instance, an accountant suddenly starts browsing GitHub repositories—it is a strong anomaly signal that could indicate account compromise or an insider threat.
    answer_sources:
      - Zeek http.log
      - Zeek dns.log
      - Internal Network Segments (User Workstations)
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - language: pseudocode
        query: CLUSTER users into peer_groups based on web_browsing_habits (TF-IDF of domains); IDENTIFY outliers whose activity deviates from their cluster, especially with spikes in visits to dev/infra web_services;
  - question: Has any host uploaded an unusually large file to a non-corporate file-sharing service or made repeated small uploads in a short time?
    context: This question aims to detect data exfiltration. A large, single upload could be a direct attempt to steal a significant amount of data. Alternatively, adversaries may split data into smaller chunks and upload them sequentially to evade simple size-based thresholds, a technique known as "chunking."
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - language: pseudocode
        query: SEARCH file_uploads to non-corporate_services; ALERT if file_size > 100MB OR if upload_count > 10 in 5_minutes to same_destination;
  - question: Has any host-to-service data transfer (upload or download) significantly exceeded its historical size baseline, or does the transferred data have consistently high entropy?
    context: This is a more sophisticated approach to detecting anomalous data transfers. By baselining normal behavior for each specific host-to-service interaction, we can detect outliers more accurately. High data entropy is also a key indicator, as it often suggests the data is encrypted or compressed to obfuscate exfiltrated data.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - language: pseudocode
        query: BASELINE upload/download_sizes for each host-service_pair from conn.log; ALERT on transfers > 95th_percentile; CALCULATE entropy of file_contents from files.log; ALERT if entropy > 7.5;
  - question: Have any connections to web services been grouped into anomalous clusters by a clustering algorithm?
    context: This question uses unsupervised machine learning to find 'unknown unknowns' in network traffic. By grouping connections based on features like duration and bytes transferred, the algorithm can identify distinct patterns of behavior. Clusters representing unusual combinations, such as short-duration, high-data transfers (tool staging) or long-duration, low-data connections (C2 beaconing), can be flagged.
    answer_sources:
      - Zeek conn.log
      - Zeek http.log
      - Zeek files.log
      - Windows Event ID 4688
      - Network Egress Points (e.g., Firewalls, Proxies)
      - Endpoint Devices
    range: last 90 days
    queries:
      - language: pseudocode
        query: CLUSTER connections to web_services using DBSCAN on features (total_bytes, duration, protocol); IDENTIFY and ALERT on anomalous clusters;
  - question: Has any host connected to a new, never-before-seen FQDN or URL on a high-risk web service?
    context: Adversaries often set up new infrastructure on legitimate services for their campaigns. The very first time a resource (like a specific GitHub page or Pastebin link) is accessed from within an organization is a critical and suspicious event. This "first-seen" analysis is a powerful technique for detecting emerging threats.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - language: pseudocode
        query: MAINTAIN historical_lookup_table of all FQDNs/URLs; SEARCH dns.log, http.log for requests to high-risk_services (github.io, pastebin.com); ALERT if FQDN/URL is not in historical_table;
  - question: Has a newly observed FQDN or URL been accessed by only a very small number of internal hosts?
    context: While benign new resources may quickly become popular, malicious C2 infrastructure is often targeted and accessed by only one or a few compromised hosts. Therefore, a low prevalence for a newly seen resource is a strong indicator of malicious intent.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - language: pseudocode
        query: FOR each new_FQDN/URL, COUNT distinct internal_hosts accessing it in first 24_hours; ALERT if count is between 1 and 3;
  - question: Has the rate of discovery for new subdomains or URL paths on a popular web service significantly exceeded the forecasted rate?
    context: This question looks for mass resource creation. If an adversary is setting up multiple C2 channels or staging sites on a service like 'github.io', it can cause a sudden spike in the number of new, unique subdomains or paths being observed. A time-series model can predict the normal rate of new resource discovery, making such spikes stand out.
    answer_sources:
      - Zeek conn.log
      - Zeek dns.log
      - Zeek http.log
      - DNS Resolvers
      - Network Egress Points
    range: last 90 days
    queries:
      - language: pseudocode
        query: MODEL rate of new_subdomain/URL_discovery for parent_domains (e.g., github.io) using Prophet; ALERT if actual_rate significantly exceeds forecasted_rate;