[
  {
    "information_requirement": "Is the adversary maintaining persistence by abusing server software components?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1505",
        "name": "Server Software Component",
        "evidence": [
          {
            "description": "A new file with an extension associated with server-side scripting or extensibility (e.g., .aspx, .jsp, .dll, .php) is written to a directory served by a web or application server by a process not associated with standard software deployment or patching.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web root, application plugin, and server extension directories on public-facing and internal web/application servers (e.g., C:\\inetpub\\wwwroot\\, /var/www/html/, SharePoint 'Layouts', Confluence 'plugins-installed').",
            "action": [
              "Symbolic: Query for file creation events (Windows Event ID 4663) in monitored web/app directories for files with extensions like .aspx, .jsp, .php, .dll. Extract the file hash and cross-reference it against a threat intelligence feed of known malicious web shells and backdoors. Alert on any match.",
              "Statistical: For each server, profile the parent processes that write to sensitive directories. Establish a frequency baseline of file extensions and parent processes. Flag as anomalous any file write event where the parent process (e.g., 'cmd.exe') or file extension is in the bottom 5th percentile of historical frequency.",
              "ML: Train a Random Forest classifier using labeled historical data of file creation events. Features should include: parent process name, file path entropy, file extension, file size, and time of day. Deploy the model to score new file write events in real-time and alert on any classification of 'malicious component' with a confidence score above 0.9."
            ]
          },
          {
            "description": "A web server process (e.g., w3wp.exe, httpd.exe, tomcat.exe) writes a new script or executable file to a directory it serves, potentially correlated with an immediately preceding HTTP POST request.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of public-facing web servers, particularly world-writable directories and web root folders.",
            "action": [
              "Symbolic: Create a rule to alert when a known web server process ('w3wp.exe', 'httpd.exe', 'tomcat.exe') is the source of a file creation event (Windows Event ID 4663) for a file with a scriptable extension (.aspx, .php, .jsp) within its own content directories.",
              "Statistical: For each web server, establish a baseline of file write activity. Calculate the Shannon entropy of filenames written by web server processes; alert when a newly written filename has an entropy score greater than 3.0 (indicating programmatic generation). Also, alert when the file size is a statistical outlier compared to typical files of that type (e.g., > 3 standard deviations from the mean size).",
              "ML: Implement an unsupervised anomaly detection model (e.g., Isolation Forest) trained on legitimate file-write activities by web server processes. Use features like file path, file extension, file size, and the associated HTTP method from http.log. The model will score new file-write events and flag those that deviate significantly from the learned 'normal' profile."
            ]
          },
          {
            "description": "A server application process (e.g., w3wp.exe, sqlservr.exe, httpd.exe) spawns a child process used for reconnaissance or execution, such as cmd.exe or powershell.exe, especially with suspicious command-line arguments.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on all critical servers, including web servers, database servers, application servers, and domain controllers.",
            "action": [
              "Symbolic: Create a detection rule that triggers when a ParentProcessName from a list of server applications ('w3wp.exe', 'sqlservr.exe', 'httpd.exe', 'tomcat.exe') spawns a ProcessName from a list of sensitive utilities ('cmd.exe', 'powershell.exe', 'whoami.exe', 'net.exe', 'certutil.exe') and the command line does not match a known administrative script.",
              "Statistical: For each server application process, build a baseline of all normally spawned child processes and their command-line arguments over a 30-day period. Calculate the frequency of each parent-child-argument combination. Generate an alert if a server process spawns a child process that has never been seen before or is in the bottom 5th percentile of frequency.",
              "ML: Train a supervised classification model (e.g., Gradient Boosting) to predict if a parent-child process pair is malicious. Use features such as parent process name, child process name, command-line argument length, command-line entropy, and user context. Use the model to score each process creation event on a server and alert on high-risk scores."
            ]
          },
          {
            "description": "A server process, associated with a newly added or modified component, establishes an outbound network connection to a rare external IP address, communicates over a non-standard port, or exhibits beaconing behavior (periodic connections with low jitter).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic logs at the network egress (e.g., firewalls, proxies) and host-level network monitoring on critical servers.",
            "action": [
              "Symbolic: Filter Zeek conn.log for connections originating from critical server IPs. Correlate the destination IP (id.resp_h) and requested domain (dns.log query) against threat intelligence lists of known C2 servers, newly registered domains (NRDs), and TOR exit nodes. Alert on any match.",
              "Statistical: For each server process, baseline outbound connection patterns (destination ASN, port, bytes transferred). Alert if a connection's destination ASN is in the lowest 1% of prevalence for that server. Separately, analyze the time delta between consecutive connections to the same destination IP/port pair. Alert if the standard deviation of these deltas is exceptionally low, indicating automated beaconing.",
              "ML: Apply a time-series forecasting model (e.g., SARIMA) to the volume of outbound data per hour for each critical server. Alert if the actual data volume exceeds the 99% confidence interval of the forecast. Additionally, use a clustering algorithm (e.g., DBSCAN) on connection metadata (destination port, protocol, connection duration, bytes_out) to identify small clusters of anomalous connections that do not belong to the large clusters of normal activity."
            ]
          },
          {
            "description": "An unauthorized modification, such as a write or permission change, is made to a critical server configuration file (e.g., web.config, httpd.conf, php.ini) by a user or process outside of a planned change window or approved change-management process.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs on directories containing configuration files for all web, application, and database servers.",
            "action": [
              "Symbolic: Enable file system auditing (SACL) on a watchlist of critical configuration files (e.g., web.config, httpd.conf). Create a rule to alert on any 'WriteData' or 'AppendData' access event (from Windows Event ID 4663) where the ProcessName is not on an allowlist of approved administrative tools or deployment scripts.",
              "Statistical: Establish a baseline of users and processes that normally modify critical configuration files. Profile the frequency of modifications per file and the time of day/day of week these changes occur. Alert if a modification occurs outside of a defined maintenance window (e.g., not on a weekend between 2 AM and 4 AM) or if the modifying user account is statistically rare (e.g., has never modified the file before).",
              "ML: Develop an anomaly detection model using a variational autoencoder (VAE) trained on features of legitimate file modification events. Features should include: user account, source IP of the user's session, process name, time of day, and day of week. Events with a high reconstruction error, indicating they do not conform to the learned distribution of normal changes, are flagged as suspicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]