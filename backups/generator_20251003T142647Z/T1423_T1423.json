[
  {
    "information_requirement": "Is a compromised mobile device being used to perform network service discovery on the internal network? (TA0032 - Discovery)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1423",
        "name": "Network Service Scanning",
        "evidence": [
          {
            "description": "A single mobile device source IP establishes connections to a statistically significant number of unique internal destination IPs (horizontal scan) or unique destination ports on a single host (vertical scan) within a short time frame (e.g., 5 minutes). This behavior is anomalous when compared to the device's own historical baseline and the baseline of its peer group (e.g., all mobile VPN users).",
            "data_sources": [
              "Zeek conn.log",
              "DHCP Server Logs",
              "VPN Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools), Core network switches, VPN concentrators, DHCP servers",
            "action": [
              "Create a rule that generates a high-priority alert if any IP address from a mobile device subnet (Wi-Fi or VPN) attempts to connect to a designated network canary IP address or a canary port on a production server. These canary assets should have no legitimate traffic.",
              "For each mobile device source IP, execute a query every 5 minutes against Zeek conn.log to count the number of unique destination IPs and unique destination ports contacted. Compare these counts to a 30-day rolling baseline for that specific device. Generate an alert if either count exceeds 3 standard deviations from the device's mean AND the count is in the 99th percentile of all mobile devices for the same time period.",
              "On a daily basis, generate a feature vector for each mobile device using Zeek conn.log data from the past 24 hours. Features should include: unique destination IP count, unique destination port count, ratio of successful ('SF') to failed ('S0', 'REJ') connections, and destination port entropy. Apply a density-based clustering algorithm, such as DBSCAN, to these vectors to identify outlier devices that do not belong to any primary cluster, indicating anomalous network scanning behavior."
            ]
          },
          {
            "description": "A mobile device source IP generates a high ratio of failed or rejected TCP connections (e.g., Zeek conn_state 'S0', 'REJ', 'RSTO', 'RSTR', 'RSTOS0') compared to successful connections (e.g., 'SF'), indicating a scan against non-listening ports or firewalled hosts.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments accessible by mobile devices (e.g., corporate Wi-Fi, VPN address pools), Core network switches, Network firewalls",
            "action": [
              "Create a real-time rule to alert when a single mobile source IP generates more than 20 connection logs with a 'REJ' or 'RSTO' state to a single destination host within a 1-minute window. This indicates an active host-based firewall is rejecting scan probes.",
              "Every 5 minutes, calculate the ratio of failed connections (sum of 'S0', 'REJ', 'RSTO', 'RSTR', 'RSTOS0') to successful connections ('SF') for each mobile device IP using Zeek conn.log. Generate an alert if this ratio for a device exceeds the 98th percentile for all mobile devices over the same period, or if the ratio is greater than 0.8 (80% failure rate).",
              "For each mobile device, ingest the per-minute count of failed connection states ('S0', 'REJ', 'RSTO', etc.) into a time series anomaly detection model (e.g., Seasonal-Hybrid ESD or Prophet). Train the model on at least 30 days of historical data to learn the device's normal pattern of connection failures. The model should automatically alert on statistically significant spikes that deviate from the established forecast and confidence intervals."
            ]
          },
          {
            "description": "Network traffic originating from a mobile device IP contains artifacts specific to known scanning tools (e.g., specific TCP options, payload patterns, or User-Agent strings in HTTP headers) or directly triggers a Zeek notice for scanning activity (e.g., Scan::Port_Scan, Scan::Address_Scan).",
            "data_sources": [
              "Zeek notice.log",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek signatures.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network tap or span port monitoring the ingress/egress of mobile device network segments (Wi-Fi, VPN).",
            "action": [
              "Create a high-priority alert to trigger immediately upon the generation of a 'Scan::Port_Scan' or 'Scan::Address_Scan' notice in Zeek notice.log where the 'src_ip' field is within a known mobile device IP range. Concurrently, monitor Zeek http.log and signatures.log for matches against a list of known scanning tool User-Agents (e.g., 'Nmap Scripting Engine', 'masscan', 'ZGrab') or other tool-specific signatures.",
              "For TCP sessions originating from mobile IPs where Zeek identifies the protocol as 'OTH' (other), calculate the Shannon entropy of the first 64 bytes of the payload from conn.log. A high entropy value can indicate obfuscated or randomized probe payloads. Generate an alert if a device's average payload entropy over a 5-minute window exceeds the 98th percentile of all mobile devices.",
              "Train a supervised classification model, such as a Random Forest or Gradient Boosting Machine, using labeled historical network flow data containing both benign traffic and known scanning activity. Extract features for each flow from Zeek conn.log, including: duration, proto, service, orig_bytes, resp_bytes, conn_state, history, and the presence of specific TCP flags (e.g., SYN-only). Apply the trained model to classify new network flows from mobile subnets in near-real-time to predict and alert on likely scanning behavior."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]