[
  {
    "information_requirement": "Has an adversary modified device security policies to evade defenses? (TA0030 - Defense Evasion) (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1632.001",
        "name": "Code Signing Policy Modification",
        "evidence": [
          {
            "description": "An 'ApplicationPermissionStateChange' event from a managed Android device indicates the 'REQUEST_INSTALL_PACKAGES' permission was granted to an application package name not present on the organizational allowlist of trusted installers.",
            "data_sources": [
              "MDM Log: ApplicationPermissionStateChange",
              "MDM Asset Inventory: ApplicationList"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android device fleet; MDM Management Server; Organizational App Store Servers",
            "action": [
              "Maintain an explicit allowlist of application package names authorized to hold the 'REQUEST_INSTALL_PACKAGES' permission (e.g., 'com.android.vending'). Create a SIEM rule that queries MDM logs for 'ApplicationPermissionStateChange' events where the permission is 'REQUEST_INSTALL_PACKAGES' and the state is 'granted'. Trigger a high-severity alert if the associated package name is not on the allowlist.",
              "For any application granted the 'REQUEST_INSTALL_PACKAGES' permission, query the MDM asset inventory to determine its fleet-wide prevalence as a percentage of devices on which it is installed. Calculate a 90-day rolling baseline of prevalence for all applications. Flag for review any application granted this permission whose prevalence falls below the 5th percentile, as this indicates it is an unusually rare and potentially unauthorized installer application.",
              "Train and deploy a logistic regression classifier to predict the probability of a 'REQUEST_INSTALL_PACKAGES' permission grant being malicious. Features should include: application prevalence (normalized), application category (one-hot encoded), installation source (e.g., 'Google Play', 'sideloaded'), the total count of other high-risk permissions requested by the app, and a binary flag for whether the app is managed by MDM. An output probability score greater than 0.8 should automatically generate an investigation ticket and enrich it with device and user context."
            ]
          },
          {
            "description": "An MDM compliance or inventory scan detects a user-added CA certificate on an Android device whose SHA-256 thumbprint does not match any entry on the organizational allowlist of approved, user-installable CA certificates.",
            "data_sources": [
              "MDM Asset Inventory: DeviceCertificateList",
              "MDM Compliance Log: CertificateInstallEvent",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android device fleet; MDM Management Server; Public Key Infrastructure (PKI) Servers; Network Egress/Inspection Points",
            "action": [
              "Maintain an allowlist of SHA-256 thumbprints for all organizationally approved, user-installable CA certificates. Create a rule to query MDM inventory for all installed user-added CA certificates on a recurring basis. Generate a high-severity alert for any certificate thumbprint not on the allowlist. For each alert, automatically pivot to network logs (Zeek ssl.log) to search for TLS sessions where the device used the malicious CA's issuer or subject string in the last 24 hours.",
              "For any newly detected, non-allowlisted CA certificate, calculate the Shannon entropy of its Subject and Issuer distinguished name (DN) fields. Also, calculate its fleet-wide installation prevalence. A certificate with high entropy (e.g., > 4.0, indicating randomness) in its DN fields and low prevalence (e.g., installed on < 1% of devices) strongly indicates a targeted, non-standard certificate and must be escalated for immediate investigation.",
              "Utilize an Isolation Forest model to detect anomalous CA certificates based on their metadata. Train the model on attributes of known-good, organizationally approved certificates, using features such as: validity period (in days), public key algorithm and size, Subject and Issuer string lengths, number of Subject Alternative Names (SANs), and a self-signed flag. Certificates that receive an anomaly score in the top 1% from the model require immediate manual review by a security analyst."
            ]
          },
          {
            "description": "An MDM inventory scan of an iOS device identifies an installed Configuration Profile whose 'PayloadIdentifier' value is not present on the organizational allowlist for the device's assigned user group or policy.",
            "data_sources": [
              "MDM Asset Inventory: DeviceProfileList",
              "MDM Compliance Log: ProfileInstallEvent",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed iOS device fleet; MDM Management Server; Apple Push Notification service (APNs) infrastructure; Network Egress/Inspection Points",
            "action": [
              "For each device management group, maintain an allowlist of approved Configuration Profile 'PayloadIdentifier' values. Configure a periodic SIEM query to check MDM device profile inventories. Alert on any installed profile identifier that is not on the approved allowlist for the device's assigned group. Upon alert, correlate the device IP with network logs (Zeek http.log, files.log) to identify the download origin of the profile (.mobileconfig file).",
              "From MDM logs, extract the installation timestamp for every configuration profile across the fleet. Establish a baseline distribution of installation counts per hour for each day of the week over the last 90 days. Use a modified Z-score statistical test to identify outliers. An installation occurring at a time with a Z-score greater than 3.5 (e.g., 3 AM on a weekend) should be flagged for review, as it deviates significantly from normal administrative activity.",
              "Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA or Prophet) on the aggregate count of new profile installations per hour across the entire fleet. A sudden spike in installations flagged as an anomaly by the model, which does not correlate with a scheduled IT change request in the change management database, indicates a potential widespread campaign. This should trigger a high-severity, fleet-wide alert and initiate an incident response process."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]