[
  {
    "information_requirement": "Is an adversary stealing application access tokens from our mobile devices to gain unauthorized credential access? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1635",
        "name": "Steal Application Access Token",
        "evidence": [
          {
            "description": "An outbound HTTP GET request, identified as part of an OAuth 2.0 authorization flow by the presence of `response_type` and `client_id` parameters, contains a `redirect_uri` parameter whose value, after URL decoding, resolves to a domain or full URI not present on a managed allowlist of approved OAuth callback targets.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network egress points, including firewalls, VPN concentrators, and Cloud Access Security Brokers (CASBs) inspecting traffic from corporate Wi-Fi and VPN-connected mobile devices; Cloud-native network sensors (e.g., VPC Flow Logs, cloud firewalls).",
            "action": [
              "Create a SIEM rule to query `Zeek http.log` for events originating from mobile IP subnets where the `uri` field contains both `redirect_uri` and `client_id`. For each matching event, extract and URL-decode the `redirect_uri` value. Generate a medium-severity alert if the domain of the `redirect_uri` is not present in the corporate allowlist of approved OAuth partners.",
              "For each alerted domain from the symbolic logic match, calculate the Shannon entropy of its fully qualified domain name (FQDN). Compare this score against a pre-computed distribution of entropy scores for legitimate `redirect_uri` domains seen over the past 90 days. Flag domains with entropy scores exceeding the 95th percentile ($$ P_{95} $$) for higher-priority investigation, as this is indicative of domain generation algorithms (DGA).",
              "Input features from the HTTP request and associated metadata into a pre-trained logistic regression classifier to predict maliciousness. Features should include: (1) `redirect_uri` domain entropy score, (2) domain age and registration details from passive DNS enrichment, (3) TLD reputation, (4) presence and length of the `state` parameter, (5) URI path depth, and (6) JA3/JA3S hash from `Zeek ssl.log` to profile the client. If the model's output probability $$ p(\\text{malicious}) > 0.90 $$, escalate the alert to critical for immediate analyst response and potential device isolation via MDM."
            ]
          },
          {
            "description": "A mobile device, identified by its IP address, communicates with a known malicious domain (based on threat intelligence feeds) and, within a short timeframe (e.g., 60 seconds), initiates a new OAuth authorization flow to a different, potentially legitimate, service provider.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Platform Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxy logs and network sensor data (e.g., Zeek) at the internet gateway; SIEM platform with integrated threat intelligence feeds.",
            "action": [
              "Implement a SIEM correlation rule that triggers on events from the same source IP in the mobile device IP range within a 60-second window. Condition A: A `Zeek dns.log` query or a `Zeek conn.log` connection where the destination IP/domain is flagged as malicious by an integrated threat intelligence feed. Condition B: A `Zeek http.log` event where the URI contains OAuth parameters (`response_type`, `client_id`). A successful correlation generates a high-severity alert.",
              "For each alert, establish the rarity of the OAuth provider domain. Maintain a 90-day baseline of OAuth domains accessed per user and across the organization. If the alerted OAuth domain is (a) not in the specific user's historical baseline AND (b) accessed by fewer than 1% of the total user population during the baseline period, significantly increase the alert's risk score. This identifies statistically anomalous service usage following a visit to a malicious site.",
              "Model user browsing behavior as a sequence of domain category transitions (e.g., `['news' -> 'search' -> 'social_media']`). Train a time-series anomaly detection model, such as an LSTM autoencoder, on these sequences from benign traffic. During inference, if a sequence like `['malicious' -> 'oauth_provider']` is observed, feed it to the model. If the reconstruction error for this sequence exceeds a dynamic threshold (e.g., 3 standard deviations above the rolling mean error), classify it as a highly anomalous behavioral pattern and escalate for critical review."
            ]
          },
          {
            "description": "Data from an MDM/UEM platform reveals a non-standard or unauthorized application installed on a managed mobile device has registered a custom URI scheme handler that either directly conflicts with a legitimate scheme (e.g., `ms-auth://`) or is a typosquatted variant of one (e.g., `ms-authe://`).",
            "data_sources": [
              "UEM Application Manifest Data",
              "MDM Application Inventory Log",
              "Mobile Threat Protection (MTP) Event Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) / Unified Endpoint Management (UEM) platforms; Application security testing (AST) reports for in-house developed apps; Mobile Threat Protection (MTP) solution consoles and log repositories.",
            "action": [
              "Periodically ingest application inventory data from the UEM/MDM platform. For each application, parse its manifest to extract registered URI schemes. Compare these against a curated allowlist mapping legitimate schemes (e.g., `fbauth2://`) to their official application bundle IDs and signing certificate hashes. Generate a high-severity alert for any application that registers a protected scheme but does not match the corresponding bundle ID and certificate hash.",
              "For each newly installed application not on a pre-approved allowlist, calculate the Levenshtein distance between its display name and all names on the application allowlist. If the distance is low (e.g., < 3), indicating a potential typosquat, and the app registers any URI schemes, flag it for prioritized manual review. This prioritizes apps that are visually deceptive.",
              "Train a Random Forest classifier to predict application maliciousness based on a feature set derived from MDM/UEM data. Features should include: (1) application source (official store vs. sideloaded), (2) number and type of registered URI schemes, (3) requested permissions count, (4) developer certificate age and reputation, (5) Levenshtein distance score to known apps, and (6) whether the app is running on a jailbroken/rooted device. An application classified with $$ p(\\text{malicious}) > 0.85 $$ should trigger an automated workflow to quarantine the device and create a ticket for the security team."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]