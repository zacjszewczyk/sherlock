[
  {
    "information_requirement": "Is an adversary using a legitimate external web service for command and control of a compromised mobile device? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1481.002",
        "name": "Bidirectional Communication",
        "evidence": [
          {
            "description": "A mobile device application establishes periodic, low-volume 'heartbeat' connections characterized by a low standard deviation of inter-arrival times (e.g., less than 1 second over a 10-minute window), or initiates anomalous data transfers to a legitimate web service. Anomalous transfers are defined as either a total data volume (orig_bytes + resp_bytes) that deviates more than 3 standard deviations from a 30-day baseline for the user/device/app, or a connection with a highly skewed outbound-to-inbound byte ratio (e.g., > 10:1) that is uncharacteristic for the service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network security monitoring sensors at internet gateways, corporate Wi-Fi gateways, VPN concentrators, and Cloud Access Security Broker (CASB) or Unified Endpoint Management (UEM) log sources where mobile device traffic is observable.",
            "action": [
              "Using the Zeek 'uid' to join conn.log and ssl.log, query for connections from mobile device network segments where the 'server_name' (from ssl.log) or 'id.resp_h' (from conn.log) matches a threat intelligence feed of domains, subdomains, and IPs known to be abused for C2 via legitimate services. Generate a high-severity alert for any match.",
              "For each unique source IP and destination service pair (from Zeek conn.log 'id.orig_h' and ssl.log 'server_name'), establish a 30-day rolling baseline of connection statistics (frequency, duration, orig_bytes, resp_bytes). Calculate the inter-arrival time (delta between 'ts' values) for sequential connections. Generate an alert if: 1) The sum of bytes for a single connection exceeds the 99th percentile of its baseline, OR 2) The standard deviation of the inter-arrival time over a 10-minute window is less than 1 second, indicating automated beaconing.",
              "For each device-service pair, create a time series of total data volume (orig_bytes + resp_bytes) aggregated into 5-minute intervals from Zeek conn.log. Train a time-series forecasting model (e.g., SARIMA, Prophet) on at least 30 days of historical data to learn normal traffic patterns, including daily and weekly seasonality. Score live traffic against the model's forecast and generate an alert when the observed traffic volume in an interval exceeds the model's 99% prediction interval, indicating a statistically significant anomaly."
            ]
          },
          {
            "description": "An outbound HTTP/S request from a mobile application to a legitimate web service contains a URI path or query string with a Shannon entropy value greater than 4.5, or a value that is a statistical outlier for that specific service. Alternatively, the request's User-Agent string is either missing, matches a known-malicious signature, or does not conform to a known-good format for common mobile browsers or the specific application.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SSL/TLS-inspecting forward proxies, corporate DNS servers, and other network traffic inspection points capable of decrypting and logging HTTP/S metadata.",
            "action": [
              "Within decrypted Zeek http.log records, scan the 'uri' field against a regex-based ruleset for known malicious C2 URI patterns. Simultaneously, scan the 'user_agent' field against a curated list of non-standard or known-bad User-Agent strings used by mobile malware. Generate a high-severity alert on any match.",
              "For each destination web service (identified via Zeek ssl.log 'server_name'), establish a baseline of normal URI structures from Zeek http.log. For each live request, calculate the Shannon entropy of the 'uri' field. Generate a medium-severity alert if the URI entropy score is a statistical outlier (e.g., exceeds 3 standard deviations above the mean entropy for that service) or surpasses a high absolute threshold (e.g., 4.5). Additionally, profile the set of 'user_agent' strings for each service and alert on User-Agents that are statistically rare (e.g., seen in <0.1% of requests to that service).",
              "From historical Zeek http.log data, engineer features for each request, including URI length, query parameter count, percentage of non-alphanumeric characters in the URI, and Shannon entropy of the URI. Train a classification model (e.g., Random Forest, Gradient Boosting) using a labeled dataset of known-benign and known-malicious C2 URIs. Deploy the model to score all new mobile device HTTP requests and generate an alert for any request classified as malicious with a confidence score above a defined threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "A mobile application, as identified by MDM/UEM logs by its process name or bundle ID, generates network traffic to a destination service (e.g., 'github.com', 'pastebin.com', 'discord.com') that is statistically rare for its assigned application category (e.g., a 'Calculator' app connecting to a 'Development Tools' service) or for the user's role within the organization.",
            "data_sources": [
              "Mobile Device Management (MDM/UEM) logs",
              "Zeek conn.log",
              "Zeek ssl.log",
              "HR Information System Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device endpoints via MDM/UEM agents, MDM/UEM management consoles, and network chokepoints like corporate Wi-Fi gateways or Cloud Access Security Brokers (CASBs).",
            "action": [
              "Define a security policy mapping high-risk or sensitive applications (e.g., those with access to contacts or location) to an explicit whitelist of allowed network destinations. Using MDM/UEM logs to identify the source application process name/bundle ID and Zeek ssl.log 'server_name' for the destination, continuously monitor for policy violations. Generate a high-severity alert if a monitored application communicates with any destination not on its approved whitelist.",
              "Ingest MDM/UEM logs to categorize all managed applications (e.g., 'Productivity', 'Social', 'Utility'). For each application category, profile the set of destination services (from Zeek ssl.log 'server_name') contacted over a 30-day period. Calculate the prevalence of each service within each app category (e.g., 'github.com' is contacted by 0.5% of 'Utility' apps). Generate a medium-severity alert when an application communicates with a service whose prevalence within that application's category is below a rarity threshold (e.g., < 1%).",
              "Model the relationship between mobile applications (from MDM/UEM logs) and destination services (from Zeek logs) as a bipartite graph. Apply a community detection algorithm (e.g., Louvain Modularity) to identify naturally occurring clusters of apps and the services they use (e.g., 'Social Media Apps' cluster connects to 'Facebook', 'Twitter', 'Instagram'). Generate an alert when a connection is observed from an app to a service outside of its primary community, scoring the anomaly based on the 'distance' or infrequency of interaction between the two communities in the graph."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-10-01",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]