[
  {
    "information_requirement": "Is an adversary discovering the physical location of our mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1430",
        "name": "Location Tracking",
        "evidence": [
          {
            "description": "An application's manifest (AndroidManifest.xml) or property list (Info.plist) contains a high-risk location permission, specifically `ACCESS_BACKGROUND_LOCATION` on Android or `NSLocationAlwaysAndWhenInUseUsageDescription` on iOS, and this permission is not present on an established allow-list for the given application or application category.",
            "data_sources": [
              "Mobile Device Management (MDM) application inventory logs",
              "AndroidManifest.xml",
              "Info.plist",
              "Threat intelligence feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM server, internal application repository, cloud-hosted application vetting sandboxes, threat intelligence platform.",
            "action": [
              "Using MDM inventory data, create a watch list for applications with high-risk location permissions. For each app on the watch list, query a threat intelligence platform using its package name and file hash. Generate a critical alert for any match to a known malicious mobile application indicator.",
              "Parse all application manifests/Info.plists to extract requested permissions. Group applications by their app store category (e.g., 'Productivity', 'Navigation'). For each category, calculate the distribution of permissions and identify outliers. Specifically, flag for manual review any application that requests background location permissions AND whose total permission count exceeds the 95th percentile for its category.",
              "Apply a pre-trained binary classification model (e.g., Random Forest, Gradient Boosting) to classify applications as benign or malicious. Engineer features from the manifest/Info.plist including: a binary vector of all requested permissions, counts of exported components (activities, services, receivers, providers), and the presence of specific sensitive API call strings. An application that requests location permissions and is classified as 'malicious' with a confidence score greater than 0.90 should trigger an automated quarantine action via MDM and a critical analyst alert."
            ]
          },
          {
            "description": "A managed mobile device exhibits a statistically significant spike in location service API calls, or it communicates location data to a new or suspicious network destination. This is evidenced by either: 1) the hourly count of location API calls from an MTD agent exceeding 3 standard deviations above the device's 30-day rolling average, or 2) network flow data (Zeek conn.log) showing a connection to a destination IP address not seen from the mobile device fleet in the last 60 days, where MTD logs confirm a location-aware app was active.",
            "data_sources": [
              "Mobile Threat Defense (MTD) API call logs",
              "MDM location history logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, network egress points (e.g., VPN concentrators, corporate Wi-Fi access points), DNS resolvers, cloud-hosted MTD/MDM platforms.",
            "action": [
              "From network traffic logs (Zeek conn.log, dns.log), correlate all destination IP addresses (id.resp_h) and DNS queries (query) originating from the mobile device IP range against threat intelligence feeds for known C2 or malicious infrastructure. Generate a high-severity alert for any match, enriching the alert with the device ID and user from MDM/VPN logs.",
              "For each device, ingest hourly location API call counts from the MTD agent. Calculate a 30-day rolling baseline (mean, standard deviation). Trigger a medium-severity alert if the current hourly count exceeds the mean by more than 3 standard deviations. In parallel, maintain a stateful set of all destination IP:port pairs seen in Zeek conn.log from the mobile fleet over the past 60 days. Trigger a low-severity alert if a device connects to a destination not in this set, enriching the alert with GeoIP data, ASN information, and the JA3 hash from Zeek ssl.log for the new connection.",
              "For each device, apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD, Prophet) to the hourly location API call count to identify anomalies that deviate from the user's established daily and weekly patterns (e.g., commute). Separately, apply a density-based clustering algorithm (e.g., DBSCAN) to the device's historical geo-coordinates from MDM location logs. An alert is generated when a new location point is reported that does not fall into any of the user's established clusters (e.g., home, office, common routes), indicating anomalous travel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting and exfiltrating location data from our mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1430",
        "name": "Location Tracking",
        "evidence": [
          {
            "description": "A network connection originating from an application with location permissions exhibits indicators of C2 communication. This is evidenced by one or more of the following: the destination IP/domain matches a known C2 indicator; the connection uses a self-signed or unusual SSL/TLS certificate; or the TLS client fingerprint (JA3 hash) is exceptionally rare across the mobile fleet (e.g., prevalence < 0.01% over 30 days).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Threat intelligence feeds",
              "MDM/MTD application network logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, firewalls, proxies, VPN concentrators, DNS resolvers, threat intelligence platforms, MDM/MTD cloud consoles.",
            "action": [
              "Join MDM/MTD application network logs with Zeek logs (conn.log, dns.log, ssl.log) on device IP and timestamp. For any connection initiated by an application with location permissions, check if the destination IP (`id.resp_h`), DNS query (`query`), or TLS SNI (`server_name`) matches a C2 indicator from a threat intelligence feed. Trigger a critical alert upon a match.",
              "Using Zeek ssl.log data from the mobile IP range, compute the frequency of every unique client TLS fingerprint (JA3 hash) over the last 30 days. Create an alert when an application with location permissions initiates a TLS connection using a JA3 hash observed in less than 0.01% of all mobile sessions, as this suggests a non-standard client potentially used for exfiltration. Enrich the alert with the destination IP and ASN.",
              "Train a supervised learning model (e.g., XGBoost) to produce a risk score for each outbound connection from mobile devices. Engineer features including: destination IP/ASN reputation score, destination port rarity, JA3 hash prevalence, DNS query string entropy, connection duration, total bytes sent (`orig_bytes`), total bytes received (`resp_bytes`), and a binary flag for whether the source app (from MTD logs) has location permissions. A connection with a risk score above a tuned threshold (e.g., 0.85) should trigger an automated investigation ticket."
            ]
          },
          {
            "description": "A mobile device exfiltrates an anomalously large volume of data to an external, non-whitelisted destination, coinciding with the activity of an application that has location permissions. This is evidenced by the total daily data upload volume (sum of `orig_bytes` in Zeek conn.log) exceeding the 99th percentile of the device's 30-day historical baseline, where MDM/MTD logs confirm a location-aware application was active during the period of high traffic.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/MTD application activity logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., VPN concentrators, corporate Wi-Fi gateways), corporate-managed mobile devices, MDM/MTD cloud consoles.",
            "action": [
              "Maintain an allow-list of approved corporate and cloud service domains/IPs. For each connection in Zeek conn.log from the mobile IP range, if the destination is not on the allow-list and the uploaded data volume (`orig_bytes`) exceeds a hard threshold (e.g., 50MB) in a single session, generate a high-severity alert. The alert must be enriched with the device ID and a lookup against MDM logs to identify the active application at that time.",
              "For each mobile device, calculate a 30-day rolling baseline of its total daily upload volume (sum of `orig_bytes` in Zeek conn.log) to all external IP addresses. Trigger a medium-severity alert if a device's total upload volume for a 24-hour period exceeds the 99th percentile of its own historical baseline. Enrich the alert with the top 5 destination ASNs by data volume for that day and the top 5 most active applications from MDM logs.",
              "For each device, deploy a time-series forecasting model (e.g., Prophet, ARIMA) to predict the expected daily upload volume, accounting for day-of-week seasonality. Generate a high-severity alert when the actual volume significantly exceeds the model's predicted upper confidence interval. Upon alert, automatically apply a topic modeling algorithm (e.g., Latent Dirichlet Allocation) to the set of destination domains (`server_name` from ssl.log) visited during the anomalous period to identify and label thematic clusters of network activity (e.g., 'Cloud Storage', 'Social Media', 'Unknown-High-Entropy-Domains')."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]