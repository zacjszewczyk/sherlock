[
  {
    "information_requirement": "Is the adversary transferring tools or files into the network?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1105",
        "name": "Ingress Tool Transfer",
        "evidence": [
          {
            "description": "A network connection or file transfer event contains an indicator (IP address, domain, TLS/SSL certificate, or file hash) that matches an entry in a threat intelligence database of known malicious infrastructure or malware.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, external-facing web proxies, and DNS resolvers.",
            "action": [
              "Query Zeek logs by joining conn.log on its unique ID (uid) with dns.log, http.log, and ssl.log. Compare the id.resp_h (destination IP), query (DNS query), host (HTTP host), and server_name (SNI) fields against a threat intelligence feed of known malicious indicators. Separately, compare the md5 and sha1 fields from files.log against a malware hash repository. Generate a high-severity alert upon any match.",
              "For all files logged in files.log, calculate the Shannon entropy of the filename. Establish a baseline distribution of filename entropy scores for the environment over a 30-day period. Flag filenames with entropy scores exceeding the 99th percentile of the baseline for manual review, as this may indicate randomly generated malware names.",
              "Develop a supervised classification model (e.g., Gradient Boosting) trained on labeled datasets of benign and malicious network connections. Engineer features from Zeek conn.log, ssl.log, and http.log, including connection duration, byte counts, protocol, port, JA3/JA3S hashes, domain name length, and domain registration age. Deploy the model to score all new outbound connections and alert on those classified as malicious with a confidence score above a predefined threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "A command-line interface event is observed executing a built-in utility (e.g., powershell.exe, certutil.exe, bitsadmin.exe, curl.exe, wget.exe) with arguments or flags explicitly used for downloading files from a remote URL.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, application servers, and domain controllers.",
            "action": [
              "Using a SIEM query with regular expressions, continuously monitor the 'CommandLine' field in Windows Event ID 4688 logs for patterns indicative of file downloads. Target processes like powershell.exe, certutil.exe, bitsadmin.exe, curl.exe, and wget.exe and look for associated keywords such as 'IEX', 'DownloadString', 'DownloadFile', 'Invoke-WebRequest', '-urlcache', '/transfer', and '-O'. Generate an alert for any match.",
              "For each monitored process (e.g., powershell.exe), parse its command-line arguments into individual tokens. Calculate the Term Frequency-Inverse Document Frequency (TF-IDF) score for each token across the entire enterprise over a 30-day rolling window. Sum the scores for all tokens in a single command line. Flag command lines with a cumulative score in the top 1% as statistically rare and potentially malicious.",
              "Train an autoencoder model on a large dataset of benign command-line invocations for common living-off-the-land binaries (LOLBins) like powershell.exe and certutil.exe. Deploy the model to process new command lines in real-time. Calculate the reconstruction error for each new command line; a high reconstruction error indicates a significant deviation from the learned normal patterns and should be flagged as an anomaly for investigation."
            ]
          },
          {
            "description": "A network connection recorded in Zeek conn.log shows a high ratio of responder bytes to originator bytes, inconsistent with the typical behavior for the associated protocol, port, or host.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress and ingress points, server farm network segments, and critical asset subnets.",
            "action": [
              "Create a detection rule that flags any non-HTTP/S TCP connection in Zeek conn.log where resp_bytes > 5MB and the ratio resp_bytes / (orig_bytes + resp_bytes) > 0.99. This identifies large, one-way data transfers that are not typical web browsing.",
              "For each unique combination of source host, destination host, and destination port, establish a historical baseline of the mean and standard deviation for the resp_bytes field over a 30-day period. Generate an alert when a new connection's resp_bytes value exceeds the baseline mean by more than 3 standard deviations, indicating a statistically significant spike in downloaded data.",
              "For each critical server or network segment, apply a time-series forecasting model (e.g., SARIMA) to the aggregate ingress data volume (resp_bytes) binned in 1-hour intervals to learn daily and weekly seasonality. Generate an alert whenever the actual observed ingress volume exceeds the upper bound of the model's prediction interval, indicating an anomalous and unexpected volume of data being transferred to the asset."
            ]
          },
          {
            "description": "A common user application (e.g., WINWORD.EXE, CHROME.EXE) spawns a shell or scripting process (e.g., cmd.exe, powershell.exe), which then makes an outbound network connection and subsequently writes a new executable file to disk.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.",
            "action": [
              "Create a correlation rule that triggers when: 1) A parent process like WINWORD.EXE, EXCEL.EXE, or CHROME.EXE (Event ID 4688) spawns 2) a child process like cmd.exe or powershell.exe (Event ID 4688), which in turn 3) makes an outbound network connection (Event ID 5156) to a non-local IP address. Alert on this three-event sequence.",
              "Continuously monitor and log all parent-child process relationships from Event ID 4688 across the enterprise. Build a frequency table for all observed pairs over a 30-day rolling window. Flag any observed parent-child pair (e.g., OUTLOOK.EXE -> certutil.exe) that falls below a low-frequency threshold (e.g., has occurred fewer than 10 times enterprise-wide) as a statistically anomalous execution chain.",
              "Construct process execution graphs where nodes are processes and edges represent parent-child relationships, enriched with node attributes (command line, user) and edge attributes (timestamps). Use a graph-based anomaly detection algorithm (e.g., GraphSAGE) to identify rare or abnormal subgraphs, such as a browser spawning a shell that downloads a file. The model learns normal 'motifs' of process interaction and flags deviations."
            ]
          },
          {
            "description": "A network connection is made to a domain associated with a non-corporate cloud storage, file sharing, or code repository service, and the connection is initiated by a non-browser process.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, DNS resolvers, and endpoint process monitoring.",
            "action": [
              "Maintain a categorized list of domains for unsanctioned services (e.g., pastebin.com, mega.nz, github.com). Correlate network logs (dns.log, ssl.log) showing connections to these domains with process execution logs (Windows Event ID 4688) from the source host. Generate an alert if the process initiating the connection is not an approved browser or corporate sync client (e.g., powershell.exe, rundll32.exe, cscript.exe).",
              "Using DNS and HTTP logs, classify all destination domains into categories (e.g., Sanctioned Cloud, Unsanctioned File Sharing, Social Media). For each host, create a daily profile of the percentage of requests and bytes transferred to each category. Alert if the percentage of traffic to the 'Unsanctioned File Sharing' category for any host increases by more than 3 standard deviations from its 30-day rolling average.",
              "From Zeek logs, extract feature vectors for each host based on its network activity, including features like JA3 hash diversity, destination port distribution, SNI entropy, and data volume ratios. Use a density-based clustering algorithm like DBSCAN to group hosts with similar network 'behaviors'. Investigate hosts that are flagged as noise or outliers by the algorithm, as their unique traffic patterns may indicate connections to C2 or unauthorized file transfer services."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]