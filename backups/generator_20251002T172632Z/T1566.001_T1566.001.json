[
  {
    "information_requirement": "Has an adversary gained initial access to the network via a spearphishing attachment? (PIR)",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1566.001",
        "name": "Spearphishing Attachment",
        "evidence": [
          {
            "description": "An email attachment's file hash (SHA256), the sender's IP address, or the sender's domain is present on a curated, high-confidence threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Zeek files.log",
              "Zeek smtp.log",
              "Zeek intel.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email gateway, network perimeter firewalls, network security monitoring sensors (e.g., Zeek sensors at the internet gateway).",
            "action": [
              "Symbolic Logic (IOC Matching): Continuously match file hashes from Zeek files.log and sender IP addresses/domains from smtp.log against a high-confidence threat intelligence list loaded into Zeek's Intelligence Framework. Generate a critical alert upon a match being recorded in intel.log.",
              "Statistical Analysis (Domain Rarity): For each sender domain in smtp.log, calculate its historical sending frequency to the organization over the last 90 days. Calculate the Shannon entropy of the subdomain structure. Flag any domain that falls into the bottom 5th percentile of frequency and the top 10th percentile of subdomain entropy, indicating it is both rare and structurally random.",
              "Machine Learning (Domain Classification): Deploy a pre-trained classification model (e.g., Random Forest) to score sender domains based on features like length, character ratios, n-grams, age (via WHOIS lookup), and TLD rarity. Trigger an investigation for domains scoring above a 0.9 probability of being malicious."
            ]
          },
          {
            "description": "A new process is created from a file path associated with an email client's temporary cache (e.g., Outlook's 'Content.Outlook' directory), and the process name contains a suspicious double extension (e.g., 'report.pdf.exe').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, particularly those of executives, finance, and HR personnel who are common targets for spearphishing.",
            "action": [
              "Symbolic Logic (Rule-Based Detection): Implement a SIEM detection rule that triggers on Windows Event ID 4688 when the NewProcessName matches a regex for double extensions (e.g., '.*\\.(pdf|docx|xlsx|jpg|zip)\\.(exe|scr|bat|ps1)$') AND the process is launched from a known email client temporary directory (e.g., 'C:\\Users\\*\\AppData\\Local\\Microsoft\\Windows\\INetCache\\Content.Outlook\\*').",
              "Statistical Analysis (Path and Process Rarity): For each process creation event, construct a unique identifier from (ParentProcessName, NewProcessName, ProcessPath). Maintain a 30-day rolling baseline of these identifiers across the enterprise. Flag any execution whose frequency falls in the 1st percentile, indicating a rare execution pattern that has almost never been seen before.",
              "Machine Learning (Anomaly Detection): Utilize an unsupervised anomaly detection model, such as an Isolation Forest, trained on features from Event ID 4688 including process path depth, process name entropy, and parent process name. The model identifies executions that deviate significantly from the learned profile of 'normal' process behavior, flagging them as anomalies."
            ]
          },
          {
            "description": "The command line arguments for a newly created process, particularly a script host like powershell.exe or cmd.exe, contain high-entropy strings indicative of Base64 encoding or specific keywords associated with download cradles (e.g., 'DownloadString', 'Invoke-Expression').",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, VDI environments, terminal servers.",
            "action": [
              "Symbolic Logic (Signature Matching): Deploy SIEM rules to scan command lines in Event ID 4688 and PowerShell script blocks in Event ID 4104 using regular expressions for patterns like 'DownloadString', 'FromBase64String', 'IEX', and 'mshta.exe http'. Generate a high-severity alert on any match.",
              "Statistical Analysis (Command Line Entropy & Length): For every process creation event, calculate the Shannon entropy and character length of its command line arguments. For common script hosts (powershell.exe, cmd.exe), establish a historical baseline of these metrics. Flag any command line whose entropy or length exceeds the 99th percentile of its process-specific baseline, indicating likely obfuscation.",
              "Machine Learning (NLP Classification): Train a text classification model (e.g., TF-IDF with a Naive Bayes classifier) on a large, labeled dataset of malicious and benign command lines. Classify new command lines from Event ID 4688 and script blocks from Event ID 4104 in real-time, escalating those with a high probability of maliciousness for analyst review."
            ]
          },
          {
            "description": "A Microsoft Office application process (e.g., winword.exe, excel.exe) spawns a direct child process that is a command interpreter or scripting host (e.g., cmd.exe, powershell.exe, wscript.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, and network egress/ingress points for correlating host and network events.",
            "action": [
              "Symbolic Logic (Parent-Child Process Relationship): Create a SIEM correlation rule that triggers when a Windows Event ID 4688 shows a ParentProcessName in {'winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe'} and a NewProcessName in {'cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'mshta.exe'}. Escalate alert severity if the child process PID is subsequently associated with an external network connection in Zeek conn.log.",
              "Statistical Analysis (Process Chain Rarity): Establish a baseline of all unique parent-child process chains '(ParentProcessName, NewProcessName)' observed across the enterprise. Calculate the rarity of each chain by its inverse frequency. Assign a high risk score to chains that are in the bottom 1st percentile of frequency, especially if the child process makes a network connection to a destination domain seen for the first time in Zeek dns.log.",
              "Machine Learning (Graph-Based Anomaly Detection): Model process activity as a directed graph where nodes are processes and edges represent creation events. Apply a graph-based anomaly detection algorithm to identify statistically unlikely sequences, such as an Office application spawning a shell that subsequently connects to a new external IP address. This method highlights the entire malicious chain."
            ]
          },
          {
            "description": "Within 10 minutes of an email being delivered to a user, their host initiates an outbound network connection to an external IP address or domain that has not been previously observed in the last 90 days or is present on a threat intelligence feed.",
            "data_sources": [
              "Zeek smtp.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek intel.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email gateway, DNS resolvers, network egress/ingress points.",
            "action": [
              "Symbolic Logic (Temporal Correlation): Implement a SIEM correlation rule that looks for a Zeek conn.log event from a host (id.orig_h) within 10 minutes after a Zeek smtp.log event shows an email delivered to that same host's IP. Trigger an alert if the destination IP (id.resp_h) is found in Zeek intel.log.",
              "Statistical Analysis (Beaconing Detection): For outbound connections (Zeek conn.log) following an email event (Zeek smtp.log), group by destination IP and analyze the time delta between connections. A standard deviation of connection intervals below a set threshold (e.g., < 1.0 second) suggests periodic, automated C2 beaconing. Flag destination IPs exhibiting this behavior.",
              "Machine Learning (Time Series Forecasting): For each host, create a time series model (e.g., SARIMA) of its typical outbound data volume and connection count per hour using historical Zeek conn.log data. After a host receives an email, monitor its network traffic. If the observed traffic volume or connection count in the subsequent hour represents a statistical anomaly (e.g., the residual error is > 3 standard deviations from the forecast), flag the activity for investigation."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]