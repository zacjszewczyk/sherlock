[
  {
    "information_requirement": "Is the adversary maintaining persistence through system firmware modification?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1542.001",
        "name": "System Firmware",
        "evidence": [
          {
            "description": "A file hash matching a known malicious firmware utility or a specific EFI/BIOS module associated with persistent threats is observed during process execution or file write events.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 11 (Sysmon FileCreate)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical system endpoints (e.g., domain controllers, database servers) and administrator workstations.",
            "action": [
              "Create a detection rule to monitor for process creation (Windows Event ID 4688) and file creation (Sysmon Event ID 11). Compare the file hash of the process executable or created file against a threat intelligence feed of known malicious firmware utility hashes (e.g., LoJax, TrickBoot, MosaicRegressor). Generate a high-severity alert upon a match.",
              "For any new process hash observed, calculate its prevalence across the enterprise. Flag any hash seen on a very small percentage of endpoints (e.g., <1%) or on a single host as a low-prevalence anomaly requiring further investigation.",
              "Develop and apply a classification model (e.g., Random Forest) trained on process metadata such as parent process, user context, command line arguments, and hash prevalence. Use known firmware utility executions as positive labels and benign admin activity as negative labels to score new, unknown process executions for potential firmware modification behavior."
            ]
          },
          {
            "description": "Execution of a known firmware management utility or script with command-line arguments indicative of firmware writing, dumping, or modification, observed outside of authorized change windows or initiated by an unauthorized user account.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All managed endpoints and servers, particularly those with remote management capabilities.",
            "action": [
              "Create a SIEM rule that triggers on process creation (Windows Event ID 4688) where the process name matches a watchlist of firmware utilities (e.g., AFUWIN.exe, FWUpdLcl.exe, chipsec_util.py) AND the command line contains suspicious arguments (e.g., '/writerom', '/O', '/gan', 'dumpefi', '-w'). Generate a high-severity alert, especially if the executing user is not on an approved list of system administrators or the execution occurs outside a maintenance window.",
              "For each known firmware utility, establish a baseline of command-line argument entropy per user and per host. Monitor for executions where the entropy score deviates significantly (e.g., >3 standard deviations) from the historical baseline, suggesting unusual or obfuscated parameters. Additionally, track the execution frequency per user; a spike above the 95th percentile of their typical daily activity warrants investigation.",
              "Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) to monitor the aggregate execution frequency of firmware utilities across the enterprise. Model the expected patterns, accounting for scheduled maintenance windows, and generate an alert when a spike in activity occurs outside the model's predicted confidence interval, indicating a potential coordinated and unauthorized firmware modification campaign."
            ]
          },
          {
            "description": "A process is initiated or a network connection is established immediately following a system boot, where the process is not a known startup item or the network destination is anomalous.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Windows System Event Log (Event ID 6005/6009)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, network gateway (for correlating boot-time traffic), and log aggregation platform.",
            "action": [
              "Correlate system boot events (Windows System Event ID 6005/6009) with subsequent process creation (Windows Event ID 4688) and network connections (Zeek conn.log) on a per-host basis. Generate an alert if a process launches from a non-standard startup location (e.g., %TEMP%, %APPDATA%) or if a network connection is made to an external IP on a non-standard port (not 80/443) within 60 seconds of boot.",
              "For each host, establish a statistical baseline for the time delta between boot completion (Event ID 6009) and the first outbound network connection. Flag any boot sequence where this delta is an outlier (e.g., below the 5th percentile of the historical distribution for that host), suggesting pre-OS or early-boot network activity.",
              "Train a one-class SVM (Support Vector Machine) on features of legitimate boot-time processes (e.g., parent process, user context, file path, signature status, command line). Apply the model to classify newly observed boot-time processes as 'normal' or 'anomalous'. Flag anomalous processes, especially those that are unsigned and have no parent, as strong candidates for firmware-based persistence."
            ]
          },
          {
            "description": "An access or modification attempt is logged against a firmware-related memory region or device, such as \\Device\\PhysicalMemory, by a process not explicitly whitelisted for such activity.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "High-value servers and administrator workstations with SACLs configured for physical memory and firmware-related objects.",
            "action": [
              "Deploy a System Access Control List (SACL) to audit write access to the \\Device\\PhysicalMemory object. Create a SIEM rule to alert on any resulting access event (Windows Event ID 4656/4663 with specific access masks for write operations) where the accessing process name is not on a pre-approved whitelist of legitimate system and firmware update utilities.",
              "For whitelisted processes that legitimately access physical memory, establish a baseline of access frequency per host. Use a percentile-based threshold (e.g., alert if the hourly access count exceeds the 99th percentile of the historical daily distribution) to detect anomalously high access rates that could indicate misuse of a legitimate tool.",
              "Apply a clustering algorithm (e.g., DBSCAN) to features of physical memory access events, including the accessing process name, user context, access mask, and time of day. Identify and characterize normal clusters of activity. Investigate any new, small clusters that appear, as these may represent a novel or low-and-slow firmware access technique."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading detection through system firmware modification?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1542.001",
        "name": "System Firmware",
        "evidence": [
          {
            "description": "A file hash matching a known bootkit or a tool designed to disable security controls at the firmware level is observed during process execution, file creation, or as a loaded driver.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 11 (Sysmon FileCreate)",
              "Windows Event ID 7 (Sysmon ImageLoad)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, particularly those running critical security software (EDR, AV).",
            "action": [
              "Monitor process creation (Windows Event ID 4688) and file write (Sysmon Event ID 11) events for file hashes matching a threat intelligence list of known bootkits and firmware-level defense evasion tools (e.g., components of FinFisher, GrayFish). Generate a critical alert on any match.",
              "Analyze Sysmon Event ID 7 (Image Load) logs to build a baseline of all drivers loaded on a system. Periodically compare the set of loaded drivers against the baseline. Alert on any new, unsigned driver, especially if its file path is in a temporary or user-writable location. Calculate the prevalence of each driver hash across the enterprise; a driver present on only one or a few hosts is highly suspicious.",
              "Develop a classification model to score the risk of a process loading a driver (Sysmon Event ID 7). Features should include the process signature status, parent process, user context, and the signature status and prevalence of the driver being loaded. A high-risk score indicates a potential attempt to load a malicious driver for defense evasion."
            ]
          },
          {
            "description": "Execution of a command-line tool, such as bcdedit.exe, that modifies the Boot Configuration Data (BCD) in a manner consistent with bypassing boot-time security controls like integrity services or test signing.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All UEFI-based endpoints and servers, especially those with Secure Boot enabled.",
            "action": [
              "Create a high-priority SIEM alert for process executions (Windows Event ID 4688) of `bcdedit.exe` where the command line contains arguments for disabling security features, such as `/set {default} bootstatuspolicy ignoreallfailures`, `/set testsigning on`, or `/set integrityservices disable`.",
              "Establish a baseline for the frequency of `bcdedit.exe` usage per user and per host. Flag any execution by a non-administrative user as anomalous. For administrative users, alert if the daily execution count exceeds a statistical threshold, such as the 99th percentile of their historical activity, indicating unusual modification of boot settings.",
              "Implement a sequence analysis model (e.g., a Hidden Markov Model) to learn legitimate sequences of administrative commands. Ingest events from multiple sources (e.g., Zeek dns.log, Windows Event ID 4688). Flag sequences as anomalous if `bcdedit.exe` is executed shortly after a connection to a low-reputation domain or the download of an unsigned executable, indicating a likely chain of malicious activity."
            ]
          },
          {
            "description": "A network connection is initiated from an endpoint after an OS boot event but before the host's EDR or primary security agent service has entered a running state.",
            "data_sources": [
              "Zeek conn.log",
              "Windows System Event Log (Event ID 6009)",
              "Windows System Event Log (Event ID 7036)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, network firewalls and sensors, and log aggregation platform.",
            "action": [
              "On a per-host basis, correlate the system boot timestamp (Event ID 6009) and the security service start timestamp (Event ID 7036, 'service entered the running state' for the EDR/AV service). Query network logs (Zeek conn.log) for any outbound connection from that host's IP in the time window between these two events. Any such connection is a high-confidence indicator of pre-monitoring C2 and should generate a critical alert.",
              "For each host, calculate a rolling average and standard deviation of the time delta between the OS boot event (Event ID 6009) and the primary security service start event (Event ID 7036). Generate an alert if this time delta exceeds a statistical threshold (e.g., mean + 3 standard deviations), as this may indicate a bootkit is actively delaying the security service to perform unmonitored actions.",
              "Develop a time-series forecasting model (e.g., Prophet) for each host to predict the expected outbound data volume (from Zeek conn.log, summing `orig_bytes`) in the first five minutes after a boot event. Generate an alert if the actual observed data volume significantly exceeds the model's predicted confidence interval, which could indicate data exfiltration or heavy C2 traffic by a firmware-level implant."
            ]
          },
          {
            "description": "An attempt to terminate, unload, or reconfigure a host-based security sensor, its service, or its logging components is observed via command line, service control manager, or audit policy changes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4719",
              "Windows System Event Log (Event ID 7034)",
              "Windows System Event Log (Event ID 7036)",
              "Windows Event ID 16 (Sysmon Service Configuration Change)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers with host-based security sensors installed.",
            "action": [
              "Create a SIEM rule to generate a critical alert for process creations (Windows Event ID 4688) of `taskkill.exe`, `sc.exe`, or `fltmc.exe` with command-line arguments targeting known EDR/AV processes, services, or filter drivers. Also, alert on any audit policy change (Windows Event ID 4719) or security service stop/failure (Event ID 7034/7036) not associated with a valid change request.",
              "For each security service, calculate the Mean Time Between Failures (MTBF) across the enterprise using service stop/failure events (Windows System Event ID 7034/7036). Alert on any host or group of hosts where the MTBF suddenly drops significantly below the established enterprise-wide baseline, indicating a potential targeted campaign to disable security controls.",
              "Implement a host-level risk scoring engine. Ingest alerts and statistical anomalies from this and other analytic plans as features. If a host accumulates a high-risk score related to potential persistence, use this score to dynamically raise the severity of subsequent, otherwise low-priority events like a security service error (Event ID 7034). A combination of these events creates a high-confidence composite alert for successful defense evasion."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]