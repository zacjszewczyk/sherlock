[
  {
    "information_requirement": "Is an adversary establishing command and control by abusing remote development features within Integrated Development Environments (IDEs)?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1219.001",
        "name": "IDE Tunneling",
        "evidence": [
          {
            "description": "An outbound network connection initiated by a known IDE process (e.g., code.exe, jetbrains_client.exe, pycharm64.exe) to a destination IP address or domain that is present on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations; Egress Network Points (e.g., Firewalls, Proxies); DNS Resolvers; SIEM/Log Aggregator",
            "action": [
              "In your SIEM, correlate process creation events (Windows Event ID 4688, Sysmon Event ID 1) for IDE executables with network connection events (Sysmon Event ID 3, Zeek conn.log) originating from the same host. Extract the destination IP or the resolved domain from DNS logs (Zeek dns.log). Alert if the destination IP or domain matches an entry in a high-confidence threat intelligence feed categorized as C2 or malware.",
              "Aggregate all DNS queries (Zeek dns.log) originating from known IDE processes over the last 30 days. Calculate the frequency of each requested domain across the enterprise. Generate an alert for any connection from an IDE process to a domain that falls in the bottom 5th percentile of prevalence, flagging it as statistically rare.",
              "Develop a supervised classification model (e.g., Gradient Boosting, Random Forest) using labeled data of known benign and malicious domains. Engineer features from DNS and TLS logs (Zeek dns.log, ssl.log) such as domain name length, character entropy, TTL value, number of associated IPs, and JA3 hash. Periodically score all new domains contacted by IDE processes. Alert on any domain classified as malicious with a confidence score above a predefined threshold (e.g., 0.85)."
            ]
          },
          {
            "description": "Execution of an IDE's command-line tunneling tool (e.g., 'code tunnel', 'gh cs tunnel') with arguments indicating non-interactive use or persistence, or an outbound TLS connection from an IDE process with a JA3/S hash or Server Name Indication (SNI) that deviates from an established baseline of legitimate remote development services.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations; Virtual Development Environments (VDEs); Egress Network Points; SIEM/Log Aggregator",
            "action": [
              "Create a SIEM rule to search process command-line arguments (from Windows Event ID 4688 or Sysmon Event ID 1) for strings like 'code tunnel', 'gh cs tunnel', or 'jetbrains_client'. Alert if the command contains persistence-related arguments (e.g., '--no-sleep') or if the executing user is not in the 'Authorized Developers' Active Directory group.",
              "From Zeek ssl.log, build a profile of legitimate JA3/S hashes and SNIs associated with IDE processes over a 30-day rolling window. Calculate the frequency of each hash/SNI pair. Alert on any new TLS connection from an IDE process that uses a JA3/S hash or SNI not present in the established baseline or that has a frequency below the 1st percentile.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to feature vectors created from Zeek ssl.log data for IDE-related connections. Use features like JA3/S hash, SNI string characteristics (length, entropy), and selected cipher suites. Manually label clusters corresponding to known services (e.g., GitHub, JetBrains). Generate an alert for any new connections that form a new micro-cluster or are classified as noise/outliers by the model."
            ]
          },
          {
            "description": "Execution of an IDE process (e.g., code.exe, pycharm64.exe, jetbrains_client.exe) or the installation of an IDE-related service on a host not classified as a 'Developer Workstation' in the asset inventory, particularly on critical servers like domain controllers or database servers.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Infrastructure (e.g., Domain Controllers, Database Servers, Application Servers); Workstations of non-technical departments (e.g., Finance, HR); Asset Management Database; SIEM/Log Aggregator",
            "action": [
              "Maintain an up-to-date asset inventory that categorizes hosts by role (e.g., 'Developer Workstation', 'Domain Controller'). Create a SIEM detection rule that triggers an alert when a process creation event (Windows Event ID 4688, Sysmon Event ID 1) for an IDE executable or a service installation event (Windows Event ID 7045) occurs on any host not in the 'Developer Workstation' asset group.",
              "For each server role defined in the asset inventory, generate a software baseline by calculating the execution frequency of all processes over a 90-day period. Create a scheduled query that alerts if a known IDE process is observed executing on a server where its historical execution frequency is zero.",
              "For each critical server group (e.g., Domain Controllers), train a one-class anomaly detection model (e.g., One-Class SVM or Isolation Forest) on feature vectors representing the set of running processes over time. Apply the model to new process execution data. Generate an alert when the model flags a host's process activity as anomalous and the specific anomalous process is an IDE executable."
            ]
          },
          {
            "description": "An outbound network connection from a known IDE process exhibiting behavioral anomalies inconsistent with interactive use, such as an unusually long connection duration, high total data volume, or a highly periodic (low-entropy) data transfer pattern indicative of automated beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations; Egress Network Points (e.g., Firewalls, Proxies); Cloud Development Environments (CDEs); SIEM/Log Aggregator",
            "action": [
              "Create a SIEM rule that correlates process data (Windows Event ID 4688, Sysmon Event ID 1) with network flow data (Zeek conn.log). Trigger an alert if a connection from an IDE process has a duration exceeding 12 hours or transfers more than 5 GB of data in a single direction (orig_bytes or resp_bytes).",
              "For each user, profile their IDE-related network connections (Zeek conn.log) over 30 days to establish a baseline for the 95th percentile of connection duration and total bytes transferred. Alert when a new connection from that user's IDE exceeds these personalized thresholds. For long-lived connections (>1 hour), calculate the Shannon entropy of the inter-packet arrival times; alert if the entropy is unusually low, suggesting a programmatic heartbeat.",
              "Aggregate network traffic volume (orig_bytes and resp_bytes from Zeek conn.log) from IDE processes into fixed time windows (e.g., 10 minutes). Train a time-series anomaly detection model (e.g., ARIMA, LSTM) on this data to learn the normal daily and weekly traffic patterns for developer activity. Apply the model to live traffic and alert when a time window is flagged as a significant anomaly, indicating a potential deviation like large-scale data exfiltration or sustained C2."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]