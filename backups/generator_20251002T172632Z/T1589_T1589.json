[
  {
    "information_requirement": "Is an adversary actively gathering our organization's identity information for targeting?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1589",
        "name": "Gather Victim Identity Information",
        "evidence": [
          {
            "description": "An authentication attempt or web request originates from a source IP address listed on a high-confidence threat intelligence feed as a known scanner, open proxy, or TOR exit node.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally-facing authentication services (e.g., VPN, OWA, M365), public web servers, network firewalls/gateways",
            "action": [
              "Create a detection rule that cross-references the source IP address in network connection logs (Zeek conn.log), web logs (Zeek http.log), and authentication logs (Windows Event ID 4624, 4625) against an active threat intelligence feed. Generate an alert for any match found in feeds categorized as 'scanner', 'proxy', or 'TOR'.",
              "For each external source IP observed in a 1-hour window, calculate the ratio of failed authentications (Event ID 4625) to total authentications. Establish a baseline distribution of this ratio for all external traffic. Flag any IP whose failure ratio exceeds the 95th percentile of the baseline, indicating a statistically significant anomaly consistent with credential testing.",
              "Deploy a pre-trained classification model (e.g., Logistic Regression) to score each external authentication attempt in real-time. Features should include IP reputation from threat intelligence, ASN information, source geolocation rarity, and time-of-day. An alert should be generated for any authentication attempt receiving a risk score greater than a pre-determined threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "An HTTP/S request is observed targeting a public web application or authentication endpoint, where the request contains a User-Agent string or HTTP header combination explicitly matching signatures of known automated reconnaissance tools.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public web servers, application load balancers, web application firewalls (WAFs)",
            "action": [
              "Implement a rule that inspects the 'user-agent' field in web logs (Zeek http.log). Trigger an alert if the User-Agent matches a maintained list of regular expressions for reconnaissance tools like 'nmap', 'sqlmap', 'feroxbuster', 'gobuster', or 'dirbuster'.",
              "For each external source IP, calculate the Shannon entropy of the User-Agent strings used within a 5-minute sliding window. A near-zero entropy value indicates a single tool is being used. Compare this entropy value to a baseline of typical user traffic and alert when an IP's User-Agent entropy is below the 5th percentile while its request count is above the 95th percentile.",
              "Utilize a sequence analysis model, such as a Recurrent Neural Network (RNN), trained on normal user navigation paths (sequences of URIs). Feed real-time URI request sequences from each source IP into the model. Flag any sequence that the model identifies as having a low probability of occurring, which is indicative of automated, non-human browsing or scanning."
            ]
          },
          {
            "description": "A single source IP generates a high volume of failed authentication events (Windows Event ID 4625 with status code 0xC0000064 'user name does not exist'), indicating a systematic attempt to validate a list of potential usernames.",
            "data_sources": [
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory Federation Services (ADFS), RADIUS servers, any centralized authentication server",
            "action": [
              "Create a threshold-based rule that triggers an alert when a single source IP address generates more than 20 failed login events (Event ID 4625) with status code 0xC0000064 within a 10-minute period.",
              "For each source IP generating failed logins, calculate the Shannon entropy of the set of unique usernames attempted within a 15-minute window. Establish a baseline for entropy from normal login failures (e.g., typos). Alert on any source IP where the username entropy exceeds the 98th percentile of the baseline, suggesting programmatic or random username generation.",
              "Apply a density-based clustering algorithm, such as DBSCAN, to authentication failure logs. Use features like source IP, timestamp, and target username. The algorithm will automatically group high-density clusters of failed logins from a single source against many accounts, effectively isolating username enumeration campaigns from sparse, legitimate failed login attempts."
            ]
          },
          {
            "description": "A single source IP makes a statistically anomalous number of HTTP GET requests to web pages or API endpoints containing identity information (e.g., 'Team', 'About Us', user profiles), exhibiting a consistent, non-human request cadence.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing corporate website, employee directory pages, API gateways",
            "action": [
              "Define a set of sensitive URIs known to contain PII or employee lists (e.g., '/api/users/*', '/about/staff'). Create a rule to alert if a single external source IP requests more than 25 of these URIs within a 5-minute window.",
              "For each source IP, calculate two metrics over a 10-minute window: 1) total requests per minute and 2) the standard deviation of the time between consecutive requests. Automated scraping is characterized by a high request rate (above 99th percentile) and a very low standard deviation of inter-request time (below 1st percentile). Alert when an IP meets both criteria.",
              "Implement a time series forecasting model (e.g., ARIMA or Prophet) for request volume to sensitive directories. The model learns the normal daily and weekly patterns. Generate an alert when the observed request volume for a time interval exceeds the upper bound of the model's prediction confidence interval, indicating an anomalous spike consistent with scraping."
            ]
          },
          {
            "description": "A large-scale authentication anomaly is detected, characterized by either (1) a one-to-many pattern of a single source IP attempting to authenticate against numerous accounts (Password Spraying), or (2) a many-to-one pattern of numerous source IPs attempting to authenticate against a single account (Credential Stuffing).",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally-facing authentication services (e.g., VPN, OWA, M365), Domain Controllers",
            "action": [
              "For Password Spraying, create a rule to alert when a single source IP generates failed logins (Event ID 4625) for more than 15 distinct user accounts within a 30-minute window. For Credential Stuffing, alert when a single user account experiences failed logins from more than 10 distinct source IPs within a 30-minute window.",
              "In a 1-hour window, group authentication events by source IP and calculate the ratio of unique accounts attempted to total attempts. A ratio approaching 1.0 indicates Password Spraying. Separately, group events by target account and calculate the ratio of unique source IPs to total attempts; a high ratio here suggests Credential Stuffing. Alert when either ratio exceeds the 99th percentile of its respective historical baseline.",
              "Deploy a multi-class classification model trained to distinguish between normal behavior, brute force, password spraying, and credential stuffing. Use aggregated features over a 15-minute window, such as the count of unique source IPs, count of unique target accounts, success-to-failure ratio, and the entropy of source geolocations. The model should classify each burst of authentication activity in near-real-time."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]