[
  {
    "information_requirement": "Is the adversary collecting sensitive information from Confluence repositories?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1213.001",
        "name": "Data from Information Repositories: Confluence",
        "evidence": [
          {
            "description": "A successful login to Confluence is associated with a known malicious IP address or a previously flagged user account.",
            "data_sources": [
              "Zeek conn.log",
              "Confluence Access Logs",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server, Network gateway/firewall, Domain Controllers",
            "action": [
              "Join Confluence access logs with Zeek conn.log on timestamp and IP. Compare the source IP of each successful login against a threat intelligence feed of known malicious IPs. Separately, check the username against an internal watchlist of compromised accounts. Generate an alert for any match.",
              "For all Confluence logins, enrich the source IP with its Autonomous System Number (ASN). Profile the frequency of all source ASNs over the last 30 days. Flag any login from an ASN that falls in the bottom 5th percentile of access frequency, indicating an unusually rare origin.",
              "Train a logistic regression model using labeled historical data (benign/malicious logins). Use features such as IP geolocation, ASN reputation, time of day, user role, and day of the week. Deploy the model to score new logins in real-time and alert on any session with a predicted probability of being malicious above 0.9."
            ]
          },
          {
            "description": "A user account executes an anomalously high number of search queries or searches for a predefined list of sensitive keywords.",
            "data_sources": [
              "Confluence Access Logs",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server, Network traffic sensor",
            "action": [
              "Filter Confluence access logs or Zeek http.log URI fields for search events. Scan the query parameters against a watchlist of sensitive terms (e.g., 'password', 'secret', 'config', 'network diagram', 'api_key'). Generate a high-severity alert on any match.",
              "For each user, create a 30-day baseline of hourly search query volume. Calculate the mean and standard deviation for this baseline. Alert when a user's search query count in any given hour exceeds three standard deviations above their individual mean.",
              "Aggregate all search queries from Confluence logs over a 90-day period. Apply Latent Dirichlet Allocation (LDA) to identify normal topic clusters. For each user session, calculate the Shannon entropy of their search terms and their distribution across topics. Flag sessions with unusually high entropy or queries that fall outside established topic clusters, indicating unfocused, exploratory searching."
            ]
          },
          {
            "description": "Confluence access is initiated from a non-standard User-Agent string or exhibits programmatic request timing with low variance between requests.",
            "data_sources": [
              "Zeek http.log",
              "Confluence Access Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server, Network traffic sensor",
            "action": [
              "Create and maintain a deny-list of User-Agent strings associated with common scripting tools (e.g., 'curl', 'Wget', 'python-requests', 'Go-http-client'). Monitor the User-Agent field in Zeek http.log for traffic to the Confluence server. Generate an alert for any match.",
              "Profile all unique User-Agent strings accessing Confluence over 30 days and calculate their frequency. Alert on any User-Agent that constitutes less than 0.1% of total requests. For each session, calculate the standard deviation of the time delta between consecutive requests. Flag sessions with a standard deviation below a set threshold (e.g., < 50ms) as likely scripted.",
              "Train a time-series anomaly detection model, such as an LSTM, on sequences of API endpoints called by legitimate users during typical sessions. Score new sessions in real-time against this model. Flag any session that deviates significantly from learned legitimate workflow patterns."
            ]
          },
          {
            "description": "A user account views a number of unique pages or downloads a volume of data from Confluence that significantly exceeds their individual or peer group baseline.",
            "data_sources": [
              "Confluence Access Logs",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server, Network traffic sensor",
            "action": [
              "Create a rule to alert if any single user account accesses more than 200 unique Confluence pages or is associated with more than 500 MB of egress traffic from the Confluence server within a 1-hour window.",
              "For each user, establish a 30-day rolling baseline for two metrics: unique pages visited per hour and total bytes downloaded per hour. Calculate the mean and standard deviation for both. Alert if a user's activity in any hour exceeds three standard deviations above their personal baseline for either metric.",
              "Use a clustering algorithm like DBSCAN to group users based on multi-dimensional access features (e.g., average pages per day, total data downloaded, diversity of spaces accessed). Identify users who abruptly shift from a low-activity cluster to a high-activity cluster, or who are classified as outliers, as potential account takeovers."
            ]
          },
          {
            "description": "A highly privileged account (e.g., Domain Admin) or a long-dormant account accesses the Confluence platform.",
            "data_sources": [
              "Confluence Access Logs",
              "Windows Event ID 4624",
              "Active Directory security logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server, Domain Controllers",
            "action": [
              "Maintain a static list of highly privileged user groups (e.g., 'Domain Admins', 'Schema Admins') and critical service accounts. Create a high-priority alert every time an account from this list is observed in Confluence access logs.",
              "For each user, track the last logon timestamp to Confluence. Generate an alert if an account accesses Confluence after being dormant on the platform for more than 180 days. This identifies a statistically infrequent event that warrants investigation.",
              "Develop a 'First Time Access' classification model that predicts the probability of a user legitimately accessing Confluence for the first time, based on their department, role, and historical access patterns of their peers. Alert when a user's first-time access is classified as a low-probability event."
            ]
          },
          {
            "description": "A user account accesses a large number of Confluence pages that are historically unpopular or not relevant to their role, indicating indiscriminate browsing.",
            "data_sources": [
              "Confluence Access Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server",
            "action": [
              "Create and maintain a list of Confluence spaces tagged with data sensitivity levels and associated authorized user groups. Generate a high-priority alert whenever a user accesses a space for which they are not an authorized group member.",
              "Calculate the popularity (unique user visits) of every Confluence page over the last 90 days. Define pages in the bottom 10th percentile of popularity as 'cold' pages. Alert if a single user session accesses more than 20 distinct 'cold' pages within 24 hours.",
              "Use a graph analytics platform to model the Confluence site, with users and pages as nodes and access events as edges. Identify communities of practice (dense clusters of users and pages). Flag a user as anomalous if their access pattern shows them traversing nodes across multiple, distinct communities they are not a part of."
            ]
          },
          {
            "description": "Following suspicious Confluence activity, the same user account authenticates to other internal systems for the first time, suggesting credential use for lateral movement.",
            "data_sources": [
              "Confluence Access Logs",
              "Windows Event ID 4624",
              "Windows Event ID 4648",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Confluence web server, Domain Controllers, Critical internal servers, Endpoint devices",
            "action": [
              "Create a stateful correlation rule: IF a user triggers a 'High Volume Confluence Download' alert, THEN monitor that user's subsequent authentications. IF the user is observed in a successful network logon (Windows Event ID 4624, Logon Type 3) to a server they have not accessed in the last 90 days, THEN escalate to a critical 'Potential Lateral Movement' alert.",
              "For each user, maintain a statistical profile of hosts they typically access. After a user triggers a high-risk Confluence alert (e.g., >95th percentile page views), monitor their subsequent logons (Windows Event ID 4624). If they log on to a host that is statistically rare for them (not in their 90-day profile), flag the sequence of events.",
              "Employ a sequence analysis model (e.g., Hidden Markov Model or LSTM) trained on user activity logs to learn common sequences of actions. Use the model to score observed event chains in real-time. A sequence like ['High Volume Page Access', 'Access to Rare Page', 'First-Time Logon to Tier 0 Server'] would be identified as a rare and high-risk sequence, triggering an alert."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]