[
  {
    "information_requirement": "Has the adversary forged authentication material (e.g., web cookies) to access web resources?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1606.001",
        "name": "Forge Web Cookies",
        "evidence": [
          {
            "description": "A successful authenticated web session to a corporate web application originates from a source IP address present on a high-confidence threat intelligence feed of known malicious infrastructure, such as C2 servers, anonymous proxies, or TOR exit nodes.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Web Proxies, Public-facing Web Applications",
            "action": [
              "Symbolic: For each web request in Zeek http.log that indicates a successful authenticated session (e.g., presence of a session cookie, user-specific URL), extract the source IP address (id.orig_h). Join this with Zeek conn.log using the session UID. Compare the source IP against a regularly updated threat intelligence blocklist. Generate a high-priority alert for any match.",
              "Statistical: For source IPs not on a blocklist, enrich the IP with ASN and geolocation data. For each user, maintain a historical baseline of source ASNs. Calculate the frequency of each ASN over the last 90 days. Generate a medium-priority alert if a user authenticates from an ASN that accounts for less than 1% of their historical sessions, indicating a rare network origin.",
              "Machine Learning: Implement a real-time IP reputation classification model. Train the model using features such as the IP's ASN, country, historical presence on blocklists, and the number of other users who have connected from it. Classify each incoming session's source IP as 'benign', 'suspicious', or 'malicious'. Sessions from IPs classified as 'malicious' trigger an alert for immediate investigation."
            ]
          },
          {
            "description": "A user's authenticated web session is initiated from a geographic location that is physically impossible to reach in the time elapsed since their last authenticated session from a different location.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, VPN Concentrators, Public-facing Web Applications, Cloud Service Gateways",
            "action": [
              "Symbolic: For each successful user authentication, retrieve the source IP from Zeek conn.log and derive its geolocation. Fetch the timestamp and geolocation of the user's previous successful authentication. Calculate the required travel speed between the two locations. If the speed exceeds a physically impossible threshold (e.g., 1000 km/h), generate a high-severity 'Impossible Travel' alert.",
              "Statistical: For each user, create a profile of their most frequent login geolocations (e.g., top 5 cities) over the last 90 days. For each new login, if the location is not in the user's top 5 profile, calculate the statistical rarity (e.g., percentile rank) of that location across all users in the organization. Alert if a user logs in from a location that is both new to them and rare for the organization (e.g., < 5th percentile).",
              "Machine Learning: Develop a user-specific sequence model (e.g., a Markov Chain) based on historical sequences of login locations. The model learns probable transitions between locations (e.g., 'Home Office -> Corporate HQ'). For each new login, calculate the transition probability from the previous location to the current one. A transition with a probability below a learned threshold (e.g., p < 0.01) is flagged as an anomaly indicative of a compromised session."
            ]
          },
          {
            "description": "An authenticated web session is associated with a User-Agent string that is highly unusual for the specific user, their peer group, or the organization, or is part of a combination of other anomalous session attributes.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Applications, Web Proxies, Internet Gateway",
            "action": [
              "Symbolic: Maintain an explicit blocklist of User-Agent strings associated with hacking tools, security scanners, and non-standard HTTP libraries (e.g., 'sqlmap', 'nmap', 'python-requests/2.x'). Scan the 'user_agent' field in Zeek http.log for every request. Generate a high-priority alert on any exact or partial match.",
              "Statistical: For each user, maintain a historical set of all User-Agent strings used in the past 90 days. For each new authenticated session, check if the session's User-Agent string is present in the user's historical set. If the User-Agent is new for that user, generate a medium-priority alert. This simple 'first-seen' logic is effective for detecting deviations from established user behavior.",
              "Machine Learning: Train a multi-variate anomaly detection model (e.g., Isolation Forest or Autoencoder) on session features. Extract features for each session: hour of day, day of week (from Zeek conn.log timestamp), source ASN rarity, source country rarity, and User-Agent rarity (pre-calculated statistical frequencies). The model learns a holistic view of a 'normal' session and assigns an anomaly score to new sessions. Scores exceeding a dynamically adjusted threshold are flagged for investigation."
            ]
          },
          {
            "description": "A successful authentication to a corporate web application from an external IP address occurs for a user, but no corresponding interactive or remote logon event (Windows Logon Type 2, 3, or 10) is recorded on any corporate-managed endpoint for that user within a reasonable preceding time window.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers (e.g., Active Directory Domain Controllers), Endpoints, Public-facing Web Applications",
            "action": [
              "Symbolic: For each authenticated web session from an external IP (identified in Zeek http.log and conn.log), extract the username and timestamp. Query endpoint logs for a successful Windows Logon Event (Event ID 4624) with Logon Type 2, 3, or 10 for the same username. If no such event is found within a 30-minute window prior to the web session, generate a high-severity alert for a 'Session without Endpoint Logon'.",
              "Statistical: For each user, calculate the typical time delta between their Windows logon (Event ID 4624) and their first subsequent web application access. Establish a baseline distribution (mean and standard deviation) for this delta. Alert if a web session occurs where the time delta falls more than 3 standard deviations from the user's mean, as this indicates an unusual session initiation pattern.",
              "Machine Learning: Employ a sequence mining algorithm to learn common user event pathways across data sources (e.g., 'Windows Logon -> Web App A access -> Web App B access'). The model identifies valid starting points for sequences. A sequence that begins with a web application access event without a preceding, valid logon event is classified as a high-risk anomaly, suggesting the session was initiated with a non-standard artifact like a forged cookie."
            ]
          },
          {
            "description": "A user session, initiated via a web cookie, exhibits anomalous post-authentication behavior, such as accessing sensitive administrative URLs, enumerating directories at a high rate, or transferring an unusually large volume of data.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Applications, File Servers, Database Servers",
            "action": [
              "Symbolic: Define a 'honeypot' list of critical URL paths that are sensitive, administrative, or related to data export (e.g., '/admin/config', '/api/export_all', '/_backup.zip'). Monitor the 'uri' field in Zeek http.log. Generate an immediate high-severity alert if any user accesses these paths, especially if it deviates from their assigned role-based access controls.",
              "Statistical: For each user and application, establish a baseline of the 99th percentile for HTTP requests per minute and total data downloaded per session (`resp_body_len` in http.log). In a sliding 5-minute window, if a user's request rate or data volume exceeds this established threshold, generate a medium-priority alert. This detects brute-force enumeration and data grabbing.",
              "Machine Learning: Train a recurrent neural network (RNN) or LSTM model on sequences of URLs requested by users within their sessions. The model learns the 'grammar' of normal user navigation. For each new URL request, the model predicts the probability of that request given the preceding sequence. A request with a very low probability is flagged as anomalous navigation, potentially indicating an adversary exploring the application."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]