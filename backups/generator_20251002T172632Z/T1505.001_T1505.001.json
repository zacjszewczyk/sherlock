[
  {
    "information_requirement": "Has the adversary established persistence using SQL stored procedures?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1505.001",
        "name": "SQL Stored Procedures",
        "evidence": [
          {
            "description": "The primary SQL Server process (sqlservr.exe) initiates an outbound network connection to a destination IP address or domain that matches an entry on a high-confidence threat intelligence feed of known command and control (C2) servers.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SQL server hosts, Enterprise edge firewalls, Network sensor appliances (e.g., Zeek), Threat intelligence platform feeds",
            "action": [
              "Symbolic: Filter network connection logs (Zeek conn.log, Windows Event ID 5156) for events where the source process is 'sqlservr.exe'. Correlate the destination IP address and domain against a real-time, high-confidence threat intelligence feed of known command and control (C2) servers. Generate a high-priority alert upon any match.",
              "Statistical: For each outbound connection from 'sqlservr.exe', calculate the historical rarity of the destination IP, domain, and port combination for that specific server. Using a sliding time window (e.g., 90 days), alert on any connection to a destination that falls into the bottom 5th percentile of frequency, indicating a newly or rarely contacted endpoint.",
              "Machine Learning: Develop a classification model (e.g., Logistic Regression) trained on labeled network connection data. Use features such as connection duration, bytes sent/received, destination port, JA3/JA3S hash, and the CTI match result to predict the likelihood that a new connection from 'sqlservr.exe' is malicious, flagging connections with a high probability score."
            ]
          },
          {
            "description": "The primary SQL Server process (sqlservr.exe) spawns a suspicious child process, such as a command shell (cmd.exe, powershell.exe), scripting engine (cscript.exe), or known adversary tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Detection and Response (EDR) agents on SQL servers, Windows Security Event Logs on SQL servers",
            "action": [
              "Symbolic: Create a SIEM rule to monitor Windows Event ID 4688 or Sysmon Event ID 1 for process creation events where the Parent Process Name is 'sqlservr.exe'. Alert if the New Process Name is on a watchlist including 'cmd.exe', 'powershell.exe', 'pwsh.exe', 'rundll32.exe', 'cscript.exe', 'wscript.exe', 'bitsadmin.exe', or if the Command Line contains suspicious strings like 'IEX', 'DownloadString', '-enc', or base64 encoded payloads.",
              "Statistical: For all child processes spawned by 'sqlservr.exe', establish a baseline of common process names and their command line argument structures. Alert when a new child process is observed that is statistically rare (e.g., a 'first seen' process for that parent) or when the Shannon entropy of its command line arguments exceeds the 95th percentile of the established baseline, suggesting obfuscation.",
              "Machine Learning: Use a one-class SVM or isolation forest model trained on features of legitimate child processes spawned by 'sqlservr.exe' (e.g., process name, command-line length, argument structure). Apply the model to new process creation events to detect anomalous outliers that do not conform to the established baseline of normal behavior."
            ]
          },
          {
            "description": "The SQL Server process ('sqlservr.exe') initiates an outbound network connection where the destination IP address geolocates to a country not associated with business operations, or where connection parameters like data volume or duration are statistical outliers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensor appliances (e.g., Zeek), SQL server hosts, Internal DNS server logs, Geolocation intelligence feeds",
            "action": [
              "Symbolic: Maintain an allowlist of countries where business operations occur. Enrich network connection logs (Zeek conn.log) for 'sqlservr.exe' with IP geolocation data. Generate an alert for any connection to a destination country not on the approved list.",
              "Statistical: For each SQL server, profile outbound 'sqlservr.exe' connections over a 30-day baseline, calculating metrics such as bytes sent, bytes received, and connection duration. Alert when any new connection's metrics exceed 3 standard deviations from the mean or the 99th percentile for that server, indicating potential data exfiltration or long-lived C2 channels.",
              "Machine Learning: Using historical Zeek conn.log data, apply time-series forecasting (e.g., Prophet, ARIMA) to model the expected daily volume of outbound data and the number of unique destination IPs from 'sqlservr.exe'. Flag any day where the actual values significantly deviate from the forecasted confidence interval, suggesting anomalous C2 or exfiltration activity."
            ]
          },
          {
            "description": "The SQL Server process (sqlservr.exe) writes or modifies a file with a potentially executable extension (.exe, .dll, .ps1, .bat) in a directory outside of its standard database and log file paths.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4663",
              "EDR File Creation Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of SQL servers, particularly temporary directories (e.g., C:\\Windows\\Temp) and user profile paths",
            "action": [
              "Symbolic: Using Sysmon Event ID 11 (FileCreate) or EDR logs, create a rule to alert when the process 'sqlservr.exe' creates a file with a potentially executable extension (e.g., .exe, .dll, .ps1, .bat, .vbs, .scr) in a non-standard directory (i.e., outside of designated SQL data, log, or backup paths).",
              "Statistical: For all files created by 'sqlservr.exe', calculate the Shannon entropy of the filename. Establish a baseline of normal filename entropy for legitimate log and data files. Alert on any file creation event where the filename entropy exceeds the 95th percentile of the baseline, indicating a potentially randomized payload name.",
              "Machine Learning: Train a classification model (e.g., Random Forest, Gradient Boosting) on labeled file creation events from SQL servers. Use features such as file path depth, parent directory name, file extension, and whether the filename has high entropy. The model will predict if a file creation event by 'sqlservr.exe' is 'benign' or 'suspicious'."
            ]
          },
          {
            "description": "The SQL Server configuration is modified to enable high-risk options, such as 'show advanced options', 'xp_cmdshell', or 'clr enabled', particularly outside of a documented change window.",
            "data_sources": [
              "Sysmon Event ID 13",
              "Windows Event ID 4657",
              "SQL Server Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry on SQL Servers, SQL Server's internal audit logging system, Change management ticket database",
            "action": [
              "Symbolic: Monitor Sysmon Event ID 13 (RegistryValueSet) for changes to SQL configuration values. Alert immediately if the registry value for 'xp_cmdshell' (e.g., HKLM\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\...\\Configuration\\xp_cmdshell) or 'clr enabled' is set to '1'. Cross-reference the timestamp and host with an authorized change request system.",
              "Statistical: Establish a baseline for the daily frequency of configuration changes on each SQL server. Calculate the mean and standard deviation of these changes. Generate an alert if the number of configuration changes in a 24-hour period exceeds three standard deviations from the mean, indicating an unusual burst of activity.",
              "Machine Learning: Train a binary classification model (e.g., Logistic Regression) to identify unauthorized configuration changes. Features should include: the specific configuration being changed (one-hot encoded), the user account performing the change, time of day, day of week, and whether the change occurred within a known maintenance window. The model will predict a probability of the change being 'unauthorized'."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]