[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying or creating shortcuts?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.009",
        "name": "Shortcut Modification",
        "evidence": [
          {
            "description": "A shortcut (.lnk) file execution event spawns a process whose target executable hash matches a known malicious indicator, or whose command line arguments contain a domain or IP address present in a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1",
              "Windows Sysmon Event ID 11",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints (User and System Startup Folders), DNS Resolvers, Network Egress Points, Threat Intelligence Platforms",
            "action": [
              "Symbolic Logic: Upon process creation from a .lnk file (Sysmon EID 1 or Win EID 4688 where ParentImage ends in .lnk), hash the target executable file. Concurrently, parse all command line arguments for IP addresses and domain names. Join the file hash, IPs, and domains against curated threat intelligence feeds for known malicious indicators. Generate an alert upon any match.",
              "Statistical: For each process spawned from a .lnk file that initiates a network connection (join Win EID 4688/1 with Zeek conn.log), calculate the enterprise-wide prevalence of the destination IP address over the last 30 days. Flag any connection where the destination IP falls into the bottom 1st percentile of prevalence, indicating it is a rare, potentially dedicated C2 server.",
              "Machine Learning: Develop a supervised classification model (e.g., Gradient Boosting) to score the maliciousness of a .lnk execution event. Engineer features such as: target file is digitally signed (boolean), target file path entropy, command-line argument length, presence of IP address in arguments, reputation score of any domains/IPs, and the global rarity of the target file hash. Train the model on historical true/false positive alerts."
            ]
          },
          {
            "description": "A shortcut (.lnk) file is created or modified in a common persistence location (e.g., Startup folder) to execute a Living-off-the-Land Binary (LOLBAS) with suspicious command-line arguments, such as those used for script execution, command encoding, or profile-less execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1",
              "Windows Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints: User Startup Folder (%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup), System Startup Folder (C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp)",
            "action": [
              "Symbolic Logic: Create a detection rule for a process creation event (Win EID 4688/1) where the ParentImage is 'explorer.exe', the process is a known LOLBAS (e.g., powershell.exe, mshta.exe, wscript.exe, rundll32.exe), and the command line contains high-risk patterns like '-e', '-enc', 'IEX', 'DownloadString', '.hta', or 'javascript:'. Correlate with a recent .lnk file creation (Sysmon EID 11) in a startup folder within the last 5 minutes.",
              "Statistical: For all processes launched from .lnk files targeting LOLBAS executables, calculate the Shannon entropy of the command-line arguments. Establish a distinct baseline entropy distribution for each LOLBAS (e.g., powershell.exe will have a different baseline than mshta.exe). Flag any execution where the argument entropy exceeds the 98th percentile for that specific LOLBAS, indicating probable obfuscation or encoding.",
              "Machine Learning: Utilize a clustering algorithm (e.g., DBSCAN) on LOLBAS executions originating from .lnk files. Use features such as command-line length, argument entropy, the count of special characters, and the presence of keywords like 'http', 'script', and 'invoke'. Investigate outlier clusters, which represent anomalous and potentially malicious LOLBAS usage patterns not conforming to normal administrative activity."
            ]
          },
          {
            "description": "A process launched from a shortcut in a startup folder spawns an anomalous child process (e.g., 'whoami.exe', 'net.exe') or initiates network connections to an unusual destination or with a high data transfer volume, inconsistent with its expected behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1",
              "Windows Sysmon Event ID 11",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Process Trees, Network Gateway Traffic Logs, DNS Query Logs, System and User Startup Folders",
            "action": [
              "Symbolic Logic: Define a rule that triggers when a process launched from a startup .lnk file (identified by file creation path in Sysmon EID 11 followed by process creation in EID 1) spawns a child process from a defined list of discovery or reconnaissance tools (e.g., whoami.exe, net.exe, ipconfig.exe, systeminfo.exe, tasklist.exe) within 60 seconds of the initial execution.",
              "Statistical: For each process typically launched from a startup .lnk (e.g., a legitimate updater), build a baseline profile of its normal child processes and network activity (e.g., destination ports, data volume). Use a multi-metric scoring system where deviations such as a new child process name, a connection to a port outside the top 95% of common ports for that process, or an upload volume exceeding 3 standard deviations from the mean add to a risk score. Alert on high cumulative scores.",
              "Machine Learning: Apply a time-series forecasting model (e.g., Prophet or ARIMA) to the hourly count of new .lnk files created in all startup directories across the enterprise. Generate an alert when the observed count significantly exceeds the forecasted value's confidence interval, which could indicate a widespread, automated deployment of a persistence mechanism via shortcuts."
            ]
          },
          {
            "description": "A shortcut (.lnk) file is created with deceptive metadata, such as an icon file path pointing to a common application (e.g., 'explorer.exe') while the target path executes a script interpreter (e.g., 'powershell.exe'), or the file has an unusually large size for a shortcut file.",
            "data_sources": [
              "Windows Sysmon Event ID 11",
              "File System Auditing Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint File Systems: User profile directories, Temporary file directories (%TEMP%), Email attachment sandboxes, Web download folders",
            "action": [
              "Symbolic Logic: Upon .lnk file creation (Sysmon EID 11), parse the file's metadata if possible, or monitor subsequent execution. Create a rule that alerts if the process name (e.g., powershell.exe, wscript.exe) is a script interpreter but the initiating .lnk file's name suggests a document or common application (e.g., 'Quarterly Report.docx.lnk', 'Chrome.lnk').",
              "Statistical: Establish a baseline for normal .lnk file sizes across the enterprise network. Monitor for new .lnk file creation events (Sysmon EID 11 or other file auditing) and flag any file whose size exceeds the 99th percentile of all observed .lnk files (e.g., > 1 MB). An abnormally large size may indicate an embedded payload or obfuscation data.",
              "Machine Learning: Train a classification model (e.g., Random Forest) to detect masquerading .lnk files. Features should include: a binary feature for icon/target mismatch (if parsable), file size, target path entropy, a binary feature for the presence of a Zone.Identifier alternate data stream (indicating internet origin), and the rarity of the target executable across the environment. The model will output a probability score of the file being malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary modified shortcuts to achieve privilege escalation?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.009",
        "name": "Shortcut Modification",
        "evidence": [
          {
            "description": "A shortcut (.lnk) file residing in a system-wide, privileged directory (e.g., Public Desktop, Admin Tools) is modified to point to a new or different executable whose hash is either unknown or matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1",
              "Windows Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints: System-wide startup folder (C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp), Public Desktop folder (C:\\Users\\Public\\Desktop), Administrative Tools folder",
            "action": [
              "Symbolic Logic: Monitor for file creation/modification events (Sysmon EID 11) for .lnk files in privileged directories like 'C:\\ProgramData\\*' or 'C:\\Users\\Public\\*'. Upon detection, parse the .lnk to identify the target executable, hash the file, and join against a threat intelligence feed of malicious hashes. Generate a high-priority alert on any match.",
              "Statistical: Create and maintain a baseline of executable hashes targeted by all .lnk files in privileged locations. Monitor for any change in a shortcut's target path or the hash of its target executable. Calculate the enterprise-wide rarity of the new hash. Alert if a privileged shortcut is modified to point to an executable that is present on fewer than 5 other endpoints, indicating a non-standard and suspicious binary.",
              "Machine Learning: Use an anomaly detection model on event sequences involving privileged shortcuts. A normal sequence might be 'msiexec.exe (parent) -> creates file (app.lnk)'. An anomalous sequence could be 'powershell.exe (parent) -> modifies file (app.lnk)'. A sequence-based model like an LSTM autoencoder can learn normal software installation and modification patterns and flag significant deviations."
            ]
          },
          {
            "description": "A shortcut (.lnk) in a privileged location is modified to prepend a LOLBAS command (e.g., 'cmd.exe /c') to the original legitimate target path, effectively hijacking the execution to run malicious code before the intended application.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1",
              "Windows Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints: Administrative Tools folder, Control Panel items folder, System-wide Start Menu programs folder",
            "action": [
              "Symbolic Logic: Monitor process creation events (Win EID 4688/1) where the process is running with a high integrity level ('IntegrityLevel: High' in Sysmon EID 1) and the command line matches a regex pattern such as `^(?i)(c:\\windows\\system32\\)?(cmd\\.exe /c|powershell\\.exe -c|wscript\\.exe).*\\.(exe|com|bat)`. This pattern identifies a LOLBAS launching another program, a common hijacking method.",
              "Statistical: For each shortcut in a privileged location, establish a baseline command-line structure (e.g., 'C:\\Program Files\\App\\app.exe'). Upon a new execution, calculate the Levenshtein distance or Jaccard similarity between the observed command line and the established baseline for that shortcut. Alert if the distance is high or similarity is below a threshold (e.g., 0.5), indicating a significant modification from the norm.",
              "Machine Learning: Train a classifier on command lines from privileged shortcut executions. Engineer features like: presence of LOLBAS strings ('cmd.exe', 'powershell'), argument count, total command line length, and the number of file paths or executables present in the string. The model can learn to distinguish between simple, direct targets ('app.exe') and hijacked commands ('cmd.exe /c evil.bat && app.exe')."
            ]
          },
          {
            "description": "A process launched from a shortcut with high integrity (e.g., 'Run as administrator') spawns unexpected child processes (e.g., 'net.exe') or initiates network connections to external addresses, which are behaviors inconsistent with the shortcut's intended benign function.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "High-Value Assets: Domain Controllers, Application Servers, Administrator Workstations; Network Infrastructure: Egress Points, DNS Resolvers",
            "action": [
              "Symbolic Logic: Create a rule that alerts when a process (Sysmon EID 1) with 'IntegrityLevel: High' or 'System' AND whose parent process was launched from a privileged shortcut path (e.g., in Administrative Tools) spawns a child process like 'net.exe', 'whoami.exe', or 'powershell.exe', OR initiates any network connection (Zeek conn.log) to a non-RFC1918 IP address.",
              "Statistical: For each privileged shortcut, establish a baseline of its normal network behavior (e.g., 99% of connections are internal, 95% use port 443). Alert when an execution of that shortcut, joined with Zeek conn.log data, generates a network connection that is a statistical outlier, such as a connection to a non-RFC1918 address or on a port not in the established baseline.",
              "Machine Learning: Use graph-based anomaly detection to model normal process execution trees originating from privileged shortcuts. Represent each execution as a graph where nodes are processes and edges are parent-child relationships. A new execution that generates a process graph with a significantly different structure (e.g., new nodes like 'powershell.exe', new edges to network activity nodes) would be flagged by the algorithm as a structural anomaly."
            ]
          },
          {
            "description": "The execution of a modified privileged shortcut (Process Creation Event) is immediately followed by events indicating successful privilege escalation, such as the creation of a new administrative account or a new logon session with elevated privileges within a short time window.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4672",
              "Windows Event ID 4720",
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Security Logs: Domain Controller Security Event Logs, Endpoint Security Event Logs; Processes: Local Security Authority Subsystem Service (LSASS) process monitoring",
            "action": [
              "Symbolic Logic: Create a correlation rule that triggers when a process creation event (EID 4688) from a modified privileged shortcut is followed within 10 seconds by a user account creation (EID 4720), a member being added to a privileged group like Administrators (EID 4732), or a new interactive or remote interactive logon (EID 4624, Type 2/10) by the same user or process. Correlate using User SID or Process ID.",
              "Statistical: Monitor the rate of special privilege assignment events (EID 4672) that occur within 60 seconds following process launches from privileged shortcuts. Establish a baseline rate for this correlation. Alert if the rate of these chained events exceeds the 99.9th percentile of the baseline, indicating an unusual and suspicious attempt to gain privileges post-execution.",
              "Machine Learning: Employ a sequence mining algorithm (e.g., Apriori or FP-Growth) on event logs to discover common and rare event patterns. Flag any newly observed or statistically rare sequence, such as: {LNK Modification Event -> Process Launch from LNK (4688) -> Special Privileges Assigned (4672) -> Member Added to Domain Admins (4732)}. The extreme rarity of this complete sequence makes it a high-fidelity indicator of attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]