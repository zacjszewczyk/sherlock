[
  {
    "information_requirement": "Is the adversary attempting to discover our cloud infrastructure to map available resources and identify high-value targets?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1580",
        "name": "Cloud Infrastructure Discovery",
        "evidence": [
          {
            "description": "A TCP connection to a known cloud provider API endpoint (e.g., ec2.us-east-1.amazonaws.com) originates from a source IP address present on a high-confidence threat intelligence feed of known malicious actors, anonymizing proxies (e.g., TOR exit nodes), or unusual hosting providers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Egress Points, DNS Resolvers, Network Security Monitoring (NSM) sensor locations",
            "action": [
              "Join Zeek ssl.log records with Zeek conn.log records on the 'uid' field. Filter for connections where the 'server_name' in ssl.log matches known cloud API FQDN patterns (e.g., '*.amazonaws.com', '*.googleapis.com', 'management.azure.com'). From the resulting set, filter for connections where the originator IP address ('id.orig_h' in conn.log) is present in a current, high-confidence threat intelligence list of malicious IPs. Generate an alert for each match.",
              "For all connections to cloud API endpoints, extract the source IP's geolocation and Autonomous System Number (ASN) from a geo-IP database. For each 24-hour period, calculate the frequency of source countries and ASNs. Generate an alert if a new connection originates from a country or ASN that falls below the 5th percentile of historical frequency over the last 30 days, indicating a rare source.",
              "Train a Random Forest classification model to distinguish between 'benign' and 'suspicious' connections to cloud APIs. Use labeled training data and features from Zeek conn.log and ssl.log, such as: source IP ASN, source country, connection duration, originator packets, responder packets, originator bytes, responder bytes, and the presence of a 'server_name' in the SSL/TLS handshake. Apply the trained model to new connections in near real-time to flag suspicious activity."
            ]
          },
          {
            "description": "A process is created on a host with a command line containing arguments, flags, or script names uniquely associated with known open-source or adversary-in-the-middle cloud discovery tools (e.g., Pacu, CloudMapper, ScoutSuite, CloudSploit).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrator and developer workstations, CI/CD pipeline runners, Bastion hosts, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Continuously scan the 'CommandLine' field in Windows Event ID 4688 logs for a library of regular expressions and string literals that match known cloud discovery tool names (e.g., 'pacu.py', 'cloudmapper'), modules ('--module ec2__enum_unauthenticated'), or unique argument patterns. Generate a high-priority alert on any match.",
              "For all process creations involving cloud CLI tools ('aws.exe', 'az.exe', 'gcloud.cmd'), isolate the command-line arguments. Calculate the Shannon entropy of the argument string. Establish a per-user baseline for command-line entropy. Generate an alert if a command's entropy score exceeds the 98th percentile for that user, as the complex invocations of automated scanning tools often have higher entropy than typical administrative commands.",
              "Vectorize command-line arguments from cloud CLI tool executions using a TF-IDF (Term Frequency-Inverse Document Frequency) model. Train a one-class Support Vector Machine (SVM) model on the vectorized commands from a baseline of known-good administrative activity. Use the trained model to identify any new command that is a significant statistical outlier, indicating a potentially malicious or unauthorized tool usage."
            ]
          },
          {
            "description": "Cloud infrastructure discovery commands (e.g., 'aws describe-instances', 'az vm list', 'gcloud compute instances list') are executed by a user account or from a host that is not part of a pre-defined, authorized group of cloud administrators or automated systems.",
            "data_sources": [
              "Windows Event ID 4688",
              "Active Directory Security Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, Active Directory domain controllers (for group membership lookups), Privileged Access Management (PAM) systems",
            "action": [
              "Maintain an explicit allow-list of Active Directory user groups (e.g., 'G_CloudAdmins', 'G_DevOps_Team') authorized to execute cloud CLI discovery commands. For each execution of 'aws.exe', 'az.exe', or 'gcloud.cmd' captured in Windows Event ID 4688, enrich the event with the user's group memberships. Generate an alert if the executing user is not a member of any authorized group.",
              "For each user, create and maintain a historical baseline of the specific discovery commands they typically run (e.g., 'describe-instances', 'list-buckets'). Generate an alert if a user runs a discovery command that is not in their historical set, or if the daily count of their discovery commands exceeds three standard deviations from their personal 90-day average.",
              "Use a DBSCAN clustering algorithm to group users based on their command-line activity profiles. A profile should be a feature vector including the frequency and variety of cloud CLI commands, typical execution times, and source hostnames. This will create organic clusters representing roles like 'Cloud Admins' or 'Developers'. Alert when a user's activity causes them to shift to a different cluster or be classified as a new outlier, indicating a significant change in behavior."
            ]
          },
          {
            "description": "A single user identity or source IP address executes a number of distinct cloud discovery API calls that exceeds a dynamically calculated threshold within a short time frame, such as more than 50 'describe', 'list', or 'get' calls within 5 minutes.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Monitor Logs",
              "Google Cloud Audit Logs",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane (API logging), Administrator workstations, Network egress points",
            "action": [
              "Create a SIEM rule that triggers if the count of API calls with event names matching patterns like 'describe*', 'list*', 'get*', or 'enum*' from a single source IP address or user identity (e.g., AWS ARN) exceeds a static threshold of 100 events within a 10-minute sliding window. Generate a medium-severity alert on trigger.",
              "For each user identity, establish a baseline for the rate of discovery-related API calls per hour. Using a 10-minute sliding window, calculate the current rate of discovery calls. Alert if the current rate exceeds the 99th percentile of that identity's historical baseline. Concurrently, calculate the Shannon entropy of the API event names within the window; a high entropy suggests broad enumeration across many services and should increase the alert's severity.",
              "For each user's stream of discovery API calls, implement a time-series anomaly detection model (e.g., ARIMA or Seasonal-Trend decomposition using Loess). The model will forecast the expected volume of calls with a 99% confidence interval. An alert is generated if the actual volume of calls significantly exceeds the upper bound of the forecasted confidence interval, indicating a burst of activity inconsistent with that user's past behavior."
            ]
          },
          {
            "description": "A single user identity executes discovery commands that query an anomalously high number of distinct service types (e.g., EC2, S3, RDS, Lambda) or all available geographic regions, especially when that user's history shows a narrow operational scope.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Monitor Logs",
              "Google Cloud Audit Logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management plane (API logging), Administrator and developer workstations",
            "action": [
              "Create a SIEM rule to inspect API call parameters in cloud audit logs (e.g., the 'requestParameters' field in AWS CloudTrail). Alert immediately if the parameters indicate a query across all regions (e.g., a script looping through regions) or if a wildcard is used for a resource query where it is not standard practice. This is a high-fidelity indicator of reconnaissance.",
              "For each user, maintain a historical set of the services (e.g., 'ec2.amazonaws.com', 's3.amazonaws.com') and regions (e.g., 'us-east-1', 'eu-west-2') they have interacted with over the last 90 days. For each new discovery API call, compare the targeted service and region against the user's historical set. Alert if the user queries a service or region for the first time.",
              "Model user-service interactions as a bipartite graph where users and cloud services are nodes, and an edge exists if a user has interacted with a service. Use a link prediction algorithm (e.g., based on Common Neighbors or Adamic-Adar) to score the probability of a user interacting with a new service based on their similarity to other users. Trigger an alert when a user makes a discovery call to a service that the model predicted as highly unlikely, suggesting a suspicious deviation from their established role."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]