[
  {
    "information_requirement": "Is the adversary executing commands or programs using launchctl? (TA0002 - Execution) (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1569.001",
        "name": "Launchctl",
        "evidence": [
          {
            "description": "A .plist file is created or modified in `/Library/LaunchAgents`, `/Library/LaunchDaemons`, or `~/Library/LaunchAgents` whose file hash matches a known malicious signature or whose 'ProgramArguments' key contains a known malicious IP address, domain, or URL.",
            "data_sources": [
              "EDR File Creation Events",
              "EDR File Modification Events",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "macOS endpoints (laptops, desktops, servers), DNS servers, Network egress points",
            "action": [
              "Correlate file modification/creation events for `.plist` files in standard launch directories with threat intelligence. Upon a file event, parse the `ProgramArguments` from the file content and query for any IPs or domains against an IOC database. Alert on any match.",
              "From `Zeek dns.log` data, build a 30-day baseline of all requested domains. For each new domain found in a newly created `.plist` file's `ProgramArguments`, calculate its frequency percentile. Alert on any domain falling in the bottom 5th percentile, indicating rarity.",
              "Apply a pre-trained logistic regression model to newly created `.plist` files. The model should use features like `RunAtLoad` presence, `ProgramArguments` length, and label entropy. Alert on any file with a maliciousness probability score above a tuned threshold, such as 0.85."
            ]
          },
          {
            "description": "The `launchctl` process is executed with `load` or `start` arguments, and the referenced `.plist` file contains suspicious content, such as an obfuscated `ProgramArguments` array or a generic `Label` (e.g., 'com.apple.update').",
            "data_sources": [
              "EDR Process Creation Events",
              "EDR File Access Events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution and file system data from all macOS endpoints.",
            "action": [
              "Scan the content of `.plist` files referenced in `launchctl load` commands using YARA rules that detect suspicious structures, such as a `Program` path in `/tmp` combined with `RunAtLoad`, or strings from known malware.",
              "For each `launchctl load` event, query the associated `.plist` file content. Calculate the Shannon entropy of the `Label` and `Program` string values. Compare against an enterprise-wide baseline of legitimate `.plist` files and alert if the entropy is more than 2 standard deviations above the mean.",
              "Using a K-Means clustering algorithm, group `.plist` files based on vectorized features of their XML structure (e.g., keys used, argument count, path depth). Schedule a periodic review of small or outlier clusters that do not map to known legitimate software installations."
            ]
          },
          {
            "description": "The `launchctl` process is executed with the `load` argument and the target `.plist` file path is an uncommon or world-writable directory, such as `/tmp`, `/var/tmp`, `/Users/Shared`, or a hidden directory within a user's profile.",
            "data_sources": [
              "EDR Process Creation Events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs from macOS endpoints, focusing on command-line arguments that reference world-writable and temporary directories.",
            "action": [
              "Create a high-priority alert to trigger on any `launchctl load` process execution where the command-line argument contains a path to a `.plist` file within `/tmp/`, `/var/tmp/`, `/Users/Shared/`, or `~/Downloads/`.",
              "Aggregate all directory paths from `launchctl load` command-line arguments over a 30-day period. For each new execution, calculate the percentile rank of its parent directory's frequency. Generate a medium-priority alert for any path that falls below the 10th percentile.",
              "Implement a time-series anomaly detection model (e.g., ARIMA) on the daily count of `launchctl load` executions from non-standard directories (e.g., not `/Library/*` or `~/Library/*`). Alert if the observed daily count significantly exceeds the forecasted count."
            ]
          },
          {
            "description": "The `launchctl` process is spawned by an unusual parent process, such as a web browser, document editor, or a process executing from a temporary directory, instead of a typical installer or shell.",
            "data_sources": [
              "EDR Process Creation Events"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process lineage data (parent-child relationships) from all macOS endpoints.",
            "action": [
              "Query for any `launchctl` process execution whose parent process name is a browser (e.g., 'Google Chrome', 'Safari'), office application (e.g., 'Microsoft Word', 'Preview'), or shell script interpreter (e.g., 'bash', 'zsh') that was itself spawned by one of those applications.",
              "Generate a baseline of all parent-child process pairs where the child is `launchctl`. Create an allow-list of parent processes that constitute 99% of all `launchctl` executions. Alert on any `launchctl` execution where the parent process is not in the allow-list.",
              "Model process execution chains as graphs. Apply a graph-based anomaly detection algorithm to identify structurally anomalous sub-graphs. A chain such as `Safari -> bash -> launchctl` would be flagged as an anomaly compared to baseline graphs where `launchctl` is spawned by system daemons or user-initiated terminal sessions."
            ]
          },
          {
            "description": "A sequence of events occurs in a short time window: a `.plist` file is created, it is loaded via `launchctl load`, the specified program executes, and the `.plist` file is deleted.",
            "data_sources": [
              "EDR File Creation Events",
              "EDR File Deletion Events",
              "EDR Process Creation Events",
              "EDR Network Connection Events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Correlated event logs from macOS endpoints (file system, process, network) and network egress points.",
            "action": [
              "Using a SIEM, create a stateful correlation rule that alerts when the following events for the same hostname occur within a 5-minute window: (1) File Create: `*.plist`, (2) Process Create: `launchctl load *.plist`, (3) Process Create: `ProgramArguments` from the plist, (4) File Delete: `*.plist`. This is a high-fidelity alert.",
              "For every `.plist` file creation event, start a timer. If a corresponding file deletion event occurs, record the file's lifetime. Calculate the distribution of these lifetimes across the enterprise. Alert on any `.plist` file loaded via `launchctl` whose lifetime falls in the 1st percentile (e.g., under 5 minutes).",
              "Feed sequences of endpoint events (file create, process exec, network conn, file delete) into a trained Recurrent Neural Network (RNN). The model should be trained to recognize legitimate software installation and execution sequences. Alert on any sequence of events that the model classifies as anomalous or having a low probability of being legitimate."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]