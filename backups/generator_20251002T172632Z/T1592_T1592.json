[
  {
    "information_requirement": "Is an external adversary actively gathering information about our enterprise hosts?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1592",
        "name": "Gather Victim Host Information",
        "evidence": [
          {
            "description": "An external source IP, flagged by a threat intelligence feed as a known scanner or malicious actor, generates connection attempts to more than 20 distinct destination ports on a single host or more than 50 distinct hosts on a single port within a 5-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing web servers, VPN concentrators, Firewall and network gateway logs, Domain controllers",
            "action": [
              "Symbolic: Ingest Cyber Threat Intelligence (CTI) feeds of known scanners or malicious IPs into a watch list. Create a SIEM rule to generate an alert whenever a source IP from Zeek conn.log or Windows Event ID 5156 matches an entry on the watch list and is associated with a connection attempt to the organization's network.",
              "Statistical: For each external source IP in Zeek conn.log, create a 5-minute rolling window. Calculate the count of unique destination hosts and unique destination ports. Establish a baseline for these counts across all external traffic. Generate an alert if an IP's unique host count or unique port count exceeds the 99th percentile of the established baseline, indicating a potential sweep or scan.",
              "Machine Learning: Develop a Random Forest classification model to predict reconnaissance activity. Use features from Zeek conn.log and Windows Event logs, such as 'is_on_cti_list' (boolean), 'distinct_ports_5min' (integer), 'distinct_hosts_5min' (integer), and 'connection_state_counts' (e.g., S0, REJ). Label training data using historical incidents and analyst feedback. Run the model on new connection data and alert when an IP's activity is classified as 'reconnaissance' with a confidence score greater than 0.9."
            ]
          },
          {
            "description": "An internal host makes an outbound HTTP/S connection to an external domain flagged by threat intelligence as a reconnaissance framework (e.g., ScanBox), followed by an HTTP POST request containing a data structure with a character entropy score greater than 4.5, suggesting exfiltration of collected host information.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers, Network egress points and web proxies, User workstations",
            "action": [
              "Symbolic: Maintain a CTI-derived watch list of domains/IPs associated with reconnaissance frameworks. Correlate Zeek dns.log and http.log to find internal hosts resolving and connecting to these indicators. Generate a high-severity alert on any successful HTTP/S connection from an internal IP to a watchlisted entity.",
              "Statistical: For outbound HTTP POST requests identified in Zeek http.log, particularly to uncategorized or low-reputation domains, calculate the Shannon entropy of the POST request body. Establish a baseline entropy for normal outbound POST data. Generate an alert if a request's entropy score exceeds the 98th percentile of this baseline, suggesting obfuscated data exfiltration.",
              "Machine Learning: Train a supervised classification model (e.g., Gradient Boosting) to detect browser profiling requests. Use labeled historical data and extract features from Zeek http.log such as 'user_agent', 'request_body_len', 'response_mime_type', 'uri_entropy', and 'domain_age' (from WHOIS lookups). Deploy the model to score new outbound HTTP requests and alert when a request is classified as 'profiling' with high confidence."
            ]
          },
          {
            "description": "A single external IP address generates a series of inbound HTTP/S requests where the User-Agent string matches a known scanning tool signature and the ratio of HTTP 4xx/5xx responses to 2xx/3xx responses for that IP exceeds 90% in a 10-minute window.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web applications, API gateways, Load balancers",
            "action": [
              "Symbolic: In a SIEM, apply a ruleset of regular expressions against the 'user_agent' and 'uri' fields in Zeek http.log to detect signatures of common scanning tools (e.g., 'nmap', 'nikto', 'sqlmap') or requests for sensitive files (e.g., '/.git/config', '/.env'). Generate an alert for any match from an external source IP.",
              "Statistical: For each external source IP in Zeek http.log, calculate the ratio of HTTP 4xx/5xx status codes to 2xx/3xx status codes within a 10-minute sliding window. Establish a baseline for this error ratio. Generate an alert if an IP's error ratio exceeds the 95th percentile of the historical baseline, which is indicative of forceful browsing or resource enumeration.",
              "Machine Learning: Implement a Long Short-Term Memory (LSTM) sequence model trained on benign user URI navigation paths from Zeek http.log. For each new session from an external IP, feed the sequence of requested URIs into the model. If the model assigns a perplexity score to the sequence that is in the top 1% (i.e., highly improbable), flag the session as anomalous and likely automated scanning."
            ]
          },
          {
            "description": "An external IP address initiates connections to more than 100 distinct destination ports on a single host (port scan) or to the same port on more than 50 distinct hosts in a /24 subnet (network sweep) within a 1-minute time window.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Firewall and network gateway logs, DMZ subnets, Externally-facing servers",
            "action": [
              "Symbolic: Create a SIEM rule that triggers an alert if Zeek conn.log or Windows Event ID 5156 logs show a single external source IP connecting to over 100 unique destination ports on one host, or to one port on over 50 unique hosts, within a 60-second window.",
              "Statistical: For each external source IP in Zeek conn.log, calculate the standard deviation and the entropy of the destination ports it connects to within a 5-minute window. A high value for either metric, relative to a baseline (e.g., greater than 3 standard deviations from the mean), suggests a wide, non-sequential port scan. Generate an alert for such IPs.",
              "Machine Learning: Apply a density-based clustering algorithm like DBSCAN to network connection data from Zeek conn.log. Use features such as source IP, destination IP, and destination port. Scanning activity will manifest as dense, distinct clusters that are separate from the main cluster of legitimate traffic. Programmatically identify and alert on IPs that are core points in these anomalous clusters."
            ]
          },
          {
            "description": "An inbound HTTP/S request contains a User-Agent string that has a character-level Shannon entropy score greater than 3.5, has fewer than 10 characters, or has not been observed in the previous 30 days of traffic.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web applications, Content Delivery Networks (CDNs), Reverse proxies",
            "action": [
              "Symbolic: Maintain a blocklist of User-Agent strings associated with known malicious tools (e.g., 'masscan', 'zgrab', 'Go-http-client'). Create a SIEM rule to generate an alert on any inbound HTTP request in Zeek http.log that contains a matching User-Agent.",
              "Statistical: For all inbound traffic in Zeek http.log, build a 30-day historical frequency distribution of User-Agent strings. Generate an alert for any request where the User-Agent: 1) has never been seen before, 2) falls in the bottom 0.1 percentile of frequency, or 3) has a calculated Shannon entropy score greater than a threshold of 3.5, indicating probable randomization.",
              "Machine Learning: Train a character-level autoencoder neural network on a large corpus of legitimate User-Agent strings observed over the last 90 days. For each new inbound request, pass its User-Agent string through the trained model. If the reconstruction error (e.g., mean squared error) exceeds the 99.9th percentile of reconstruction errors on a validation set, the User-Agent is likely fabricated or malicious. Generate an alert."
            ]
          },
          {
            "description": "A single external IP address makes more than 3 unique HTTP/S requests in 5 minutes that match URI patterns known to probe for information disclosure vulnerabilities (e.g., '/actuator/env', '/.git/config', 'phpinfo.php').",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public web servers, API endpoints, Cloud service management consoles",
            "action": [
              "Symbolic: Create and apply a list of regular expression patterns to the URI field of Zeek http.log records to identify requests for known sensitive files or information-leaking API endpoints (e.g., '/.git/config', '/actuator/heapdump', '/.env'). Generate a high-severity alert on any single match from an external IP address.",
              "Statistical: For each external source IP, count the number of unique URI requests that match the symbolic pattern list within a 5-minute window. Generate an alert if this count exceeds a low threshold (e.g., 3), as this indicates a targeted probing for multiple known vulnerabilities from a single actor.",
              "Machine Learning: Model benign user sessions using a one-class SVM. For each session, extract features such as 'session_duration_seconds', 'request_count', 'ratio_of_404_responses', 'average_uri_entropy', and 'count_of_suspicious_uri_patterns'. Classify sessions that the model identifies as outliers (anomalies) as potential reconnaissance activity and flag for analyst review."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]