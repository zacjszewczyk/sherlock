[
  {
    "information_requirement": "Is an adversary attempting to maintain exclusive control over a compromised system by eliminating competition or hardening the system against other attackers?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1668",
        "name": "Exclusive Control",
        "evidence": [
          {
            "description": "A process is created (Windows Event ID 4688) where the new process's SHA256 hash matches a known malware removal utility or a tool used to disable other security tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, particularly Domain Controllers and critical application servers.",
            "action": [
              "For each new process creation event (Windows Event ID 4688), compare the process's SHA256 hash against a threat intelligence feed of tools known to be used for exclusive control (e.g., PCHunter, GMER, specific malware removers). Generate a high-priority alert on any match.",
              "For each new process hash observed via Event ID 4688, calculate its prevalence (stack count) across all hosts over the last 30 days. Alert on process hashes seen on fewer than 0.1% of endpoints, excluding hashes associated with approved software deployment packages.",
              "Input file metadata (e.g., hash, PE header info, digital signature status, name) from process creation events into a pre-trained file classification model. Flag any process executable that the model classifies as malicious and whose filename or metadata suggests it is a system utility, cleaner, or anti-malware tool."
            ]
          },
          {
            "description": "A command-line execution (Windows Event ID 4688) contains arguments consistent with disabling security services, modifying firewall rules, or forcefully uninstalling security software.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, especially those hosting security management consoles or acting as domain controllers.",
            "action": [
              "Scan process command-line arguments (from Windows Event ID 4688) using regular expressions for patterns that disable security controls, such as `netsh advfirewall set allprofiles state off`, `sc.exe config <service_name> start= disabled`, `sc.exe stop <service_name>`, or `Set-MpPreference -DisableRealtimeMonitoring $true`. Alert on any match.",
              "For common system processes (e.g., powershell.exe, cmd.exe, wscript.exe), calculate the Shannon entropy of their command-line arguments. Establish a baseline of normal entropy scores per process and alert when a command's entropy exceeds the 95th percentile, indicating potential obfuscation or unusual complexity.",
              "Feed process command-line strings into a trained classification model (e.g., Logistic Regression, Random Forest) to distinguish between benign and malicious commands. Use features such as command length, character frequency distribution, presence of special characters (e.g., '^', '|', '&'), and counts of suspicious keywords (e.g., 'invoke', 'download', 'disable')."
            ]
          },
          {
            "description": "An unauthorized process modifies a registry key or value (Windows Event ID 4657) known to configure, disable, or impair the functionality of a security product.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System registries on all endpoints and servers, with a focus on administrator workstations and critical servers.",
            "action": [
              "Create a watch list of critical registry keys associated with security products (e.g., `HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware`). Monitor for modification events (Windows Event ID 4657) to these keys and alert if the associated process name is not on a pre-defined allow-list of legitimate system management tools or installers.",
              "For the monitored list of critical registry keys, build a baseline of normal modifying processes over a 30-day period. Alert when a process that has not previously been observed modifying a specific security key performs a modification, representing a statistical anomaly in the (process_name, registry_key_path) pairing.",
              "Apply a time-series anomaly detection model (e.g., SARIMA, Prophet) to the hourly count of modification events affecting security-related registry keys. A sudden spike in modifications that does not correlate with known maintenance windows or software deployments should be flagged as an anomaly requiring investigation."
            ]
          },
          {
            "description": "A process spawned by a network service or other non-standard parent process modifies firewall rules, disables security-related services, or deletes files in security tool directories.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4947",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing web servers, remote access gateways, and general user endpoints.",
            "action": [
              "Implement a correlation rule that alerts when a typically non-interactive parent process (e.g., `winword.exe`, `excel.exe`, `wmiprvse.exe`) spawns a shell or scripting engine (`cmd.exe`, `powershell.exe`) and this is followed within 5 minutes by a security degradation event (e.g., firewall rule change via Event ID 4947, service stop via Event ID 7036) on the same host.",
              "Build a probabilistic model of all parent-child process relationships observed in the environment (from Windows Event ID 4688) to establish baseline probabilities for P(Child|Parent). Alert when a rare pairing (e.g., probability < 0.01) occurs, especially when the child process is a sensitive utility like `netsh.exe`, `sc.exe`, or `powershell.exe`.",
              "Represent system activity as a process execution graph, where nodes are processes and directed edges are parent-child relationships. Use a graph-based anomaly detection algorithm to identify subgraphs that deviate from learned normal structures, such as a web server process spawning a shell that then modifies a system service."
            ]
          },
          {
            "description": "A rapid sequence of account manipulation events occurs, such as a newly created administrative account disabling or deleting other legitimate user accounts within a short time frame.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4726",
              "Windows Event ID 4732",
              "Windows Event ID 4725"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory databases, and local account databases on critical servers.",
            "action": [
              "Create a stateful rule that triggers a high-severity alert upon detecting the following sequence of events from a Domain Controller within a 15-minute window: 1) A user account is created (Event ID 4720), 2) the new account is added to a privileged group (Event ID 4732), and 3) the new account is used to disable (Event ID 4725) or delete (Event ID 4726) another user account.",
              "For all instances of an account being added to a privileged group (Event ID 4732), calculate the time difference from the account's creation (Event ID 4720). Establish a baseline for this 'time-to-privilege' delta. Alert when this delta is in the bottom 1st percentile (e.g., promotion within seconds or minutes of creation), as this indicates automated malicious activity.",
              "Train a classification model to assign a risk score to new user creation events (Event ID 4720). Use features such as username patterns/entropy, time of day, source workstation name, and the creating account's privileges. A high-risk creation event that is immediately followed by privileged activity, such as disabling another account (Event ID 4725), would trigger a high-confidence alert."
            ]
          },
          {
            "description": "An unauthorized process installs a patch or disables a service on a target system immediately following suspicious inbound network activity indicative of exploitation.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Windows Event ID 4688",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing servers (e.g., web, VPN, RDP), network perimeter security devices, and patch management systems.",
            "action": [
              "Correlate a Zeek `notice.log` entry for exploitation (e.g., 'Log4j_Exploitation_Attempt') or a connection from a known malicious IP in `conn.log` with a subsequent service stop (Windows Event ID 7036) or patch-like process execution (Windows Event ID 4688) on the same destination host within a 1-hour window. Alert on this sequence.",
              "Establish a baseline of normal patching and service management activity, profiling the typical processes (e.g., `msiexec.exe`, `TrustedInstaller.exe`), times, and days of the week. Flag any service modification (Event ID 7036) or execution of a Windows Update or MSI installer package that is a statistical outlier (e.g., occurs at 3 AM on a Sunday, initiated by `powershell.exe`) for review.",
              "Use a cross-correlation time-series analysis to model the relationship between external network indicators (e.g., volume of Zeek `notice.log` alerts, connection counts from new ASNs in `conn.log`) and internal host events (e.g., count of service status changes from Event ID 7036). The model can learn normal operational correlations and flag novel, high-correlation events."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]