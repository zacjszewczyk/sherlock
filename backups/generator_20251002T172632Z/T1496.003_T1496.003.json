[
  {
    "information_requirement": "Is the adversary causing financial or availability impact via SMS pumping?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1496.003",
        "name": "SMS Pumping",
        "evidence": [
          {
            "description": "Web form submissions that trigger SMS messages originate from source IPs or contain User-Agent strings matching known malicious indicators from threat intelligence feeds.",
            "data_sources": [
              "Cloud Messaging Service Logs",
              "Zeek http.log",
              "Web Server Access Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Servers hosting OTP/verification forms, API Gateway, Cloud tenant for Messaging Services, Threat Intelligence Platform",
            "action": [
              "(Symbolic) Ingest threat intelligence feeds for fraudulent phone number prefixes and known malicious botnet IPs/User-Agents. Create a detection rule to cross-reference these lists in real-time against destination phone numbers from Cloud Messaging Service Logs and source IPs/User-Agents from Zeek http.log and Web Server Access Logs. Generate a high-severity alert on any match.",
              "(Statistical) For each web form, calculate the frequency of requests per source IP. Establish a baseline using the 99th percentile of requests within a 5-minute window from all sources over the last 30 days. Alert if a single IP exceeds this established threshold, as this may indicate a bot that is not yet on a threat list.",
              "(Machine Learning) Deploy a classification model (e.g., Logistic Regression, Random Forest) trained on features such as IP reputation, User-Agent string commonality, time of day, and country of origin. Use the model to score each incoming OTP/form request in real-time and flag those classified as 'high-risk bot' for investigation."
            ]
          },
          {
            "description": "A single source IP address submits requests to an SMS-generating web form with an abnormally high frequency and a low, consistent time interval between requests, characteristic of automated scripting.",
            "data_sources": [
              "Zeek http.log",
              "Web Server Access Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Servers, Web Application Firewalls (WAFs), Network Security Monitoring Sensors",
            "action": [
              "(Symbolic) Search web logs (Zeek http.log, IIS logs) for User-Agent strings associated with common automation tools (e.g., 'curl', 'python-requests', 'HeadlessChrome') targeting SMS-generating endpoints. Alert on matches that are not part of legitimate, documented testing or API usage.",
              "(Statistical) For each source IP submitting to an OTP form, calculate the time delta between consecutive requests over a 5-minute window. Calculate the standard deviation of these deltas. A standard deviation below a defined threshold (e.g., < 0.5 seconds) indicates robotic, non-human timing. Alert on such IPs.",
              "(Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on web log data, using features such as source IP, User-Agent, and request timing. This can group automated bot-like activity into distinct clusters, separating it from the more varied patterns of legitimate human users, even without prior signatures."
            ]
          },
          {
            "description": "Command-line execution on an internal host includes arguments or process names associated with known SMS pumping tools or scripts.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal application servers, Developer workstations with API access to messaging services, Endpoint Detection and Response (EDR) platform",
            "action": [
              "(Symbolic) Monitor Windows Event ID 4688 (Process Creation) and PowerShell logs (Event ID 4104) for command-line arguments containing names, hashes, or specific parameters of known SMS pumping scripts (e.g., 'smspump.py', 'send-sms-bulk'). Alert on any match.",
              "(Statistical) Analyze process creation logs (Event ID 4688) to baseline normal developer or service account activity on servers with API access to messaging services. Identify outliers by calculating the rarity of a process being executed by a specific user or from a specific parent process. A rare process making network connections to an SMS API endpoint is highly suspicious.",
              "(Machine Learning) Train a sequence-based model (e.g., using command-line history) to learn normal command sequences for service accounts. Flag command sequences that significantly deviate from learned patterns and involve network utilities like curl.exe or PowerShell's Invoke-WebRequest targeting SMS gateways."
            ]
          },
          {
            "description": "The rate of outbound SMS requests originating from a single source (e.g., API key, web form endpoint) exceeds a statistically established baseline by a significant margin.",
            "data_sources": [
              "Cloud Messaging Service Logs",
              "Web Server Access Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "API Gateway, Cloud Messaging Service Console, Network Egress Points, SIEM Platform",
            "action": [
              "(Symbolic) Implement a simple threshold rule that triggers a medium-severity alert if a single API key is used to generate more than a fixed number of SMS requests (e.g., >100) within a 1-minute window, a rate that far exceeds typical user verification needs.",
              "(Statistical) For each API key and web form endpoint, establish a baseline for the number of SMS requests per 5-minute interval using a 30-day moving average and standard deviation. Generate an alert if the current count exceeds the baseline by more than 3 standard deviations.",
              "(Machine Learning) Employ a time-series anomaly detection model (e.g., ARIMA) on the volume of SMS requests from each source (API key, form). The model forecasts the expected volume with a confidence interval; an alert is triggered if the actual volume significantly surpasses the upper bound of the forecast, indicating an anomaly specific to that source."
            ]
          },
          {
            "description": "A significant increase in messaging service costs coincides with a high volume of outbound SMS messages directed to phone number prefixes that are geographically anomalous or associated with high-cost, premium-rate services.",
            "data_sources": [
              "Cloud Provider Billing and Cost Management Logs",
              "Cloud Messaging Service Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Billing Console, Financial Reporting Systems, Cloud Messaging Service Console",
            "action": [
              "(Symbolic) Create a rule that triggers if a cloud billing alert for SMS cost overruns occurs within the same 24-hour period that Cloud Messaging Service Logs show messages were sent to phone prefixes on a manually curated blocklist of high-risk or non-business-relevant countries.",
              "(Statistical) Monitor the daily cost for SMS services. Alert if the daily cost exceeds the 95th percentile of costs from the previous 90 days. Upon alert, automatically generate a frequency distribution of destination country codes for that day's messages. A low-entropy distribution, heavily skewed towards one or two unusual countries, is a strong indicator of fraud.",
              "(Machine Learning) Use a multivariate correlation analysis to model the relationship between cost, SMS volume, and geographic distribution. An anomaly detection model can identify periods where the cost is disproportionately high given the message volume and destination mix, suggesting a shift to more expensive, fraudulent numbers."
            ]
          },
          {
            "description": "The geographic distribution of destination phone numbers for outbound SMS messages deviates significantly from established business patterns, showing a sudden concentration on a small number of unusual or high-risk countries.",
            "data_sources": [
              "Cloud Messaging Service Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Messaging Service Console, SIEM Platform",
            "action": [
              "(Symbolic) Maintain an explicit allowlist of country codes where the organization conducts business. Generate a high-severity alert for any SMS message sent to a destination country code not on this list.",
              "(Statistical) Calculate the Shannon entropy of the destination country codes from messaging logs over a rolling 1-hour window. Establish a baseline entropy level for normal business operations. A sharp drop in entropy from the baseline indicates traffic is being focused on a small set of countries. Alert if the entropy value falls more than 2 standard deviations below the mean.",
              "(Machine Learning) Use a clustering algorithm on historical SMS log data to identify normal geographic clusters of destination numbers. A new batch of messages that forms a new, distinct cluster, especially one centered on a high-risk region, should be flagged as anomalous for investigation."
            ]
          },
          {
            "description": "A series of requests to an SMS-generating web form, associated with a single user session or account, originates from multiple, geographically distant IP addresses in a time frame that would be impossible for a legitimate user to travel between.",
            "data_sources": [
              "Zeek http.log",
              "Web Server Access Logs",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Web Servers, Authentication Servers, Geolocation Enrichment Service",
            "action": [
              "(Symbolic) For a given user session token, if a subsequent request's source IP country differs from the previous request's country within a 10-minute window, generate a low-severity alert for review.",
              "(Statistical) For each user session, calculate the great-circle distance and time delta between the geolocations of consecutive source IPs. If the calculated speed exceeds a plausible threshold (e.g., 800 km/h), flag the session as an 'impossible travel' event. Correlate this with SMS generation activity for higher fidelity.",
              "(Machine Learning) Train a sequence-based anomaly detection model (e.g., an LSTM autoencoder) on sequences of (timestamp, source_IP_geolocation) for user sessions. The model learns normal user mobility patterns. Flag sequences with high reconstruction error, which represent 'impossible travel' or other anomalous session behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]