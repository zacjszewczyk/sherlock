[
  {
    "information_requirement": "Has an adversary established persistence by installing a custom application shim?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546.011",
        "name": "Application Shimming",
        "evidence": [
          {
            "description": "A new shim database (.sdb) file is created in the `%WINDIR%\\AppPatch\\Custom\\` directory, and the file's hash matches a known-malicious signature or its content triggers a YARA rule for malicious shims.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Create a SIEM rule to trigger on file creation events (Sysmon Event ID 11) where the TargetFilename ends with '.sdb' and the path is `%WINDIR%\\AppPatch\\Custom\\`. Upon trigger, automatically compute the file's SHA256 hash and query a threat intelligence platform for a match. Concurrently, scan the file content with a YARA ruleset designed to detect known malicious shim patterns.",
              "For every new `.sdb` file created in the custom shim directory, calculate its Shannon entropy score. Establish a baseline distribution of entropy scores for all known-good `.sdb` files in the environment. Generate an alert for any new file whose entropy score exceeds the 95th percentile of the baseline, as this may indicate packed or encrypted malicious code.",
              "Deploy a file content classification model (e.g., a gradient boosting classifier) trained on byte-level n-grams from a labeled dataset of benign and malicious `.sdb` files. Integrate the model into the file creation monitoring workflow to classify each new `.sdb` file in real-time. Alert on any file classified as 'malicious' with a confidence score greater than 0.90."
            ]
          },
          {
            "description": "The `sdbinst.exe` process is observed executing with a command-line argument that specifies a path to a `.sdb` file located in a user-writable directory such as `C:\\Users\\`, `C:\\Temp\\`, or `%APPDATA%`.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Staging Servers, Application Servers",
            "action": [
              "Create a SIEM rule to trigger on process creation events (Sysmon Event ID 1) where the Image is `sdbinst.exe` and the CommandLine contains a path to a `.sdb` file that matches regular expressions for user-writable locations like `(?i)c:\\\\users\\\\`, `(?i)c:\\\\temp\\\\`, `(?i)\\\\appdata\\\\`, or `(?i)c:\\\\programdata\\\\`.",
              "For all `sdbinst.exe` executions, parse the directory path of the `.sdb` file from the command line. Maintain a historical frequency table of all `.sdb` parent directories observed over the last 90 days. Generate an alert for any execution where the parent directory has been seen fewer than 5 times or has never been seen before in the environment.",
              "Apply a clustering algorithm (e.g., DBSCAN) to features extracted from `sdbinst.exe` process creation events, including: the user account context, the parent process name, and the full directory path of the `.sdb` file. Periodically analyze the clusters and investigate any small, sparse clusters as these represent deviations from normal, high-volume administrative or software installation activities."
            ]
          },
          {
            "description": "A process known to be targeted by shims (e.g., `services.exe`, `spoolsv.exe`, `explorer.exe`) spawns a suspicious child process (e.g., `powershell.exe`, `cmd.exe`) or initiates an external network connection to a destination with a low-reputation score or one that is statistically rare for the environment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Windows Event ID 5156",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Network Egress Points",
            "action": [
              "Create a correlation rule that alerts on the following sequence: 1) A process from a watchlist (e.g., `explorer.exe`, `svchost.exe`) starts (Sysmon Event ID 1). 2) Within 60 seconds, it spawns a child process associated with command-and-control (e.g., `powershell.exe`, `rundll32.exe`). 3) The child process initiates an outbound network connection (Sysmon Event ID 3 or Zeek conn.log) to an IP address present on a threat intelligence blocklist.",
              "For each process on a watchlist of common shim targets, create a 30-day baseline of its normal child process names and network destination Autonomous System Numbers (ASNs) from Zeek conn.log. Calculate the frequency of each observed child process and ASN. Generate an alert if a target process spawns a child or connects to an ASN that is in the lowest 1st percentile of frequency.",
              "Train a time-series anomaly detection model, such as an LSTM Autoencoder, on sequences of system events (process creations, network connections, registry modifications) that occur immediately following the launch of high-value parent processes. The model learns the normal pattern of post-launch activity. Any new sequence of events that produces a high reconstruction error from the model should be flagged as a significant deviation from normal behavior, warranting investigation."
            ]
          },
          {
            "description": "A write or modification event is detected on a custom shim database path (`%WINDIR%\\AppPatch\\Custom\\*.sdb`) or a custom shim registry key (`HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\`) by a process not on an allowlist of trusted installers or patch management tools.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4657",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Create a SIEM rule to alert on any modification to the registry key `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\` (Sysmon Event ID 13) or file creation in `%WINDIR%\\AppPatch\\Custom\\` (Sysmon Event ID 11) where the process performing the action is not `sdbinst.exe` or a member of a pre-defined allowlist of trusted software management processes.",
              "Analyze the timing of all modifications to shim-related registry keys and file paths. Create a baseline distribution of these events by hour of day and day of the week. Generate an alert for any modification that occurs at a time that is more than three standard deviations away from the mean time of legitimate patching or software installation windows.",
              "Implement a classification model (e.g., Random Forest) to score the legitimacy of a shim-related file or registry modification. Train the model using features such as the parent process name, user context, time of day, and correlation with other recent system events. Alert on any modification that the model classifies as 'suspicious' with high confidence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has an adversary escalated privileges by abusing application shimming for UAC bypass?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546.011",
        "name": "Application Shimming",
        "evidence": [
          {
            "description": "A custom shim database (.sdb) file is created in a user-writable directory (e.g., `%TEMP%`, `%APPDATA%`), and its content matches a YARA rule designed to detect shims that target auto-elevating executables like `msconfig.exe` or `eventvwr.exe` for UAC bypass.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers",
            "action": [
              "Create a monitoring rule to watch for `.sdb` file creation events (Sysmon Event ID 11) in user-writable directories (e.g., `C:\\Users\\*`). Upon creation, trigger an automated scan of the file with a specific YARA ruleset designed to identify shim structures used for UAC bypass techniques. Generate a high-priority alert on any match.",
              "Profile the file size and entropy of all `.sdb` files created in user-writable directories. Compare these metrics against a pre-compiled list of statistics for known UAC bypass shims. Flag any new file whose size and entropy fall within 2 standard deviations of a known malicious shim's profile.",
              "Train a classification model to distinguish between benign temporary files and malicious `.sdb` files staged in user directories. Use features such as file path patterns, file size, entropy, and the name of the process that wrote the file. A high-confidence classification as 'malicious .sdb' by the model should trigger an immediate alert for analyst review."
            ]
          },
          {
            "description": "A sequence of process creations occurs within a 10-second window under the same user session: `sdbinst.exe` executes to install a shim, immediately followed by the execution of a Microsoft-signed, auto-elevating executable (e.g., `eventvwr.exe`, `fodhelper.exe`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Administrator Jump Boxes",
            "action": [
              "Create a correlation rule that triggers when a process creation event for `sdbinst.exe` (Process A) is followed within 10 seconds by a process creation event for an executable on a UAC bypass watchlist (e.g., `eventvwr.exe`, `msconfig.exe`, `fodhelper.exe`) (Process B), where both events share the same User and LogonId fields.",
              "Establish a baseline of all sequential process pairs that execute within a 10-second window, calculating the transition probability for each pair over a 30-day period. Generate an alert when the observed transition from `sdbinst.exe` to an auto-elevating executable has a probability that falls in the bottom 0.1% of all observed two-process sequences.",
              "Model process execution sequences using a Markov chain or a Recurrent Neural Network (RNN) trained on months of normal user activity data. When the specific sequence `sdbinst.exe` -> `auto-elevating-executable` is observed in a user session, calculate the sequence's likelihood score against the trained model. A score below a pre-defined anomaly threshold indicates a strong deviation from normal behavior and a potential UAC bypass."
            ]
          },
          {
            "description": "A process chain is observed where a process running at a Medium integrity level spawns an auto-elevating executable (e.g., `eventvwr.exe`), which is created with a High integrity level and subsequently spawns a child process (e.g., `cmd.exe`) that inherits the High integrity level.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers",
            "action": [
              "Create a rule using Sysmon Event ID 1 data to detect the following process ancestry chain: a grandparent process with `IntegrityLevel=Medium` spawns a parent process (e.g., `eventvwr.exe`) with `IntegrityLevel=High`, which in turn spawns a child process (e.g., `cmd.exe`, `powershell.exe`) with `IntegrityLevel=High`. This requires joining events on ProcessGuid and ParentProcessGuid.",
              "For all auto-elevating executables, create a baseline of their typical child processes and the frequency of those children. Generate a high-risk alert when an auto-elevating process spawns a statistically rare child (e.g., `cmd.exe` spawned by `eventvwr.exe` is seen less than 0.01% of the time) and there is an integrity level escalation from Medium to High in the process chain.",
              "Use a graph-based anomaly detection algorithm to analyze the process creation graph of each host. Represent processes as nodes with features (name, integrity level) and parent-child relationships as edges. Train the algorithm to recognize normal graph structures and flag subgraphs that match the UAC bypass pattern (Medium-Integrity Parent -> High-Integrity Child -> High-Integrity Grandchild) as anomalous structures."
            ]
          },
          {
            "description": "An auto-elevating executable (e.g., `msconfig.exe`, `computerdefaults.exe`), after being elevated through a shim, performs actions outside its normal behavioral profile, such as initiating an outbound network connection or writing an executable file to a non-standard location.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 5156",
              "Sysmon Event ID 3",
              "Windows Event ID 4663",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress Points, File Servers",
            "action": [
              "Create a specific rule that alerts when any process from a watchlist of auto-elevating system utilities (e.g., `computerdefaults.exe`, `dccw.exe`) initiates an external network connection (destination IP is not RFC1918 per Zeek conn.log) or writes a file with an executable extension (.exe, .dll, .ps1, .bat) to disk (Sysmon Event ID 11).",
              "For each auto-elevating process on the watchlist, build a baseline of domains contacted (from Zeek dns.log) and file paths written to. Calculate the Shannon entropy of all requested domain names. Alert if the process contacts a domain with an entropy score in the top 5% (indicative of DGA) or writes to a file path that is statistically rare for that process's normal function.",
              "For each critical auto-elevating process, develop a One-Class SVM (Support Vector Machine) model trained on features representing its normal behavior (e.g., network connection destinations, file write paths, registry keys accessed). In production, use this model to score all new activities by the process. Any activity that falls outside the learned boundary of normal behavior is flagged as an anomaly, likely caused by a malicious shim.",
              "This is the description for the symbolic logic action",
              "This is the description for the statistical action",
              "This is the description for the machine learning action"
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]