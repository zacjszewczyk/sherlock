[
  {
    "information_requirement": "Is the adversary causing negative impact via cloud service hijacking?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1496.004",
        "name": "Cloud Service Hijacking",
        "evidence": [
          {
            "description": "An API key observed in outbound HTTP/S request headers or bodies matches a known-compromised key, or the destination of the request matches a known malicious IP or domain associated with cloud service hijacking.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies), Internet gateway, API gateways",
            "action": [
              "Symbolic: Join the `uid` from `Zeek http.log` to `Zeek conn.log` to get the destination IP (`id.resp_h`) and to `Zeek dns.log` to get the queried domain (`query`). Compare the destination IP and domain against a threat intelligence feed of known cloud hijacking C2 servers or proxy nodes. Separately, scan the URI, headers, and request body fields in `Zeek http.log` for API keys matching a watchlist of known-compromised keys. Generate an alert for any match.",
              "Statistical: For each unique API key pattern observed in `Zeek http.log`, calculate the Shannon entropy of the key string. Establish a baseline entropy score for legitimate keys used within the organization. Flag keys with unusually low entropy (e.g., below the 10th percentile of the baseline), which may indicate weak or predictable keys often used by adversary tools.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) using labeled data from past incidents and threat intelligence. Extract features from `Zeek http.log` and `conn.log`, such as request method, user-agent string, URI path structure, data volume (`resp_bytes`), and destination ASN. Use the trained model to assign a 'hijacking probability' score to new API sessions."
            ]
          },
          {
            "description": "A session from a single source IP address generates a sequence of API calls to a cloud service (e.g., AWS SES, OpenAI) that matches the known operational pattern of a resource abuse tool, such as a high-frequency burst of similar requests.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud application gateways, API gateways, outbound web proxies",
            "action": [
              "Symbolic: Using `Zeek http.log`, create a stateful signature that triggers when a single source IP (`id.orig_h`) makes an excessive number of API calls to a specific URI path (e.g., `*/api/v1/messages` for Twilio, `*/v2/email/send` for SendGrid) within a short time window. Alert if the count exceeds 100 requests in 5 minutes from one source.",
              "Statistical: For each source IP making API calls to a specific cloud service endpoint (e.g., `api.openai.com/v1/chat/completions`), calculate the inter-request time (time between consecutive requests). Establish a baseline distribution of these times for the endpoint. Alert when an IP exhibits an inter-request time that falls below the 5th percentile of the baseline, indicating automated, high-frequency activity.",
              "Machine Learning: Using `Zeek http.log` data, represent each API session as a sequence of URI paths and HTTP methods. Train a Recurrent Neural Network (RNN) or a Transformer-based model on sequences from legitimate user and application traffic. Use the model to identify anomalous sequences that deviate significantly from learned normal workflows, indicating scripted or tool-based abuse."
            ]
          },
          {
            "description": "An internal host's volume of outbound data transfer or number of API calls to a specific cloud service (e.g., AWS, GCP, Azure) dramatically increases, exceeding its own historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek smtp.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mail gateways, network egress points, servers hosting cloud service SDKs",
            "action": [
              "Symbolic: In `Zeek smtp.log`, create a rule that alerts when a single internal source IP (`id.orig_h`) sends emails to an unusually high number of unique recipient domains within one hour (e.g., > 50 unique domains). This is a strong indicator of a compromised account being used for spam campaigns via a service like AWS SES.",
              "Statistical: For each internal host, aggregate the total outbound bytes (`orig_bytes`) to known cloud service IP ranges from `Zeek conn.log` into hourly buckets. Calculate a 30-day moving average and standard deviation for each host's hourly traffic. Generate an alert when a host's current hourly traffic exceeds its moving average by more than 3 standard deviations.",
              "Machine Learning: For each critical cloud service, create a time-series model (e.g., SARIMA, Prophet) based on the total API request volume per hour, derived from `Zeek http.log`. Train the model on at least 30-60 days of historical data to learn seasonality and trends. Generate an anomaly score based on the standardized residual (the difference between observed and predicted volume) and alert when the score surpasses a dynamic threshold."
            ]
          },
          {
            "description": "A user account or API key is used to access a cloud service from a source IP address with anomalous characteristics, such as an impossible travel scenario, a first-time-seen ASN or country for that user, or a known anonymizing proxy.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., Active Directory), VPN concentrators, Remote Desktop Gateways, Cloud IAM infrastructure",
            "action": [
              "Symbolic: For each cloud service authentication event, extract the source IP from `Zeek conn.log` or `Windows Event ID 4624` (for RDP/VPN). Correlate this IP against a CTI feed of known malicious IPs, TOR exit nodes, or anonymous proxy/VPN services. Generate a high-severity alert on any match.",
              "Statistical: For each user account, maintain a historical profile of successful login attributes including source country, ASN, and typical login hours, using `Windows Event ID 4624` and `Zeek conn.log` data. Calculate the frequency of each attribute. For a new login, flag it as anomalous if it originates from a country or ASN that has never been seen for that user, or if the login time falls outside their typical 95% time window (e.g., login at 3 AM for a 9-5 user).",
              "Machine Learning: Develop a user-specific outlier detection model (e.g., one-class SVM or Isolation Forest). For each successful login (`Windows Event ID 4624`) and subsequent API activity (`Zeek http.log`), create a feature vector including time-of-day, day-of-week, source IP geolocation (lat/lon), and ASN. Train the model on the user's historical activity to identify new logins that are outliers from the established 'normal' cluster of activity for that specific user."
            ]
          },
          {
            "description": "An internal host's data transfer volume to cloud service IP ranges is a significant outlier when compared to the behavior of its peer group (e.g., other developer workstations, other web servers).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Data center network core, servers hosting sensitive data, cloud synchronization clients, developer workstations",
            "action": [
              "Symbolic: Monitor `Zeek conn.log` for connections to cloud service IP ranges where the connection duration is abnormally long (e.g., > 24 hours) and the total data transferred (`orig_bytes` + `resp_bytes`) is unusually high (e.g., > 50 GB). Alert on connections exceeding predefined duration and data volume thresholds.",
              "Statistical: Group hosts by their function or role using a CMDB or Active Directory groups. For each group, calculate the 95th percentile for daily outbound data volume to cloud service IP ranges using `Zeek conn.log`. Generate an alert when any host exceeds its peer group's 95th percentile threshold by a significant margin (e.g., > 50%).",
              "Machine Learning: Using `Zeek conn.log` data, create a feature profile for each host (e.g., average daily bytes out, number of unique destination IPs, average connection duration, protocol distribution). Use a clustering algorithm (e.g., K-Means, DBSCAN) to automatically group hosts into behavioral clusters. Monitor for hosts that abruptly shift from a low-traffic cluster to a high-traffic cluster, or for hosts that become outliers to their own long-standing cluster."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]