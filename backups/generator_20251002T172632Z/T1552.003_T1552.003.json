[
  {
    "information_requirement": "Is an adversary attempting to harvest credentials from shell history files? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1552.003",
        "name": "Bash History",
        "evidence": [
          {
            "description": "A process execution event where the command line arguments reference a shell history file (e.g., .bash_history, .zsh_history) and include terms for file viewing or searching (e.g., cat, grep, strings) combined with credential-related keywords (e.g., password, secret, token).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Endpoint Detection and Response (EDR) Logs",
              "Linux Auditd Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux-based servers (Web, Database, Application), Developer Workstations with WSL enabled, Critical infrastructure management hosts",
            "action": [
              "Symbolic: Create a detection rule that searches command line execution logs (e.g., Sysmon Event ID 1) for the co-occurrence of a history file name pattern (e.g., `*.history`) and a command used for file inspection (e.g., `cat`, `less`, `more`, `grep`, `strings`, `awk`, `sed`) along with credential-related keywords (e.g., `password`, `apikey`, `token`, `secret`, `access_key`, `conn_str`).",
              "Statistical: For each user/host combination, establish a baseline of command-line argument entropy using the Shannon entropy formula. Alert when a command involving a history file has an argument entropy score that exceeds the 95th percentile of that user/host's baseline, indicating a high-entropy string like a key or token is present.",
              "Machine Learning: Train and deploy a binary classification model (e.g., Gradient Boosting or Random Forest) using labeled command-line execution logs. Engineer features such as: process name, parent process name, command-line argument length, argument Shannon entropy, a boolean flag for history file name presence, and a count of credential-related keywords. Classify each command execution as 'suspicious history access' or 'benign'."
            ]
          },
          {
            "description": "An event indicating a shell history file was accessed or modified by an anomalous process (e.g., a web server daemon), or a command execution that clears, disables, or redirects shell history logging.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 23",
              "Linux Auditd Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories on multi-user systems, Linux-based servers (Web, Database, Application), Developer Workstations with WSL enabled",
            "action": [
              "Symbolic: Create a detection rule that alerts on command line executions (Sysmon Event ID 1) containing exact match strings for disabling or clearing history, such as `unset HISTFILE`, `export HISTSIZE=0`, `history -c`, `ln -s /dev/null`, `rm ~/.bash_history`, or `> ~/.bash_history`.",
              "Statistical: Maintain a baseline frequency distribution of (parent_process, child_process) pairs observed across the environment from process creation logs. Generate an alert when a statistically rare pair is observed accessing a history file, such as a web service process (e.g., apache2, nginx) spawning a shell (e.g., /bin/bash) with history file paths in its arguments. Define rarity as a pair observed less than 5 times in the last 30 days.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or Prophet) for the file size of critical users' `.bash_history` files, monitored via endpoint agents. Train the model on historical file size data. Generate an alert when an observed file size is a significant negative outlier compared to the model's forecast, indicating potential tampering or deletion."
            ]
          },
          {
            "description": "Network file transfer metadata showing a file with a name pattern matching common shell history files (e.g., .bash_history) being exfiltrated to an external destination or an unusual internal host.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (Internet gateways), Internal network segments connecting development environments to production, VPN termination points",
            "action": [
              "Symbolic: Create a SIEM alert that triggers when Zeek's `files.log` records a transfer where `filename` matches a regex like `(^\\\\..*_history$)` and the destination IP in the corresponding `conn.log` entry is not within the organization's registered RFC1918 or public IP space.",
              "Statistical: For each host, profile the destination countries and autonomous systems (ASNs) for all outbound file transfers observed in Zeek logs. Alert when a file matching a history file pattern is transferred to a country or ASN that is not in the host's historical baseline (e.g., not in the top 90% of destinations by volume).",
              "Machine Learning: Use a density-based clustering algorithm (e.g., DBSCAN) on connection data from Zeek `conn.log`. Features should include source IP, destination IP, destination port, protocol, total bytes, and connection duration. Correlate clusters of small, short-lived connections to low-reputation IPs with file transfer events from `files.log` involving history files to identify potential staged exfiltration."
            ]
          },
          {
            "description": "A correlated sequence of host and network events on a single system within a short time window: 1) Directory and file enumeration in a user's home directory, 2) Direct access to a shell history file, and 3) A subsequent outbound network connection or creation of a new remote session.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for authentication events), Critical servers and developer workstations (for process and network events), Network choke points (for observing outbound connections)",
            "action": [
              "Symbolic: Implement a stateful correlation rule that alerts if, for the same `HostName` within a 5-minute window, the following event sequence occurs: 1) Process execution (Sysmon EID 1) of `ls -la /home/*` or `dir %HOMEPATH%`; followed by 2) Process execution of `cat`, `grep`, or `less` on a `*history` file; followed by 3) An outbound connection (Zeek `conn.log`) to a non-standard port or a new IP address, or a successful remote logon (Event ID 4624, Logon Type 3 or 10) from that same host.",
              "Statistical: Develop a host-based risk scoring model. Assign weighted scores to discrete events over a rolling 15-minute window: `history` file access (+15), home directory listing (+5), outbound `ssh` connection (+10), connection to a new external IP (+5). Trigger an alert when a host's cumulative score exceeds a threshold defined by the 99th percentile of the score distribution across all monitored hosts.",
              "Machine Learning: Train a sequence-based anomaly detection model, such as a Recurrent Neural Network (RNN) with LSTM cells, on sequences of event types (e.g., 'process_create', 'file_read', 'network_outbound') per user. Feed real-time event streams into the model. Flag any sequence where the observed event has a very low probability under the model's predictions, such as a `file_read` of `.bash_history` followed by `network_outbound` to a new IP."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]