[
  {
    "information_requirement": "Is an adversary performing reconnaissance of installed software on the network?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1518",
        "name": "Software Discovery",
        "evidence": [
          {
            "description": "A process is created with a file hash matching a known software discovery tool or script from a curated threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations and servers), Domain Controllers, and Critical Application Servers where process creation logging is enabled.",
            "action": [
              "Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for events where the process hash matches a curated list of known malicious hashes for discovery tools (e.g., Seatbelt, SharpHound). Generate a high-priority alert upon any match.",
              "For each executed process hash, calculate its prevalence (percentage of hosts it has run on) across the enterprise over the last 30 days. Flag any hash with a prevalence of less than 1% that is not associated with a known, approved software deployment or administrative activity for investigation.",
              "Input process execution events into a pre-trained classification model that uses features like parent process, user context, command-line arguments, and hash prevalence to predict maliciousness. Treat a model classification of 'malicious' or 'suspicious' for a rare process as a high-confidence indicator requiring immediate analysis."
            ]
          },
          {
            "description": "Execution of built-in software discovery commands (e.g., 'wmic product get', 'Get-Package') or scripts by a user or process not associated with legitimate system administration or software inventory functions.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers with command-line process auditing and PowerShell Script Block Logging enabled.",
            "action": [
              "Create a detection rule that searches process command lines (Windows Event ID 4688, Sysmon Event ID 1) and PowerShell script block logs (Windows Event ID 4104) for regular expressions matching discovery commands (e.g., 'wmic product get', 'Get-ItemProperty HKLM:\\\\Software\\\\.*\\\\Uninstall', 'Get-Package', 'dpkg --list', 'rpm -qa'). Trigger an alert if the executing user is not in a designated IT administrator group and the parent process is not a known IT management tool (e.g., sccm.exe, TaniumClient.exe).",
              "For each user account, establish a historical baseline of the frequency and entropy of discovery-related commands executed over 30 days. Generate an alert when a user's daily count of these commands exceeds the 95th percentile of their baseline or when the command string entropy shows a statistically significant increase, suggesting atypical enumeration.",
              "Deploy a time-series anomaly detection model (e.g., Seasonal-ARIMA) monitoring the frequency of discovery-related command executions per host and per user. Flag any observed frequency that significantly deviates from the forecasted pattern as an anomaly indicative of reconnaissance activity."
            ]
          },
          {
            "description": "A single process generates a high volume of read attempts to registry keys associated with installed software (e.g., 'HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\') within a short time frame.",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry on high-value assets and standard endpoints, requiring SACLs configured to audit read access on specific software-related registry hives (e.g., 'HKLM\\SOFTWARE').",
            "action": [
              "Monitor for a process not on a pre-defined allowlist of inventory tools (e.g., msiexec.exe, trustedinstaller.exe) that generates more than 100 successful read access events (Windows Event ID 4663) for objects under 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall' within a 1-minute window. This requires specific SACL configuration on the target registry keys.",
              "For each process on each host, calculate the rate of registry read events targeting software-related hives using Windows Event ID 4663. Establish a per-process baseline (e.g., mean and standard deviation of reads per minute). Generate an alert if the read rate for a given process exceeds 3 standard deviations above its established mean for that host.",
              "Utilize a clustering algorithm (e.g., DBSCAN) to group processes based on behavioral features including the volume of registry reads, the entropy of target registry paths, and the parent process. Flag processes that fall into sparse, anomalous clusters characterized by high-volume, rapid queries to 'Uninstall' or other software-related keys as outliers for investigation."
            ]
          },
          {
            "description": "A host, subsequent to performing local software discovery actions, initiates anomalous internal network scanning or communicates with a new external destination, potentially exfiltrating the collected data.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and internal network segments monitored by Zeek sensors, endpoint process logs, and DNS resolvers.",
            "action": [
              "Create a correlation rule: IF a host triggers a software discovery alert AND within the next 30 minutes the same source IP is observed in 'Zeek conn.log' connecting to an external IP with a low-reputation score or a domain first seen in 'Zeek dns.log' within the last 24 hours, THEN generate a high-severity potential exfiltration alert.",
              "Following a local discovery alert on a host, monitor its network activity in 'Zeek conn.log'. Calculate the number of unique internal destination IPs and ports it connects to in the next hour. Alert if this count exceeds the 99th percentile of the host's typical hourly connection baseline, indicating potential lateral movement or internal reconnaissance.",
              "Apply a graph-based anomaly detection algorithm to the host communication graph derived from 'Zeek conn.log'. If a node (host) that recently triggered a discovery alert suddenly changes its community or centrality score by forming numerous short-lived connections to other internal nodes, flag this topological shift as anomalous behavior indicative of post-discovery scanning."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]