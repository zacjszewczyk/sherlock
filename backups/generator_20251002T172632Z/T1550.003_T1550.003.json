[
  {
    "information_requirement": "Has an adversary forged or misused a Kerberos ticket to evade standard authentication controls?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1550.003",
        "name": "Pass the Ticket",
        "evidence": [
          {
            "description": "A Kerberos ticket request (TGT or Service Ticket) uses the RC4-HMAC encryption type (0x17), which is deprecated and often used by adversary tools for compatibility, especially when the requesting account or domain policy supports stronger AES encryption.",
            "data_sources": [
              "Windows Event ID 4768",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Domain Controllers, Network sensors monitoring traffic to/from Domain Controllers on port 88",
            "action": [
              "Create a detection rule to alert when a Windows Event ID 4768 or 4769 is generated with a 'Ticket Encryption Type' of '0x17' and the 'Account Name' belongs to a high-privilege group (e.g., Domain Admins, Enterprise Admins) or is a designated service account.",
              "For each user account, establish a baseline of historically used 'Ticket Encryption Types' over a 30-day period. Calculate the frequency distribution of encryption types for each user. Generate an alert if a user requests a ticket with an encryption type that has a zero or near-zero historical frequency for that specific user.",
              "Train a binary classification model (e.g., Random Forest) using features from Kerberos ticket requests (Account Name, Service Name, Client IP, Encryption Type, time of day). Label known-good requests as '0' and synthetically generated RC4 requests as '1'. Deploy the model to score new requests and alert on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "A Kerberos ticket is observed in network traffic with a lifetime ('till' timestamp minus 'from' timestamp) that exceeds the domain's maximum ticket lifetime policy (typically 10 hours), a common attribute of a forged Golden Ticket which can be set to arbitrary durations like 10 years.",
            "data_sources": [
              "Zeek kerberos.log",
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring east-west traffic and DC traffic on port 88, Active Directory Domain Controllers (for policy reference)",
            "action": [
              "Query the domain's 'Maximum lifetime for user ticket' group policy setting. Create a detection rule to alert on any Kerberos ticket observed in Zeek kerberos.log where the calculated duration `(till - from)` exceeds this policy setting by more than 1 minute.",
              "Over a 30-day rolling window, calculate the 99.9th percentile of all observed ticket lifetimes from Zeek kerberos.log. Generate an alert for any new ticket whose lifetime exceeds this dynamically calculated threshold, flagging it as a significant statistical outlier.",
              "Implement an anomaly detection model (e.g., Isolation Forest) using numerical features from Zeek kerberos.log, primarily 'duration' (till - from). Include other features like client IP and service name to provide context. Alert when a ticket is assigned a high anomaly score, with the primary contributing feature being its extreme duration."
            ]
          },
          {
            "description": "A Kerberos ticket-granting ticket (TGT) request (Event ID 4768) or service ticket request (Event ID 4769) originates from a client IP address or hostname that has no historical precedent for the requesting user account, especially when the account is privileged or a service account that should have predictable sources.",
            "data_sources": [
              "Windows Event ID 4768",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Domain Controllers, VPN Concentrators, Workstation and Server subnets, DNS servers (for IP-hostname correlation)",
            "action": [
              "For critical service accounts and administrator accounts, define an explicit allowlist of authorized source hostnames or IP subnets. Generate a high-severity alert if a ticket request for one of these accounts originates from a source IP address not on its defined allowlist.",
              "For each user, maintain a 90-day baseline of source IP addresses from which they request Kerberos tickets. Calculate the frequency of requests from each source. Alert when a user requests a ticket from an IP address not present in their historical baseline (a 'first-time' source).",
              "Model the user-to-source-IP relationship using a graph database. Use a community detection algorithm (e.g., Louvain Modularity) to identify clusters of users and their typical source locations. Alert when a ticket request creates an edge between a user and a source IP in a different community, indicating anomalous source behavior."
            ]
          },
          {
            "description": "A single client IP address requests an unusually high number of unique service tickets (Event ID 4769) in a short time frame, indicative of an adversary using a stolen TGT to perform network service reconnaissance (Kerberoasting).",
            "data_sources": [
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Domain Controllers",
            "action": [
              "Create a threshold-based rule that alerts if a single 'Client Address' in Windows Event ID 4769 requests more than 20 unique 'Service Names' within a 5-minute window.",
              "For each source IP, calculate a rolling 5-minute count of unique service names requested. Establish a baseline mean and standard deviation for this count per IP. Alert when the count in a new window exceeds the historical mean by more than 3 standard deviations for that specific IP.",
              "Sessionize service ticket requests by source IP and time window. Extract features for each session (e.g., count of unique services, entropy of service names, session duration). Use a clustering algorithm (e.g., DBSCAN) to identify a cluster of 'high-velocity, high-entropy' reconnaissance sessions and alert on new sessions that fall into this cluster."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has an adversary successfully used a passed Kerberos ticket to authenticate to a remote system and execute code?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1550.003",
        "name": "Pass the Ticket",
        "evidence": [
          {
            "description": "A Kerberos service ticket request (Event ID 4769) fails with status code '0x7' (KDC_ERR_S_PRINCIPAL_UNKNOWN), indicating the requested Service Principal Name (SPN) does not exist. A burst of such failures from one client suggests an adversary attempting to discover valid service accounts.",
            "data_sources": [
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Domain Controllers",
            "action": [
              "Create an alert that triggers when Windows Event ID 4769 is logged with 'Status' code '0x7'. Escalate the alert priority if more than 5 such events from the same 'Client Address' occur within 10 minutes.",
              "Calculate the baseline rate of '0x7' errors per source host over a 24-hour period. Alert if a host's '0x7' error rate suddenly spikes above 3 standard deviations of its normal baseline. Additionally, calculate the entropy of the failed 'Service Name' strings; high entropy suggests randomized guessing.",
              "Train a classifier on requested SPN strings to distinguish between legitimate formats and typos (e.g., 'HOST/servr.domain.com') versus algorithmically generated or garbage strings. Use features like character distribution and n-gram frequencies. Alert on requests classified as likely generated."
            ]
          },
          {
            "description": "A successful Kerberos network logon (Event ID 4624, Logon Type 3) occurs, but the properties of the authentication (e.g., source IP, ticket encryption type) or the context (e.g., user-to-host pairing) are anomalous when compared to historical baselines.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows workstations and servers, Network sensors monitoring authentication traffic",
            "action": [
              "Correlate a successful Kerberos logon (Windows Event ID 4624, Logon Type 3) with Zeek kerberos.log data using the source IP and timestamp. Generate an alert if the logon is for a privileged account and the associated ticket used RC4 encryption.",
              "For each server, create a statistical profile of normal authenticating users, source subnets, and logon times. Alert if a new logon (Event ID 4624) involves a user who is in the bottom 5th percentile of logon frequency for that specific server, indicating a rare access event.",
              "Construct a bipartite graph of users and hosts, where an edge represents a successful Kerberos logon. Apply a link prediction model to score potential new logons. A successful logon that the model assigned a very low probability of occurring is a strong anomaly indicative of lateral movement."
            ]
          },
          {
            "description": "A successful Kerberos network logon (Event ID 4624, Logon Type 3) is observed where a non-administrative user account authenticates from one workstation to another for the first time, a strong indicator of lateral movement between peer systems.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Workstation subnets",
            "action": [
              "Create a detection rule that alerts when a Windows Event ID 4624 with 'Logon Type' 3 and 'Authentication Package' as 'Kerberos' is logged, where the 'Account Name' is not in a privileged group and both the source and destination machines are classified as workstations.",
              "Maintain a stateful table of all historical (user, destination workstation) logon pairs over the past 90 days. Generate a high-priority alert whenever a new logon event creates a pair that is not in the historical baseline (a 'first-time access' event).",
              "Use a clustering algorithm (e.g., K-Means) to group users based on their logon destinations (e.g., 'accesses finance servers', 'accesses developer tools'). An alert is generated if a user's logon activity causes them to suddenly shift from their established cluster to another, indicating a significant change in access patterns."
            ]
          },
          {
            "description": "Within minutes of a successful remote Kerberos logon (Event ID 4624, Logon Type 3), the same logon session ID is associated with suspicious follow-on activity, such as the execution of credential dumping tools or reconnaissance commands.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows workstations and servers",
            "action": [
              "Create a correlation rule that alerts when a new Logon Session (from Event ID 4624, Logon Type 3, Kerberos) is immediately followed by a process creation (Event ID 4688) under the same 'Logon ID' where the 'New Process Name' or 'CommandLine' matches a watchlist of malicious tools or commands (e.g., mimikatz.exe, 'net group \"Domain Admins\"', procdump.exe).",
              "For each new remote logon session, calculate the Shannon entropy of the command line arguments for all child processes spawned within the first 5 minutes. Alert if the calculated entropy for a session exceeds the 95th percentile of historical command line entropy for that user or host, which can indicate obfuscation.",
              "Train a sequence-to-sequence autoencoder on normal sequences of post-logon events (e.g., process creations, network connections) for different user roles. Feed new logon sessions into the model and alert if the reconstruction error is high, indicating the sequence of activities is abnormal and not representative of learned legitimate behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]