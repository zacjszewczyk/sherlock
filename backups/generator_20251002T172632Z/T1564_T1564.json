[
  {
    "information_requirement": "Is the adversary attempting to hide their activity to evade detection? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564",
        "name": "Hide Artifacts",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is observed where the process name, command-line arguments, or file hash matches known artifact-hiding tools (e.g., Slacker, Transmo, Ghost-in-the-Logs) or rootkit components. Alternatively, a file creation event (Windows Event ID 4663) is observed for a file whose hash matches a known rootkit.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, All Windows Servers, Domain Controllers",
            "action": [
              "Symbolic: Implement a SIEM rule to alert on process creation events (Windows Event ID 4688) or file creation events (Windows Event ID 4663) where the 'ProcessName', 'NewProcessName', 'CommandLine', or file hash matches a curated threat intelligence list of known artifact-hiding tools and rootkits.",
              "Statistical: For all process creation events (Windows Event ID 4688), calculate the enterprise-wide prevalence of the parent process. Flag executions where a parent process not typically associated with spawning command-line utilities (e.g., winword.exe, outlook.exe) launches a process like cmd.exe or powershell.exe. Additionally, calculate the Levenshtein distance between new process names and a list of common system process names; flag names with a distance of 1 or 2, indicating potential typosquatting.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest, Gradient Boosting) using labeled process creation events (Windows Event ID 4688). Engineer features such as process name entropy, command-line argument length and entropy, parent process rarity, and the presence of suspicious keywords. Use the model to score new process events for their likelihood of being malicious tool execution."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) is observed with command-line arguments indicating the intent to hide artifacts. This includes using 'attrib.exe +h' to hide files/directories, 'icacls.exe' with '/deny' permissions to restrict access, or PowerShell commands like 'Set-Content -Stream' or 'type file.exe > C:\\path\\file.txt:hidden.exe' to create or manipulate Alternate Data Streams (ADS).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, File Servers, Application Servers",
            "action": [
              "Symbolic: Create SIEM detection rules using regular expressions to scan process command-line arguments (Windows Event ID 4688). Search for patterns such as 'attrib\\.exe.*\\+h', 'icacls\\.exe.*\\/deny', 'powershell.*Set-Content.*-Stream', and 'type .*>.*:.*'.",
              "Statistical: For common system utilities (e.g., attrib.exe, icacls.exe, powershell.exe), build a baseline of normal command-line argument combinations over a 30-day period. Calculate the frequency of each unique argument set. Alert on any execution where the argument set falls below the 5th percentile of frequency, indicating rare and potentially suspicious usage.",
              "Machine Learning: Develop an unsupervised anomaly detection model, such as a variational autoencoder or isolation forest, trained on the tokenized command-line arguments from process creation events (Windows Event ID 4688). The model will learn the distribution of 'normal' command structures. Score new commands based on their reconstruction error or anomaly score; flag commands exceeding a predefined threshold as highly anomalous."
            ]
          },
          {
            "description": "A process known for timestomping (e.g., PowerShell using 'Set-ItemProperty', 'timestomp.exe') is executed (Windows Event ID 4688), immediately followed by a file modification event (Windows Event ID 4663) on the same host for the target file. The modification involves setting the file's 'Created' or 'Modified' timestamp to a value that is either identical to a nearby system file (e.g., kernel32.dll) or to a time in the past, inconsistent with the event's log timestamp.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical System Directories (e.g., System32), User Profile Directories, Temporary File Locations",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process creation event (Windows Event ID 4688) for a known timestomping utility or PowerShell with timestomping-related commands (e.g., 'Set-ItemProperty -Name CreationTime') is observed within a short time window (e.g., 5 seconds) of a file modification event (Windows Event ID 4663) on the same host.",
              "Statistical: For all file modification events (Windows Event ID 4663) in sensitive directories, calculate the time difference between the event timestamp and the file's new 'Modified' timestamp. Flag events where this delta is negative or exceeds a high percentile (e.g., 99th) of the historical distribution of deltas. Additionally, for each modification, compare the new timestamp to those of other files in the same directory; flag if the timestamp is an exact match to an existing, unrelated file.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA) on file metadata streams, if available through an EDR or file integrity monitoring tool. Model the expected behavior of file timestamps. Flag any event that causes a timestamp to move backward in time or jump to a statistically improbable value as an anomaly. This is particularly effective for detecting modification of file metadata that breaks the natural, monotonic progression of time."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) indicates a process was launched from an unusual or hidden location, such as 'C:\\Users\\Public\\', 'C:\\$Recycle.Bin\\', a temporary directory, or an Alternate Data Stream (e.g., 'C:\\ads\\file.txt:implant.exe'). This event is correlated by timestamp and source IP with a network connection event (Zeek conn.log) showing outbound traffic to a non-standard port or an IP address with a low reputation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, Network Egress Points (Firewalls, Proxies), DNS Servers",
            "action": [
              "Symbolic: Build a correlation rule that joins Windows process creation events (Event ID 4688) with network connection logs (Zeek conn.log or Windows Event ID 5156) on source IP and a tight time window. Alert if a process originating from a path matching a blocklist of suspicious locations (e.g., regex for '\\\\Users\\\\Public\\\\', '\\\\AppData\\\\Local\\\\Temp\\\\', '\\\\$Recycle.Bin\\\\', or paths containing ':') initiates an outbound network connection to an IP address on a threat intelligence feed.",
              "Statistical: For every process execution path from Event ID 4688, calculate its rarity across the enterprise over a 30-day baseline. Assign a risk score based on path rarity (e.g., using inverse document frequency). Combine this score with other risk factors, such as the process being unsigned, the destination port being non-standard, or the destination IP being new to the organization. Alert on processes whose composite risk score exceeds a statistically determined threshold (e.g., 3 standard deviations above the mean).",
              "Machine Learning: Construct a heterogeneous graph where nodes represent processes, files, IP addresses, and domains. Create edges based on observed interactions (e.g., process 'A' launched from file 'B', process 'A' connected to IP 'C'). Use a graph neural network (GNN) or other graph-based anomaly detection algorithm to identify and score subgraphs representing suspicious sequences of activity, such as a process from a rare path connecting to a new external IP."
            ]
          },
          {
            "description": "A user account creation event (Windows Event ID 4720) or a scheduled task creation event (Windows Event ID 4698) is observed where the new account or task name exhibits suspicious characteristics. These include a high degree of randomness (high Shannon entropy) or a name that is a close typographical imitation of a known system account or service (e.g., 'Administartor', 'svch0st'), as measured by a low Levenshtein distance.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Active Directory Servers, All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Create a SIEM rule that triggers on new account creations (Event ID 4720) or new scheduled tasks (Event ID 4698). Compare the new name against a watchlist of critical system and service account names. Alert if the Levenshtein distance is low (e.g., 1 or 2), indicating a potential typosquatting attempt.",
              "Statistical: For every new account or task name, calculate its Shannon entropy score. Establish a baseline distribution of entropy scores for all legitimate names in the environment. Flag any new name with an entropy score in the top 5th percentile of the baseline distribution, suggesting machine-generated or randomized naming.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on feature vectors derived from all known-good account and task names. Features should include name length, character-pair frequency, n-gram distribution, and entropy. Use the trained model to classify new names; any name that the model classifies as an 'outlier' should be flagged for investigation."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]