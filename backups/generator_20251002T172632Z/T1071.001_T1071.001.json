[
  {
    "information_requirement": "Is the adversary using web protocols for command and control (C2) communication?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1071.001",
        "name": "Web Protocols",
        "evidence": [
          {
            "description": "An internal host makes an outbound HTTP/S connection where the destination IP, requested domain (from HTTP Host header or SNI), or SSL/TLS certificate hash matches an entry on a high-confidence threat intelligence feed of known C2 servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at internet egress points; DNS resolvers; Web proxies.",
            "action": [
              "Query Zeek logs by joining conn.log (id.resp_p = 80 or 443) with http.log (on uid) and ssl.log (on uid). Match conn.log$id.resp_h, http.log$host, and ssl.log$cert_chain_fuids against a threat intelligence blocklist of IPs, domains, and certificate hashes. Generate a high-severity alert on any match.",
              "For each destination FQDN (http.log$host, ssl.log$server_name), calculate its prevalence (count of unique source IPs connecting to it) across the enterprise over a 24-hour period. Flag domains in the bottom 1st percentile of prevalence that are not on a pre-vetted allowlist of low-traffic business partners.",
              "Engineer features from Zeek logs for each connection: domain name length, domain entropy, TLD, ASN of destination IP, SSL certificate age, and if the cert is self-signed. Train a supervised classification model (e.g., Random Forest) on this feature set using labeled data from threat intelligence feeds. Apply the model in real-time to score new outbound connections, alerting on scores above a tuned threshold (e.g., 0.90)."
            ]
          },
          {
            "description": "An outbound HTTP/S connection exhibits artifacts matching known C2 framework signatures, such as specific User-Agent strings, URI patterns, or JA3/JA3S TLS fingerprints.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at internet egress points; Web proxies; Endpoint Detection and Response (EDR) agents.",
            "action": [
              "Scan the http.log$user_agent and http.log$uri fields with a library of regular expressions for known C2 patterns (e.g., Cobalt Strike's Malleable C2 profiles). Concurrently, match the ssl.log$ja3 and ssl.log$ja3s fields against a blocklist of hashes associated with malware C2. Generate an alert on any signature match.",
              "For each unique JA3 hash in ssl.log, calculate its organizational prevalence (number of distinct hosts exhibiting it). Flag JA3 hashes seen on fewer than 1% of endpoints as anomalous. Enrich findings by cross-referencing with public JA3 repositories to filter out known legitimate but rare applications.",
              "Extract numerical features from URIs in http.log: URI length, query parameter count, path depth, and character entropy of the path and query. Use a density-based clustering algorithm (e.g., DBSCAN) to group all URIs. Investigate small, dense clusters that are distant from the large clusters representing normal web traffic as potential C2 communication channels."
            ]
          },
          {
            "description": "A series of outbound connections from one internal host to one external destination over HTTP/S demonstrates machine-like periodicity (highly regular time intervals with low jitter) and consistent data sizes, indicative of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at internet egress points; Host-based firewalls; Netflow collectors.",
            "action": [
              "For each source-destination IP pair in conn.log, buffer the timestamps of connections over a 30-minute window. Alert if a sequence of 10 or more connections occurs where the time delta between each connection is stable within a narrow range (e.g., 60 seconds +/- 2 seconds).",
              "For each source-destination IP pair over a 1-hour window, calculate the standard deviation of the inter-arrival times between connections. Also calculate the standard deviation of the bytes sent (orig_bytes). Flag pairs where both standard deviations are exceptionally low (e.g., in the bottom 5th percentile), indicating programmatic communication. Exclude known update/telemetry services via an allowlist.",
              "For each high-traffic source-destination pair, treat the connection events as a time series. Apply a Fast Fourier Transform (FFT) to the series to identify dominant frequencies, which correspond to beaconing intervals. Use an anomaly detection model (e.g., Isolation Forest) on features like the dominant frequency, its amplitude, connection count, and data size variance to score the likelihood of the traffic being a C2 beacon."
            ]
          },
          {
            "description": "An outbound HTTP/S connection (port 80/443) is initiated by a process not on an established allowlist of web-enabled applications (e.g., browsers, updaters), or by a process running from an unusual file path (e.g., %TEMP%, C:\\Users\\Public\\).",
            "data_sources": [
              "Sysmon Event ID 3",
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers; Domain Controllers (for security log aggregation).",
            "action": [
              "Using Sysmon Event ID 3 (Network Connection), alert whenever a process name (Image) not in ['chrome.exe', 'firefox.exe', 'msedge.exe', 'svchost.exe'] initiates a connection to DestinationPort 80 or 443. Refine the rule to also trigger if the Image path is in a temporary or user-writable public directory.",
              "Build a baseline of (ParentImage, Image) pairs from Sysmon Event ID 1 and 3 data for processes making network connections. Calculate the probability of each relationship. Flag any network connection from a process spawned by a statistically rare parent (e.g., winword.exe -> powershell.exe) as suspicious. Also, profile the entropy of process command lines and flag connections from processes with command-line entropy in the top 98th percentile.",
              "Train a supervised classification model (e.g., Gradient Boosting) using features from Sysmon Event ID 3 and the associated process (Event ID 1): process name, parent process name, file path entropy, command line length and entropy, and user context. The model will classify each network-initiating process as benign or malicious. Alert on high-confidence malicious classifications."
            ]
          },
          {
            "description": "An HTTP/S request or response contains anomalous characteristics, such as unusually high Shannon entropy in the URI or POST body, a very long URI, or a data transfer ratio where the client sends significantly more data than it receives (indicative of data exfiltration over C2).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at internet egress points; Web proxies with full packet capture or deep logging capabilities.",
            "action": [
              "Create alerts in the SIEM for the following conditions: (1) In http.log, URI length > 1024 characters. (2) In conn.log, for connections to dest_port 80/443, the ratio orig_bytes / resp_bytes > 10 and orig_bytes > 1KB. (3) In http.log, the User-Agent is null or matches a generic, non-browser string like 'curl/7.68.0'.",
              "For all outbound traffic in http.log, compute a rolling 30-day baseline of the 95th percentile for URI length and the Shannon entropy of the URI. Generate an alert when a new request exceeds this dynamic threshold. Similarly, for conn.log, baseline the ratio of orig_bytes to resp_bytes and flag connections exceeding the 99th percentile.",
              "Implement an autoencoder neural network trained on vectorized features of normal HTTP requests from http.log (e.g., URI length, parameter count, header count, verb, user-agent string). For each new request, calculate its reconstruction error. High reconstruction error indicates the request deviates from the learned normal patterns. Cluster high-error events to identify emerging C2 threats."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]