[
  {
    "information_requirement": "Is an adversary exploiting vulnerabilities to escalate privileges on critical ICS assets like Engineering Workstations or HMIs? (PIR)",
    "tactic_id": "TA0111",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T0890",
        "name": "Exploitation for Privilege Escalation",
        "evidence": [
          {
            "description": "An anomalous child process (e.g., cmd.exe, powershell.exe, whoami.exe) is spawned by a legitimate, high-privilege ICS application process (e.g., a historian service, HMI server, or OPC client like Rockwell's RSLinx or Siemens' WinCC) on a critical asset. This parent-child relationship is absent from a historical baseline, and the parent process is confirmed to be running with elevated privileges (e.g., TokenElevationType is 'Type 1' or IntegrityLevel is 'System' in Windows Event Logs).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, and OPC Servers within the Process Control Network (PCN) and Manufacturing Zone (MZ).",
            "action": [
              "Create a SIEM rule that triggers when a Windows Event ID 4688 or Sysmon Event ID 1 is generated where: (ParentProcessName is in `ics_app_allowlist`) AND (NewProcessName is in `suspicious_utility_watchlist`) AND (TokenElevationType is '%%1936' OR IntegrityLevel is 'System'). The `ics_app_allowlist` must contain executables for approved ICS applications (e.g., `HMIServer.exe`, `OPC.exe`, `RSLinx.exe`, `WinCCExplorer.exe`). The `suspicious_utility_watchlist` must include command shells, scripting engines, and known hacking tools (e.g., `cmd.exe`, `powershell.exe`, `pwsh.exe`, `whoami.exe`, `net.exe`, `psexec.exe`, `wmic.exe`). The alert must surface the hostname, user, parent process, child process, and full command line.",
              "For each ICS asset, build and maintain a 90-day rolling baseline of unique (ParentProcessName, NewProcessName, CommandLine) tuples from all process creation logs. For each new event, check if the tuple exists in the host's baseline. If the tuple is new for that host, calculate its global rarity across all ICS assets. Generate a medium-priority alert if a new parent-child tuple appears. Escalate the priority to high if the child process executable or the command line arguments are also globally rare (e.g., seen on less than 2% of assets in the last 90 days).",
              "Deploy a pre-trained Isolation Forest or One-Class SVM model on process creation events. Features for the model should include categorical representations of the parent and child process names, command line length, command line Shannon entropy, and the user context. The model should be trained on a clean 90-day baseline of logs from critical ICS assets. Continuously score new process creation events in real-time. An event receiving an anomaly score in the top 1st percentile should automatically generate a high-priority alert for immediate investigation."
            ]
          },
          {
            "description": "A new service is installed on an ICS asset, identifiable via Windows Event ID 4697/7045 or a registry modification indicative of service creation (Sysmon Event ID 13). The service's executable path points to a non-standard, user-writable directory (e.g., C:\\ProgramData\\, C:\\Users\\Public\\, C:\\PerfLogs\\, C:\\Windows\\Temp\\), the service name appears to be randomly generated, and it is configured to run with high privileges (e.g., LocalSystem account).",
            "data_sources": [
              "Windows Event ID 4697",
              "Windows Event ID 7045",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), HMIs, Historian Servers, OPC Servers, and other critical Windows-based ICS infrastructure components within the PCN/MZ.",
            "action": [
              "Create a SIEM rule that triggers on Windows Event ID 4697 or 7045 where: (ServiceAccount is 'LocalSystem' OR ServiceAccount is 'NT AUTHORITY\\SYSTEM') AND ((ServiceFileName path matches regex for user-writable locations like '^C:\\\\(Users\\\\.*|ProgramData|PerfLogs|Windows\\\\(Temp|Tasks))') OR (ServiceFileName is NOT in `approved_service_exe_allowlist`)). The rule should also check if the ServiceName matches a regex for random strings (e.g., contains more than 8 alphanumeric characters with no clear word). Alert on any match, including hostname, service name, executable path, and user account.",
              "For every new service creation event, calculate the Shannon entropy of the ServiceName and the executable filename from the ServiceFileName path. Establish a baseline distribution of these entropy scores from all known-good services in the ICS environment over a 90-day period. Generate a medium-priority alert if the entropy of either the service name or the filename exceeds the 95th percentile of the baseline, indicating probable randomization used to evade signature-based detection.",
              "Train a Random Forest or Gradient Boosting classifier using features extracted from service creation events (4697, 7045, Sysmon 13). Features should include: path depth of ServiceFileName, entropy of ServiceName, character distribution of ServiceFileName (e.g., digit-to-char ratio), ServiceType, ServiceStartType, and ServiceAccount. Use a labeled dataset of 'benign' and 'malicious' service installations from threat intelligence feeds and sandbox analysis. Deploy the model to score new service creations in real-time. A prediction probability for the 'malicious' class greater than a tuned threshold (e.g., 0.90) should generate a high-priority alert."
            ]
          },
          {
            "description": "A network event indicating potential exploit or payload delivery to an ICS asset is temporally correlated with a host-based indicator of privilege escalation on the same asset. The network event could be a connection to a rare external destination or an internal transfer of an executable file, followed within a 2-minute window by an anomalous process creation or suspicious new service installation.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek smb_files.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 4697",
              "Windows Event ID 7045",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments connecting EWS, HMIs, and servers within the PCN/MZ; industrial demilitarized zones (IDMZ) and network gateways connecting the PCN to enterprise IT networks.",
            "action": [
              "Create a correlation rule that joins network and host logs by IP address within a 120-second window. The rule triggers when: (Event A: A Zeek log shows a connection from an ICS asset to a non-RFC1918 IP not on an allowlist OR `http.log` shows a download with mime_type 'application/x-dosexec' OR `smb_files.log` shows a transfer of a .exe, .dll, or .ps1 file) is followed by (Event B: A high-priority alert for anomalous process creation or suspicious service installation fires for the same ICS asset IP). Escalate the correlated events as a critical incident.",
              "Maintain a 90-day rolling baseline of (destination_ip, destination_port) tuples from Zeek `conn.log` and a baseline of queried domains from Zeek `dns.log` for each critical ICS asset. Flag any new connection or DNS query whose tuple/domain is not in its respective baseline as a 'rare network event'. If a 'rare network event' occurs, initiate a 2-minute monitoring window for the source host. If any medium or high-priority host-based alert (from process or service analytics) is generated for that host within the window, correlate the events and escalate to a high-priority investigation.",
              "Implement a risk-based alerting (RBA) framework where alerts from disparate detection logic contribute to an entity's risk score. For each entity (e.g., an HMI), ingest alerts from the process anomaly model, service anomaly model, and rare network event model as individual risk events. Aggregate the risk scores over a rolling 5-minute window using a formula like $$ TotalRisk = \\sum(EventScore * EventWeight) $$, where EventScore is the ML model's output probability or anomaly score and EventWeight is a configurable value based on alert type and asset criticality. If the aggregated $$ TotalRisk $$ for an entity crosses a critical threshold, generate a single, high-fidelity composite alert that presents the full attack chain to the analyst."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]