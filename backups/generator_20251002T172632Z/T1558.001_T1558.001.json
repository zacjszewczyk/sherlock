[
  {
    "information_requirement": "Has an adversary forged Kerberos tickets to gain unauthorized credential access? (TA0006 - Credential Access)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1558.001",
        "name": "Golden Ticket",
        "evidence": [
          {
            "description": "A process creation event is logged on a Domain Controller where the process executable's hash matches a known indicator of compromise (IOC) for a credential dumping or ticket forging tool (e.g., Mimikatz, Rubeus).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: On all Domain Controllers, monitor process creation events (Windows Event ID 4688 or Sysmon Event ID 1) with command-line auditing enabled. Correlate the hashes of created process executables against a threat intelligence feed of known malicious hashes for tools like Mimikatz and Rubeus. An exact match triggers a high-severity alert.",
              "Statistical: For all process creation events on Domain Controllers, calculate the entropy of the process name and command-line arguments. Establish a baseline of entropy values for legitimate administrative processes over a 30-day period. Alert on processes with names or arguments that fall into the 99th percentile of entropy, which can indicate randomized or obfuscated strings used by malicious tools.",
              "Machine Learning: Develop and deploy a classification model (e.g., Random Forest, Gradient Boosting) trained on features from process creation events (e.g., parent process, user context, file path rarity, command-line argument structure, entropy). Train the model to distinguish between benign administrative activity and processes indicative of credential dumping. Score all new process events on Domain Controllers in real-time to flag suspicious activity."
            ]
          },
          {
            "description": "A Kerberos authentication event (TGT request Event ID 4768 or TGS request Event ID 4769) is logged with the Ticket Encryption Type specified as RC4-HMAC ('0x17'), a weak and deprecated cipher often used by ticket forging tools.",
            "data_sources": [
              "Windows Event ID 4768",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: On Domain Controllers, monitor Kerberos TGT (Event ID 4768) and TGS (Event ID 4769) requests. Create a high-fidelity alert for any ticket requested using the RC4-HMAC encryption type ('Ticket Encryption Type' of '0x17' in Windows events, or 'RC4-HMAC' in Zeek logs). Elevate the alert's priority if the request is for a privileged account.",
              "Statistical: For each user account, calculate the distribution of encryption types used in Kerberos requests over a 30-day rolling window. Establish a historical baseline of typical encryption types for each user. Alert when an account, especially a privileged one, suddenly uses an encryption type (like RC4) that deviates from its own baseline (e.g., a type never before seen for that user).",
              "Machine Learning: Use an anomaly detection model (e.g., Isolation Forest) on Kerberos ticket request events. Input features should include Account Name, Service Name, Client Address, Encryption Type, and Ticket Options. Train the model on historical data to learn normal combinations of these features and flag requests that are statistically improbable, such as a specific user from a new IP requesting a ticket for a rare service with a weak encryption cipher."
            ]
          },
          {
            "description": "A Ticket-Granting Service (TGS) request (Event ID 4769) is observed from a client for a user, but no corresponding Ticket-Granting Ticket (TGT) request (Event ID 4768) was logged from the same client for that user within the domain's configured TGT lifetime.",
            "data_sources": [
              "Windows Event ID 4768",
              "Windows Event ID 4769",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: For every TGS request (Event ID 4769 or Zeek kerberos.log with request_type=TGS-REQ), perform a stateful check. Query logs for a preceding TGT request (Event ID 4768 or Zeek kerberos.log with request_type=AS-REQ) from the same 'Client Address' for the same 'Target User Name' within the configured TGT lifetime (e.g., 10 hours). If no corresponding TGT request is found, generate a high-priority alert for potential Pass-the-Ticket.",
              "Statistical: For each client IP address, establish a baseline ratio of TGT requests to TGS requests over a 24-hour period. Monitor for significant deviations from this baseline. A sudden drop in the TGT:TGS ratio for a specific client (i.e., many TGS requests with few or no new TGT requests) indicates a statistical anomaly that warrants investigation.",
              "Machine Learning: Implement a time-series analysis model (e.g., LSTM) for each user account, tracking the sequence and timing of their Kerberos events (TGT requests, TGS requests). Train the model to learn the typical cadence of ticket requests. An alert is triggered when a sequence deviates from the learned pattern, such as a TGS request appearing without a preceding TGT request within the expected time window, which the model flags as a temporal anomaly."
            ]
          },
          {
            "description": "A Kerberos TGT request (Event ID 4768) specifies a 'Ticket Lifetime' that significantly exceeds the Active Directory domain's configured maximum policy, or matches a known default value for forged tickets (e.g., 3650 days).",
            "data_sources": [
              "Windows Event ID 4768",
              "Zeek kerberos.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: On Domain Controllers, parse the 'Ticket Lifetime' from every TGT request (Event ID 4768). Compare this value against the domain's configured maximum ticket lifetime policy. Generate a critical alert if the requested lifetime exceeds the policy, especially if it matches the common forged lifetime of 3650 days (10 years).",
              "Statistical: For all TGT requests (Event ID 4768), calculate descriptive statistics (mean, median, 99th percentile) for ticket lifetimes across the domain over a 30-day period. Alert on any requested lifetime that is a statistical outlier (e.g., exceeds the 99.9th percentile or is more than 3 standard deviations above the mean), as this could indicate a non-standard or forged ticket.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on TGT request events, using features like requested lifetime, client IP, and user account. The algorithm will group normal requests together. Requests that do not belong to any cluster are automatically flagged as anomalous noise points. A TGT request with an unusually long ticket lifetime would likely be isolated and flagged by the model."
            ]
          },
          {
            "description": "A single user account is associated with a burst of successful network logons (Event ID 4624, Logon Type 3) across an anomalously high number of distinct destination hosts within a short time frame, inconsistent with its established baseline behavior.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All servers and workstations",
            "action": [
              "Symbolic: Define a static threshold rule to alert if any single non-service account successfully authenticates via network logon (Event ID 4624, Logon Type 3) to more than a defined number of distinct hosts (e.g., 20) within a 1-hour window. This provides a basic tripwire for rapid lateral movement.",
              "Statistical: For each user account, establish a baseline by calculating the 95th percentile of distinct hosts accessed via network logon per hour over a 30-day period. Continuously monitor for any hour where an account's activity exceeds its own historical 95th percentile, indicating an abnormal level of lateral movement.",
              "Machine Learning: Model lateral movement as a graph where nodes are hosts and directed edges are authentications. Use a time-series graph analysis model to learn the normal patterns of connectivity for each user (e.g., typical subnets accessed, velocity of new connections). The model can detect anomalies such as a user suddenly connecting to a new, isolated cluster of high-value servers, or the rate of new connections increasing dramatically, both of which are indicative of behavior following the use of a golden ticket."
            ]
          },
          {
            "description": "A TGS request event (Event ID 4769) indicates the use of SID-History ('Transited Services' field is populated) to grant access, and the SID-History contains the SID of a high-privilege group (e.g., Enterprise Admins 'S-1-5-21-...-519') that is not legitimate for that user account.",
            "data_sources": [
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: On Domain Controllers, monitor the 'Transited Services' field within Kerberos service ticket request events (Event ID 4769). Create a high-priority alert when this field is populated and the SID-History contains the SID of a high-privilege group (e.g., Enterprise Admins 'S-1-5-21-...-519', Domain Admins 'S-1-5-21-...-512').",
              "Statistical: For every account, create a list of SIDs that have legitimately appeared in its SID-History during a baseline period (e.g., 90 days, or following a domain migration). Store this as a known-good set for each user. Alert whenever a TGS request (Event ID 4769) for a user contains a SID in the 'Transited Services' field that is not in their established baseline set.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) to identify malicious SID-History abuse. Features should include the user account, target service, source IP, a binary feature indicating if SID-History was used, and the rarity of the specific SID being injected. Train the model on known-good data (e.g., post-migration activity) and known-bad patterns to score new TGS requests for their likelihood of being malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]