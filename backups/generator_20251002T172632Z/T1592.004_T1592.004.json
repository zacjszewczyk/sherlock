[
  {
    "information_requirement": "Is an adversary actively gathering our organization's client configuration details for targeting?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1592.004",
        "name": "Client Configurations",
        "evidence": [
          {
            "description": "An internal host establishes an outbound network connection to an external domain or IP address that is a known indicator of compromise associated with reconnaissance, phishing, or client fingerprinting infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate web proxy, DNS resolvers, and network egress points.",
            "action": [
              "Symbolic: Ingest a high-confidence threat intelligence feed containing IPs and domains associated with reconnaissance campaigns. Create a SIEM rule to join Zeek conn.log destination IPs and Zeek dns.log queried domains against this feed. Generate a high-severity alert for any match.",
              "Statistical: For each DNS query in Zeek dns.log, calculate the enterprise-wide rarity of the queried domain (e.g., requested by <0.1% of hosts). Enrich with domain age (WHOIS data). If a domain is both rare and registered within the last 30 days, assign it a risk score. Alert when a single host connects to multiple domains exceeding a cumulative risk score threshold within a 5-minute window.",
              "Machine Learning: Implement a pre-trained domain generation algorithm (DGA) detection model. Feed all non-allowlisted domains from Zeek dns.log into the model. Use features such as domain entropy, vowel-to-consonant ratio, and n-gram analysis to classify domains. Investigate hosts querying domains classified as DGA with high confidence."
            ]
          },
          {
            "description": "An outbound HTTP request from an internal client contains specific URI parameters, Javascript file names (e.g., 'fingerprint.js'), or anomalous User-Agent strings known to be used by client fingerprinting toolkits like ScanBox.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate web proxy, network egress points, and any device capable of making outbound HTTP requests.",
            "action": [
              "Symbolic: Develop and apply a set of regular expressions to Zeek http.log URI and request body fields. The expressions should match known fingerprinting script names (e.g., 'fingerprint.js', 'client.js', 'fp.js'), functions, or unique parameter patterns. Trigger an alert if multiple distinct signatures are observed from the same client to the same destination.",
              "Statistical: For each outbound HTTP request in Zeek http.log, calculate the Shannon entropy of its URI query string. Establish a per-user and per-destination baseline for this metric. Generate an alert when a request's URI entropy exceeds the 99th percentile of its established baseline, indicating an unusually complex query string often used to exfiltrate fingerprinting data.",
              "Machine Learning: Train a Random Forest classifier to distinguish between benign and fingerprinting-related HTTP requests. Extract features from Zeek http.log including URI length, query parameter count, user-agent string length, number of headers, presence of 'Referer' header, and destination IP reputation. Use the trained model to score and flag suspicious requests in real-time."
            ]
          },
          {
            "description": "A single external source IP initiates connections to more than 20 unique internal hosts or more than 50 unique destination ports within a 5-minute window, consistent with active scanning behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing firewalls, DMZ network segments, and VPN concentrators.",
            "action": [
              "Symbolic: Query all inbound Zeek conn.log records against a threat intelligence feed of known malicious scanners and TOR exit nodes. Generate a medium-severity alert for any connection attempt from a matching IP address targeting the internal client IP space.",
              "Statistical: Create a streaming aggregation job that, for each external source IP, counts the number of unique destination hosts and unique destination ports contacted within a 1-minute rolling window. Alert if the unique host count exceeds 3 standard deviations above the mean for all inbound traffic, or if the entropy of the destination port set is anomalously high.",
              "Machine Learning: Apply a density-based clustering algorithm like DBSCAN to inbound Zeek conn.log data, using source IP, destination port, and protocol as features. The algorithm will group legitimate, sparse connections separately from dense clusters formed by scanning activity (one-to-many or one-to-few-with-many-ports). Label these dense clusters as 'scanning' and investigate the source IPs."
            ]
          },
          {
            "description": "A single client's outbound web traffic exhibits an anomalous number of HTTP headers (e.g., >5 non-standard Client-Hint headers) or a sudden spike in DNS queries for unique domains, deviating significantly from its established baseline.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS resolvers, web proxies, and endpoint devices.",
            "action": [
              "Symbolic: Create a rule that triggers if an outbound HTTP request in Zeek http.log contains a combination of three or more `Sec-CH-UA-*` Client-Hint headers (e.g., `Sec-CH-UA-Arch`, `Sec-CH-UA-Model`, `Sec-CH-UA-Full-Version-List`) directed to a domain not on a pre-approved allowlist of services like Google or Microsoft.",
              "Statistical: For each client IP, establish a 30-day baseline of the average number of unique domains queried per minute using Zeek dns.log. Generate an alert if a client's query rate for unique domains exceeds the 98th percentile of its own historical baseline over a 5-minute rolling window.",
              "Machine Learning: For each client, model the time series of their DNS query rate per second using an LSTM autoencoder. An alert is generated when the model's reconstruction error for a given time window spikes significantly, indicating a sudden deviation from the learned normal browsing pattern, which could be caused by automated fingerprinting activity."
            ]
          },
          {
            "description": "An internal host executes a sequence of local reconnaissance commands (e.g., `systeminfo`, `wmic product get name`, `reg query HKLM\\SOFTWARE`) within 60 seconds of initiating an outbound network connection to a newly observed external IP address.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard user endpoints, developer workstations, and servers with interactive user sessions.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process creation event (Windows Event ID 4688) containing a command line with terms like `systeminfo`, `wmic`, `get-computerinfo`, or `reg query` is logged on a host, and is followed within 60 seconds by a Zeek conn.log entry showing an outbound connection from the same host to an IP address not seen in the last 30 days.",
              "Statistical: Analyze command-line arguments from process creation events (Event ID 4688) and PowerShell script blocks (Event ID 4104) using TF-IDF to score the rarity of arguments and argument combinations. Flag command executions containing statistically rare terms related to system or software enumeration for further review, especially if they co-occur with network activity.",
              "Machine Learning: Train a Hidden Markov Model (HMM) on sequences of host and network events (e.g., parent process -> child process -> network connection). Use benign sequences from across the enterprise as the training set. Apply the trained model to new event sequences; flag any sequence with a low probability score as anomalous, indicating a deviation like `powershell.exe` -> `systeminfo.exe` -> `[outbound TCP to new IP]`."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]