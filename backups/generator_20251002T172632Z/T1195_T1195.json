[
  {
    "information_requirement": "Has the adversary gained initial access to the network via a compromised software supply chain? (PIR)",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1195",
        "name": "Supply Chain Compromise",
        "evidence": [
          {
            "description": "A process, created by a known software installer or updater package within 24 hours of its execution, initiates an outbound network connection to a destination IP, domain, or URL that matches an entry on a high-confidence threat intelligence feed (e.g., categorized as C2, malware, or associated with supply chain threat actors).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek software.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), Internal and External DNS Resolvers, All Endpoints and Servers, Software Distribution Servers (e.g., SCCM, WSUS)",
            "action": [
              "Correlate process creation events (Windows Event ID 4688 / Sysmon Event ID 1) with outbound network connections (Zeek conn.log) by joining on host IP and timestamp (within a 5-minute window). For each connection, resolve the destination FQDN using Zeek dns.log. Compare the destination IP and FQDN against a threat intelligence feed of known malicious indicators. Generate a high-severity alert for any match originating from a process associated with a recent software update (identified via Zeek software.log or deployment logs).",
              "For processes spawned by software updaters, extract all destination domains from Zeek dns.log. Calculate the enterprise-wide access frequency for each domain over the past 90 days. Flag any connection to a domain that falls in the bottom 1st percentile of prevalence (i.e., the rarest domains). Additionally, calculate the Shannon entropy of the subdomain structure for each FQDN; flag domains with abnormally high entropy scores, which may indicate DGA.",
              "Feed all FQDNs from Zeek dns.log requested by newly installed processes into a pre-trained DGA detection model (e.g., a Long Short-Term Memory (LSTM) network or Random Forest classifier). Investigate any domain flagged as machine-generated with a high confidence score. Periodically retrain the model on newly observed benign and confirmed-malicious domains to maintain accuracy."
            ]
          },
          {
            "description": "Within minutes of a software installation, a known software update process (e.g., updater.exe, setup.exe) spawns a script interpreter or interactive shell (e.g., powershell.exe, cmd.exe, wscript.exe, bash), or a newly created executable file associated with the update has an invalid, revoked, or missing Authenticode signature.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Security Event ID 5038",
              "Sysmon Event ID 1 (Process Creation)",
              "Sysmon Event ID 7 (Image Load)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, Software Distribution Servers, Developer Workstations, CI/CD Pipeline Build Servers",
            "action": [
              "Create a detection rule to alert when a parent process name matches a list of known software updaters (e.g., 'update.exe', 'msiexec.exe') and the child process name matches a list of script interpreters or shells (e.g., 'powershell.exe', 'cmd.exe'). Separately, monitor for Sysmon Event ID 7 where the 'Signed' field is 'false' or the 'Status' is not 'Signed' and correlate the file path with recent software installations.",
              "From Sysmon Event ID 1 data, build a baseline of all unique parent-child process relationships observed across the enterprise over 90 days. Calculate the frequency of each pair. Generate a medium-severity alert for any new pair where the parent is a known software updater and the pair has never been seen before or is in the bottom 0.1% of frequency.",
              "Train a Random Forest or Gradient Boosting classifier using features from Sysmon Event ID 1, such as parent process name, child process name, command line length, command line entropy, and user context. Label data based on historical incidents and known-good behavior. Use the model to score new parent-child relationships spawned by update processes, flagging those classified as suspicious with a high probability score."
            ]
          },
          {
            "description": "A process, identified as part of a recent software update, exhibits network behavior anomalies such as: 1) periodic, fixed-interval outbound connections (beaconing) indicative of C2 communication; 2) protocol-port mismatch, such as DNS traffic over a port other than 53; or 3) an unusually high ratio of bytes sent vs. received (data exfiltration).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 3 (Network Connection)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies), Core Network Taps, DNS Resolvers, All Endpoints and Servers",
            "action": [
              "Using Sysmon Event ID 3 or correlated Zeek conn.log data, create a rule to detect connections from processes associated with recent updates where the protocol identified by Zeek (e.g., 'dns', 'ssl') does not match the IANA standard port for that protocol (e.g., destination port is not 53 for DNS, not 443 for SSL). Alert on any detected mismatch.",
              "For each source-destination pair generated by a new update process, query connection logs (Zeek conn.log) over a 1-hour window. Calculate the time deltas between each connection. A standard deviation of these deltas close to zero (e.g., < 1 second) indicates rigid, machine-generated beaconing. Also, calculate the ratio of outbound bytes ('orig_bytes') to inbound bytes ('resp_bytes'); flag connections where this ratio exceeds a high-percentile threshold (e.g., 99th percentile) compared to the host's baseline.",
              "For each host, apply a time-series decomposition model (e.g., Seasonal-Trend-Loess) to the total outbound bytes per minute from Zeek conn.log. After a software update is detected on the host, continue monitoring the time series. Use an anomaly detection algorithm (e.g., Isolation Forest) on the residual component of the decomposition to identify significant deviations from the established seasonal and trend patterns, which could indicate C2 or exfiltration activity."
            ]
          },
          {
            "description": "A process spawned by a software updater executes host or network reconnaissance commands (e.g., `whoami`, `systeminfo`, `ipconfig`, `nltest`), attempts to access the LSASS process memory, or creates a new persistence mechanism such as a new service, scheduled task, or registry run key.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 10 (ProcessAccess)",
              "Sysmon Event ID 12/13/14 (Registry Events)",
              "Windows Event ID 4697 (Service Creation)",
              "Windows Event ID 4698 (Scheduled Task Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, Domain Controllers, Active Directory Certificate Services (ADCS), Developer Workstations, High-Value Target Systems",
            "action": [
              "Monitor for Sysmon Event ID 10 where the `TargetProcess` is `lsass.exe` and the `SourceImage` is an executable associated with a recent software update. Additionally, create a rule to detect the creation of new services (Event ID 4697) or scheduled tasks (Event ID 4698) where the executable path was created on disk within the last 24 hours.",
              "From Sysmon Event ID 1 logs, analyze the command-line arguments of processes spawned by software updaters. Calculate the Shannon entropy of the command-line string and flag any command whose entropy exceeds a baseline threshold (e.g., > 3.5), indicating potential obfuscation. Also, baseline the frequency of discovery commands (e.g., 'whoami') per process name and alert when an updater process executes them at a statistically unusual rate.",
              "Implement a One-Class SVM (Support Vector Machine) model trained on sequences of host events (process creations, file mods, registry changes, network connections) that occur after known-benign software updates. After a new update, feed the sequence of subsequent events into the model. If the model classifies the sequence as an outlier, flag the host for investigation as its post-update behavior deviates significantly from the learned 'normal' behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]