[
  {
    "information_requirement": "Is the adversary conducting reconnaissance via spearphishing attachments against enterprise users?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1598.002",
        "name": "Spearphishing Attachment",
        "evidence": [
          {
            "description": "An inbound email contains an attachment whose file hash (SHA256) matches a known-malicious signature, or the email's source IP, sender domain, or reply-to address is present on a threat intelligence blacklist. This is often coupled with authentication failures (SPF/DKIM/DMARC).",
            "data_sources": [
              "Zeek files.log",
              "Zeek smtp.log",
              "Threat Intelligence Platform Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Mail Servers, Threat Intelligence Platform",
            "action": [
              "For each file seen in files.log with a source of 'SMTP', calculate its SHA256 hash and query against internal and external threat intelligence feeds for a match. Concurrently, from smtp.log, extract the sender IP (`id.orig_h`), `From` header domain, and `Reply-To` domain. Query these indicators against IP and domain blocklists. Also, check the `auth_results` field for 'fail' on SPF, DKIM, or DMARC. Generate a high-severity alert on any positive match.",
              "From smtp.log, establish a 30-day rolling baseline of sender domains. Identify domains in the bottom 5th percentile of sending frequency (rare senders). Enrich these rare domains with registration date (e.g., via WHOIS lookup) and flag those less than 30 days old. An email from a domain that is both rare and new, and contains an attachment, is considered anomalous and requires review.",
              "Train a supervised classification model (e.g., Gradient Boosting) using features from smtp.log and files.log. Feature vector should include: sender IP reputation, sender domain age, TLD rarity score, SPF/DKIM/DMARC pass/fail booleans, attachment MIME type, attachment file size, entropy of the email subject line, and a boolean for presence on an IOC list. The model will output a probability score for maliciousness. Flag emails with a score above a tuned threshold (e.g., > 0.90) for automated blocking or quarantine."
            ]
          },
          {
            "description": "A process associated with a document reader (e.g., WINWORD.EXE, ACROBAT.EXE, OUTLOOK.EXE) spawns a child process that is a command-line interpreter (powershell.exe, cmd.exe), a scripting engine (wscript.exe, cscript.exe), or a known reconnaissance tool (whoami.exe, systeminfo.exe, net.exe, ipconfig.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI), Application Servers (e.g., Citrix)",
            "action": [
              "Monitor Windows Event ID 4688 or Sysmon Event ID 1 for process creation events. Create a rule that triggers when a `ParentProcessName` from a specific set {OUTLOOK.EXE, WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE, ACROBAT.EXE, ACROREAD32.EXE} spawns a `NewProcessName` from a watchlist {powershell.exe, cmd.exe, wscript.exe, cscript.exe, whoami.exe, systeminfo.exe, ipconfig.exe, net.exe, dsquery.exe}. Generate a high-severity alert upon any direct match.",
              "Using a 90-day baseline of process creation events (Event ID 4688), calculate the frequency of every unique parent-child process pair. Also calculate the baseline command-line argument entropy for each child process. Flag any execution where the parent-child pair is in the bottom 1st percentile of frequency and the command-line entropy is more than 3 standard deviations above the mean for that child process, indicating an uncommon execution chain with potentially obfuscated commands.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to process creation events. Create a feature vector for each event including: a categorical hash of the parent process name, a categorical hash of the child process name, command-line length, command-line entropy, and a count of special characters in the command line. Analyze the resulting clusters. Outlier points (identified as noise by DBSCAN) where the parent is a document handler represent highly anomalous process chains that deviate from all established normal behaviors and warrant immediate investigation."
            ]
          },
          {
            "description": "Within a short time window (e.g., < 1 hour), multiple emails originating from a single, previously unseen external domain are sent to a small, targeted group of internal recipients (< 20), where all attachments share similar characteristics (e.g., same file type, similar naming convention like 'Invoice_####.pdf').",
            "data_sources": [
              "Zeek smtp.log",
              "Zeek files.log",
              "Directory Services Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Email Gateway, Directory Services, Human Resources Information System (HRIS)",
            "action": [
              "From smtp.log, trigger an alert when a sender domain not seen in the last 60 days sends emails to more than 2 but fewer than 20 unique internal recipients within a 1-hour window, and all associated emails contain an attachment of the same file type (derived by correlating smtp.log `uid` with files.log `fuid`).",
              "For each burst of emails from a new sender domain (not seen in 60 days), calculate the Shannon entropy of the recipient list. A low entropy score indicates a non-random, targeted list. If a new domain sends a low-entropy email burst containing attachments, and the recipients share a common attribute (e.g., same department, queried from directory services), elevate the suspicion score. A combination of a new domain, low recipient entropy, and shared recipient attributes is a strong indicator of a targeted spearphishing campaign.",
              "Use a clustering algorithm (e.g., DBSCAN) on email metadata from a specific time window (e.g., 1 hour). The feature vector for each email should include: sender domain (categorically encoded), attachment file type (categorically encoded), and recipient department (categorically encoded). Small, dense clusters that are distinct from large, general-purpose clusters (e.g., newsletters) represent potential targeted campaigns. For example, a cluster of 10 emails from a new domain, all with PDF attachments, sent only to the 'Finance' department, would be flagged."
            ]
          },
          {
            "description": "A process spawned by a document handler (e.g., WINWORD.EXE) initiates an outbound network connection (TCP/UDP) to a destination FQDN or IP address that is either on a threat intelligence blocklist, has a low reputation, or has not been previously contacted by any host in the organization within a 90-day baseline period.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress Points, Internal DNS Resolvers, Threat Intelligence Platform",
            "action": [
              "On a host, correlate Sysmon Event ID 1 (Process Creation) with Sysmon Event ID 3 (Network Connection) using the `ProcessGuid`. Alert if a process with a parent of OUTLOOK.EXE, WINWORD.EXE, etc., makes a network connection to a destination IP on a known C2 blocklist. At the network level, correlate dns.log and conn.log to identify connections to FQDNs or IPs present on a C2 blocklist. An alert from both host and network for the same connection is a high-confidence finding.",
              "Establish a 90-day baseline of all FQDNs queried in dns.log and all JA3 hashes seen in ssl.log across the enterprise. Identify connections in conn.log where the destination FQDN is in the bottom 1st percentile of request frequency ('long-tail' analysis). If that connection is TLS-encrypted, check if its JA3 hash from ssl.log is also rare for the connecting client IP. Correlate this rare connection back to a host process spawned by a document handler. A connection from a document-spawned process to a rare domain using a rare TLS client fingerprint is a strong statistical anomaly.",
              "Train a one-class SVM model on 'normal' network connection data, using features from host and network logs. The feature vector should include: `ProcessName`, `DestinationPort`, `Protocol`, `ConnectionDuration`, `BytesOut`, `BytesIn`, a DGA prediction score for the FQDN, and the rarity score of the JA3 hash. Feed new connections originating from processes spawned by document handlers into the model. Connections classified as outliers represent a deviation from learned normal behavior and are likely malicious C2 beacons."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]