[
  {
    "information_requirement": "Is an adversary attempting to discover systems on the ICS network? (TA0102 - Discovery)",
    "tactic_id": "TA0102",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T0846",
        "name": "Remote System Discovery",
        "evidence": [
          {
            "description": "A single source host, not on a pre-defined 'Authorized Scanners' watchlist, generates a high volume of connection attempts to many distinct destinations. Specifically, the host initiates connections to over 50 unique destination IPs or over 100 unique destination ports within a 5-minute window, and the total connection count exceeds the 99th percentile of its own historical 5-minute average. The activity is considered high-priority if targeting common ICS/OT ports (e.g., 502, 102, 44818, 20000).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Network Segments (e.g., Control Network, Safety Instrumented System Network), OT/IT DMZ, Engineering Subnet, Process Control Network (PCN)",
            "action": [
              "Create and maintain an 'Authorized ICS Management Hosts' watchlist. Query Zeek conn.log for events where `id.orig_h` is not on the watchlist. Aggregate results by `id.orig_h` in 5-minute windows. Generate an alert if a single `id.orig_h` has a distinct count of `id.resp_h` > 50 OR a distinct count of `id.resp_p` > 100. Increase alert severity if `id.resp_p` contains known ICS ports such as 502, 102, 44818, or 20000.",
              "For each `id.orig_h` in Zeek conn.log, calculate a 7-day rolling baseline for its 5-minute window metrics, including `unique_destination_ips`, `unique_destination_ports`, and `total_connections`. Generate an alert if the current 5-minute metric for a given `id.orig_h` exceeds the 99th percentile of its own baseline, particularly if the host is not on the 'Authorized ICS Management Hosts' watchlist.",
              "Train an unsupervised anomaly detection model (e.g., Isolation Forest) on historical Zeek conn.log data, aggregated by `id.orig_h` over 5-minute intervals. Use features such as `count(id.resp_h)`, `dcount(id.resp_h)`, and `dcount(id.resp_p)`. After training on at least 30 days of network data, apply the model to new data to flag any `id.orig_h` with a high anomaly score, indicating a significant deviation from its normal communication patterns."
            ]
          },
          {
            "description": "A process on an ICS host (e.g., Engineering Workstation, HMI) executes a known network discovery utility (e.g., ping.exe, net.exe, arp.exe, nmap.exe, nbtscan.exe) with command-line arguments indicative of subnet-wide enumeration (e.g., CIDR notation like 192.168.1.0/24, or flags like -sP, -sn, /a). The activity is considered highly anomalous if the command is initiated by an unexpected parent process (e.g., a Microsoft Office application, a web browser) or by a non-administrative user account.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, HMIs, Data Historians, Jump Servers within the OT network",
            "action": [
              "Query Windows Event ID 4688 for `NewProcessName` that matches a watchlist of discovery utilities (`ping.exe`, `net.exe`, `nbtstat.exe`, `arp.exe`, `nmap.exe`, `nbtscan.exe`). Filter for `CommandLine` containing regular expressions indicative of scanning, such as `(?i)/a|/enum|\\d{1,3}(\\.\\d{1,3}){3}/\\d{1,2}|-sP|-sn`. Alert if the `ParentProcessName` is not a whitelisted administrative tool (e.g., `explorer.exe`, `cmd.exe`, `powershell.exe`) or the `SubjectUserName` is not an authorized administrative account.",
              "For each host-user combination, establish a 30-day baseline of the execution frequency of discovery utilities with enumeration arguments. Alert if the count in a rolling 24-hour window exceeds the 99th percentile for that specific baseline. Separately, calculate the Shannon entropy of the `ParentProcessName` field for all discovery tool executions on a given host; alert on a sudden, significant drop in entropy (indicating a single scripted parent) or the appearance of a novel parent process not seen in the baseline.",
              "Model process execution chains from Windows Event ID 4688 data as a directed graph where nodes are processes and edges represent parent-child relationships (`ParentProcessName` -> `NewProcessName`). Use a graph-based anomaly detection algorithm to learn the normal process graph structure over a 30-day period. Alert on the creation of newly observed or statistically rare edges, particularly where the child node is a discovery utility and the parent is an unusual process like `winword.exe` or a `svchost.exe` instance running under a non-SYSTEM context."
            ]
          },
          {
            "description": "A source IP address, not on a pre-defined 'Authorized ICS Management Hosts' watchlist, initiates a high frequency or wide variety of ICS-specific discovery requests. This is defined as more than 10 discovery-related function calls (e.g., EtherNet/IP 'List Identity', Modbus 'Read Device Identification', S7comm 'Get Block Info', DNP3 'Read Class 0 Data') directed to more than 5 unique destination ICS devices (e.g., PLCs, RTUs) within a 1-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek modbus.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control System LAN, connections to PLCs and RTUs, SCADA Server Network, Field Device Network",
            "action": [
              "Filter Zeek's ICS protocol logs (`s7comm`, `enip`, `modbus`, `dnp3`) for requests where `id.orig_h` is not on the 'Authorized ICS Management Hosts' watchlist. Focus on function codes associated with discovery or enumeration. Aggregate by `id.orig_h` over a 1-minute window. Alert if a single `id.orig_h` sends discovery-related function codes to more than 5 unique `id.resp_h` OR sends more than 10 total discovery requests in that window.",
              "For each `id.orig_h`, establish a 30-day baseline of the rate and variety (set of unique function codes) of ICS protocol requests. Alert if a host, especially one not on an authorized list, suddenly begins using discovery-related function codes it has not historically used. Also, alert if the ratio of discovery requests to total requests from a host exceeds 3 standard deviations above its established mean ratio.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to features extracted from Zeek ICS protocol logs, aggregated per source host over 1-minute intervals. Use features such as a one-hot encoded `protocol`, a one-hot encoded `function_code`, and the count of unique destination hosts. Train the model on at least 30 days of data to define normal communication clusters. Classify any data points identified as noise/outliers as anomalous, and alert, especially if the `id.orig_h` is not on a pre-approved watchlist."
            ]
          },
          {
            "description": "A single process on an Engineering Workstation (EWS) or HMI is responsible for a large number of failed network connection attempts, indicating a potential network sweep. This is defined as over 50 failed connections (e.g., TCP RST from destination, ICMP Destination Unreachable) to more than 20 unique destination IP addresses within a 60-second period. The originating process is not a known, legitimate network management or vulnerability scanning tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, HMIs, ICS Network Segments, Servers within the OT network",
            "action": [
              "Filter `Zeek conn.log` for failed connections (where `conn_state` is 'REJ', 'RSTO', or 'S0') and `Zeek icmp.log` for 'Destination Unreachable' messages. Group by `id.orig_h` in 60-second windows. If any `id.orig_h` has >50 failed attempts to >20 unique `id.resp_h`, pivot to host logs for that source. On the host, correlate the timestamps with Windows Event ID 4688 or 5156 to identify the responsible `Application` or `NewProcessName`. Alert if this process is not on a 'Known Good Scanners' watchlist.",
              "On each critical host, correlate process start events (Windows Event ID 4688) with network connection logs (Zeek `conn.log`). For each process, calculate a Connection Success Ratio, $$ R_{success} = \\frac{Successful\\_Connections}{Total\\_Connections} $$, over its lifetime or in 10-minute windows. Establish a 30-day baseline for this ratio for common processes. Alert if the ratio for a given process instance drops more than 3 standard deviations below its historical mean, especially if the absolute number of failed connections is high (>50).",
              "For each critical host, create a time-series of the count of failed connections per minute from Zeek logs attributed to that host. Use a time-series anomaly detection model (e.g., Prophet, LSTM) to forecast the expected number of failures based on historical data. Alert when the actual count significantly exceeds the forecasted upper confidence bound. Upon alert, automatically query to correlate the anomalous time window with process execution data (Windows Event ID 4688) and network filtering events (Windows Event ID 5156) on the source host to identify the causative process."
            ]
          }
        ]
      }
    ],
    "version": "1.5",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]