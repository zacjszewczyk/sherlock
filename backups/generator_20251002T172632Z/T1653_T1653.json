[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying power settings to prevent system sleep or lockdown? (PIR)",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1653",
        "name": "Power Settings",
        "evidence": [
          {
            "description": "A process, known to modify power settings, is executed and its file hash (MD5, SHA1, or SHA256) matches a known indicator of compromise from threat intelligence feeds.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Servers), Domain Controllers",
            "action": [
              "Symbolic: Filter process creation events (Windows Event ID 4688) and compare the ProcessHash against a threat intelligence feed of known-bad hashes associated with malware using T1653. Generate a high-severity alert upon a match.",
              "Statistical: For all executed processes, calculate the enterprise-wide prevalence of each file hash. Isolate executions of `powercfg.exe` or `reg.exe` that modify power settings, and flag any where the parent process hash is statistically rare (e.g., seen on fewer than 5 hosts or <0.1% of endpoints).",
              "Machine Learning: Train a Random Forest or Gradient Boosting classification model on features from process execution events (e.g., parent process path, command-line length, entropy of process name, hash prevalence). Use this model to score the probability that any given process is malicious. Escalate for review if a process modifying power settings receives a high probability score (e.g., >0.9)."
            ]
          },
          {
            "description": "The command-line utility `powercfg.exe` is executed with arguments to alter power schemes, disable sleep/hibernate modes (e.g., /hibernate off), or set display/sleep/disk timeouts to zero or an unusually large value.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Servers), Domain Controllers",
            "action": [
              "Symbolic: From process creation events (Windows Event ID 4688), create a detection rule for `ProcessName: 'powercfg.exe'` where the `CommandLine` contains patterns via regex like `/(/hibernate|/h)\\s+off/i`, `/(/change|-x)\\s+(standby-timeout-ac|standby-timeout-dc|monitor-timeout-ac|monitor-timeout-dc|disk-timeout-ac|disk-timeout-dc)\\s+0/i`, or `/setactive\\s+[a-f0-9-]+/i`. Alert on any match, excluding changes deployed via authorized configuration management.",
              "Statistical: Establish a baseline of `powercfg.exe` command-line argument combinations used by legitimate administrative scripts and users. Calculate the frequency of each unique command. Alert when a command-line combination is executed that falls outside the 99.5th percentile of common commands or is executed by a non-administrative user for the first time.",
              "Machine Learning: For each host, develop a time-series anomaly detection model (e.g., ARIMA or Seasonal-Hybrid ESD) monitoring the hourly rate of `powercfg.exe` executions. Flag any host where the execution count significantly deviates from the forecasted model, especially outside of standard maintenance windows, as a potential indicator of malicious scripting."
            ]
          },
          {
            "description": "The `reg.exe` utility or direct API calls are used to modify registry values that control power settings, screen savers, or the system lock screen. Specifically, values are modified to disable hibernation, sleep, or screen locking.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Servers), Domain Controllers",
            "action": [
              "Symbolic: Monitor registry modification events (Windows Event ID 4657) and process creation events for `reg.exe` (Windows Event ID 4688). Create rules to detect `ADD` or `MODIFY` operations where the `TargetObject` path is `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Power\\HibernateEnabled` and the value is `0`, or `HKCU\\Control Panel\\Desktop\\ScreenSaveActive` is `0`, or `ScreenSaveTimeout` is set to an unusually large number (e.g., > 86400).",
              "Statistical: Profile the normal rate and source (user, process) of modifications to power-related registry keys. For modifications made via `reg.exe`, calculate the entropy of the command-line arguments. Flag modifications originating from a statistically rare user/process or where the command-line entropy is an outlier (e.g., > 2 standard deviations from the mean for that key path).",
              "Machine Learning: Using features from registry modification events (e.g., process path, user context, target key, time of day, parent process), apply a clustering algorithm like DBSCAN. Isolate and investigate events that are marked as noise or form small, distinct clusters, as these represent deviations from common administrative or legitimate software behavior."
            ]
          },
          {
            "description": "A power management utility, such as `powercfg.exe`, is spawned by a parent process that is not a standard Windows shell, administrative tool, or configuration management agent (e.g., parent is `winword.exe`, `acrordr32.exe`, or `wscript.exe`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers",
            "action": [
              "Symbolic: For every `powercfg.exe` execution event (Windows Event ID 4688), inspect the `ParentProcessName`. Trigger an alert if the parent is not on a pre-defined allowlist of expected parents (e.g., `explorer.exe`, `cmd.exe`, `powershell.exe`, `mmc.exe`, `taskeng.exe`, `SCCM_agent.exe`).",
              "Statistical: Build a parent-child process relationship matrix for the entire enterprise. For each `powercfg.exe` execution, calculate the conditional probability P(child=`powercfg.exe` | parent=`[ParentProcessName]`). Flag any execution where this probability is historically very low (e.g., < 0.001) or the relationship has never been seen before, indicating a rare and suspicious event.",
              "Machine Learning: Train a supervised classification model (e.g., Logistic Regression, SVM) to label parent-child process pairs as 'benign' or 'suspicious'. Use features like parent process name, parent process path, child process name, command-line arguments, and user context. Apply the model in real-time to score the risk of each `powercfg.exe` execution based on its parentage and trigger an alert for high-risk events."
            ]
          },
          {
            "description": "A power setting modification event on a host is followed within a short time window (e.g., 5-10 minutes) by the initiation of a new, long-running, or periodic network connection to an external destination, indicative of C2 communication.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints (Workstations, Servers), Network Egress/Ingress Points, DNS Servers",
            "action": [
              "Symbolic: Create a stateful correlation rule that triggers when a power setting modification event (from Evidence 2 or 3) on a host is followed within 10 minutes by a network connection from the same host's IP address (`id.orig_h` in Zeek conn.log) to a destination IP (`id.resp_h`) present on a threat intelligence blocklist.",
              "Statistical: Upon detecting a power setting modification, monitor the host's subsequent network connections in `Zeek conn.log`. Calculate the duration and total bytes for all connections. Flag connections that fall into a high-percentile duration (e.g., > 99th percentile) but have a low-percentile data volume (e.g., < 10th percentile), a pattern consistent with C2 heartbeating.",
              "Machine Learning: For each host, apply a time-series anomaly detection algorithm to network connection logs to identify beaconing behavior (connections to the same destination at regular intervals). After a power setting modification event is detected on a host, monitor for the emergence of a new, previously unobserved beaconing pattern. A high anomaly score for a new periodic connection pattern strongly indicates the establishment of a persistent C2 channel."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]