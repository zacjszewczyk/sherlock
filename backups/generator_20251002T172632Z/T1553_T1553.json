[
  {
    "information_requirement": "Is the adversary attempting to bypass security controls by subverting trust mechanisms? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1553",
        "name": "Subvert Trust Controls",
        "evidence": [
          {
            "description": "A process executes a binary signed by a certificate whose thumbprint or issuer matches a known-bad entry in a threat intelligence feed, or a new certificate is added to a trust store that matches a known-bad thumbprint.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, Network Egress/Ingress Points, Domain Controllers",
            "action": [
              "Join process creation events (Windows Event ID 4688, Sysmon Event ID 1) and network certificate logs (Zeek x509.log) against a threat intelligence feed of known malicious certificate thumbprints and issuers. Alert on any match.",
              "For all newly observed certificates in Zeek x509.log, calculate the Shannon entropy of the issuer and subject common name fields. Establish a baseline distribution of these entropy scores. Alert on certificates where the entropy score for either field exceeds the 99th percentile of the established baseline, indicating potentially algorithmically generated names.",
              "Train a Random Forest classification model using features from Zeek x509.log and Sysmon Event ID 1 signature data, such as certificate validity period, key length, self-signed status, issuer/subject entropy, and issuer prevalence. Use the model to classify newly observed certificates as benign or malicious. Alert on certificates classified as malicious with a confidence score above a predefined threshold (e.g., 0.85)."
            ]
          },
          {
            "description": "The execution of certutil.exe, reg.exe, or PowerShell.exe with command-line arguments or script block content that explicitly adds a certificate to a root store, modifies certificate-related registry keys, or disables trust provider checks.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Logging Event ID 4104",
              "Sysmon Event ID 13",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, Domain Controllers, Certificate Authority Servers",
            "action": [
              "Create a detection rule that searches process command-line logs (Windows Event ID 4688) and PowerShell script block logs (Event ID 4104) for regular expressions matching certificate store modifications, such as `certutil .* -addstore .* root`, `Import-Certificate .* -CertStoreLocation .*\\\\Root`, or direct registry modifications to `HKLM\\\\SOFTWARE\\\\Microsoft\\\\SystemCertificates`.",
              "For each host, baseline the frequency of command-line argument combinations used with `certutil.exe` and `reg.exe` (targeting certificate paths). Calculate the historical probability of each argument set. Alert when an argument combination is observed that falls below a low probability threshold (e.g., <0.01% historical prevalence) for that specific host or for the entire organization.",
              "Use a sequence-to-sequence autoencoder (e.g., LSTM-based) to model normal sequences of command-line executions per user session. Feed session command histories into the model and alert when the reconstruction error exceeds a dynamically determined threshold, indicating a significant deviation from learned benign sequences, such as a file download followed by a `certutil -addstore` command."
            ]
          },
          {
            "description": "A certificate file (e.g., .cer, .crt, .p7b) is downloaded from an external network source, and within a short time window (e.g., under 5 minutes), a process on the same host installs a certificate into a system trust store.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows PowerShell Logging Event ID 4104",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Ingress Points, User Workstations, Public-Facing Servers",
            "action": [
              "Correlate Zeek files.log events (mime-type `application/x-x509-ca-cert` or file extension `.cer`/`.crt`) with subsequent process creation events (Windows Event ID 4688) or PowerShell script block logs (Event ID 4104) on the same host IP within a 5-minute window. Alert if the subsequent event contains certificate installation commands (e.g., `certutil -addstore`, `Import-Certificate`).",
              "For each host, model the daily rate of certificate installations using a 30-day moving average and standard deviation. Alert when the number of installations in a 24-hour period exceeds 3 standard deviations above the host's historical average. Increase alert priority if the installations are preceded by file downloads from low-reputation IP addresses or uncategorized domains, as identified by threat intelligence enrichment of Zeek conn.log and dns.log.",
              "Apply a Seasonal-Hybrid ESD (Extreme Studentized Deviate) time-series anomaly detection algorithm to the aggregated count of certificate installation events across the enterprise, segmented by hour. Identify and alert on statistically significant spikes in installation activity that deviate from historical seasonal patterns (e.g., time of day, day of week), which could indicate a coordinated campaign."
            ]
          },
          {
            "description": "An executable is launched that is signed by a certificate that is either new to the environment, has an anomalously short validity period, is self-signed and not part of an established software baseline, or has a low-prevalence issuer.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek pe.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, Software Distribution Points, Developer Workstations",
            "action": [
              "Maintain an allowlist of known-good code-signing certificate thumbprints for all approved software in the environment. Query process creation events (Windows Event ID 4688, Sysmon Event ID 1) and alert on any execution where the binary is signed by a certificate whose thumbprint is not on the allowlist.",
              "For every executed binary, extract its code-signing certificate details. Maintain a 90-day baseline of certificate issuer and thumbprint prevalence (count of unique hosts seen on). Alert on executions of binaries signed by a certificate that has been seen on fewer than 0.1% of endpoints or has a validity period of less than 90 days, as these are strong indicators of ad-hoc or malicious signing.",
              "Use a DBSCAN clustering algorithm on certificate features (issuer, validity duration, key algorithm, subject/issuer name similarity) for all executed files. Treat certificates that are classified as noise points (i.e., do not belong to any cluster) as high-risk outliers. Investigate these outlier certificates, as they lack shared characteristics with the established software trust groups in the environment."
            ]
          },
          {
            "description": "A file is downloaded from an internet zone, and subsequently, commands known to remove the Zone.Identifier Alternate Data Stream (e.g., `streams.exe -d`, PowerShell `Unblock-File`) are executed against that file, often preceding its execution.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 15",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Email Gateway, Web Proxies, File Servers",
            "action": [
              "Create a detection rule that monitors command-line logs (Windows Event ID 4688, Sysmon Event ID 1) for the execution of utilities known to manipulate ADS, such as `streams.exe -d`, `more < file.exe > file.exe`, or PowerShell cmdlets like `Unblock-File` and `Remove-Item -Stream Zone.Identifier`. Alert when this activity is observed, especially if correlated with a recent file download from Zeek files.log.",
              "For each host, establish a baseline of parent processes that execute files downloaded from the internet (identified via Zeek files.log and Sysmon Event ID 15). Calculate the frequency of each parent-child process relationship (e.g., `explorer.exe` -> `setup.exe`). Alert when a low-frequency parent process (e.g., `wscript.exe`, `mshta.exe`) executes a downloaded file, as this deviates from normal user-driven execution patterns.",
              "Train a gradient boosting classifier to predict if a downloaded file execution is suspicious. Use features such as: file type, download source reputation, time between download and execution, parent process name, and whether any ADS-manipulation commands were run in the same user session within a 5-minute window. An execution predicted as suspicious with high confidence triggers an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]