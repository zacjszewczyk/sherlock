[
  {
    "information_requirement": "Has the adversary impacted the integrity of internal or external web assets through defacement?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1491",
        "name": "Defacement",
        "evidence": [
          {
            "description": "Network traffic to or from a web server matches a known-bad indicator of compromise (IOC) associated with defacement campaigns, such as a malicious IP address, domain, or URL string.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, Content Delivery Network (CDN) edge nodes, Web Application Firewalls (WAF), Network egress points, DNS resolvers",
            "action": [
              "Correlate network connection logs (Zeek conn.log), HTTP request logs (Zeek http.log), and DNS query logs (Zeek dns.log) against a threat intelligence feed of known malicious IP addresses, domains, and URLs associated with defacement groups. Alert on any match observed communicating with a web server.",
              "Aggregate connection logs (Zeek conn.log) to web servers by source IP. Join source IPs with a reputation feed that provides a numeric threat score. Alert if the average threat score for a given source IP over a 5-minute window exceeds a statistically determined threshold (e.g., 95th percentile of scores seen across all IPs).",
              "Apply a pre-trained Natural Language Processing (NLP) text classification model to the content of HTTP response bodies captured in Zeek http.log. Alert if the model classifies the content as 'defacement' or 'hacktivist messaging' with a confidence score exceeding a predefined threshold (e.g., > 0.90)."
            ]
          },
          {
            "description": "A web server process (e.g., w3wp.exe, httpd, nginx) spawns a suspicious child process, such as a command shell (cmd.exe, powershell.exe, /bin/sh) or a file transfer utility (certutil.exe, wget, curl), which may be used to modify web content.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web servers (application layer), Web server host operating systems",
            "action": [
              "Create a rule that triggers when a process creation event (Windows Event ID 4688) shows a known web server process (e.g., 'w3wp.exe') as the parent process and a command shell or scripting engine (e.g., 'cmd.exe', 'powershell.exe') as the child process.",
              "Profile all parent-child process relationships on web servers from process creation logs (Windows Event ID 4688). Calculate the baseline frequency of each unique relationship. Alert when a rare relationship occurs, such as a parent-child pair that falls below the 1st percentile of historical frequency.",
              "Train a random forest classifier on process execution features (parent process name, child process name, command line argument entropy, user context) to classify each process creation event on web servers as 'benign-deployment' or 'suspicious'. Investigate events classified as 'suspicious' with high confidence."
            ]
          },
          {
            "description": "A designated critical web file (e.g., index.html, web.config) is modified by a user account not on an authorized list of deployment accounts, or the modification occurs outside of a pre-defined maintenance window.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web server file systems (content directories), Version control systems, Change management databases",
            "action": [
              "Maintain an allow-list of service accounts and process names authorized to modify web content directories. Alert on any file modification event (Windows Event ID 4663) in these directories where the 'SubjectUserName' or 'ProcessName' is not on the allow-list.",
              "For each web server, create a time-of-day and day-of-week baseline for file modification activity (Windows Event ID 4663) in content directories. Calculate the hourly event count and alert if the count in any given hour exceeds 3 standard deviations from the mean for that specific hour and day-of-week.",
              "Apply a clustering algorithm (e.g., DBSCAN) to file modification events (Windows Event ID 4663) using features such as the user account, process name, time of day, and number of files modified in a session. Investigate clusters that are identified as anomalies, separate from large, dense clusters representing normal deployment activity."
            ]
          },
          {
            "description": "The measured content features of a served web page (e.g., text-to-HTML ratio, JavaScript block entropy, count of external image tags) deviate significantly from its historical baseline immediately following a file modification event on the server.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (monitoring HTTP responses), Web server file systems (for at-rest analysis)",
            "action": [
              "For critical web pages, maintain a known-good SHA-256 hash of the page content. Monitor for file modification events (Windows Event ID 4663) on the corresponding server file, and upon detection, re-calculate the hash of the page as served in the next HTTP response (from Zeek http.log). Alert if the new hash does not match the known-good hash.",
              "For each key web page, baseline the Shannon entropy of its text content. Continuously monitor HTTP responses (Zeek http.log) and recalculate the entropy from the response body. Alert if the entropy score changes by more than 2 standard deviations from the established baseline, indicating a significant change in content structure.",
              "Train a time-series anomaly detection model (e.g., an LSTM autoencoder) on feature vectors extracted from historical HTTP responses for a given URI. Features should include response size, count of script tags, count of image tags, and link-to-text ratio. Monitor live traffic and alert when the model's reconstruction error for a new response exceeds a dynamically learned threshold."
            ]
          },
          {
            "description": "A file is written to a web server's content directory via a network protocol (e.g., FTP, SMB) from a source IP outside of the designated administrative network range, or the file's mime-type is inconsistent with expected web content.",
            "data_sources": [
              "Zeek ftp.log",
              "Zeek smb_files.log",
              "Zeek conn.log",
              "Windows Event ID 4663",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web server network interfaces, Internal network segments with access to web servers, File Transfer Protocol (FTP) servers, Server Message Block (SMB) shares",
            "action": [
              "Create a rule to alert on any file write operation detected in Zeek ftp.log or smb_files.log where the destination IP is a web server, the destination path is a web content directory, and the source IP ('id.orig_h') is not within the defined internal management or developer subnets.",
              "Profile the distribution of file mime-types transferred to web directories using the 'mime_type' field in Zeek files.log. Calculate the historical frequency of each mime-type. Alert if a file transfer involves a mime-type that is statistically rare (e.g., in the bottom 5th percentile of frequency), such as 'application/zip' or 'application/x-dosexec'.",
              "Apply an isolation forest algorithm to detect anomalies in file transfer events. Create a feature set for each transfer including source IP, destination port, protocol, file size, and file mime-type from Zeek logs (conn.log, files.log). The model will isolate and score outlier transfers that deviate from normal patterns, which should then be investigated."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]