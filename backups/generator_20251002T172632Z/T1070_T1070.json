[
  {
    "information_requirement": "Is the adversary attempting to remove indicators of compromise to evade detection?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1070",
        "name": "Indicator Removal",
        "evidence": [
          {
            "description": "A process creation event is observed where the executable's hash matches a known indicator removal tool, or a built-in utility is executed with a command-line signature associated with artifact wiping.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories, software deployment servers.",
            "action": [
              "Create a detection rule that triggers on process creation (Sysmon Event ID 1) where the process hash matches a known indicator removal tool (e.g., SDelete, BCWipe) or the command line (Windows Event ID 4688) contains highly specific malicious patterns (e.g., `wevtutil cl Security`, `sdelete -accepteula`).",
              "For all command-line executions (Sysmon Event ID 1), calculate the Shannon entropy of the command-line arguments. Establish a baseline entropy score for common administrative commands per user and host. Flag commands with an entropy score in the top 99th percentile, which can indicate obfuscation often used to hide artifact removal commands.",
              "Train a supervised classification model (e.g., Random Forest, Gradient Boosting) on labeled command-line data (Sysmon Event ID 1) to predict maliciousness. Features should include command length, argument count, presence of special characters, parent process name, n-gram analysis of the command string, and the calculated entropy score."
            ]
          },
          {
            "description": "Generation of a specific Windows Event ID indicating a system, security, or application log has been cleared.",
            "data_sources": [
              "Windows Event ID 1102",
              "Windows Event ID 104",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, member servers, critical workstations, endpoint devices of privileged users, Security Information and Event Management (SIEM) platform.",
            "action": [
              "Create a high-priority alert that triggers immediately upon the generation of Windows Event ID 1102 ('The audit log was cleared') or Windows Event ID 104 ('The log file was cleared'). Correlate this with process execution of `wevtutil.exe` or PowerShell `Clear-EventLog` by the same user on the same host.",
              "Analyze the frequency of Event ID 1102/104 per user and host over a 90-day rolling window. While the baseline frequency should be near zero for most accounts, establish a statistical threshold (e.g., more than one occurrence for a non-security-administrator account) to identify anomalous clearing activity and generate a medium-priority alert.",
              "Use a time-series anomaly detection model (e.g., ARIMA, Prophet) on the volume of logs ingested into the SIEM from each critical host (NAI). An alert should be generated for any sudden, unexplained drop in log volume that is statistically significant and cannot be attributed to a maintenance window. Correlate this drop with any preceding execution of `wevtutil` or `powershell`."
            ]
          },
          {
            "description": "Execution of built-in Windows utilities (vssadmin.exe, wbadmin.exe, fsutil.exe) with command-line parameters that explicitly delete Volume Shadow Copies, system state backups, or the USN Journal.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, database servers, backup servers, endpoints of privileged users, Windows systems configured for local backups.",
            "action": [
              "Create a high-priority detection rule that triggers on process creation (Sysmon Event ID 1) for `vssadmin.exe` with command-line arguments containing 'delete shadows', `wbadmin.exe` with 'delete catalog', or `fsutil.exe` with 'usn deletejournal'. Alert on any match.",
              "Establish a baseline for the execution frequency of `vssadmin.exe`, `wbadmin.exe`, and `fsutil.exe` per host and user role. Alert when the execution count for a user or host exceeds the 99.9th percentile of its historical baseline within a 24-hour window.",
              "Develop a sequence analysis model using a Hidden Markov Model (HMM) or state machine to identify a chain of suspicious commands. Train the model to detect a low-probability sequence where discovery commands (e.g., `vssadmin list shadows`, `wbadmin get versions`) are followed shortly by corresponding deletion commands (e.g., `vssadmin delete shadows /all`, `wbadmin delete systemstatebackup`)."
            ]
          },
          {
            "description": "An anomalously high volume of file deletion events or file overwriting events associated with a single user, host, or process within a short time frame, deviating from established behavioral baselines.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 23",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical file shares, user profile directories, application installation directories, staging directories (e.g., C:\\Users\\Public, C:\\Temp), system directories (e.g., System32).",
            "action": [
              "Monitor process creation events (Sysmon Event ID 1) for the execution of commands known for mass deletion or wiping, such as `del /F /S /Q`, `cipher /w:`, or PowerShell's `Remove-Item -Recurse -Force` targeting sensitive directories (e.g., System32, user profiles).",
              "For each user and host, establish a baseline of file deletion counts (Sysmon Event ID 23) per hour. Use descriptive statistics to alert when the number of deletions in an hour exceeds the 99th percentile or is more than 3 standard deviations above the mean for that entity.",
              "Implement a multivariate time-series anomaly detection model on file operation counts per host. Use features such as file deletions (Sysmon Event ID 23), file creations (Sysmon Event ID 11), and process creations (Sysmon Event ID 1). A sudden, sharp spike in deletions that deviates significantly from the historical pattern and is not correlated with a known software uninstallation indicates potential indicator removal."
            ]
          },
          {
            "description": "A system audit policy is changed, identified by either a specific event log (Windows Event ID 4719) or the command-line execution of `auditpol.exe` to reduce or disable logging.",
            "data_sources": [
              "Windows Event ID 4719",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure.",
            "action": [
              "Create a high-priority alert for any instance of Windows Event ID 4719 ('System audit policy was changed'). Additionally, alert on process creation (Sysmon Event ID 1) of `auditpol.exe` with command-line arguments that disable or reduce logging (e.g., `/set /success:disable`, `/clear`).",
              "Periodically (e.g., daily) query endpoints for their current audit policy configuration using `auditpol /get /category:*`. Compare the output hash against a 'golden image' baseline for that host type. Use statistical analysis to identify any host with a deviating configuration and alert for investigation.",
              "Train a classification model (e.g., Logistic Regression) to distinguish between legitimate and malicious audit policy changes. Features should include the user account making the change (e.g., administrator vs. service account), time of day, parent process of `auditpol.exe`, and correlation with other suspicious activity within a 5-minute window."
            ]
          },
          {
            "description": "A file's timestamps (Modified, Accessed, Created) are altered to match other files in the same directory or a specific system file, identified by direct observation of a timestamp-changing event or statistical analysis of file metadata.",
            "data_sources": [
              "Sysmon Event ID 2",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System directories (e.g., C:\\Windows\\System32), temporary directories, user profile directories where malware may be staged.",
            "action": [
              "Create a high-priority alert for any instance of Sysmon Event ID 2 ('A process changed a file creation time'), as this is a rare and highly suspicious event. Correlate with process creation (Sysmon Event ID 1) of known timestomping utilities or PowerShell commands containing `.CreationTime=`, `.LastAccessTime=`, or `.LastWriteTime=`.",
              "On a periodic basis, scan critical directories (NAIs) and collect file metadata. For each file, calculate the delta between its Creation timestamp and the Modified timestamp of its parent directory. Files with a creation time significantly predating the directory's creation are statistically anomalous and potential candidates for timestomping. Alert on files exceeding a high percentile (99.9th) for this delta.",
              "Use an unsupervised clustering algorithm (e.g., DBSCAN) on the timestamps of all files within a specific directory (e.g., System32). Use the Modified, Accessed, and Creation timestamps as a 3-dimensional feature set. Files that do not belong to the main cluster (i.e., are identified as noise/outliers by the algorithm) are strong candidates for having been timestomped and should be flagged for review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]