[
  {
    "information_requirement": "Is the adversary evading defenses by breaking process tree ancestry?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.009",
        "name": "Break Process Trees",
        "evidence": [
          {
            "description": "A new process is created (Windows Event ID 4688) whose image hash (SHA256) or filename matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, including Domain Controllers and critical application servers.",
            "action": [
              "Symbolic: Query process creation events (Windows Event ID 4688) and compare the NewProcessName and calculated image hash against threat intelligence feeds for known malicious files. Alert on any match.",
              "Statistical: For each process creation, calculate the global prevalence of its image hash across all hosts over a 30-day baseline. If the hash has been seen on fewer than 5 hosts or less than 0.01% of the environment, flag the process as rare and increase its risk score.",
              "Machine Learning: Enrich rare process events by extracting Portable Executable (PE) header features such as sections, imports, and entropy. Input these features into a pre-trained gradient boosting or random forest classifier to generate a maliciousness score. Escalate events where a rare process receives a score greater than 0.90 for further investigation."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) for a legitimate system utility (e.g., rundll32.exe, powershell.exe) includes command-line arguments indicative of in-memory execution or obfuscation.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and servers where administrative or development tools like PowerShell are commonly used.",
            "action": [
              "Symbolic: For process creation events involving monitored utilities (e.g., powershell.exe, mshta.exe, rundll32.exe), apply a library of regular expressions to the CommandLine field to detect suspicious patterns like -enc, IEX, DownloadString, or reflection-based loading. Alert on matches.",
              "Statistical: For each command line associated with a monitored utility, calculate its Shannon entropy. Establish a per-utility baseline for command-line entropy. Flag any command line with an entropy score exceeding the 98th percentile for its specific utility as anomalous for review.",
              "Machine Learning: Vectorize command-line arguments using a method like TF-IDF or a pre-trained language model. Input the vector into a trained classifier, such as Logistic Regression or a Support Vector Machine, to score its maliciousness. Correlate high scores (>0.85) with high entropy scores to generate high-confidence alerts."
            ]
          },
          {
            "description": "A new process is created (Windows Event ID 4688) with a parent process that is unexpected, non-existent, or has terminated immediately prior to creation, indicating potential PPID spoofing or orphaning.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, particularly those running critical services like Domain Controllers.",
            "action": [
              "Symbolic: For each process creation event (4688), query the ParentProcessName. Alert if the parent is a process that should not be spawning children (e.g., lsass.exe, smss.exe, services.exe). Additionally, correlate the ParentProcessId with recent termination events (4689) to check if the parent terminated before the child was created.",
              "Statistical: Build a statistical model of normal parent-child process relationships. For each parent process (e.g., winword.exe), maintain a frequency distribution of its common child processes. Flag any new parent-child pairing that is historically unprecedented or falls below the 1st percentile of frequency as anomalous.",
              "Machine Learning: Represent process creation events as nodes in a graph, with features including parent process name, child process name, user context, and command-line length. Apply a density-based clustering algorithm (e.g., DBSCAN) to identify common behavioral clusters. Events that are marked as noise or outliers by the algorithm represent highly anomalous process ancestry patterns and should be investigated."
            ]
          },
          {
            "description": "A parent process terminates (Windows Event ID 4689) within a very short time window (e.g., less than 2 seconds) after its child process was created (Windows Event ID 4688), orphaning the child.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, with a focus on systems where custom scripts or non-standard software is executed.",
            "action": [
              "Symbolic: Correlate process creation (4688) and termination (4689) events on ProcessId. If a parent process's termination event occurs less than 2 seconds after its child's creation event, and the child process path is in a low-trust directory (e.g., %APPDATA%, C:\\Windows\\Temp), generate a high-severity alert.",
              "Statistical: For all correlated parent-child creation/termination pairs, calculate the time delta. Compute the distribution of these deltas across the enterprise over a 30-day window. Any event pair with a time delta falling below the 1st percentile of this distribution (e.g., < 0.8 seconds) is flagged as a statistically significant 'quick-exit' parent.",
              "Machine Learning: Create a time series for each host tracking the count of 'quick-exit parent' events per hour. Apply a time series anomaly detection algorithm (e.g., SARIMA or ESD) to this series. A statistically significant spike in the count on a host indicates a potential burst of process orphaning activity and should trigger an alert."
            ]
          },
          {
            "description": "A process, previously flagged for anomalous ancestry (orphaned, reparented, or having a rare parent-child relationship), initiates an outbound network connection to an external IP address.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Windows Event ID 4688",
              "Windows Event ID 4689",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (for Zeek data), and all enterprise endpoints and servers (for process and Windows Filtering Platform logs).",
            "action": [
              "Symbolic: Tag or annotate processes identified by the previous actions as having anomalous ancestry. Correlate these processes by PID with network connection events (Windows Event ID 5156 or Zeek conn.log). If the destination IP address is on a known C2 blocklist, generate a critical alert for immediate incident response.",
              "Statistical: For TLS connections (from Zeek ssl.log) originating from an anomalously-parented process, extract the JA3/JA3S hash. Calculate the prevalence of this hash across the enterprise. A hash that is rare (seen in <1% of connections) and not on an allowlist of common services (e.g., Office 365, Google Workspace) should be flagged as suspicious.",
              "Machine Learning: For network connections from anomalously-parented processes, build a feature set including destination port, JA3 rarity score, requested domain entropy (from Zeek dns.log), connection duration, and total bytes transferred. Use a pre-trained Random Forest or XGBoost model to classify the connection's maliciousness. A score above 0.85 should escalate the event for analyst review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]