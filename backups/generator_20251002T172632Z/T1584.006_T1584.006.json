[
  {
    "information_requirement": "Is the adversary leveraging compromised or malicious third-party web services against our network, indicating prior resource development? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1584.006",
        "name": "Web Services",
        "evidence": [
          {
            "description": "A network connection event where the destination IP address, DNS query, HTTP Host header, or SSL/TLS Server Name Indication (SNI) matches a known malicious indicator from a threat intelligence feed of infrastructure associated with abused web services.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points of the network (e.g., firewalls, proxies), DNS resolvers, and web gateways.",
            "action": [
              "Symbolic: Ingest a threat intelligence feed of known malicious domains, IPs, and URLs associated with abused web services. Create a rule to join network logs (Zeek conn.log, http.log, ssl.log, dns.log) on their unique connection ID (uid). Compare the `id.resp_h` (destination IP), `query` (DNS), `host` (HTTP), and `server_name` (SSL/TLS) fields against the feed. Generate a high-priority alert for any match.",
              "Statistical: For all connections to common web service domains (e.g., *.github.com, *.pastebin.com, *.dropbox.com), establish a 30-day baseline of connection counts per source host. Calculate the 95th percentile for connection frequency over a 24-hour rolling window. Trigger an alert for any host whose connection count to these services exceeds this threshold, indicating an unusual level of interaction.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest, Gradient Boosting) on labeled network connection data to known web services. Use features such as connection duration, `orig_bytes`, `resp_bytes`, protocol, destination port, hour of day, and day of week. Deploy the model to score new connections in real-time for their probability of being malicious (e.g., C2 or staging). Investigate connections with a high probability score."
            ]
          },
          {
            "description": "A file is downloaded from a web service where its MIME type mismatches the file extension, its hash matches a known malicious signature, or its content has an entropy level statistically indicative of packing or encryption.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Windows Event ID 4688",
              "Zeek pe.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints receiving file downloads, network egress points where file transfers can be monitored, and sandboxing environments.",
            "action": [
              "Symbolic: For every file observed in Zeek files.log, compare its MD5/SHA256 hash against a threat intelligence feed of known malicious file hashes. For files identified as Portable Executables (PE), inspect the Zeek pe.log for suspicious characteristics like missing compile times or unusual section names. Alert on any match.",
              "Statistical: For all files downloaded via HTTP, calculate the Shannon entropy of the file's contents. Establish a baseline entropy score for common MIME types (e.g., 'application/javascript', 'application/pdf', 'image/jpeg'). Flag any file whose entropy score exceeds 3 standard deviations above the mean for its identified MIME type. Correlate these high-entropy file download events with subsequent process creation events (Windows Event ID 4688) on the same host within a 5-minute window.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., an LSTM autoencoder) to monitor the rate of file downloads from web services on a per-host basis. Train the model on historical data (e.g., last 90 days) to learn normal download patterns and volumes. Trigger an alert when the model detects a significant deviation from the expected download rate, which could indicate automated fetching of malicious tools or exfiltration staging."
            ]
          },
          {
            "description": "A network connection to a cloud storage service where the total data volume (bytes sent or received) for a single session or aggregated over a 24-hour period significantly exceeds the established baseline for the source host or user account.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Windows Security Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, user endpoint devices, and Cloud Access Security Broker (CASB) logs.",
            "action": [
              "Symbolic: Create a rule to monitor Zeek ssl.log for connections where the `server_name` (SNI) matches less common or high-risk file sharing services (e.g., 'mega.nz', 'sendspace.com', 'file.io', 'transfer.sh'). Alert on any connection to these services originating from a server subnet or from a user group with no legitimate business need for such services.",
              "Statistical: For each source host, create a 30-day rolling baseline of data transfer volume (SUM of `orig_bytes` + `resp_bytes` from Zeek conn.log) to known cloud storage domains. Calculate the 99th percentile for daily upload volume. Trigger an alert when a host's daily data upload volume to these services exceeds this established threshold.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on connection metadata for traffic to cloud services. Use features like session duration, total bytes transferred, byte ratio (`orig_bytes` vs `resp_bytes`), and the periodicity of connections. Identify and label clusters representing normal user activity (e.g., small, infrequent syncs) versus anomalous activity (e.g., large, sustained, periodic transfers indicative of C2 heartbeating or bulk data exfiltration). Flag new connections that are classified into an anomalous cluster for analyst review."
            ]
          },
          {
            "description": "A network connection from a host not associated with development or IT administration to a raw content URL of a code repository (e.g., raw.githubusercontent.com, pastebin.com/raw) using a non-standard browser User-Agent.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Non-developer user workstations, production server subnets, and network proxy logs.",
            "action": [
              "Symbolic: Create a rule that alerts on events in Zeek http.log where the `host` is a known raw content domain (e.g., 'raw.githubusercontent.com', 'pastebin.com/raw/'), the `user_agent` string contains 'PowerShell', 'curl', 'wget', or 'python-requests', and the source IP address is not on a pre-defined allowlist of developer or administrator workstations.",
              "Statistical: For each user role (e.g., 'Sales', 'HR', 'Developer'), profile the set of domains typically accessed over a 30-day period. For a given user, calculate the Jaccard similarity index between the set of domains they visit in a 24-hour period and the typical domain set for their role. A low similarity score, combined with a visit to a code repository or paste site by a non-developer, indicates a behavioral anomaly that requires investigation.",
              "Machine Learning: Apply Natural Language Processing (NLP) with topic modeling (e.g., Latent Dirichlet Allocation - LDA) to the content of files downloaded from paste sites and code repositories. Train the model to identify topics associated with malicious activity, such as 'obfuscated PowerShell', 'Base64 encoded payload', 'C2 beaconing logic', or 'credential harvesting script'. Classify new downloads in real-time and flag any content that is strongly associated with a malicious topic."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]