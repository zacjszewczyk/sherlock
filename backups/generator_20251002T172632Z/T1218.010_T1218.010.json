[
  {
    "information_requirement": "Is the adversary evading defenses by proxying execution through the signed Windows binary Regsvr32.exe? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.010",
        "name": "Regsvr32",
        "evidence": [
          {
            "description": "The regsvr32.exe process is executed with command-line arguments that include a URL (e.g., using scrobj.dll and the /i switch), and the target URL, domain, or IP address matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Network Egress Points; DNS Servers",
            "action": [
              "Query Windows Event ID 4688 for process creations where the NewProcessName is 'regsvr32.exe' and the CommandLine contains 'http://' or 'https://'. Extract the domain or IP address from the command line. Cross-reference the extracted indicator against a high-confidence threat intelligence feed. Generate an alert for any match.",
              "For each 'regsvr32.exe' execution with a URL, parse the domain. Query historical Zeek dns.log and http.log data (90-day lookback) to calculate the frequency of all requested domains across the enterprise. Alert if the domain from the regsvr32 command line falls into the bottom 5th percentile of frequency. Additionally, calculate the Shannon entropy of the domain name; alert if the entropy score exceeds a predetermined threshold (e.g., > 3.5), suggesting possible DGA.",
              "Apply a pre-trained classification model (e.g., Random Forest) to score 'regsvr32.exe' execution events. Extract features for each event, including: parent process name, command-line length, presence of a URL, and the historical rarity of the domain (from the statistical method). Alert on any event classified as malicious with a confidence score above a set threshold (e.g., 0.9)."
            ]
          },
          {
            "description": "A regsvr32.exe process is observed with a parent process that is not its typical spawner (e.g., svchost.exe, services.exe). Suspicious parents include Microsoft Office applications (winword.exe, excel.exe), web browsers, or other scripting engines (wscript.exe, mshta.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations; Terminal Servers; Virtual Desktop Infrastructure (VDI) Environments",
            "action": [
              "Create a detection rule that triggers when a Windows Event ID 4688 log shows a CreatorProcessName from the set ['winword.exe', 'excel.exe', 'powerpnt.exe', 'outlook.exe', 'mshta.exe', 'wscript.exe', 'powershell.exe'] spawning a NewProcessName of 'regsvr32.exe'. This rule should be considered high-fidelity.",
              "On a daily basis, query 30 days of Windows Event ID 4688 logs to build a frequency table of all parent-child process relationships. For any new 'regsvr32.exe' execution, look up its parent process in the frequency table. If the parent-child pair has a frequency below a low threshold (e.g., < 0.01% of all of the parent's spawned children), generate an alert for an anomalous process chain.",
              "Apply an anomaly detection model (e.g., Isolation Forest) trained on process lineage data (e.g., sequences of parent -> child). Vectorize the process tree for a given execution event. Flag any execution chain involving 'regsvr32.exe' that the model identifies as an outlier with a high anomaly score, indicating a deviation from normal execution patterns observed across the enterprise."
            ]
          },
          {
            "description": "The regsvr32.exe process is invoked to register or execute a DLL located in a non-standard, user-writable directory (e.g., C:\\Users\\, C:\\ProgramData\\, C:\\Windows\\Temp\\, %APPDATA%) instead of protected system directories like C:\\Windows\\System32.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, focusing on user profile directories and temporary folders",
            "action": [
              "Query Windows Event ID 4688 for 'regsvr32.exe' executions. From the command line, parse the file path of the DLL being loaded. Generate an alert if the path matches patterns for user-writable or temporary directories (e.g., '^C:\\\\Users\\\\', '^C:\\\\ProgramData\\\\', '\\\\AppData\\\\', '^C:\\\\Windows\\\\Temp\\\\'). Maintain and apply an allow-list of known-good application installers or updaters that use these directories legitimately.",
              "Aggregate all DLL file paths loaded by 'regsvr32.exe' over the last 30 days. For each new execution, calculate the entropy of the directory and file name. Alert if the entropy score is in the top 5th percentile of all observed paths. Also, establish a baseline of common DLL parent directories. Alert if 'regsvr32.exe' loads a DLL from a directory seen in less than 1% of historical executions.",
              "Apply a One-Class SVM model trained exclusively on features from known-benign 'regsvr32.exe' executions. Extract features from new events, including: directory path depth, character composition of the path, and parent process name. Any event that falls outside the learned 'normal' boundary defined by the model should be flagged as an anomaly for investigation."
            ]
          },
          {
            "description": "The regsvr32.exe process spawns a child process (e.g., cmd.exe, powershell.exe) or initiates an outbound network connection. Legitimate use of regsvr32.exe does not typically involve these behaviors.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers; Network Egress Gateways",
            "action": [
              "Create a critical-severity alert that triggers when a Windows Event ID 4688 log shows 'regsvr32.exe' as the CreatorProcessName for a NewProcessName in the set ['cmd.exe', 'powershell.exe', 'pwsh.exe', 'wscript.exe', 'cscript.exe', 'rundll32.exe']. This behavior is a strong indicator of compromise.",
              "Query Zeek conn.log and Windows Event ID 5156 to identify all network connections initiated by 'regsvr32.exe'. As this is rare, any such connection is suspicious. Prioritize the alert by calculating the historical rarity of the destination port for any process across the enterprise. A connection from 'regsvr32.exe' to a port in the bottom 10th percentile of usage frequency is highly suspicious.",
              "For any host where a suspicious 'regsvr32.exe' execution is detected, trigger a focused time-series analysis of its network behavior. Using a model (e.g., ARIMA) trained on the host's historical network traffic (bytes out, connection counts), monitor the subsequent 15 minutes of traffic. Generate an alert if the model flags a statistically significant anomaly (e.g., a spike that deviates more than 3 standard deviations from the forecast)."
            ]
          },
          {
            "description": "The regsvr32.exe process is executed with the specific command-line switch combination of '/n' and '/i:', which is used to execute a DLL without registering it, a known 'Squiblydoo' attack pattern.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Create a critical-severity detection rule to trigger on any Windows Event ID 4688 log where the NewProcessName is 'regsvr32.exe' and the CommandLine contains both the '/n' and '/i:' substrings. This is a definitive indicator of malicious activity and requires immediate investigation.",
              "Maintain a dashboard that counts occurrences of '/n' and '/i:' usage over time. The expected value is zero. Any count greater than zero is a critical anomaly. Use this data to track the scope of an incident by identifying all hosts and payloads (the argument to '/i:') involved in the campaign.",
              "When the symbolic rule for '/n /i:' triggers, automatically feed the event features (parent process, DLL path/URL, user context) into a threat intelligence correlation engine or a pre-trained clustering model. The model, trained on labeled threat actor TTPs, can provide potential attribution by finding similarities to known campaigns, helping to inform the incident response strategy."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]