[
  {
    "information_requirement": "Is the adversary using traffic signaling for persistence?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1205",
        "name": "Traffic Signaling",
        "evidence": [
          {
            "description": "A UDP or TCP packet payload contains a specific, non-standard byte sequence or 'magic value' (e.g., 'x31x33x33x37') that is not associated with any legitimate protocol and is known to activate a dormant implant.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at internet gateways, traffic between VLANs (especially server/workstation segments), and on host endpoints themselves.",
            "action": [
              "Deploy a signature-based rule (e.g., in Zeek or Suricata) that inspects packet payloads for known magic values associated with malware that uses traffic signaling. Generate an alert upon a signature match.",
              "For all inbound connections with small payloads (< 64 bytes), calculate the entropy of the payload. For connections where the payload entropy exceeds a high threshold (e.g., 98th percentile for that port), calculate the historical rarity of the source IP. An alert is triggered if a high-entropy packet originates from an IP address seen for the first time or less than 5 times in the last 30 days.",
              "Train a supervised classification model (e.g., Gradient Boosting) on labeled network sessions. Use features such as: payload entropy, packet size, protocol, source/destination port rarity (based on historical data), IP geolocation data (is it from a rare country?), and JA3/JA3S hashes. Use the trained model to score new, inbound connections for their probability of being a malicious signaling attempt."
            ]
          },
          {
            "description": "A process is observed loading a packet capture library (e.g., `wpcap.dll`, `npcap.dll`) where the parent process is not a legitimate network analysis tool (e.g., `wireshark.exe`, `tcpdump.exe`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, application servers, administrator workstations, and developer workstations.",
            "action": [
              "Create a detection rule that alerts when a process (e.g., `svchost.exe`, `powershell.exe`) loads `wpcap.dll` or `npcap.dll` (Sysmon Event ID 7), and the process's user is not a member of the 'Network Administrators' security group.",
              "For each host, create a baseline of (process name, loaded DLL) pairs. Calculate the rarity of each pair across the enterprise. Generate an alert if a rare pair is observed, such as `outlook.exe` loading `wpcap.dll`, indicating a combination in the bottom 1st percentile of observed frequencies.",
              "Train an anomaly detection model (e.g., Isolation Forest) on library loading events (Sysmon Event ID 7). Features should include the process name hash, parent process name hash, the loaded library name hash, and the user account context. The model will identify unusual combinations of processes loading packet capture libraries."
            ]
          },
          {
            "description": "A single source IP address makes a sequence of connection attempts to a predefined series of closed ports on a target host within a short time window, immediately followed by a successful connection from the source IP to a newly opened port on the same target.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5157",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally facing servers (e.g., web servers, VPN concentrators), DMZ bastion hosts, and critical internal servers that should have a very restricted set of open ports.",
            "action": [
              "Implement a stateful rule that tracks connection attempts from a source IP to a destination IP. If the rule observes N failed connections (e.g., TCP RST or `conn_state` 'REJ' in Zeek) to distinct ports followed by one successful connection (`conn_state` 'SF') from the same source to the same destination within a T-second window (e.g., N=3, T=15), generate an alert.",
              "Over a sliding 1-minute window, calculate the Shannon entropy of destination port numbers for inbound connection attempts from each source IP to a single destination host. A high entropy score (e.g., exceeding the 99th percentile of historical values for that host) indicates port scanning. Correlate this high entropy event with a subsequent successful connection from the same source to confirm a potential port knock.",
              "Apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the stream of failed connection events (e.g., Windows Event ID 5157) for each critical host. A sharp, un-forecasted spike in failed connections from a single source IP should be flagged as an anomaly. A subsequent model can then classify if this anomaly followed by a successful connection matches the temporal pattern of a port knock."
            ]
          },
          {
            "description": "A host, identified as being powered off or inactive for an extended period, suddenly starts transmitting network traffic, with the startup event occurring outside of normal business hours or scheduled maintenance windows.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dhcp.log",
              "Windows Event ID 6005",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoint subnets, especially those containing workstations that are regularly powered down overnight, and server subnets where systems are expected to be online 24/7.",
            "action": [
              "Correlate system boot events (Windows Event ID 6005) with network logs. Generate an alert if a boot event occurs outside of a predefined business hours window (e.g., 7 PM - 6 AM) and is not preceded by a WoL packet from a known, authorized management server IP within the last 5 minutes.",
              "For each host, profile its typical 'online' hours based on historical network traffic. Calculate the probability of a host being active at any given hour of the day. An alert should be generated if a host initiates network traffic during a time slot where its historical probability of being active is less than 5%.",
              "For each host, model its active/inactive state over time as a binary time series (1=active, 0=inactive). Train a recurrent neural network (RNN) or LSTM to predict the next state based on historical patterns (time of day, day of week). An unpredicted transition from 'inactive' to 'active' is a high-confidence anomaly, potentially triggered by a malicious WoL."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary using traffic signaling for defense evasion?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1205",
        "name": "Traffic Signaling",
        "evidence": [
          {
            "description": "A UDP packet is observed on the broadcast address with a destination port of 7 or 9, containing a payload with the WoL magic packet structure: 6 bytes of 0xFF followed by 16 repetitions of a target system's MAC address.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring broadcast traffic on all internal VLANs.",
            "action": [
              "Deploy a Zeek script (like `detect-wol.zeek`) to specifically identify WoL packets. Generate an alert for any `WakeOnLan::Found` notice where the source IP is not on an allowlist of authorized network management servers.",
              "For each network segment (VLAN), establish a baseline of UDP broadcast traffic volume on ports 7 and 9. Generate an alert if the volume of this traffic from a single source host exceeds 3 standard deviations above the 30-day moving average for that segment.",
              "Train a supervised classification model (e.g., Logistic Regression) to classify WoL events. Features should include: source IP (is it a known management server?), time of day, day of week, number of WoL packets sent in a 5-minute window, and whether the target MAC address belongs to a device that is expected to be woken up remotely. The model will output a probability score of the event being malicious."
            ]
          },
          {
            "description": "Network traffic from a single source exhibits a high rate of packets with unusual TCP flag combinations (e.g., FIN/SYN, NULL, XMAS) or other protocol anomalies, consistent with scanning or firewall rule discovery tools.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network firewalls, intrusion detection systems, externally facing hosts, and internal network choke points between security zones.",
            "action": [
              "Create a rule that alerts when a single source IP generates more than 10 connections with a Zeek `conn_state` of 'OTH' or a `history` containing 'S2' or 'S3' to a single destination host within 1 minute, which is indicative of a port scan.",
              "For each source IP, calculate the ratio of failed/rejected connections to successful connections across all destinations over a 5-minute window. Alert if this ratio exceeds the 98th percentile for all source IPs, indicating an IP is engaged in scanning or probing rather than legitimate communication.",
              "Apply an unsupervised clustering algorithm like DBSCAN to network connection logs. Use features such as source IP, destination port distribution, TCP flags, and `conn_state`. The algorithm will group normal traffic into large clusters. Outlier points or small, dense clusters often represent scanning activity or other anomalies, which should be investigated."
            ]
          },
          {
            "description": "A host-based firewall log shows a new 'allow' rule being created or a port being opened, immediately preceded by a series of blocked connection attempts from a single source IP to that host.",
            "data_sources": [
              "Windows Event ID 5157",
              "Windows Event ID 5156",
              "Windows Event ID 4950"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host-based firewalls on critical servers (e.g., Domain Controllers, database servers) and administrator workstations.",
            "action": [
              "Create a stateful detection rule that alerts if a Windows Firewall rule change event (Event ID 4950) or a new 'permit' connection (Event ID 5156) is observed within 5 minutes of a series of 'block' events (Event ID 5157) originating from the same source IP that is now being permitted.",
              "Establish a baseline of denied port connections for each critical host. Monitor for a specific port that has a historically high block rate (e.g., in the top 10% of blocked ports) suddenly appearing in the allow logs (Windows Event ID 5156). This change in the statistical distribution is a strong indicator.",
              "Model the time series of 'block' event counts (Event ID 5157) per port for critical hosts using an LSTM-based anomaly detector. A sudden, un-forecasted drop to zero for a port that is normally frequently blocked is a high-confidence anomaly. This anomaly should automatically trigger a query to check for a corresponding rule change or a subsequent successful connection on that port."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary using traffic signaling for command and control?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1205",
        "name": "Traffic Signaling",
        "evidence": [
          {
            "description": "Network traffic exhibiting signaling characteristics (e.g., port knocking sequence) is observed where the source or destination IP address is present on a threat intelligence feed of known command and control servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek intel.log",
              "Windows Event ID 5157"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, and proxy servers where outbound connections are logged.",
            "action": [
              "Integrate CTI feeds of known C2 servers into the Zeek Intelligence Framework. Any connection observed in `conn.log` that is preceded by a signaling pattern (e.g., port knock) and results in a match in `intel.log` for the same IP address should generate a critical alert.",
              "Enrich all outbound connections with CTI data, including IP reputation scores. Calculate a risk score for each connection based on the CTI score, port rarity, and data volume. A connection to an IP with a poor reputation score that was preceded by inbound signaling activity would receive a significantly higher risk score, triggering an alert if it exceeds a percentile-based threshold (e.g., 99.5th percentile).",
              "Train a classification model to predict if a connection is C2-related. Use features like: IP reputation score, ASN reputation, JA3/JA3S hash, and whether the connection was preceded by a known signaling pattern. The model can provide a probability score for each connection being malicious C2."
            ]
          },
          {
            "description": "A specific, multi-stage network sequence is observed that matches the known C2 activation TTP for a malware family, such as a UDP packet with a magic value followed by a TCP connection from the target to the UDP source.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and internal network segments monitoring traffic between endpoints and servers.",
            "action": [
              "Implement a stateful signature that detects a sequence of events: (1) Inbound UDP packet to host A from source B with a specific payload signature. (2) Within 30 seconds, an outbound TCP connection from host A to source B on a non-standard port. Alert on this specific sequence.",
              "For each internal host, track pairs of (inbound UDP from external IP X, outbound TCP to external IP X) that occur within a 60-second window. Calculate the frequency of these paired events for each external IP. If the frequency for a particular external IP exceeds the 99th percentile of all such frequencies, it indicates a statistically unusual trigger-and-callback pattern.",
              "Use a sequence-aware model like a Long Short-Term Memory (LSTM) network to learn normal sequences of network connections for a host, represented as sequences of (protocol, direction, port) tuples. The model can flag a sequence like (UDP-in, TCP-out) to a new external entity as a high-scoring anomaly."
            ]
          },
          {
            "description": "A host with no network activity for a statistically significant period (e.g., > 24 hours) initiates an outbound connection immediately following the receipt of an inbound packet, especially if the inbound packet has signaling characteristics.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint subnets, especially for user workstations and servers that have predictable on/off cycles.",
            "action": [
              "Maintain a state table of active hosts based on recent traffic. If a host is marked 'inactive' for > 24 hours, create a high-priority alert if it sends any outbound traffic within 5 minutes of receiving an unsolicited inbound packet from an external source.",
              "For each host, calculate the average and standard deviation of its 'silent time' (time between last outbound connection and next one). An alert is triggered if a new silent period ends and the duration was more than 4 standard deviations above the mean, suggesting it was 'awakened' rather than operating normally.",
              "Model the bytes_out time series for each host using a model like Prophet. A non-zero value during a period where the forecast (and its uncertainty interval) is zero constitutes an anomaly. This anomaly's score should be significantly increased if it occurs within minutes of an inbound connection, especially one with high payload entropy or other signaling characteristics."
            ]
          },
          {
            "description": "Following a suspected signaling event (e.g., port knock), a new, periodic, low-volume connection is established from the target host to an external destination, exhibiting consistent time intervals and/or data sizes characteristic of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls, proxies) where outbound C2 traffic would be visible.",
            "action": [
              "First, flag any destination IP/port that was successfully connected to immediately after a signaling event. Then, monitor all subsequent connections to that flagged destination. If more than 10 connections occur from the same source with nearly identical time intervals (+/- 10%) and payload sizes (+/- 10 bytes), classify it as beaconing.",
              "For connections to a destination that became active after a signal, compute the standard deviation of the time delta between consecutive connections. A very low standard deviation indicates periodicity. Also, calculate the entropy of the payload sizes for these connections; low entropy suggests repetitive communication. A combination of low time-delta deviation and low payload size entropy is a strong statistical indicator of beaconing.",
              "For a source-destination pair that was established after a signaling event, create a time series of connection start times. Apply a Fast Fourier Transform (FFT) to this time series. A strong, sharp peak in the frequency domain indicates a highly periodic signal, which is a hallmark of C2 beaconing. This can be automated to flag connections with a high power-to-noise ratio at a specific frequency."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]