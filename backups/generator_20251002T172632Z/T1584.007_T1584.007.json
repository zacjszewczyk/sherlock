[
  {
    "information_requirement": "Is an adversary leveraging compromised or purpose-built serverless infrastructure for command and control or data exfiltration against our network? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1584.007",
        "name": "Serverless",
        "evidence": [
          {
            "description": "An internal host generates a DNS query (Zeek dns.log) or an HTTP request (Zeek http.log) for a domain or URL that has a positive match against a curated threat intelligence feed of known malicious serverless infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet egress points (e.g., firewalls, web proxies), Enterprise DNS resolvers, SIEM or log aggregation platform",
            "action": [
              "Symbolic (IOC Match): Join network DNS logs (Zeek dns.log query field) and HTTP logs (Zeek http.log host field) against a threat intelligence feed of known malicious serverless domains and URLs. Alert on any matches.",
              "Statistical (Frequency Analysis): For all domains queried that match known serverless patterns (e.g., *.workers.dev, *.lambda-url.*.on.aws, script.google.com), calculate the frequency of requests per source host over a 24-hour period. Flag hosts whose request count to these domains falls into the 99th percentile of all hosts, indicating unusually high interaction.",
              "Machine Learning (DGA Detection): Train a classifier (e.g., Random Forest, LSTM) on features extracted from domain names (e.g., character entropy, n-gram frequency, vowel-to-consonant ratio). Apply this model to all queried serverless domains to identify and score algorithmically generated C2 domains that are not yet on threat intelligence feeds."
            ]
          },
          {
            "description": "An outbound HTTP request, captured in Zeek http.log, to a known serverless domain pattern (e.g., *.workers.dev, *.lambda-url.*.on.aws) contains a URI path, query parameters, or a User-Agent string that matches a regular expression signature for a known command-and-control framework.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet egress points (e.g., firewalls, web proxies), TLS/SSL inspection points",
            "action": [
              "Symbolic (Signature Match): Apply regular expression rules to Zeek http.log URI and User-Agent fields to detect patterns associated with C2 frameworks like Sliver or Covenant when using serverless redirectors. Concurrently, match the JA3/JA3S hashes from Zeek ssl.log against a known-bad list for specific C2 toolkits.",
              "Statistical (Entropy Analysis): For all HTTP/S traffic to known serverless domains, calculate the Shannon entropy of the URI path and query string. Establish a baseline of entropy scores for legitimate traffic to these services. Flag requests where the entropy score exceeds 3 standard deviations from the mean, suggesting encoded or randomized data typical of C2 communications.",
              "Machine Learning (Request Classification): Train a supervised classification model (e.g., Support Vector Machine or Gradient Boosting) to distinguish malicious from benign HTTP requests to serverless domains. Use features such as URI length, query parameter count, User-Agent string entropy, and presence of specific keywords (e.g., 'stage', 'exec'). Use the trained model to score all new requests in real-time."
            ]
          },
          {
            "description": "A sequence of connection events in Zeek conn.log from a single source host to a single destination serverless domain demonstrates a low standard deviation in inter-arrival times and a low coefficient of variation in payload size over a defined time window (e.g., 24 hours).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet egress points (e.g., firewalls, web proxies), Network tap or SPAN port monitoring Zeek sensors",
            "action": [
              "Symbolic (Threshold Rule): For each source-destination pair involving a serverless domain, create a rule that triggers if the connection count exceeds a simple threshold (e.g., >100 connections in an hour) and the payload size for each connection is within a narrow, non-zero range (e.g., 50-250 bytes).",
              "Statistical (Jitter/Beacon Analysis): For each source host communicating with a serverless destination, group connections by source-destination pair and calculate the standard deviation of the inter-arrival time (jitter) between connections over a 24-hour window. A standard deviation near zero (e.g., < 1 second for a 60-second beacon) indicates robotic, non-human beaconing. Also calculate the coefficient of variation for connection byte counts to identify low payload variance.",
              "Machine Learning (Time-Series Analysis): Apply a Fast Fourier Transform (FFT) to the connection timestamps for each source-destination pair. A strong peak in the frequency domain indicates a periodic signal (beacon). Use clustering algorithms (e.g., DBSCAN) on features like connection frequency, average duration, and data volume variance to group and identify anomalous beaconing clusters without a priori knowledge of beaconing intervals."
            ]
          },
          {
            "description": "A network connection event (Windows Event ID 5156) to a serverless domain is attributed to a process (via Process ID) that, when cross-referenced with process creation logs (Windows Event ID 4688), is identified as an unapproved application, is running from a temporary or user-writable directory (e.g., C:\\Users\\*\\AppData\\Local\\Temp), or has a rare parent-child process lineage.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (e.g., Domain Controllers, database servers), User endpoint devices, SIEM or log aggregation platform",
            "action": [
              "Symbolic (Correlation Rule): Create a correlation rule that joins Windows Event ID 5156 (Filtering Platform Connection) and Windows Event ID 4688 (Process Creation) on Process ID. Trigger an alert if the destination IP in event 5156 is associated with a serverless domain (via Zeek conn.log enrichment) AND the process name in event 4688 is not on an approved browser/updater allowlist OR the process command line in event 4688 matches signatures for suspicious scripts (e.g., 'powershell -enc').",
              "Statistical (Rarity Analysis): For all processes making outbound connections, build a baseline of parent-child process relationships and execution paths. Calculate the frequency of each (parent, child, path) tuple that communicates with serverless domains. Flag rare or previously unseen combinations (e.g., 'winword.exe' spawning 'powershell.exe' from 'C:\\Perflogs' which connects to a *.workers.dev domain) as high-risk anomalies.",
              "Machine Learning (Anomaly Detection): Use an anomaly detection algorithm (e.g., Isolation Forest) on enriched process execution data. Features should include process name entropy, command-line length and entropy, parent process name, and a binary feature indicating if the process connects to a serverless domain. The model will learn normal process behavior and score new events, flagging those that are highly anomalous."
            ]
          },
          {
            "description": "Following an outbound connection to a known serverless domain (from Zeek conn.log), the source host generates a high volume of internal reconnaissance events (e.g., network service scanning), failed authentication attempts to multiple internal hosts (Windows Event ID 4624, Logon Type 3), or anomalous file access patterns on network shares (Windows Event ID 4663) within a 10-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIEM or log aggregation platform, Domain Controllers (for auth logs), File servers (for access logs), User endpoint devices",
            "action": [
              "Symbolic (Sequence Rule): Define a stateful rule that triggers when a host's connection to a serverless domain (identified in Zeek conn.log or http.log) is followed within a 10-minute window by any of the following from the same host: a process creation event (Windows Event ID 4688) for discovery commands (e.g., 'net group \"Domain Admins\" /domain'), or a failed network logon (Windows Event ID 4624, Logon Type 3, Status 0xC000006D) to another internal system.",
              "Statistical (Behavioral Rate Spike): For each host, establish a baseline rate of internal reconnaissance activity (e.g., distinct destination ports scanned per hour in Zeek conn.log) and failed authentications (count of Event ID 4624). After a host connects to a serverless domain, monitor these rates over the next hour. Flag the host if either rate exceeds its 95th percentile or a global threshold, indicating a statistically significant deviation from normal behavior post-C2 contact.",
              "Machine Learning (Attack Grammar): Model adversary behavior as a sequence of events (TTPs). Use a sequence analysis model (e.g., a Hidden Markov Model) where states represent adversary actions (C2 via Serverless, Discovery, Lateral Movement). Train the model on known attack sequences (e.g., from threat reports) and apply it to live streams of host and network events to calculate the probability that an observed sequence matches a malicious chain of events."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]