[
  {
    "information_requirement": "Is the adversary establishing persistence by hijacking the PATH environment variable?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574.007",
        "name": "Path Interception by PATH Environment Variable",
        "evidence": [
          {
            "description": "A file is created in a user-writable directory (e.g., C:\\Users\\*\\AppData\\*, C:\\ProgramData\\*) with a filename that matches a common system utility (e.g., 'net.exe', 'findstr.exe'), and its hash is present in a threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 1",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers, Developer Workstations",
            "action": [
              "Symbolic: Join file creation events (Windows Event ID 11) with threat intelligence feeds on the file hash. Alert when a file is created in a user-writable directory (e.g., C:\\Users\\*, C:\\ProgramData\\*) with a name matching a common system utility (e.g., 'net.exe', 'findstr.exe') and its hash matches a known malicious indicator.",
              "Statistical: Using file creation logs (Windows Event ID 11), build a 30-day baseline for each user of directories where they create executable files (.exe, .dll, .bat). For each new executable creation, calculate the rarity of its parent directory for that user. Flag creations in directories that fall below a 1st percentile frequency threshold for that user, especially if the filename masquerades as a system utility.",
              "Machine Learning: Train an isolation forest model on benign file creation events (Windows Event ID 11), using features like user context, parent directory path, path depth, filename, and parent process name. An event flagged as an outlier, especially when the filename is a system utility and the path is user-writable, indicates a potential malicious plant."
            ]
          },
          {
            "description": "A modification is made to the system-wide or user-specific PATH environment variable in the Windows Registry, prepending a non-standard, user-writable directory (e.g., C:\\ProgramData\\Temp, %APPDATA%\\Local\\Temp).",
            "data_sources": [
              "Windows Event ID 13",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for GPO-based changes), User Workstations, Terminal Servers",
            "action": [
              "Symbolic: Create a detection rule for registry value set events (Windows Event ID 13) where the TargetObject ends with '\\Environment\\Path' and the Details field shows a new path entry being prepended that is a user-writable directory (e.g., regex match for ^C:\\\\Users\\\\ or ^C:\\\\ProgramData\\\\).",
              "Statistical: For each host, periodically snapshot the PATH registry value to establish a baseline. Upon a modification event (Windows Event ID 13), parse the old and new PATH values. Identify the added directory. Calculate the prevalence of this directory across all enterprise baselines. Alert if the added directory's prevalence is below a 1% threshold, indicating it is a non-standard path.",
              "Machine Learning: Train a Random Forest classifier to score the risk of PATH modifications. Features should include: the process that made the change (e.g., 'reg.exe', 'powershell.exe'), the user context, characteristics of the added directory (is it user-writable, recently created, depth), and time of day. A high-risk score from the model output triggers an alert."
            ]
          },
          {
            "description": "A legitimate process, such as 'svchost.exe' or an application from 'Program Files', executes a child process (e.g., 'net.exe') whose full path resolves to a non-standard, user-writable directory instead of its expected location (e.g., C:\\Windows\\System32).",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, especially those with auto-starting applications",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 1), create an alert where the Image (child process path) is in a user-writable directory (e.g., C:\\Users\\*, C:\\ProgramData\\*, C:\\Temp\\*), the filename part of Image matches a common system utility (e.g., 'net.exe', 'cmd.exe'), and the ParentImage is a legitimate system process (e.g., C:\\Windows\\System32\\svchost.exe).",
              "Statistical: Aggregate all process creation events (Windows Event ID 1) over 30 days. For each unique ParentImage, create a list of its historical child Image paths. For each new process creation, check if the child Image path is in the established baseline for its parent. If not, calculate the Jaccard similarity between the new child path's directory and the set of historical directories. A score near 0 indicates a highly anomalous execution path.",
              "Machine Learning: Train an autoencoder on vectors representing benign process creation events. Each vector should contain features like parent image path, parent command line, child image path, child command line, and user context. Events with a high reconstruction error, particularly where the child image path is in a user-writable directory, should be flagged as anomalous."
            ]
          },
          {
            "description": "A newly created scheduled task or autorun entry specifies a command that calls a binary by name only (e.g., 'python.exe script.py'), which, due to a manipulated PATH, resolves to a malicious executable in a non-standard location.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 13",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Servers, Domain Controllers (for scheduled tasks deployed via GPO)",
            "action": [
              "Symbolic: Monitor for new scheduled tasks (Windows Event ID 4698) or Run key entries (Windows Event ID 13) where the action/command calls a binary without a full path (e.g., 'net.exe' instead of 'C:\\Windows\\System32\\net.exe'). Correlate this with a subsequent process execution (Windows Event ID 1) originating from that task/autorun where the resolved image path is a user-writable directory.",
              "Statistical: Profile all commands in scheduled tasks and autorun entries across the environment. Calculate the ratio of relative paths to absolute paths for commands. Flag new persistence entries on hosts where the use of a relative path is a statistical outlier compared to the host's baseline or the global enterprise baseline.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., SARIMA) to monitor the daily count of new persistence entries (scheduled tasks, run keys) that use relative paths on each host. A sudden spike in the creation of such tasks, detected as an anomaly in the time-series, could indicate a coordinated persistence attempt."
            ]
          },
          {
            "description": "A process executing from an anomalous path (e.g., C:\\ProgramData\\Temp\\net.exe) initiates outbound network connections to an IP address with a poor reputation or exhibits a periodic, 'heartbeat' connection pattern.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies), DNS Servers, All Endpoints and Servers",
            "action": [
              "Symbolic: Join process creation events (Windows Event ID 1) with network connection logs (Windows Event ID 3 or Zeek conn.log). Alert if a process image path is in a user-writable directory AND it makes an outbound connection to a destination IP on a C2 threat intelligence feed or to a domain with a DGA-like name.",
              "Statistical: For processes executing from user-writable paths, analyze their network connections (Windows Event ID 3, Zeek conn.log). Calculate the standard deviation and periodicity of time intervals between connections to the same destination IP/port. A low standard deviation suggests automated C2 beaconing. Additionally, analyze requested domains in Zeek dns.log for high character entropy, indicating potential DGA activity.",
              "Machine Learning: Apply a time-series anomaly detection algorithm (e.g., LSTM) to the bytes_out/bytes_in fields of Zeek conn.log for connections associated with processes identified as potentially hijacked. This can detect C2 patterns like periodic small beacons or large data exfiltration events that deviate from the established network baseline for that host."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges by hijacking the PATH environment variable?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574.007",
        "name": "Path Interception by PATH Environment Variable",
        "evidence": [
          {
            "description": "A core system process running as SYSTEM (e.g., services.exe, svchost.exe) spawns a child process whose executable path is located within a user's profile directory (e.g., C:\\Users\\user\\AppData\\Local\\Temp\\net.exe).",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Workstations, Application Servers with misconfigured services",
            "action": [
              "Symbolic: Create an alert that triggers if a process creation event (Windows Event ID 1) has a ParentImage of 'services.exe', 'svchost.exe', or 'taskhostw.exe' (or any process with IntegrityLevel of 'System') and the child Image path matches the regex ^C:\\\\Users\\\\.* or other user-writable locations like C:\\ProgramData.",
              "Statistical: For each privileged parent process (e.g., svchost.exe), build a profile of its legitimate child process directories from historical data (Windows Event ID 1). Use frequency analysis to identify the top 99.9% of legitimate directories. Alert when a child process executes from a directory that is not in this baseline, especially if it's a known user-writable location.",
              "Machine Learning: Employ an isolation forest model on process creation events, using features such as parent process name, parent user/integrity level, and child process path. The model is highly effective at identifying rare, outlier events, such as a SYSTEM-level process spawning a child from a user's download folder, which would be flagged with a high anomaly score."
            ]
          },
          {
            "description": "A sequence of events is observed: 1. A low-privilege user process creates an executable in a user-writable directory. 2. A high-privilege process (e.g., a service running as SYSTEM) subsequently executes a process of the same name, which resolves to the path created in step 1.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers with misconfigured services, User Workstations, Staging Servers",
            "action": [
              "Symbolic: Define a time-bound sequence-based rule: (Event A) File creation (Windows Event ID 11) by a low-privilege user in a user-writable path 'P'. (Event B) Within 5 minutes, a process creation (Windows Event ID 1) where the User is 'NT AUTHORITY\\SYSTEM' and the Image is 'P'. Trigger an alert.",
              "Statistical: Analyze process creation logs (Windows Event ID 1). Calculate the probability of a given user context transition between a parent and child (e.g., 'UserA' -> 'SYSTEM'). Flag transitions that are statistically improbable based on historical data across the enterprise, especially when the child process path is user-writable.",
              "Machine Learning: Use a graph-based anomaly detection model on the process-event graph. A path in the graph representing 'Low-Privilege Process -> Creates -> Malicious File -> Executed By -> High-Privilege Process' would be identified as an anomalous subgraph, indicating a likely privilege escalation chain."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by hijacking the PATH environment variable?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574.007",
        "name": "Path Interception by PATH Environment Variable",
        "evidence": [
          {
            "description": "A process is executed with a filename matching a known security tool (e.g., 'Sysmon.exe', 'procexp.exe') or a legitimate system utility, but its execution path is a non-standard, user-writable directory, and its signature is invalid or its hash is unknown.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SOC Analyst Workstations, IT Administrator Machines, All Endpoints with EDR agents",
            "action": [
              "Symbolic: Maintain a watchlist of security tool process names (e.g., 'procexp.exe', 'Sysmon.exe', 'MSMpEng.exe'). Trigger an alert from process creation logs (Windows Event ID 1) if a process name is on this list BUT its Image path is not in the corresponding allowlisted directory (e.g., 'C:\\Program Files\\...') OR its SignatureStatus is 'Invalid'.",
              "Statistical: For each process name on the security watchlist, baseline its legitimate file hash(es) and signing certificate subject name across the enterprise. Calculate the frequency of different hashes or signers seen for each name. Alert if a process is launched with a hash or signer that is statistically rare (e.g., seen only once or on <0.1% of systems) for that process name.",
              "Machine Learning: Train a decision tree classifier to identify masquerading tools. Features would include: process name, path depth, path entropy, presence of 'Program Files' or 'System32' in path, and signature status. The model can learn to distinguish legitimate executions from masquerading attempts and provide a risk score."
            ]
          },
          {
            "description": "A file is created in a directory known to be prepended to the system PATH (e.g., C:\\Python27\\, C:\\ProgramData\\Oracle\\), where the filename matches a whitelisted application or common utility (e.g., 'powershell.exe'), but its hash does not match the legitimate version.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Systems with legacy applications, Developer workstations, Servers with custom application installs",
            "action": [
              "Symbolic: Create a rule that alerts on file creation (Windows Event ID 11) in any directory listed in the system PATH variable (excluding C:\\Windows and C:\\Windows\\System32) if the new filename matches a critical system utility (e.g., 'net.exe', 'cmd.exe', 'powershell.exe').",
              "Statistical: For each directory listed in the system PATH, profile the set of executable files that are commonly created or modified using file creation logs (Windows Event ID 11). Use frequency analysis to identify outlier file creations. If a file named 'net.exe' is created in 'C:\\Perl64\\bin', and this has never happened before on any system, it is a high-confidence statistical anomaly.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on file creation events, with features like file path, file name, and parent process. Normal software updates and installations will form dense clusters. Events that do not fall into any cluster are outliers, representing anomalous file creations in unexpected locations that could be used for hijacking."
            ]
          },
          {
            "description": "A process is created where the command line invokes a utility by its name only (e.g., 'net user...'), but the resolved executable path is a user-writable directory (e.g., C:\\Users\\...\\net.exe) instead of the expected system path (e.g., C:\\Windows\\System32\\net.exe).",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: For each process creation event (Windows Event ID 1), if the CommandLine does not contain a full path (e.g., does not contain ':\\') for the executable, compare the Image (full path) to an allowlist of expected paths for that filename. Alert if the Image path is not the default system path for that utility (e.g., if command is 'net.exe' but path is not 'C:\\Windows\\System32\\net.exe').",
              "Statistical: Build a baseline of all (ProcessName, Image) tuples from process creation logs (Windows Event ID 1). For each ProcessName (e.g., 'net.exe'), calculate the probability distribution of its Image paths. Alert when a process executes from a path that has a very low probability (e.g., <0.1%) for its name, especially if the path is user-writable.",
              "Machine Learning: Train an autoencoder on legitimate process creation events, using features like command line, resolved image path, parent process, and user. An event where the command line is inconsistent with the resolved path (e.g., command is 'net' but image path is 'C:\\Temp\\net.exe') will produce a high reconstruction error and be flagged as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]