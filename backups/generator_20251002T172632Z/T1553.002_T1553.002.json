[
  {
    "information_requirement": "Is the adversary leveraging valid or malicious code signing certificates to bypass execution controls and evade defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1553.002",
        "name": "Code Signing",
        "evidence": [
          {
            "description": "A process executes from a binary whose file hash (e.g., SHA256) or certificate thumbprint is present on a high-confidence threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized log aggregator (SIEM/Data Lake) containing endpoint process execution logs and network file transfer logs from all enterprise assets.",
            "action": [
              "Ingest high-confidence threat intelligence feeds for malicious file hashes and compromised/revoked certificate thumbprints. Create a real-time rule to query all process creation events (Windows Event ID 4688, Sysmon Event ID 1) and file creation events (Zeek files.log). Generate a high-priority alert upon any match.",
              "For every observed certificate thumbprint, calculate its prevalence (count of distinct hosts it is seen on) within the enterprise over the last 30 days. Compare this internal prevalence against external threat intelligence data. Flag certificates with low internal prevalence but known malicious association externally as highly suspicious.",
              "Train a supervised classification model (e.g., Logistic Regression, Random Forest) to produce a risk score for each signed execution. Use features including `isOnThreatIntelFeed_Hash`, `isOnThreatIntelFeed_Cert`, `internalCertificatePrevalence`, `internalFileHashPrevalence`, and binary metadata (e.g., entropy). An execution with a high risk score indicates a likely threat."
            ]
          },
          {
            "description": "A binary is executed that is signed by a certificate where the issuer is not on an enterprise-approved allow-list, or the subject name closely mimics a legitimate publisher (e.g., Jaro-Winkler similarity > 0.85).",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 3002",
              "Windows Event ID 3004"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices and servers, particularly assets where software installation is not strictly controlled by centralized management tools like SCCM or Jamf.",
            "action": [
              "Maintain and enforce an explicit allow-list of approved Certificate Authority (CA) 'Issuer' names based on enterprise trust stores and known legitimate software vendors. Query all process execution events (Sysmon Event ID 1) and Code Integrity logs (Event IDs 3002, 3004) to alert on any execution where the certificate's 'Issuer' is not on the allow-list.",
              "Maintain a list of legitimate software 'Subject' names (e.g., 'Microsoft Corporation', 'Google LLC'). For each new signed binary's 'Subject', calculate the Jaro-Winkler string similarity score against all names on the legitimate list. Flag any binary with a score exceeding a tuned threshold (e.g., 0.85) that is not an exact match, as this indicates potential typosquatting or impersonation.",
              "Develop a classification model using Natural Language Processing (NLP) features derived from the 'Issuer' and 'Subject' strings (e.g., character n-grams, term frequency-inverse document frequency (TF-IDF), string entropy). Train the model to distinguish between legitimate and suspicious certificate subjects, enabling the detection of sophisticated mimicry patterns."
            ]
          },
          {
            "description": "A binary is executed that is self-signed (certificate Issuer and Subject fields are identical) and its thumbprint is not on an established internal allow-list, or it is signed by a newly-issued certificate (e.g., created within the last 14 days).",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints and servers, internal development environments, and code signing infrastructure where self-signed applications are created and used.",
            "action": [
              "Maintain an allow-list of certificate thumbprints for all known-good, internally developed, self-signed applications. Monitor process execution logs (Sysmon Event ID 1) and alert whenever a process executes where the certificate 'Issuer' and 'Subject' are identical and the thumbprint is not on the allow-list.",
              "For every signed process execution, calculate the certificate's age by subtracting the 'Valid From' date from the current date. Establish a baseline of typical certificate ages for software in the environment. Alert on any execution where the certificate's age falls in the bottom 1st percentile (e.g., < 14 days old), as adversaries frequently use freshly-minted certificates.",
              "Use an unsupervised anomaly detection model, such as an Isolation Forest, on a feature set including `certificateAgeInDays`, `isSelfSigned` (boolean), `issuerPrevalence`, `subjectStringEntropy`, and `processPath`. This model can identify unusual combinations of these attributes that represent anomalous certificates without requiring pre-labeled training data."
            ]
          },
          {
            "description": "A signed binary executes from a non-standard, user-writable directory (e.g., `C:\\Users\\*\\Downloads`, `%APPDATA%`, `C:\\PerfLogs`, `C:\\Windows\\Tasks`) and is not a known installer or auto-updater.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and multi-user servers, focusing on temporary directories, user profiles, shared folders, and other world-writable locations.",
            "action": [
              "Create and maintain a list of suspicious or forbidden execution directories (e.g., `*\\Temp\\*`, `*\\Downloads`, `C:\\PerfLogs`, `C:\\$Recycle.Bin\\*`). Generate a medium-priority alert for any signed process (Sysmon Event ID 1, Windows Event ID 4688) that initiates from a path matching this list, excluding known-good installers or updaters via an exception list.",
              "For each unique certificate subject (e.g., 'Google LLC'), profile its normal behavior by baselining its top 95% most common execution parent processes and file paths. Alert when a binary signed by that subject executes from a path or is spawned by a parent process not in its established baseline, indicating legitimate software running from an unusual context.",
              "Train a decision tree or random forest classifier to predict whether an execution event is suspicious based on its context. Use features such as `filePath`, `parentProcessName`, `directoryIsUserWritable`, `directoryIsTemporary`, `certificateSubject`, and `processName`. This model can learn complex rules about which paths are acceptable for specific signers and processes."
            ]
          },
          {
            "description": "A signed process performs suspicious follow-on actions within a short time window (e.g., 60 seconds), such as spawning an unsigned child process, modifying an auto-start registry key, or making a network connection to a high-entropy or newly-registered domain.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13",
              "Sysmon Event ID 22",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints, DNS servers, and network egress points (firewalls/proxies) where process, registry, and network activity can be correlated.",
            "action": [
              "Create a correlation rule that triggers when a signed process (Sysmon EID 1) is followed within 60 seconds by: an unsigned child process (Sysmon EID 1), a registry modification to a known persistence key (Sysmon EID 13), file creation in a suspicious directory (Sysmon EID 11), or a network connection (Sysmon EID 3) to an IP on a threat feed.",
              "For DNS queries (Sysmon EID 22, Zeek dns.log) originating from a signed process, calculate the Shannon entropy of the queried domain name. Alert if the entropy is in the top 99th percentile for the environment or if the domain is newly registered (e.g., < 30 days old). Additionally, alert if a signed parent process spawns a statistically significant number of unsigned child processes compared to its baseline.",
              "Model process activity as a graph, where nodes are processes and files, and edges represent actions (e.g., 'created', 'connected to'). Apply a trained Graph Neural Network (GNN) to score subgraphs of activity originating from a signed process. The GNN can learn complex, multi-step attack patterns, such as a signed dropper launching an unsigned payload which then connects to a suspicious domain, and assign a risk score to the entire sequence."
            ]
          },
          {
            "description": "A signed binary, not on an enterprise software allow-list, exhibits signs of coordinated or widespread execution, such as executing on a statistically unusual number of hosts in a short time frame, or executing across multiple hosts with near-perfect time synchronization.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized logging platform (e.g., SIEM, data lake) containing aggregated process execution logs from all enterprise endpoints and servers.",
            "action": [
              "For any given signed file hash not on an allow-list of common enterprise software, trigger an alert if it is observed executing on more than a fixed number of hosts (e.g., 20) within a 5-minute window. This threshold must be tuned to avoid false positives from legitimate, un-catalogued software deployments.",
              "For each file hash seen executing on 3 or more hosts within a one-hour window, calculate the standard deviation of the execution timestamps. A standard deviation below a low threshold (e.g., < 5 seconds) indicates highly synchronized execution, typical of automated command-and-control. Alert on hashes in the bottom 1st percentile of timestamp standard deviation.",
              "Use a time-series clustering algorithm (e.g., DBSCAN) on the execution timestamps for a given binary hash. This can identify distinct clusters of coordinated execution activity, which is more robust than a single standard deviation calculation and can differentiate between multiple, independent campaigns using the same tool."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]