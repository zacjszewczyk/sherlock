[
  {
    "information_requirement": "Has an adversary stolen an application access token to gain unauthorized access to cloud, SaaS, or containerized resources? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1528",
        "name": "Steal Application Access Token",
        "evidence": [
          {
            "description": "An HTTP request containing an 'Authorization: Bearer' header originates from a source IP address that is either on a threat intelligence list, associated with an anonymizing service (e.g., TOR, VPN), or represents impossible travel for the associated user or application.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Cloud Provider Flow Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, API Gateways, Cloud Access Security Brokers (CASB), Web Application Firewalls (WAF), Cloud Provider Control Planes",
            "action": [
              "For all inbound HTTP requests containing an 'Authorization: Bearer' header identified in Zeek http.log, join the source IP from Zeek conn.log and compare it against a threat intelligence feed of known malicious IPs, TOR exit nodes, and anonymous proxies. Generate an alert upon a match.",
              "For each unique Bearer token hash, create a baseline of source IP geolocations and ASNs observed over a 30-day period. Calculate the frequency distribution for these attributes. Trigger an alert if a new request's geolocation or ASN falls into the bottom 5th percentile of historical frequencies for that token.",
              "Train a supervised classification model (e.g., Random Forest, Gradient Boosting) on labeled historical API requests. Use features including: source IP geolocation (country, city), ASN, IP reputation score, time of day, day of week, User-Agent string rarity, and request URI. The model will classify each new request with an 'Authorization: Bearer' header as 'benign' or 'malicious'. High-confidence malicious classifications trigger an alert."
            ]
          },
          {
            "description": "A process on a host executes command-line tools (e.g., curl, Invoke-RestMethod) to query a cloud instance metadata service (e.g., 169.254.169.254) or a process accesses local files/directories known to store application tokens (e.g., ~/.aws/credentials, ~/.kube/config).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IaaS virtual machines (e.g., Azure VMs, EC2 instances), container hosts, CI/CD pipeline runners, developer workstations",
            "action": [
              "Monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) for command lines containing the IP address '169.254.169.254' or file paths like '.aws/credentials' or '.kube/config'. Also, monitor network connection logs (Zeek conn.log) for any connection to 169.254.169.254 from a process not on an established allowlist of cloud management agents. Alert on any match.",
              "For each host, profile the set of processes that normally access the metadata service IP (169.254.169.254). Calculate the historical frequency of access for each process. Alert if a process not in the top 95% of frequent accessors (e.g., a script, a non-standard binary) initiates a connection to the metadata service.",
              "Utilize a sequence analysis model (e.g., Hidden Markov Model or Recurrent Neural Network) to identify a malicious event chain. Train the model to detect the sequence: 1) Process A (e.g., PowerShell) connects to the instance metadata service (Zeek conn.log); 2) Process A then creates a child process B (e.g., 7zip) that creates an archive file (Sysmon Event ID 11); 3) Process A or B makes an outbound connection to a high-entropy or newly registered domain (Zeek dns.log, conn.log). An alert is triggered when this sequence is detected with a high probability score."
            ]
          },
          {
            "description": "A high volume of OAuth consent grants for a new or unusual application occurs within a short time frame, originating from a single or multiple users, indicating a consent phishing campaign.",
            "data_sources": [
              "AzureAD AuditLogs",
              "Microsoft 365 Unified Audit Log",
              "Okta System Log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity and Access Management (IAM) systems (e.g., Azure AD, Okta), SaaS application administration portals, network egress points",
            "action": [
              "Maintain a watchlist of OAuth applications requesting high-risk delegated or application permissions (e.g., Mail.ReadWrite, Directory.ReadWrite.All, full_access_as_user). Generate an alert whenever a user grants consent to a new application that is requesting permissions from this watchlist.",
              "For any new OAuth application, calculate two metrics within its first 24 hours: 1) The count of user consents per hour. Alert if this count exceeds the 99th percentile of consent rates for all other new applications. 2) The Shannon entropy of the publisher domain name; a low entropy score indicates a potentially auto-generated, non-human-readable name, which should be flagged for review.",
              "Use a time-series anomaly detection model (e.g., SARIMA) to forecast the expected number of total OAuth consent grants per hour across the organization. Generate an alert when the observed number of grants significantly exceeds the forecasted value by a predefined margin, indicating a potential widespread consent phishing attack."
            ]
          },
          {
            "description": "An application access token, previously associated with a specific service or automated workflow, is now used interactively from a new source IP or with a new User-Agent, followed by anomalous actions such as enumeration or data access.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "AWS CloudTrail",
              "Azure Monitor Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "API Gateways, Cloud Service Provider (CSP) control planes, SaaS application backends, web application firewalls (WAF)",
            "action": [
              "For each token, cache the timestamp and geolocation of its last use. Upon a new request, calculate the time elapsed and distance from the last location. If the required travel speed exceeds a threshold (e.g., 600 mph), generate an 'impossible travel' alert.",
              "For each application token, establish a baseline profile of its usage over 30 days, including: set of API calls made, typical source IP subnets, and User-Agent strings. Calculate the Jaccard similarity between the set of API calls in a new session and the historical baseline set. Alert if the similarity score is below a threshold (e.g., 0.5), indicating a significant deviation in behavior.",
              "Use an unsupervised clustering algorithm like DBSCAN on API request features (source IP subnet, User-Agent, API endpoint category, hour of day). Periodically retrain the model to define 'normal' clusters of activity. Requests that are flagged as noise or outliers by the model represent anomalous token usage that requires investigation."
            ]
          },
          {
            "description": "A process, not on a pre-defined allowlist, accesses the cloud instance metadata service (169.254.169.254), and within a short time window, the same process or a child process initiates an outbound network connection to an external IP address over a non-standard port or protocol.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud virtual machines (IaaS), container runtime environments, network traffic logs at the virtual network (VNet/VPC) level",
            "action": [
              "Create a stateful detection rule that triggers when: 1) A process not on an allowlist (e.g., 'powershell.exe', 'curl.exe') connects to 169.254.169.254 (Sysmon Event ID 3), AND 2) The same ProcessGUID then makes an outbound connection to a public IP address (Zeek conn.log) within 60 seconds.",
              "For each host, baseline the destination ports used for outbound connections originating from processes that have recently contacted the metadata service. Calculate the frequency distribution of these destination ports. Generate an alert if such a process makes an outbound connection to a port that falls outside the 95th percentile of common ports (e.g., non-80/443), indicating potential C2 or exfiltration over an unusual channel.",
              "Train a classifier to identify malicious exfiltration sequences. Features would include: process name making metadata call, time delta between metadata call and external connection, reputation of the external IP, and volume of data sent in the external connection. The model would output a risk score for the sequence, with high scores triggering an alert."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]