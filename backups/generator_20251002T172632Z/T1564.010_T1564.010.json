[
  {
    "information_requirement": "Is the adversary evading defenses by spoofing process arguments?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.010",
        "name": "Process Argument Spoofing",
        "evidence": [
          {
            "description": "A process with a logged command line matching a known-benign pattern (e.g., 'svchost.exe -k netsvcs') initiates a network connection within 60 seconds to a destination IP or domain listed on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Internet Gateway, SIEM",
            "action": [
              "Create a correlation rule that joins process creation events (Windows Event ID 4688) with network connection logs (Zeek conn.log) on the same host within a 60-second window. Enrich the destination IP or resolved domain (from Zeek dns.log) and trigger an alert if the destination matches an entry in a high-confidence threat intelligence feed AND the process command line is on a predefined allowlist of common, benign commands.",
              "For each process name on a predefined list of commonly abused binaries (e.g., svchost.exe, rundll32.exe), establish a historical baseline of destination country codes using GeoIP enrichment of Zeek conn.log data. Calculate the frequency distribution for each process. Generate an alert when a new connection from one of these processes is to a country outside the 95th percentile of the established frequency distribution.",
              "Train a binary classification model (e.g., Random Forest) using a labeled dataset of benign and malicious process-network events. Use features such as process name, command line length, number of arguments, destination port, protocol, and bytes transferred. Apply the trained model to score new events in real-time. Generate an alert for any event with a benign-appearing command line that the model classifies as malicious with a confidence score above 0.9."
            ]
          },
          {
            "description": "A parent process with a common, non-suspicious command line (e.g., 'svchost.exe -k netsvcs') spawns a child process considered high-risk or anomalous for that parent (e.g., 'powershell.exe', 'cmd.exe', 'whoami.exe').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Application Servers",
            "action": [
              "Create a detection rule that monitors process creation events (Windows Event ID 4688). Maintain a list of common parent processes (e.g., 'svchost.exe', 'rundll32.exe', 'explorer.exe') and a list of high-risk child processes (e.g., 'powershell.exe', 'cmd.exe', 'cscript.exe', 'reg.exe'). Trigger an alert if a listed parent process, created with a known-benign command line, spawns a child process from the high-risk list.",
              "For each unique parent process name observed in the environment, build a historical baseline of all its child process names and calculate the frequency of each parent-child relationship. Generate an alert when a newly observed parent-child process creation pair falls into the bottom 5th percentile of frequency, indicating a statistically rare execution chain.",
              "Implement a clustering algorithm (e.g., DBSCAN) on process creation event data. Create a feature vector for each event including the parent process name, parent command line pattern, and child process name. After an initial training period, treat any new process creation event that the model flags as an outlier (i.e., does not belong to an established cluster of normal behavior) as an alert for analyst review."
            ]
          },
          {
            "description": "A process, created with a benign-appearing command line, establishes a network connection whose characteristics (destination port, protocol, or data volume) deviate by more than three standard deviations from the established baseline for that specific process name.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Internet Gateway",
            "action": [
              "Create a rule that triggers if a process such as 'powershell.exe' with a command line lacking suspicious arguments (e.g., '-enc', '-nop', '-w hidden') initiates a network connection (from Zeek conn.log) to a non-standard C2 port (e.g., 4444, 50050, 8443) or any port not on a predefined list of allowed ports for that process.",
              "For each common executable name (e.g., svchost.exe, msedge.exe), establish a baseline of network activity from historical Zeek conn.log data correlated by process GUID/PID from Windows Event ID 4688. Calculate the mean and standard deviation for key metrics like bytes transferred ('orig_bytes' + 'resp_bytes') and connection duration. Generate an alert if a new instance of that process has a network session where a metric exceeds three standard deviations from its historical mean.",
              "Deploy a time series anomaly detection model (e.g., ARIMA) for each host, monitoring the total outbound network traffic volume. If the model detects a significant anomaly (a spike in traffic), automatically correlate the anomaly's timestamp with process creation events (Windows Event ID 4688) on that host from the preceding 5 minutes. Flag any process with a benign command line created just before the traffic spike for investigation."
            ]
          },
          {
            "description": "A process with a benign command line (e.g., 'msedge.exe', 'winword.exe') creates a new scheduled task or modifies a registry run key within 5 minutes of its creation, where this behavior is not part of its normal operational profile.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 12",
              "Windows Event ID 13",
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Servers, Domain Controllers",
            "action": [
              "Create a correlation rule that triggers when a process creation event (Windows Event ID 4688) for a common application (e.g., browser, office suite) is followed within a 5-minute window by a scheduled task creation (Windows Event ID 4698) or a registry modification event in a persistence key (e.g., HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run) by the same Process ID (via Sysmon Event IDs 12/13).",
              "For each common application process (e.g., 'winword.exe'), profile its typical sequence of subsequent host-based actions. Count the historical frequency of that process being the source of persistence events (e.g., 'Scheduled Task Creation', 'Registry Run Key Modification'). If the historical frequency of such a sequence is effectively zero, generate an alert on any new occurrence, as it represents a statistically significant deviation from baseline behavior.",
              "Train a sequence analysis model (e.g., an LSTM or Markov model) on legitimate event chains initiated by benign processes. Represent each process's lifecycle as a sequence of event types (e.g., 'ProcessCreate' -> 'FileWrite' -> 'NetConnect' -> 'ProcessTerminate'). Use the trained model to evaluate new event sequences in real-time. Flag any sequence that the model assigns a low probability score, such as 'msedge.exe:ProcessCreate' -> 'RegistryRunKey:Modify', for immediate investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]