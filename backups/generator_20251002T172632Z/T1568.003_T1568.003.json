[
  {
    "information_requirement": "Has the adversary established command and control by calculating C2 endpoints from DNS query responses? (TA0011 - Command and Control)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1568.003",
        "name": "DNS Calculation",
        "evidence": [
          {
            "description": "An internal host connects to a destination port that is a mathematical derivative of the octets from a recently resolved IP address. The connection to the calculated port occurs within 60 seconds of the DNS A-record response, and the destination port is typically a non-standard, high-numbered port (>1024).",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Egress Network Gateways, Endpoint Devices",
            "action": [
              "For each successful DNS A-record response in dns.log, script a check to simulate known calculation algorithms (e.g., sum of first three octets, XOR of all octets, bitwise shifts) on the resolved IP address. Correlate the source host with conn.log to determine if a connection is made to the original resolved IP but on the calculated port within a 60-second window. Alert on any match.",
              "For every connection in conn.log to a port > 1024, correlate it back to the most recent DNS query for that destination IP from the same source host. For each connection, calculate the delta between the destination port and various arithmetic combinations of the resolved IP's octets (e.g., port - (o1+o2+o3)). Use a moving average and standard deviation to flag hosts where this delta is consistently a low-integer value (e.g., 0) across multiple connections, indicating a fixed calculation algorithm.",
              "Deploy an unsupervised learning model (e.g., Isolation Forest) using a feature set derived from correlated DNS and network events. Features must include: (1) Shannon entropy of the queried domain, (2) reputation of the resolved IP, (3) destination port number, and (4) a vector of calculated values based on the resolved IP's octets (e.g., [o1+o2, o1*o2, o1^o2]). Isolate and alert on outliers where destination ports show a strong mathematical correlation with the calculated vector values."
            ]
          },
          {
            "description": "An internal host initiates a connection on a non-standard port (>1024) to an IP address within 60 seconds of resolving a DNS query for a domain that is newly registered, has a high Shannon entropy score (>3.5), or is present on a threat intelligence feed.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Firewalls/Proxies, Internal DNS Resolvers, Endpoint Devices",
            "action": [
              "Create a SIEM rule that joins dns.log with conn.log on the source host IP. Alert when a connection event occurs within 60 seconds of a DNS response from the same host, where the conn.log destination port is > 1024 and not on an approved application port list, and the queried domain in dns.log matches a known C2 domain from a threat intelligence feed.",
              "For each host, establish a baseline of destination port usage following DNS queries. Calculate the 99th percentile for port numbers used across the organization. Alert when a host makes a connection to a port exceeding this percentile within 60 seconds of querying a low-reputation or high-entropy domain.",
              "Implement a time-series anomaly detection model (e.g., Prophet) to monitor the rate of connections to high-numbered ports (>1024) per host. Enrich the model with features from preceding DNS queries (e.g., domain age, entropy, TLD). Alert on temporal anomalies that deviate significantly from the forecasted normal behavior, especially if preceded by suspicious DNS activity."
            ]
          },
          {
            "description": "DNS queries are observed for domains with statistical properties of algorithmic generation (e.g., Shannon entropy > 4.0, low linguistic cohesion, abnormal n-gram distribution) that are not on an enterprise domain allowlist. These DGAs are often used to locate C2 servers where DNS Calculation is then employed.",
            "data_sources": [
              "Zeek dns.log",
              "Microsoft-Windows-DNS-Client/Operational Event ID 3008"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Domain Controllers, Endpoint Devices",
            "action": [
              "Compare all fully qualified domain names (FQDNs) from dns.log against a centrally managed enterprise allowlist of known-good domains. For any domain not on the list, query threat intelligence feeds for known DGA families and patterns. Generate a high-priority alert on any match.",
              "For all domains not on the allowlist, calculate the Shannon entropy of the second-level domain. Establish a baseline entropy from the last 30 days of known-good domains. Alert on domains with entropy scores exceeding the 98th percentile of the baseline, as these are likely algorithmically generated.",
              "Apply a pre-trained binary classification model (e.g., Random Forest or Gradient Boosting) to classify domains from dns.log as either legitimate or DGA. The model should use features like domain length, entropy, n-gram frequency, and vowel-to-consonant ratio. Flag domains classified as DGA with a confidence score > 0.9 for analyst investigation."
            ]
          },
          {
            "description": "An internal host exhibits a statistically significant increase in the ratio of DNS queries resulting in NXDOMAIN (Non-Existent Domain) responses compared to its own 30-day baseline and its peer group's average. The ratio exceeds a defined threshold, such as 80% of queries in a 5-minute window resulting in NXDOMAIN.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Endpoint Devices",
            "action": [
              "Create a SIEM rule to count DNS queries by source IP (id.orig_h) and response code name (rcode_name) over a 5-minute window. Alert if the NXDOMAIN count for a single host exceeds 50 and the ratio of NXDOMAIN to total queries for that host exceeds 0.8.",
              "For each internal host, calculate the z-score of its current 1-hour NXDOMAIN ratio against its own 30-day rolling average. Alert if the z-score exceeds 3, indicating a statistically significant deviation from its normal behavior, and the raw NXDOMAIN count is above a nominal threshold (e.g., > 20).",
              "Utilize time-series clustering (e.g., k-shape) to group hosts by their daily DNS response code profiles, represented as a vector of counts for NOERROR, NXDOMAIN, SERVFAIL, etc. Identify and alert on any host that transitions from a large, stable 'normal' cluster to a small, volatile cluster characterized by a high NXDOMAIN ratio."
            ]
          },
          {
            "description": "An internal host establishes network connections to a single destination IP with highly regular time intervals (low jitter), consistent small packet sizes, and long-running sessions. This behavior follows a suspicious DNS query (e.g., DGA, high entropy) and is indicative of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress Network Gateways, Core Network Switches, Endpoint Devices",
            "action": [
              "For destination IPs associated with previously flagged suspicious DNS activity, identify repeating connections from a single source host in conn.log. Alert if the time between consecutive connections is consistent (e.g., every 300 seconds +/- 5 seconds) over a period of at least one hour.",
              "For each source-destination IP pair in conn.log, calculate the standard deviation of the time deltas between connections and the standard deviation of the originator and responder IP-layer byte counts. Flag pairs that fall into the lowest 1st percentile for both time delta deviation and byte count deviation, indicating machine-like regularity consistent with beaconing.",
              "Employ a sequence analysis model, such as an LSTM autoencoder, on conn.log data grouped by host. Train the model on sequences of normal network traffic events. Use the trained model to identify anomalous sequences, such as a DNS query followed by repeated, small, and regularly timed connections to the resolved IP, and alert on these as probable beaconing activity."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]