[
  {
    "information_requirement": "Is the adversary staging data prior to exfiltration? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1074",
        "name": "Data Staged",
        "evidence": [
          {
            "description": "A file creation event where the file's hash matches a known malicious hash from threat intelligence, or the filename exhibits characteristics of automated generation (e.g., high entropy) commonly used by adversary staging tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories, shared network drives, common staging directories (e.g., C:\\Windows\\Temp, C:\\Users\\Public), application data folders, and cloud storage synchronization folders (e.g., OneDrive, Dropbox).",
            "action": [
              "Symbolic: Join file creation events (Sysmon Event ID 11) with process creation events (Sysmon Event ID 1) on ProcessGUID. Compare the TargetFilename's MD5/SHA256 hash against a real-time threat intelligence feed of known malicious file hashes. Also, compare filenames against a regex list of known malicious patterns (e.g., '^[a-z0-9]{16}\\\\.zip$'). Trigger a high-priority alert on any match.",
              "Statistical: For each file creation event (Sysmon Event ID 11) with an archive extension (.zip, .rar, .7z), calculate the Shannon entropy of the filename string. Establish a baseline of entropy for benign filenames created by common processes. A filename entropy score that exceeds the 98th percentile for that file extension, especially when created by a non-installer process (e.g., powershell.exe), indicates a likely machine-generated name used for staging.",
              "Machine Learning: Train a Random Forest classifier to predict 'malicious staging' versus 'benign'. Use features from Sysmon events 1 and 11, including: file extension (one-hot encoded), file path depth, filename entropy, parent process name (e.g., explorer.exe, cmd.exe), process command-line length, and a boolean feature indicating if the file hash is in a threat intelligence feed. Classify new file creation events in real-time to identify suspicious staging activity."
            ]
          },
          {
            "description": "Execution of a known archiving utility (e.g., 7z.exe, rar.exe) or a living-off-the-land binary (LOLBin) like powershell.exe or tar.exe with command-line arguments indicating compression and/or encryption, creating an archive file in a temporary or publicly writable directory.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Common staging directories (e.g., C:\\Windows\\Temp, C:\\$Recycle.Bin), user profile directories (e.g., %APPDATA%), network-accessible temporary folders, and user-created folders at the root of a drive (e.g., C:\\Intel).",
            "action": [
              "Symbolic: Create a detection rule that monitors process command-lines (Sysmon Event ID 1) for a conjunction of: (1) Process name in ['7z.exe', 'rar.exe', 'zip.exe', 'tar.exe', 'powershell.exe', 'certutil.exe']; (2) Command-line arguments containing flags for password protection (e.g., '-p', '-hp', 'Protect-Archive', '-sp') or silent operation; and (3) an output file path pointing to a high-risk directory like 'C:\\Users\\Public', '%TEMP%', or 'C:\\PerfLogs'.",
              "Statistical: For each process execution (Sysmon Event ID 1), create a feature tuple of (process_name, parent_process_name, output_file_directory). Maintain a historical frequency count of these tuples over a 30-day rolling window. Any tuple occurring with a frequency in the bottom 1st percentile is flagged as anomalous. For example, the tuple (powershell.exe, cmd.exe, C:\\PerfLogs) creating an archive would be statistically rare and highly suspicious.",
              "Machine Learning: Implement a pre-trained Transformer-based model (e.g., a BERT variant) to analyze command-line argument sequences. Fine-tune the model on your environment's benign command lines from Sysmon Event ID 1. Feed new command lines to the model; sequences that are flagged as anomalous or have high perplexity scores, particularly those containing file paths, compression flags, and password arguments, indicate potential misuse for data staging."
            ]
          },
          {
            "description": "A single process reads a large number of unique files from multiple, distinct directory paths within a short time frame, and writes the aggregated data to a single new archive file.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, document repositories (e.g., SharePoint mount points), user home directories, source code repositories, cloud-synced directories on endpoints, and databases accessible via workstations.",
            "action": [
              "Symbolic: Using file access logs (e.g., filtered Windows Event ID 4663 for 'ReadData' access) correlated by ProcessGUID from Sysmon Event ID 1, trigger an alert if a single process (not on an allowlist of backup/indexing tools) accesses more than 50 unique files across more than 5 unique parent directories within a 5-minute window, and subsequently creates a single file (Sysmon Event ID 11) with an archive extension (.zip, .rar, .7z, .tar.gz).",
              "Statistical: For each process over a 1-minute sliding window, calculate the Shannon entropy of the set of unique directory paths it reads from (derived from file access logs). Establish a per-process baseline entropy profile (e.g., 'explorer.exe' normally has high entropy, 'lsass.exe' should have very low). An entropy score that is a significant outlier (e.g., > 3 standard deviations above the mean for that specific process name) indicates abnormal file collection activity.",
              "Machine Learning: Use an Isolation Forest or DBSCAN clustering algorithm to find anomalous process sessions. For each ProcessGUID, engineer features over its lifetime or a time window: count of unique files read, count of unique directories read from, ratio of read operations to write operations, entropy of source directory paths, total bytes read, and total bytes written. The model will identify sessions that are outliers from the main cluster of benign system and user activity."
            ]
          },
          {
            "description": "A sudden and statistically significant increase in the volume (number of files) or total size (bytes) of file creation events within a known staging directory (e.g., C:\\Windows\\Temp, C:\\Users\\Public), deviating from established historical patterns for the host.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System-wide temporary directories (C:\\Windows\\Temp), user-specific temporary directories (%TEMP%), public folders (C:\\Users\\Public), and the Recycle Bin for all users.",
            "action": [
              "Symbolic: Define a SIEM rule that triggers if the count of FileCreate events (Sysmon Event ID 11) in a specific directory (e.g., 'C:\\Windows\\Temp') from a single ProcessGUID exceeds a hard threshold (e.g., 100 files in 5 minutes) and the process name is not on a pre-defined allowlist of software installers or patch managers.",
              "Statistical: For each key directory (e.g., 'C:\\Windows\\Temp'), create a time series of file creation counts per minute. Calculate a 60-minute simple moving average (SMA) and standard deviation. An alert is generated when the current minute's count exceeds the SMA by a dynamic threshold (e.g., SMA + 4 * standard deviations), indicating a statistically significant burst of file creation activity.",
              "Machine Learning: Implement a time-series decomposition model (e.g., Seasonal-Trend-Loess) or a Prophet model on the volume of data written (in bytes from Sysmon Event ID 11) per hour to key staging directories. The model will learn the normal daily and weekly seasonality of disk activity. An observation that falls outside the model's prediction interval (e.g., 99% confidence interval) is flagged as an anomaly, pointing to an abnormal data dump not explained by normal system behavior."
            ]
          },
          {
            "description": "A large-volume data transfer over the internal network from one or more sources to a single non-server host, where that host does not typically act as a data repository, indicating data consolidation before exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, especially east-west traffic between VLANs, traffic flowing from servers to workstations, and the network egress point.",
            "action": [
              "Symbolic: Create a rule that monitors Zeek conn.log. An alert triggers if a single TCP session between two internal IP addresses meets all of the following: (1) 'resp_bytes' > 1 GB; (2) The destination IP ('id.resp_h') is in the workstation IP range; (3) The source IP ('id.orig_h') is in the server IP range; (4) The 'service' field is not a known backup or file sharing protocol (e.g., not 'smb', 'nfs', 'bacula').",
              "Statistical: Using Zeek conn.log, create a baseline for every internal source-destination IP pair, calculating the 95th percentile of 'resp_bytes' over a 30-day period. A new connection where 'resp_bytes' exceeds this established percentile for that specific pair generates an alert. This method detects transfers that are unusually large for a specific, established communication path.",
              "Machine Learning: Model the internal network as a directed graph using Zeek conn.log, where nodes are hosts (IPs) and edges are weighted by the sum of 'total_bytes' over 24 hours. Use a graph algorithm like PageRank to determine the 'centrality' of each node. Train a model to learn the normal centrality score distribution for workstations versus servers. A workstation whose centrality score suddenly increases to a value typical of a server is a strong indicator it is being used as a data staging hub."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]