[
  {
    "information_requirement": "Has the adversary elevated privileges using thread execution hijacking?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.003",
        "name": "Thread Execution Hijacking",
        "evidence": [
          {
            "description": "A process with a known malicious hash, identified from a threat intelligence feed, is observed via Sysmon Event ID 10 accessing a target process with a higher integrity level and requesting memory write access (e.g., PROCESS_VM_WRITE, 0x0020).",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Application Servers, Domain Controllers",
            "action": [
              "Create a SIEM rule that joins process access logs (Sysmon Event ID 10) with a threat intelligence feed of malicious file hashes. Trigger a high-severity alert if a SourceImage process, matching a malicious hash, requests access to a TargetImage process where the TargetIntegrityLevel is higher than the SourceIntegrityLevel and the GrantedAccess mask includes memory write permissions (e.g., 0x0020, 0x0008, or the all-access 0x1F0FFF).",
              "For all Sysmon Event ID 10 events, build a historical frequency model of (SourceImage, TargetImage, GrantedAccess) tuples. Profile the rarity of each observed event. Flag any access where a lower-integrity process accesses a higher-integrity process with write permissions if the tuple's frequency falls below the 1st percentile, indicating a statistically rare and suspicious event.",
              "Train a supervised classification model (e.g., Gradient Boosting, Random Forest) on a labeled dataset of Sysmon Event ID 10 logs. Features should include: SourceImage name, TargetImage name, SourceIntegrityLevel, TargetIntegrityLevel, the numerical value of GrantedAccess, parent process of the source, and a boolean for whether the source hash is on a TI feed. Deploy the model to score new process access events in real-time, generating an alert for events classified as 'malicious' with a confidence score above 0.9."
            ]
          },
          {
            "description": "A single source process is observed generating a rapid sequence of process access events (Sysmon Event ID 10) against a single target process within a short time window (e.g., < 2 seconds), requesting access rights for thread suspension, memory writing, and context setting, where the source process is not an authorized debugger or security tool.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Sysmon Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially those running critical services.",
            "action": [
              "Create a correlation rule that triggers when a unique SourceProcessGUID generates multiple Sysmon Event ID 10 events against the same TargetProcessGUID within a 2-second window. The rule must look for a combination of GrantedAccess masks that include thread suspension (0x0002), memory writing (0x0020), and context setting (0x0100). Exclude SourceImage processes from a pre-defined allowlist of known debuggers and system monitoring tools (e.g., procexp.exe, windbg.exe).",
              "For each running process, calculate the Shannon entropy of the `GrantedAccess` codes it requests (from Sysmon EID 10) over a 5-minute rolling window. Establish a baseline entropy level for each process name. Generate an alert if a process's entropy score suddenly increases by more than 3 standard deviations above its baseline, especially if it is not a known administrative or development tool.",
              "Implement a sequence-based anomaly detection model, such as a Long Short-Term Memory (LSTM) autoencoder. Train the model on sequences of (EventID, GrantedAccess, TargetImage) tuples associated with benign processes. In production, feed event sequences for each process into the model. A high reconstruction error indicates that the observed sequence of actions is anomalous and does not match learned benign behavior, suggesting a potential hijacking attempt."
            ]
          },
          {
            "description": "A process running at a lower integrity level successfully opens a handle with high-risk access rights (e.g., PROCESS_VM_WRITE) to a process at a higher integrity level.",
            "data_sources": [
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, with a focus on systems processing sensitive data.",
            "action": [
              "Create a high-severity alert rule to detect any Sysmon Event ID 10 event where SourceIntegrityLevel is 'Low' or 'Medium' and TargetIntegrityLevel is 'High' or 'System', AND the GrantedAccess mask includes flags for writing to process memory (e.g., 0x0020 PROCESS_VM_WRITE) or setting thread context (0x0100 THREAD_SET_CONTEXT).",
              "Across the enterprise, establish a baseline probability distribution for all (SourceIntegrityLevel, TargetIntegrityLevel, GrantedAccess) combinations observed in Sysmon Event ID 10. Any observed event representing a transition from a lower to a higher integrity level with write/execute permissions that has a historical probability of less than 0.01% should be flagged as a high-risk anomaly for immediate investigation.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to Sysmon Event ID 10 data. Use features such as the numerical representations of SourceIntegrityLevel, TargetIntegrityLevel, and GrantedAccess. Identify and investigate the small outlier clusters or individual noise points, as these represent rare and potentially malicious process access patterns that deviate from large, dense clusters of normal activity."
            ]
          },
          {
            "description": "A process, within minutes of being the target of a high-risk process access event, is observed accessing sensitive system resources (e.g., LSA secrets, SAM database) or initiating network connections for the first time in its process lifetime.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4663",
              "Windows Event ID 4657",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Certificate Authorities, Servers hosting LSA secrets, File Servers with sensitive data.",
            "action": [
              "Create a stateful correlation rule that first identifies a suspicious Sysmon Event ID 10 event (e.g., low-to-high integrity access with write permissions). If the TargetProcessGUID from that event is then seen as the subject of a Windows Event ID 4663 for object '\\\\SAM', a Windows Event ID 4657 for registry key 'HKLM\\SECURITY\\Policy\\Secrets', or a Sysmon Event ID 1 for creating a child `lsass.exe` dump (e.g., using procdump), trigger a critical alert.",
              "For each process name, build a historical baseline of its typical child processes, accessed registry keys, and network connection patterns. After a process is identified as a potential hijacking target via a high-risk Sysmon EID 10 event, monitor its subsequent actions for 10 minutes. Score the rarity of each action against its baseline using percentile ranking. If the cumulative rarity score of its actions exceeds a predefined threshold (e.g., 99th percentile), flag the process for investigation.",
              "For critical system processes (e.g., lsass.exe, wininit.exe), train a time series anomaly detection model (e.g., Isolation Forest, One-Class SVM) on metrics like network traffic volume, CPU usage, and file I/O operations. After a high-risk Sysmon Event ID 10 targets one of these processes, feed its subsequent behavioral metrics into the model. An 'anomaly' classification from the model serves as strong corroborating evidence of a successful hijack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using thread execution hijacking?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.003",
        "name": "Thread Execution Hijacking",
        "evidence": [
          {
            "description": "A trusted, whitelisted process (e.g., svchost.exe, explorer.exe), which was recently the target of a process access event with memory-write permissions, initiates an outbound network connection to a destination IP or domain known to be malicious from a threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Sysmon Event ID 10",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, User Workstations, Web Proxies.",
            "action": [
              "Create a SIEM correlation rule that looks for a Sysmon Event ID 3 or Zeek conn.log entry where the destination IP matches a threat intelligence feed. If the initiating process Image is a common OS process (e.g., 'svchost.exe', 'explorer.exe'), search for a Sysmon Event ID 10 event in the preceding 5 minutes where that process's GUID was the TargetProcessGUID. An alert should be generated if such a correlation is found.",
              "For each common process name, use Zeek conn.log data to build a statistical baseline of destination countries and Autonomous System Numbers (ASNs) it typically communicates with. After a process is identified as the target of a potential injection via Sysmon EID 10, monitor its subsequent network connections. Flag any connection to a country or ASN that is not in the top 95% of its historical destinations as anomalous.",
              "Train a classification model (e.g., XGBoost) to label network connections as benign or malicious. Use features from Zeek logs such as destination port, connection duration, data volume (orig_bytes, resp_bytes), destination IP reputation, and TLS fingerprinting hashes (JA3/JA3S from ssl.log). After a whitelisted process is targeted in a Sysmon EID 10 event, its subsequent network connections are fed to the model. A 'malicious' classification with high confidence triggers an alert."
            ]
          },
          {
            "description": "Process access events (Sysmon Event ID 10) are observed with access rights permitting memory modification (e.g., PROCESS_VM_WRITE), where the target process is a common, network-capable, and frequently whitelisted application (e.g., chrome.exe, svchost.exe, explorer.exe).",
            "data_sources": [
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, any system with internet access.",
            "action": [
              "Maintain a watchlist of process names commonly abused for evasion ('explorer.exe', 'svchost.exe', 'chrome.exe', 'firefox.exe', 'outlook.exe'). Create a SIEM rule that generates a medium-severity alert whenever a Sysmon Event ID 10 event shows a TargetImage from this list being accessed with GrantedAccess rights including 0x0020 (PROCESS_VM_WRITE) or 0x0100 (THREAD_SET_CONTEXT).",
              "For each process name on the evasion watchlist, track the daily count of suspicious access attempts (Sysmon EID 10 with write permissions) targeting it. Calculate the historical mean and standard deviation for these counts. Generate an alert if the daily count for a specific process (e.g., 'svchost.exe') exceeds 3 standard deviations above its historical mean, indicating a possible targeted campaign.",
              "Use a graph analysis library to model Sysmon Event ID 10 data, where nodes are processes and edges represent access events. Apply a community detection algorithm to identify normal patterns of process interaction. Flag edges that bridge disparate communities (e.g., an edge from 'winword.exe' to 'svchost.exe') as anomalous and indicative of an evasion attempt."
            ]
          },
          {
            "description": "A legitimate process (e.g., explorer.exe), within minutes of being the target of a process access event with write permissions, either spawns an uncharacteristic child process (e.g., cmd.exe) or makes a DNS query for a domain name with high character entropy.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 10",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, Domain Controllers, DNS Servers.",
            "action": [
              "Create a correlation rule that triggers when a process (e.g., 'svchost.exe') is the TargetProcessGUID in a suspicious Sysmon EID 10 event, and within the next 5 minutes, the same process GUID is observed as the ParentProcessGUID for a child process like 'cmd.exe' or 'powershell.exe' in a Sysmon EID 1 event.",
              "For each common parent process, build a baseline of its normal child processes from Sysmon EID 1 data. Following a suspicious Sysmon EID 10 event targeting a parent, score any subsequent child process it spawns based on its historical rarity. Flag child processes that are statistically unlikely (e.g., in the bottom 1% of frequency). Concurrently, analyze DNS queries from Zeek dns.log originating from the host; flag any query with a Shannon entropy score in the 99th percentile, which is indicative of Domain Generation Algorithms (DGA).",
              "For key whitelisted processes, build a multivariate time series model of their normal behavior, including metrics like child process creation rate, network connection rate, and average DNS query entropy. After a process is targeted by a suspicious Sysmon EID 10 event, feed its subsequent behavioral time series to an anomaly detection algorithm (e.g., Prophet, Isolation Forest). A significant anomaly score indicates a deviation from normal behavior, likely due to hijacking."
            ]
          },
          {
            "description": "A process, known to use specific network protocols and ports (e.g., a web browser on TCP/80, TCP/443), is observed communicating over non-standard ports or protocols immediately following a suspicious process access event targeting it.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon Event ID 3",
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Network Segments, DNS servers.",
            "action": [
              "Define rules mapping common processes to their expected destination ports (e.g., 'chrome.exe' -> TCP/80, TCP/443). Create a SIEM alert that triggers if one of these processes initiates a network connection (Sysmon EID 3 or Zeek conn.log) to a port not on its allowlist, especially if the process was recently the target in a suspicious Sysmon EID 10 event.",
              "For each process name, use Sysmon EID 3 and Zeek conn.log data to build a historical frequency distribution of (protocol, destination_port) pairs. After a process is targeted for injection, flag any subsequent network connection it makes if the observed (protocol, port) pair falls below a low frequency threshold (e.g., appears in less than 1% of that process's historical connections).",
              "For critical system processes that should never initiate outbound network connections (e.g., 'lsass.exe', 'winlogon.exe'), train a One-Class SVM model on their benign behavioral data. Any network connection event (Sysmon EID 3) initiated by one of these processes would be a significant deviation from the learned norm and should be treated as a high-confidence anomaly, indicative of a compromise."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]