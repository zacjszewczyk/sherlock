[
  {
    "information_requirement": "Is the adversary maintaining persistence using port knocking?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1205.001",
        "name": "Port Knocking",
        "evidence": [
          {
            "description": "A single source IP makes 3 to 10 failed TCP connection attempts (e.g., conn_state 'REJ', 'S0') to distinct, closed ports on a single destination host within a 30-second window, and the source IP is present on a high-confidence threat intelligence feed of known malicious actors.",
            "data_sources": [
              "Zeek conn.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway Firewall, DMZ Network Segments, Cloud VPC Flow Logs",
            "action": [
              "Using a SIEM or script, filter Zeek conn.log for records where conn_state is 'REJ', 'RSTO', or 'S0'. Group records by source IP (id.orig_h) and destination IP (id.resp_h) within a 30-second sliding window. For each group, count the distinct destination ports (id.resp_p). If the count is between 3 and 10, cross-reference the source IP with a threat intelligence feed. Generate an alert if a match is found.",
              "For all external source IPs, calculate a 'knock score' based on the frequency of failed connection sequences (3-10 failed connections to distinct ports in <30s). Identify IPs in the top 99th percentile of this score. Separately, calculate the Shannon entropy of the destination port sequence for these events. A high entropy score (e.g., > 2.0) combined with a high knock score indicates a targeted, non-scanning behavior and should be investigated.",
              "Develop and train a recurrent neural network (RNN) or LSTM model on sequences of connection events, represented as vectors of (timestamp_delta, destination_port, tcp_flag). Label training data with known port knocking sequences and benign traffic (e.g., network scanners, misconfigurations). Deploy the model to classify new connection sequences from external IPs in near-real-time. A sequence classified as 'malicious port knock' with a confidence score > 0.9 triggers an alert."
            ]
          },
          {
            "description": "A process is created on a monitored endpoint with a process name (e.g., 'knockd.exe', 'fwknopd.exe'), command-line argument, or file hash that matches a known port knocking daemon or its configuration file (e.g., 'knockd.conf').",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Server Subnets, Domain Controllers, User Workstation VLANs, Endpoint Detection and Response (EDR) platform logs",
            "action": [
              "Deploy a watchlist containing file hashes, process names (e.g., 'knockd.exe', 'fwknopd.exe'), and configuration file names ('knockd.conf') of known port knocking tools. Monitor Windows Event ID 4688 and Sysmon Event ID 1 (Process Creation). Trigger an alert if 'NewProcessName', 'ProcessImage', 'CommandLine', or 'OriginalFileName' matches an entry in the watchlist.",
              "Establish a baseline of all process command-line arguments across the enterprise. For each new process creation event (Event ID 4688), calculate a rarity score based on the frequency of its command line. If a process command line is in the 99.9th percentile for rarity and contains keywords such as 'knock', 'fwknop', 'port', or 'firewall-cmd', flag the event for analyst review.",
              "Train a one-class SVM model on a dataset of command-line arguments from legitimate processes observed in your environment over a 30-day period. Use this model to score new process creation events from Event ID 4688 or Sysmon Event ID 1. Command lines that are classified as anomalies and also contain features associated with network configuration (e.g., port numbers, protocol names, IP addresses) should be flagged as a potential port knocking daemon."
            ]
          },
          {
            "description": "A Windows Firewall rule is added or modified (Event ID 4946, 4950), or a process begins listening on a new network port (Sysmon Event ID 3), on a host within 5 seconds of the final connection attempt in a suspected inbound port knocking sequence targeting that same host.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5154",
              "Windows Event ID 4946",
              "Windows Event ID 4950",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Firewall Management Interfaces, Critical Application Servers, Endpoint Devices",
            "action": [
              "Create a correlation rule that triggers when a 'suspected port knock' event (from Zeek log analysis) is detected for a destination host. The rule should then look for a subsequent Windows Event ID 4946, 4950, 5154 or Sysmon Event ID 3 ('Network connection detected') on the same host within a 5-second window. A match generates a high-confidence alert.",
              "For each host, create a baseline of the rate and timing of firewall change events (Event IDs 4946, 4950, 5154) and new network listeners (Sysmon Event ID 3). Following a suspected port knocking sequence from Zeek conn.log, check for one of these events on the target host. If the event occurs at a statistically anomalous time (e.g., >3 standard deviations from the mean hourly count for that host), elevate the priority of the port knocking alert.",
              "Implement a graph-based analysis model where nodes are hosts, IPs, and processes, and edges are events (e.g., 'knock_attempt', 'firewall_change', 'listen_start'). When a 'knock_attempt' edge is created, search for a path from the source IP node to the destination host node that includes a subsequent 'firewall_change' or 'listen_start' edge within a short time window. The discovery of such a path confirms the port knock and triggers an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using port knocking?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1205.001",
        "name": "Port Knocking",
        "evidence": [
          {
            "description": "A sequence of 3-10 failed connection attempts to distinct ports within a 30-second window originates from an IP address listed on a threat intelligence feed as an anonymization service (e.g., TOR exit node, public proxy, commercial VPN).",
            "data_sources": [
              "Zeek conn.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Egress Network Filters, Proxy Logs",
            "action": [
              "Using a SIEM, identify port knocking sequences (3-10 failed connections to distinct ports in <30s from a single source). Ingest a CTI feed of known anonymizer service IP addresses. Create a rule that joins the source IP of the knocking sequence with the anonymizer IP list. Generate an alert on any match.",
              "For all inbound traffic, enrich source IPs with Geolocation and ASN data. Identify port knocking sequences and analyze the source ASN and country. Calculate a rarity score for the ASN/country pair based on a 30-day baseline of all inbound traffic. A port knocking sequence originating from an ASN/country pair in the 99th percentile of rarity should be considered high-risk.",
              "Train a classification model (e.g., Random Forest) to predict if a source IP belongs to an anonymization service. Use features such as the IP's presence on various CTI feeds, ASN information, reverse DNS lookup patterns, and historical connection behavior. Apply this model to the source IPs of suspected port knocking sequences to prioritize those classified as high-risk anonymizers."
            ]
          },
          {
            "description": "A successful TCP connection (Zeek conn_state 'SF') is established to a destination port on a host that has not accepted connections on that port in the last 30 days. This successful connection occurs within 10 seconds of a series of 3 or more failed connection attempts from the same source IP to different ports on the same destination host.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ Servers, Externally-facing Application Gateways, Network Taps",
            "action": [
              "Maintain a stateful baseline in a SIEM or database of all (host, port) pairs that have had a successful inbound connection (conn_state 'SF') in the last 30 days. For every new successful connection, check if the (host, port) pair is in the baseline. If it is not, check for 3+ failed connections (conn_state 'REJ' or 'S0') from the same source IP to the same host in the preceding 30 seconds. If both conditions are met, trigger an alert.",
              "For each host, profile the set of listening ports over a 30-day baseline. For any new successful connection to a port not in this baseline profile, calculate the conditional probability of this event, given a preceding cluster of failed connections from the same source. If this probability is a statistical outlier (e.g., > 3 standard deviations above the mean probability for new connections), flag it as a high-confidence port knocking event.",
              "Use an anomaly detection model (e.g., Isolation Forest) on connection 5-tuples (src_ip, dst_ip, dst_port, proto, conn_state). Train the model on a baseline of normal network traffic. A successful connection ('SF') that is flagged as an anomaly and is temporally linked (within 30 seconds) to a preceding sequence of at least 3 failed connection attempts ('REJ', 'S0') from the same source IP should be classified as a successful port knock."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary establishing command and control using port knocking?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1205.001",
        "name": "Port Knocking",
        "evidence": [
          {
            "description": "An internal host initiates a sequence of 3+ outbound failed connection attempts to distinct ports on a single external IP (a 'reverse knock') within a 10-second window. This is followed within 30 seconds by a successful inbound connection from that same external IP to the internal host on a dynamically opened port.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points of the network, DNS Resolvers, Core Network Switches",
            "action": [
              "Create a correlation rule that first detects an internal host (id.orig_h in private IP space) making >3 failed outbound connections (conn_state 'REJ' or 'S0') to distinct ports on a single external IP (id.resp_h) within 10 seconds. The rule then looks for a subsequent successful inbound connection (conn_state 'SF') from that same external IP to the original internal host within the next 30 seconds. Cross-reference the external IP with a CTI feed of known C2 servers and alert on a match.",
              "Identify all internal hosts performing outbound 'knocking' patterns. For the destination IPs of these knocks, calculate a rarity score based on the frequency of that destination IP, its ASN, and its country across all outbound traffic from the organization over the last 30 days. An outbound knock to a destination IP with a rarity score in the 99.9th percentile is highly suspicious of C2.",
              "Train a classifier to identify C2 domains and IPs. Use features from Zeek dns.log (e.g., query/answer ratio, TTL value, domain entropy) and conn.log (e.g., connection duration, byte counts). When a reverse knocking pattern is detected, feed the destination IP and any associated domain name into the classifier. If it is classified as C2 with high confidence, generate a 'Reverse Port Knock for C2 Callback' alert."
            ]
          },
          {
            "description": "A repeating pattern is observed where an inbound port knock sequence from an external IP is followed within 60 seconds by a short-lived outbound connection (beacon) from the targeted internal host back to the same external IP. The time interval between these beaconing patterns is highly regular (e.g., every 60 minutes with a jitter of less than 5%).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Network Segments, Firewall Logs",
            "action": [
              "Define a 'knock-beacon' event as an inbound port knock sequence followed by an outbound connection from the knock target to the knock source within 60 seconds. Store these events. Search for repeating 'knock-beacon' events between the same source/destination IP pair where the time delta between events is consistent (e.g., between 3500 and 3700 seconds for an hourly beacon). Alert when 3 or more such periodic events are observed.",
              "For all outbound connections from internal hosts, group by source/destination IP pair and calculate the standard deviation of the time between connections (jitter). Isolate pairs where the outbound connection is consistently preceded by an inbound port knock from the destination IP. A connection pair that exhibits both a preceding knock and a jitter value in the lowest 1st percentile (highly periodic) is indicative of C2 beaconing activated by port knocking.",
              "Apply time-series analysis (e.g., Fast Fourier Transform or Autocorrelation Function) to the timestamps of connection events for each internal host's outbound traffic to detect strong periodic signals. If a periodic signal is detected, verify that each connection in the periodic series is preceded by an inbound port knock from the connection's destination IP. A confirmed match indicates periodic C2 communications triggered by port knocking."
            ]
          },
          {
            "description": "A TCP connection is established on a non-standard port (<1024 or >49151) immediately following a successful port knock sequence. The connection persists for over 5 minutes with low, intermittent bidirectional data transfer, consistent with an interactive C2 session.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Server Subnets, Developer Workstations, Network Security Monitoring Sensors",
            "action": [
              "First, identify a successful port knock event. For this resulting connection, create a rule to check if: 1) The connection duration is > 5 minutes, 2) The Zeek conn.log 'history' field contains both 'd' and 'D', and 3) The total bytes transferred (orig_bytes + resp_bytes) is less than 10KB. A match indicates a potential interactive C2 shell.",
              "For all connections established immediately following a port knock, calculate the ratio of connection duration in seconds to total bytes transferred. Establish a baseline for this ratio across all network traffic. Flag any post-knock connection where this ratio falls into the 98th percentile or higher, as this indicates a long-lived, low-data-volume session characteristic of interactive C2.",
              "Train a supervised classification model (e.g., Gradient Boosting) to distinguish between 'interactive C2', 'bulk data transfer', and 'benign keep-alive' traffic. Use labeled data and features from Zeek conn.log such as duration, orig_bytes, resp_bytes, history string, and packet timing statistics. Apply this model to all connections established immediately after a port knock. An alert is generated if the connection is classified as 'interactive C2' with high confidence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]