[
  {
    "information_requirement": "Is the adversary attempting to evade detection by clearing network history or configurations?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1070.007",
        "name": "Clear Network Connection History and Configurations",
        "evidence": [
          {
            "description": "A process execution event where the process image hash matches a known history-clearing utility from threat intelligence, or the process name exhibits abnormally high string entropy.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, and Jump Boxes where remote access is common.",
            "action": [
              "Symbolic: Create a detection rule that monitors process creation events (Sysmon Event ID 1, Windows Event ID 4688) and compares the process image hash against a curated list of known history-clearing tool hashes (e.g., SDelete, CCleaner, BleachBit) from threat intelligence feeds. Alert on any match.",
              "Statistical: For all newly observed process names from process creation events (Sysmon Event ID 1), calculate the Shannon entropy of the filename. Establish a baseline for typical process name entropy across the environment by calculating the mean and standard deviation. Flag any process names with an entropy score greater than 3 standard deviations above the mean, and correlate with execution from non-standard directories (e.g., %TEMP%, %APPDATA%).",
              "Machine Learning: Train a classification model (e.g., Random Forest, Gradient Boosting) using features from process creation events (Sysmon Event ID 1), such as parent process name, command-line length, command-line entropy, process name entropy, and user context. Use a labeled dataset of known benign and malicious (history-clearing) process executions to classify new events in real-time as suspicious or benign."
            ]
          },
          {
            "description": "Execution of built-in command-line utilities (e.g., `wevtutil.exe`, `reg.exe`, `powershell.exe`) with command-line arguments or script block content specifically constructed to delete RDP connection history from the registry, clear event logs, or remove `.rdp` files.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, and administrative workstations.",
            "action": [
              "Symbolic: Create a detection rule using regular expressions to monitor command-line arguments (Sysmon Event ID 1) and PowerShell script blocks (Windows Event ID 4104). The regex should target specific patterns such as `wevtutil cl`, `Clear-EventLog`, `reg delete .*Terminal Server Client`, and `Remove-Item .*.rdp -Force`. Alert on matches, especially when executed by non-administrative users or under a system context.",
              "Statistical: For each host, calculate a baseline of the frequency and diversity of command-line arguments used with `reg.exe`, `wevtutil.exe`, and `powershell.exe`. Use a z-score to detect hosts exhibiting an anomalous spike in the usage of deletion-related commands (`delete`, `cl`, `Remove-Item`) targeting sensitive registry paths or file locations. A count exceeding 3 standard deviations from the host's or its peer group's baseline is suspicious.",
              "Machine Learning: Use a pre-trained Natural Language Processing (NLP) model, fine-tuned on security data, to analyze command-line strings (Sysmon Event ID 1) and script blocks (Windows Event ID 4104). The model will classify the semantic intent of the command as 'history clearing', 'benign administration', or 'other malicious'. This provides a more nuanced detection than simple keyword matching by understanding the context of the arguments used."
            ]
          },
          {
            "description": "An anomalous volume of deletion or modification events targeting specific RDP history registry keys (e.g., HKCU\\Software\\Microsoft\\Terminal Server Client\\) or file artifacts (e.g., Default.rdp, Cache\\*.bin).",
            "data_sources": [
              "Sysmon Event ID 11",
              "Sysmon Event ID 12",
              "Sysmon Event ID 13",
              "Windows Event ID 4660",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry and file system on endpoints and servers, particularly those accessed via RDP.",
            "action": [
              "Symbolic: Create a detection rule that triggers an alert upon a registry key or value deletion (Sysmon Event IDs 12, 13 with EventType 'Delete') where the TargetObject ends with '\\Terminal Server Client\\Default' or '\\Terminal Server Client\\Servers'. Also, alert on file deletion events (Sysmon Event ID 11 with EventType 'Delete') for files named 'Default.rdp'.",
              "Statistical: After enabling object access auditing, establish a time-series baseline of modification/deletion events (Sysmon Event IDs 11, 13) for the RDP history artifacts on a per-host basis. Use a moving average to model normal activity. Alert when the observed count of these events in a short time window (e.g., 5 minutes) exceeds a dynamic threshold, such as the 98th percentile of the historical distribution for that host.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., LSTM Autoencoder) trained on the frequency of object access events (Sysmon Event IDs 11, 13) for sensitive RDP artifacts across all hosts. The model learns the normal rhythm of these activities (e.g., rare modifications during business hours) and flags any host whose event pattern significantly deviates from the learned normal behavior."
            ]
          },
          {
            "description": "A successful remote logon (RDP) is followed by the deletion of RDP history artifacts or execution of history-clearing commands on the same host by the same user within a short time window (e.g., under 15 minutes).",
            "data_sources": [
              "Windows Event ID 4624",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 13",
              "Windows Event ID 4104",
              "Zeek conn.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication logs, file/registry audit logs on RDP-enabled systems, and network traffic logs at network ingress/egress points.",
            "action": [
              "Symbolic: Create a SIEM correlation rule that looks for a successful RDP logon (Windows Event ID 4624, Logon Type 10) followed by either a process execution with a history-clearing command line (Sysmon Event ID 1) or a direct file/registry deletion of an RDP artifact (Sysmon Event ID 11/13). The subsequent event must occur on the same host, for the same user, within 15 minutes of the logon. Enrich alerts with the source IP from Zeek rdp.log or conn.log.",
              "Statistical: For each user account, calculate the conditional probability of history-clearing actions (identified via regex on command lines or specific Sysmon events) occurring within 15 minutes after an RDP logon: P(Clear | RDP_Login). Establish a baseline of this probability for all users. Flag any user whose behavior suddenly deviates, causing their conditional probability to jump into the top 99th percentile of all user sessions.",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model or Transformer) to learn common sequences of events post-login from aggregated logs (4624, Sysmon 1, 11, 13). The model would learn normal 'login -> work -> logout' patterns. The sequence 'RDP Logon -> Registry Delete -> File Delete -> Logout' would be identified as a low-probability, anomalous sequence, triggering a high-confidence alert."
            ]
          },
          {
            "description": "Modification or deletion of host-based firewall rules using `netsh.exe` or PowerShell cmdlets (e.g., `Set-NetFirewallRule`, `Remove-NetFirewallRule`) that is not correlated with a change management ticket or known administrative process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Event ID 4104",
              "Windows Event ID 4947",
              "Windows Event ID 4950",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host-based firewalls on workstations and servers; Centralized logging and SIEM infrastructure; Change management log databases.",
            "action": [
              "Symbolic: Create a rule that monitors for process creation events (Sysmon Event ID 1) where `netsh.exe` is used with `advfirewall` arguments or for PowerShell script blocks (Event ID 4104) containing `*-NetFirewallRule`. Correlate these events with a list of authorized administrator accounts and approved maintenance windows. Any such event occurring outside these defined parameters should generate a high-priority alert.",
              "Statistical: Profile the rate of firewall modification events (e.g., Event IDs 4947, 4950, or command-line executions) per host and per user account. Establish a baseline for the number of changes per week. Use a z-score to identify hosts or users with a statistically significant increase in firewall modification activity compared to their own history and their peer group. A z-score greater than 3.0 indicates anomalous behavior worth investigating.",
              "Machine Learning: Train a supervised classification model to distinguish between legitimate and malicious firewall changes. Features can include the user account's role, time of day, day of week, parent process of the shell, command-line parameters, and API-based correlation with a change management ticket. The model can then classify new firewall change events (from Sysmon Event ID 1 or Event ID 4104) in real-time, flagging those with a high probability of being malicious."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]