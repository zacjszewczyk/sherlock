[
  {
    "information_requirement": "Is the adversary gathering information about the system time or time zone?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1124",
        "name": "System Time Discovery",
        "evidence": [
          {
            "description": "A process creation event is recorded where the file hash (e.g., SHA256) of the executable image matches an entry on a threat intelligence feed of known reconnaissance tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Executive Workstations, Domain Controllers, Critical Application Servers, Developer Endpoints",
            "action": [
              "Create a SIEM rule that triggers on every process creation event (Windows Event ID 4688, Sysmon Event ID 1). Extract the executable's file hash and compare it against a threat intelligence list of known malicious hashes. Generate a high-severity alert for any match.",
              "Analyze the prevalence of matched malicious hashes across the enterprise. Calculate the frequency of each hash detection by host, user, and department over time. Generate a trending alert if the rate of detection for a specific hash or a cluster of related reconnaissance tool hashes exceeds a 95th percentile threshold compared to a 90-day rolling baseline.",
              "Develop a threat actor clustering model using features from malicious process events (hash, user, host, parent process, command line). Use a clustering algorithm like DBSCAN to group similar incidents. When a new IOC match occurs, classify it into an existing cluster to help attribute the activity to a known campaign or identify a new, emerging threat group."
            ]
          },
          {
            "description": "Execution of a built-in time discovery utility (e.g., `net.exe`, `w32tm.exe`, `Get-Date`) exhibits anomalous characteristics, such as an unusual parent process, high frequency, or occurring in a rapid sequence with other discovery commands.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, with a focus on hosts not designated as NTP servers within the environment (e.g., standard user workstations, application servers).",
            "action": [
              "Create a detection rule to monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) for command lines containing `net time`, `w32tm /tz`, `w32tm /query`, `date /t`, or `time /t`. Alert if the parent process is not `explorer.exe`, `services.exe`, `svchost.exe`, or a known administrative tool. Concurrently, monitor PowerShell Script Block Logging (Event ID 4104) for `Get-Date` or `[System.DateTime]` usage originating from non-interactive or obfuscated scripts.",
              "For each user-host pair, establish a 30-day baseline of hourly execution frequency for time discovery commands. Alert when the hourly count for a pair exceeds the 99th percentile of its historical baseline. Additionally, calculate the Shannon entropy of all commands executed by a parent process (e.g., cmd.exe) within a 5-minute window; if a time discovery command is present and the entropy score is anomalously high (e.g., > 3.5), flag for potential scripted reconnaissance activity.",
              "Train a supervised classification model (e.g., Random Forest) on labeled historical process execution data. Use features such as parent process, process name, command-line arguments, user context, and process execution time of day. Use the trained model to classify new time discovery command executions in real-time, generating an alert for events classified as 'malicious' with a confidence score above 0.8."
            ]
          },
          {
            "description": "A host initiates Network Time Protocol (NTP) communications on UDP port 123 to an external IP address not on the organization's allowlist, or the volume of a host's NTP queries deviates significantly from its established baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ntp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Firewall and Network Gateway logs, DNS Servers, Domain Controllers",
            "action": [
              "Create a SIEM rule to monitor all network connection logs (Zeek conn.log) for traffic on destination port 123 (UDP). Maintain an allowlist of approved internal and external NTP servers. Generate a high-severity alert for any host initiating a connection to an IP address not on this list.",
              "For each internal host, baseline the hourly volume of outbound NTP connections (destination port 123/UDP) over a 30-day period using Zeek conn.log. Calculate the mean and standard deviation for the connection count per hour. Generate an alert if a host's NTP connection count in any hour exceeds three standard deviations from its historical mean ($$ Z > 3 $$), indicating an unusual burst of activity.",
              "Implement an unsupervised machine learning model, such as an autoencoder, trained on historical Zeek ntp.log and conn.log data. The model should learn the normal patterns of NTP traffic, including source-destination pairs, packet volume, and timing. Use the model's reconstruction error to score new NTP events; a high reconstruction error indicates a significant deviation from the norm and should trigger an alert for analyst review."
            ]
          },
          {
            "description": "A non-standard user executes time discovery commands on a network device or hypervisor, or a process makes suspicious Windows API calls related to system uptime.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Network device AAA logs",
              "Hypervisor audit logs",
              "Endpoint Detection and Response (EDR) API monitoring logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network infrastructure (switches, routers), Hypervisor management interfaces, Endpoints and Servers with EDR agents",
            "action": [
              "Create a SIEM rule to monitor network device AAA logs and hypervisor audit logs (e.g., vCenter events) for time-related commands (`show clock`, `esxcli system clock get`). Alert if the command is executed by a user account not belonging to the 'Network Administrators' or 'Virtualization Administrators' group.",
              "Using EDR data, baseline the frequency of time-related API calls (e.g., GetTickCount, GetSystemTime, time) per process image name across the environment. Alert when a process, especially one not typically associated with frequent time checks (e.g., `powershell.exe`, `rundll32.exe`), exhibits a call frequency in the 99th percentile of its peers.",
              "Deploy an API call sequence anomaly detection model using a Recurrent Neural Network (RNN). Train the model on legitimate API call sequences from common applications. Score new sequences in real-time and alert when a time-related API call appears in a sequence with a high anomaly score, indicating it is part of an unusual chain of events."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]