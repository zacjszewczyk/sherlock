[
  {
    "information_requirement": "Is the adversary executing commands or code via input injection on enterprise systems?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1674",
        "name": "Input Injection",
        "evidence": [
          {
            "description": "A process command line (CommandLine field), DNS query (query field), or HTTP request (host or uri fields) contains a value that is an exact match to a known-malicious indicator of compromise (IOC) associated with input injection campaigns.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Fleet, DNS Resolvers, Network Egress Points",
            "action": [
              "Join process creation events (Windows Event ID 4688), DNS logs (Zeek dns.log), and HTTP logs (Zeek http.log) against a threat intelligence feed. Alert when the CommandLine, query, host, or uri fields contain a direct match for an IOC tagged with 'Input Injection'.",
              "Establish a 30-day baseline of the hourly count of IOC matches across the enterprise. Calculate the 95th percentile and standard deviation for this baseline. Alert if the current hourly count of matches exceeds the baseline by more than three standard deviations, which could indicate a widespread, coordinated attack.",
              "Train a supervised classification model (e.g., Random Forest) to score the maliciousness of domains and command lines. For domains, use features like TLD, entropy, length, and n-gram frequency. For command lines, use features like argument count, presence of special characters, and keyword frequency. Flag items with a high malicious probability score for investigation."
            ]
          },
          {
            "description": "A process creation event where a common user-facing application (e.g., chrome.exe, outlook.exe, winword.exe) is the direct parent of a command-line interpreter or scripting engine (e.g., powershell.exe, cmd.exe, wscript.exe, cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers, Virtual Desktop Infrastructure (VDI)",
            "action": [
              "Create a detection rule that generates a high-priority alert for specific, high-fidelity parent-child process relationships, such as parent_process_name IN ('chrome.exe', 'iexplore.exe', 'outlook.exe') AND child_process_name IN ('powershell.exe', 'cmd.exe', 'wscript.exe').",
              "For each parent process (e.g., outlook.exe), build a historical baseline of all child processes it has spawned over the past 90 days. Calculate the frequency of each parent-child pair. Alert when a new parent-child pair is observed that has occurred fewer than 5 times across the entire enterprise, flagging it as a rare and suspicious event.",
              "Develop a graph-based anomaly detection model on process lineage data. Represent user sessions as graphs of parent-child relationships and use the model to identify subgraphs that deviate significantly in structure or node attributes from established normal user behavior."
            ]
          },
          {
            "description": "A command-line execution, particularly from powershell.exe, with a command line length or character entropy significantly exceeding established baselines, or containing specific obfuscation patterns like '-EncodedCommand'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers",
            "action": [
              "Scan all command lines from Windows Event ID 4688 for specific high-fidelity strings indicative of obfuscation or remote execution, such as '-EncodedCommand', '-e', '-enc', 'IEX(New-Object Net.WebClient).DownloadString', or '(New-Object System.Net.WebClient).DownloadFile'.",
              "For each process name (e.g., powershell.exe, cmd.exe), compute a 90-day baseline for command line length and Shannon entropy. Alert when a new command line's length or entropy exceeds the 99th percentile of its respective baseline. For any triggered event, automatically attempt to decode Base64 strings for further analysis.",
              "Apply unsupervised clustering (e.g., DBSCAN) to command lines, vectorized using TF-IDF on character n-grams combined with numerical features like length, entropy, and special character counts. Investigate small clusters and points classified as noise/outliers, as they represent command structures that do not conform to established patterns of benign activity."
            ]
          },
          {
            "description": "A series of process creation events from a single parent process ID occurring in a time window that is too short for manual human interaction (e.g., more than 3 processes created in less than 1 second).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Point-of-Sale Terminals, Systems with frequent physical access",
            "action": [
              "Create a stateful rule that triggers when the same ParentProcessID generates more than 3 child processes within a 1-second time window.",
              "Group process creation events (Windows Event ID 4688) by ParentProcessID and userId. Calculate the time difference between consecutive process creations within each group. Establish a baseline of these time deltas for each user. Alert if a user's session contains a sequence of process creations where the average time delta is below the 1st percentile of their historical norm.",
              "Use a time-series anomaly detection model (e.g., LSTM autoencoder) on the rate of process creations per user or per host. Train the model on historical data to learn normal rhythms of activity and alert on sudden, sharp spikes in process creation rate that deviate from the expected pattern."
            ]
          },
          {
            "description": "A web request from a user's browser loads external JavaScript from a domain that is not on an established allowlist for the referring site, particularly when the referring site is a high-value internal or external application (e.g., financial portal, CRM).",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Web Proxies, DMZ",
            "action": [
              "Create a rule that triggers on an HTTP GET request for a .js file where the 'Referer' header domain is an internal or known high-value domain (e.g., *.mycompany.com, bank.com) and the 'Host' header domain is an external domain not present on a pre-defined script-sourcing allowlist.",
              "For each high-value web application (identified by domain in Referer field), maintain a 90-day baseline of all external domains from which it sources scripts (.js files). For each new user session, calculate the Jaccard similarity index between the set of script-sourcing domains in that session and the historical baseline. Alert if the similarity score falls below a threshold (e.g., 0.7).",
              "Train a supervised classification model to detect anomalous HTTP POST requests originating from high-value web applications. Use features from Zeek http.log such as request_body_len, response_body_len, content_type, and the presence of unusual user agents. A high-risk score could indicate that injected JavaScript is manipulating the page or exfiltrating data."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]