[
  {
    "information_requirement": "Is the adversary maintaining persistence using an unquoted service path?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574.009",
        "name": "Path Interception by Unquoted Path",
        "evidence": [
          {
            "description": "A sequence of events is observed on a host: 1. An executable file is created in a world-writable directory that is a parent in an unquoted service path (e.g., `C:\\Program.exe` for a service at `C:\\Program Files\\Some App\\service.exe`). 2. The associated service subsequently restarts. 3. The newly created executable is launched as a process. 4. The new process establishes an external network connection.",
            "data_sources": [
              "Sysmon Event ID 11 (File Create)",
              "Sysmon Event ID 1 (Process Creation)",
              "Windows Event ID 7036 (Service Start/Stop)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry on all endpoints (to identify vulnerable unquoted service paths), file systems of endpoints and servers (especially C:\\ and C:\\Program Files), and network traffic logs at egress points.",
            "action": [
              "Using a SIEM, create a correlation rule that triggers when the following sequence occurs on a single host within a 5-minute window: 1. A file creation event for an executable (Sysmon Event ID 11) in a known vulnerable path (e.g., C:\\Program.exe). 2. A service stop/start event (Windows Event ID 7036) for the associated service. 3. A process creation event (Sysmon Event ID 1) where the process image path matches the newly created file. 4. A network connection event (Zeek conn.log) from the host to an external IP address on a threat intelligence blocklist.",
              "For each executable file creation event (Sysmon Event ID 11) in a root or program files directory, calculate the Shannon entropy of the filename. Concurrently, query all process execution logs to determine the historical prevalence of that filename's hash. Generate an alert if a filename's entropy is in the >95th percentile for that directory OR the filename (e.g., Program.exe) is a known interception target AND its hash is seen for the first time in the environment.",
              "Implement a sequence analysis model, such as a Hidden Markov Model, trained on baseline service behavior (normal start/stop/crash events). The model should ingest event sequences for services with known unquoted paths. Flag a sequence as anomalous if a file creation event (Sysmon Event ID 11) in a vulnerable parent directory is followed by a service restart (Windows Event ID 7036) and a new process creation (Sysmon Event ID 1) from that path, as this state transition significantly deviates from the learned normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has the adversary escalated privileges from a low-privileged user to a high-privileged context using an unquoted service path?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574.009",
        "name": "Path Interception by Unquoted Path",
        "evidence": [
          {
            "description": "A sequence of events is observed on a host: 1. A file creation event for an executable is attributed to a non-administrative user account. 2. The file is placed in a directory that allows interception of a service configured to run with high privileges (e.g., NT AUTHORITY\\SYSTEM). 3. The subsequent process creation event for that executable shows it running in a higher-privileged security context than the user who created the file.",
            "data_sources": [
              "Sysmon Event ID 11 (File Create)",
              "Sysmon Event ID 1 (Process Creation)",
              "Windows Event ID 7036 (Service Start/Stop)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication logs and file systems on multi-user systems like terminal servers and workstations. The Windows Registry (HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services) on all hosts is the NAI for identifying vulnerable service configurations.",
            "action": [
              "Create a detection rule that joins file creation events with process creation events. Trigger an alert if: 1. A file creation event (Sysmon Event ID 11) shows a SubjectUserName not in the 'Domain Admins' or 'Local Administrators' group. 2. The file is an executable created in a path like C:\\ or C:\\Program Files. 3. A subsequent process creation event (Sysmon Event ID 1) for that executable shows the process running with a User context of 'NT AUTHORITY\\SYSTEM'.",
              "For every process creation event (Sysmon Event ID 1) originating from an unquoted service path vulnerability, extract the User field (e.g., 'NT AUTHORITY\\SYSTEM'). Correlate this with the file creation event (Sysmon Event ID 11) for that executable to identify the 'creator' user. Assign a risk score based on the privilege gap (e.g., Standard User to SYSTEM = 100 points). Alert on any process where the risk score exceeds a defined threshold, such as 50 points.",
              "Utilize a graph database to model relationships between users, files, and processes. Ingest Sysmon events to create nodes and edges (e.g., User 'jsmith' -[created]-> File 'C:\\Program.exe'; Process 'Program.exe' -[executed_as]-> User 'SYSTEM'). Train a graph neural network (GNN) to classify subgraphs as malicious or benign. An alert is triggered when the model classifies the specific pattern of 'low-privilege user creates file in vulnerable path that is executed by high-privilege system account' as malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to disable or bypass security controls by exploiting an unquoted service path of a security product?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574.009",
        "name": "Path Interception by Unquoted Path",
        "evidence": [
          {
            "description": "A file creation event for an executable occurs in a parent directory of a known security tool's service path. This is followed by either a service crash event (e.g., Windows Event ID 7034) for that security service or a significant, anomalous drop in telemetry volume from that host's security agent.",
            "data_sources": [
              "Sysmon Event ID 11 (File Create)",
              "Windows Event ID 7034 (Service Crash)",
              "Windows Event ID 7036 (Service Stop/Start)",
              "SIEM internal logs on data source health"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system directories containing security agent installations (e.g., C:\\Program Files\\Windows Defender). Service Control Manager event logs on all endpoints. Log ingestion dashboards and health monitoring views within the SIEM platform.",
            "action": [
              "Maintain a watchlist of critical security services and their executable paths. Create a high-severity alert rule that triggers if: 1. An executable file is created (Sysmon Event ID 11) in a path that could intercept a watchlisted service (e.g., creating C:\\Program.exe when 'C:\\Program Files\\Security Tool\\agent.exe' exists). 2. The corresponding security service crashes (Windows Event ID 7034) or is stopped (Windows Event ID 7036) on the same host within 5 minutes.",
              "For each security agent data source, establish a baseline of log volume per hour per host. Create an alert if the log volume from a host drops by more than 3 standard deviations below its 30-day rolling average for that hour. As an enrichment step, automatically query that host's file creation logs (Sysmon Event ID 11) for any new executables created in vulnerable paths within the 15 minutes preceding the drop.",
              "Deploy an autoencoder model trained on the file manifests (filenames, hashes, paths) of directories containing security tools across the enterprise. The model learns the normal 'file state' of these protected folders. Continuously feed real-time file creation events (Sysmon Event ID 11) into the model. An alert is generated if a new file causes a high reconstruction error, indicating a deviation from the learned benign state, such as the addition of an unauthorized executable."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]