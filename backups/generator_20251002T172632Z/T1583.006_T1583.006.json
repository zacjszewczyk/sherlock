[
  {
    "information_requirement": "Is the adversary developing or leveraging resources using external web services for malicious purposes?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1583.006",
        "name": "Web Services",
        "evidence": [
          {
            "description": "An internal host initiates a network connection to a URL, domain, or IP address hosted on a legitimate web service (e.g., GitHub, Pastebin, Discord) that is present on a threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies)",
            "action": [
              "Correlate outbound network connection logs against threat intelligence feeds. Specifically, match destination IP addresses from Zeek conn.log, requested domains from Zeek dns.log, and full URIs from Zeek http.log against a continuously updated list of known malicious indicators associated with web services. Trigger a high-severity alert on any match.",
              "For all connections to common web services (e.g., GitHub, Pastebin, Discord), calculate the Shannon entropy of the URI path and query parameters from Zeek http.log. Establish a baseline entropy distribution for benign traffic to these services. Flag connections with entropy scores exceeding the 99th percentile, as high entropy may indicate algorithmically generated or randomized C2 URIs.",
              "Train a time-series anomaly detection model (e.g., ARIMA, LSTM) on the volume of traffic (bytes and connection counts from Zeek conn.log) to domains associated with popular web services. Configure the model to alert on significant deviations from the forecasted volume, which could indicate the activation of a C2 channel or large-scale data staging."
            ]
          },
          {
            "description": "An outbound HTTP/S request is made to a URL on a legitimate web service that structurally matches a known pattern for malware staging, tool retrieval, or command and control, and is initiated by an unexpected process.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), Endpoint Devices",
            "action": [
              "Apply regular expressions to Zeek http.log URIs to detect patterns associated with malware staging on services like GitHub, Pastebin, and Discord (e.g., '/raw/', '/download/', 'api.github.com/repos/.*/releases', 'cdn.discordapp.com/attachments/'). Concurrently, match JA3 and JA3S hashes from Zeek ssl.log against a watchlist of known malicious C2 client/server fingerprints.",
              "For requests to code/file hosting sites, analyze the file types identified in Zeek files.log (e.g., 'application/x-dosexec', 'application/x-powershell'). Establish a baseline of expected downloaded file types per user role or department. Flag any user downloading a file type inconsistent with their role (e.g., an HR user downloading a PowerShell script from GitHub), especially if the file's 'seen_bytes' size is small (<10KB), suggesting a stager.",
              "Use a trained classification model (e.g., Random Forest, Gradient Boosting) on features extracted from network and host logs (e.g., URI length, number of query parameters from http.log; user-agent string rarity; JA3 hash from ssl.log; parent process name from Event ID 4688) to classify each connection to a web service as 'benign' or 'suspicious C2-like'. Alert on connections classified as suspicious with high confidence."
            ]
          },
          {
            "description": "A user's web browsing activity shows a statistically significant increase in requests to URIs associated with account creation, API key management, or new repository setup, inconsistent with their established job role and baseline behavior.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments (User Workstations), DNS Resolvers, Network Egress Points",
            "action": [
              "Create and apply a watchlist of URI paths and keywords related to resource creation (e.g., '/signup', '/join', '/new', 'settings/tokens', 'generate_key', 'create-repo'). Generate an alert whenever a single user accesses pages matching these keywords across multiple distinct web services (e.g., >3 services) within a short time window (e.g., 1 hour).",
              "For each user, establish a 30-day rolling baseline of the count of visits to resource-creation-related pages. Use a Z-score to detect outliers, flagging any user whose daily or weekly activity exceeds 3 standard deviations from their historical norm. This can indicate a compromised account being used for resource setup.",
              "Employ a peer group analysis model by clustering users based on web browsing habits (e.g., TF-IDF of domains visited, content-type of pages). Identify users whose activity profile deviates significantly from their assigned cluster, particularly with a sudden spike in visits to development or infrastructure-related web services not typical for their peer group."
            ]
          },
          {
            "description": "An internal host uploads or downloads data to or from a legitimate web service where the transfer size, frequency, or data entropy is statistically anomalous compared to a historical baseline for that host or its peer group.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), Endpoint Devices",
            "action": [
              "Define a rule that alerts on any single file upload to a non-corporate file-sharing or code-hosting service that exceeds a static threshold (e.g., 100MB). Additionally, alert on repeated small uploads (e.g., >10 uploads in 5 minutes) to the same destination, which may indicate chunked data exfiltration.",
              "For each host-service pair (e.g., host A to github.com), create a baseline of upload/download sizes using 'orig_bytes' and 'resp_bytes' from Zeek conn.log. Alert when a transfer size exceeds the 95th percentile of the historical distribution for that pair. Additionally, calculate the entropy of file contents from Zeek files.log; a consistently high entropy (>7.5) may indicate encrypted or packed data staging.",
              "Use a clustering algorithm (e.g., DBSCAN) on connection features from Zeek conn.log (e.g., total bytes, duration, protocol, service) for traffic to web services. Identify and alert on clusters that represent anomalous behavior, such as 'short duration, high byte count' connections which may represent rapid tool staging, or 'long duration, low byte count' connections which may indicate a beaconing C2 channel."
            ]
          },
          {
            "description": "An internal host connects to a resource (e.g., a specific GitHub repository, Pastebin URL) on a legitimate web service that has never been accessed before by any host in the organization and is subsequently accessed by a very small number of other internal hosts.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS Resolvers, Network Egress Points",
            "action": [
              "Maintain a stateful lookup table of all fully-qualified domain names (FQDNs) and URLs historically accessed by the organization, derived from Zeek dns.log and http.log. Generate an alert when a request is made to a FQDN/URL on a high-risk service (e.g., *.github.io, *.pastebin.com, *.discord.com) that is not in the historical table.",
              "For each newly observed FQDN or URL, calculate its prevalence by counting the number of distinct internal hosts that access it within the first 24 hours of observation. Flag any resource where the access count is extremely low (e.g., 1-3 hosts), as this is a common pattern for targeted or testing-phase C2 infrastructure.",
              "For each parent domain of a popular web service (e.g., github.io, pastebin.com), model the rate of new subdomain or URL path discovery over time. Use a time-series forecasting model (e.g., Prophet) to predict the expected number of new resources. Trigger an alert if the actual number of newly seen resources in a given time window significantly exceeds the forecast, which could indicate an adversary setting up multiple resources at once."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]