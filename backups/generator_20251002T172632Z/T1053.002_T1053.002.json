[
  {
    "information_requirement": "Is the adversary executing code using scheduled tasks via the 'at' utility?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1053.002",
        "name": "At",
        "evidence": [
          {
            "description": "A scheduled task is created (Windows Event ID 4698) or its process executes (Windows Event ID 4688) containing command line arguments with a file hash, domain, or IP address that matches an entry in an active threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Standard User Workstations, Network Egress Points",
            "action": [
              "Search process creation logs (Windows Event ID 4688) and task creation logs (Windows Event ID 4698). Parse command line arguments to extract file hashes, domains, and IP addresses. Correlate these extracted observables against a threat intelligence blocklist. Generate a high-priority alert for any match.",
              "For each process spawned by a scheduled task, join with network connection logs (Zeek conn.log) on source IP and timestamp. Calculate the prevalence of each destination IP address across the enterprise over the last 30 days. Flag connections to destination IPs that fall below the 1st percentile of prevalence for further investigation.",
              "Extract features from command-line strings in process events (Windows Event ID 4688), including string length, character entropy, and presence of IP/domain patterns. Use a trained logistic regression model to score the likelihood that a command is malicious. Alert on commands executed by scheduled tasks that exceed a probability threshold of 0.8."
            ]
          },
          {
            "description": "Execution of the deprecated 'at.exe' binary (Windows Event ID 4688), or creation of a scheduled task via the 'Win32_ScheduledJob' WMI class (Windows WMI-Activity Event ID 5861), which subsequently spawns a script interpreter (e.g., powershell.exe, cmd.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4698",
              "Microsoft-Windows-WMI-Activity/Operational Event ID 5861"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0/1 Servers, Standard User Workstations",
            "action": [
              "Create a detection rule that generates a critical alert for any process creation event (Windows Event ID 4688) where the process image is 'C:\\Windows\\System32\\at.exe'. Since this utility is deprecated on modern systems, any execution is highly suspicious and warrants immediate investigation.",
              "Build a baseline of normal parent-child process relationships for the Task Scheduler service host (svchost.exe). Monitor for new process creation events (Windows Event ID 4688) where the parent is svchost.exe and the child is a script interpreter (powershell.exe, cmd.exe, cscript.exe, wscript.exe). Calculate the frequency of each unique parent-child-commandline combination and alert on combinations that are new or fall in the bottom 1st percentile of historical frequency.",
              "From WMI execution events (Windows WMI-Activity Event ID 5861), extract features such as the client process ID, the user context, and the text of the WMI query. Use an Isolation Forest model trained on legitimate WMI activity to identify anomalous WMI-based scheduling events that deviate from established patterns."
            ]
          },
          {
            "description": "A child process is spawned by the Task Scheduler service (taskeng.exe on older systems, svchost.exe on modern systems) whose process name, command-line arguments, or file path occurs with a frequency below a defined threshold (e.g., 1st percentile) compared to a 30-day historical baseline of legitimate scheduled tasks.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Maintain and query an allow-list of known-good executables run by the Task Scheduler. Alert on any process execution (Windows Event ID 4688 with parent process svchost.exe or taskeng.exe) where the child process name is not on the list.",
              "For all child processes of the Task Scheduler service, calculate the frequency of each unique command-line string over the last 30 days. Alert on command lines that fall into the lowest frequency percentile (e.g., 1st percentile), indicating they are rare across the environment.",
              "Use an unsupervised clustering algorithm (e.g., DBSCAN) on process event features (process path, command line entropy, parent process) to group scheduled task executions. Investigate small or isolated clusters as they represent anomalous activity that deviates from common, legitimate task behavior."
            ]
          },
          {
            "description": "A scheduled task's action is configured to execute a binary located in a user-writable or non-standard system directory (e.g., %APPDATA%, %TEMP%, C:\\Users\\Public\\).",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard User Workstations, Multi-user Servers (e.g., Citrix, RDS)",
            "action": [
              "Create a detection rule that alerts when the executable path in a task creation event (Windows Event ID 4698) or process execution event (Windows Event ID 4688) matches a pattern for user-writable locations like '\\Users\\', '\\Temp\\', '\\ProgramData\\', or '\\Perflogs'.",
              "Profile the frequency of all executable parent directories for processes spawned by scheduled tasks over the last 90 days. Any directory that is statistically rare (e.g., below the 5th percentile) should be flagged as a potential non-standard execution location.",
              "Train a Naive Bayes classifier to distinguish between legitimate and suspicious file paths based on features like path depth, directory name semantics (e.g., presence of random characters), and file extension. Apply this model to executable paths found in scheduled task events to produce a risk score."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using scheduled tasks via the 'at' utility for persistence?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1053.002",
        "name": "At",
        "evidence": [
          {
            "description": "A scheduled task is created with a persistence trigger (e.g., logon, startup), and its associated process subsequently initiates a network connection to a domain or IP address on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Network Egress Points, DNS Servers",
            "action": [
              "Upon detection of a task with a persistence trigger (e.g., LogonType not 'None' in Windows Event ID 4698), correlate the process execution (Windows Event ID 4688) with subsequent network connections (Zeek conn.log). Match destination IPs against an IOC blocklist and alert on any hits.",
              "For processes spawned by persistent scheduled tasks, analyze the Shannon entropy of their DNS queries (Zeek dns.log) over a 5-minute window. A consistently high entropy score (e.g., > 3.5) can indicate the use of a Domain Generation Algorithm (DGA) for C2 communication.",
              "Use a time-series analysis model (e.g., ARIMA) to monitor outbound network traffic volume and connection counts (Zeek conn.log) for processes associated with persistent tasks. Detect periodic, 'heartbeat' patterns indicative of C2 beaconing, even to unknown destinations."
            ]
          },
          {
            "description": "A scheduled task is created (Windows Event ID 4698) or updated (Windows Event ID 4702) with a trigger for system startup, user logon, or a recurrence interval of less than 15 minutes, where the task is not associated with a known software installation or administrative script.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4702"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, All Windows Endpoints and Servers",
            "action": [
              "Create a rule to alert on any task creation (Windows Event ID 4698) or update (Windows Event ID 4702) that includes a logon or startup trigger, or a repetition interval of less than 15 minutes, and is not on a pre-defined allow-list of administrative tasks.",
              "Establish a baseline of task trigger types and user contexts across the environment. Alert when a new task's trigger configuration (e.g., 'At logon' combined with a non-admin creator) is a statistical outlier (e.g., a combination seen less than 5 times) compared to all other tasks.",
              "Use a one-class SVM trained on legitimate task properties (trigger type, author, command path, binary signature) to detect novel or anomalous task configurations. This can identify persistence mechanisms that use unusual combinations of legitimate-seeming attributes."
            ]
          },
          {
            "description": "A scheduled task is created (Windows Event ID 4698) and is not subsequently deleted (Windows Event ID 4699) within a 24-hour window, and cannot be correlated with a change management ticket, software deployment, or patching activity.",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4699"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Configuration Management Database (CMDB), All Windows Endpoints and Servers",
            "action": [
              "Join task creation events (Windows Event ID 4698) with task deletion events (Windows Event ID 4699) by Task Name and Host. Alert on any task that persists beyond a defined threshold (e.g., 30 days) and is not on an allow-list of known-good persistent tasks.",
              "Analyze the distribution of scheduled task lifespans (time between creation and deletion). Flag newly created tasks whose intended lifespan (based on configuration) or observed lifespan falls in the upper percentile (e.g., 99th) and are not from a known software installer.",
              "Use Natural Language Processing (NLP) models to parse task names and descriptions from Windows Event ID 4698 to classify them into categories like 'Software Update', 'Admin Script', or 'Unknown'. Persisting tasks classified as 'Unknown' should be prioritized for investigation."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using scheduled tasks via the 'at' utility?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege-Escalation",
    "indicators": [
      {
        "technique_id": "T1053.002",
        "name": "At",
        "evidence": [
          {
            "description": "A file executed by a scheduled task has a hash that matches a known privilege escalation tool, exploit (e.g., Potato exploits), or credential theft utility (e.g., Mimikatz).",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially Domain Controllers and Tier 0/1 Servers",
            "action": [
              "Upon task execution (Windows Event ID 4688), hash the executable file and check it against a threat intelligence feed of known hacking tools. An alert should be generated on any confirmed match.",
              "Profile the prevalence of file hashes executed by scheduled tasks across the enterprise. Any hash that is unique or seen on fewer than 5 machines should be flagged for analysis, as privilege escalation tools are not typically widespread.",
              "Utilize a pre-trained machine learning model that analyzes PE file features (e.g., imports, sections, entropy) to classify binaries as malicious. When a scheduled task executes a previously unseen binary, submit its features to the model to obtain a risk score and alert if it exceeds a threshold."
            ]
          },
          {
            "description": "A process spawned by a scheduled task running with SYSTEM privileges (NT AUTHORITY\\SYSTEM) executes commands known to be used for privilege escalation, such as creating a new local administrator ('net user /add') or modifying a service ('sc.exe config').",
            "data_sources": [
              "Windows Event ID 4698",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Administrator Workstations",
            "action": [
              "Create a high-severity alert for any process (Windows Event ID 4688) that is a child of the task scheduler service, runs as SYSTEM, and has a command line containing regex patterns for privilege escalation such as 'net user .* /add', 'net localgroup administrators .* /add', or 'sc.exe create'.",
              "For all commands executed by SYSTEM-level scheduled tasks, establish a baseline of common administrative command patterns. Use n-gram analysis on command-line arguments to flag command sequences that are statistically improbable compared to the baseline.",
              "Train a sequence-based model (e.g., an LSTM) on the typical command-line histories for hosts running sensitive workloads. An alert is generated if a privileged command executed by a task represents a significant deviation from the learned legitimate sequences of system administration."
            ]
          },
          {
            "description": "A task creation event (Windows Event ID 4698) shows the 'Subject User Name' (creator) is a standard, non-administrative user, but the task is configured to run as 'NT AUTHORITY\\SYSTEM' or another privileged account.",
            "data_sources": [
              "Windows Event ID 4698"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Create a high-severity alert for any task creation event (Windows Event ID 4698) where the 'SubjectUserSid' does not belong to a privileged group (e.g., Domain Admins, BUILTIN\\Administrators) but the task's 'Principal/UserId' is 'S-1-5-18' (SYSTEM).",
              "For each user, calculate the ratio of tasks they create that run as a privileged account versus tasks that run as themselves. Flag users whose ratio is a statistical outlier (e.g., > 3 standard deviations above the organizational mean), indicating an abnormal pattern of creating high-privilege tasks.",
              "Use an anomaly detection algorithm (e.g., Isolation Forest) on task creation events, using features like the creator's account privileges, the 'run-as' account privileges, the host, and time of day. This can identify unusual combinations that signify a misconfiguration being exploited or an active privilege escalation attempt."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]