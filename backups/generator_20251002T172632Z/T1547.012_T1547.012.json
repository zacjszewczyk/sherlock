[
  {
    "information_requirement": "Is the adversary maintaining persistence by installing a malicious print processor?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.012",
        "name": "Print Processors",
        "evidence": [
          {
            "description": "A file is created in a system's print processor directory (e.g., C:\\Windows\\System32\\spool\\prtprocs\\[arch]) with a hash matching a known-malicious file or a filename with anomalously high entropy.",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs on all Windows endpoints and servers, particularly Domain Controllers, print servers, and critical application servers.",
            "action": [
              "Symbolic: Create a detection rule to monitor file creation events (Sysmon Event ID 11) where the 'TargetFilename' field contains '\\spool\\prtprocs\\'. Extract the file hash from the event's 'Hashes' field and compare it against threat intelligence feeds of known malicious hashes. Alert on any match.",
              "Statistical: For each file creation event in the print processor directory, calculate the Shannon entropy of the filename. Establish a baseline of filename entropy for legitimate print processor DLLs (e.g., 'winprint.dll'). Alert on any new filename whose entropy score exceeds the 95th percentile of the established baseline, indicating probable use of a randomized name.",
              "Machine Learning: Train a logistic regression classifier on file creation events in the print processor directory. Use features such as filename entropy, file size, the name of the process that wrote the file, and whether the hash is new to the environment. Classify each new file creation event, flagging those with a high probability of being malicious for analyst review."
            ]
          },
          {
            "description": "The print spooler service (spoolsv.exe) loads a DLL that is unsigned or has an invalid signature, or a file is written to the print processor directory by a process not associated with legitimate software installation.",
            "data_sources": [
              "Windows Event ID 7",
              "Windows Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process module load and file creation logs from all Windows hosts, especially servers and developer workstations.",
            "action": [
              "Symbolic: Create a rule that triggers when a Sysmon Event ID 7 event shows 'ImageLoaded' is 'spoolsv.exe' and the 'Signed' field is 'false' or 'SignatureStatus' is not 'Valid'. Correlate with file creation events (Sysmon Event ID 11) in the print processor directory where the writing process ('Image' field) is a script interpreter like 'powershell.exe', 'cmd.exe', or 'cscript.exe'.",
              "Statistical: For all file writes to the print processor directory, establish a baseline of legitimate parent processes (e.g., 'msiexec.exe', 'svchost.exe'). Calculate the frequency of each parent process writing to this directory across the enterprise over a 90-day period. Alert on any write from a parent process with a frequency below a 1% threshold, indicating it is an extremely rare event.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features from DLL load events by 'spoolsv.exe'. Key features include signature status, the entropy of the loaded DLL's filename, and the file path. Identify and alert on outliers that do not group with clusters of known-good system or driver DLLs."
            ]
          },
          {
            "description": "A file creation event in the print processor directory is followed within a short time window by a registry modification that registers the new file as a print processor DLL.",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 13",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry and file system audit logs from all Windows endpoints and servers.",
            "action": [
              "Symbolic: Implement a correlation rule that triggers when a file creation event (Sysmon Event ID 11) in a path containing '\\spool\\prtprocs\\' is followed on the same host within 60 seconds by a registry value-set event (Sysmon Event ID 13 or Windows Security Event ID 4657). The registry 'TargetObject' must contain '\\Control\\Print\\Environments\\' and '\\Print Processors\\', and the registry data must reference the filename from the file creation event.",
              "Statistical: For each host, calculate the time delta between file writes to the print processor directory and subsequent registry writes to the corresponding print processor hive. A time delta that is more than three standard deviations shorter than the host's baseline average for this activity (if one exists) suggests automated adversary scripting and should be flagged.",
              "Machine Learning: Develop a sequence analysis model, such as a Hidden Markov Model (HMM), trained on event sequences from legitimate software installations. Feed host event streams (file creates, registry sets, process starts) into the model. Flag any sequence that registers a low probability score, indicating a deviation from normal installation behavior, such as the direct 'file write -> registry write' pattern without intermediary installer process events."
            ]
          },
          {
            "description": "The print spooler service (spoolsv.exe) initiates an outbound network connection to a rare, suspicious, or known-malicious destination for command and control.",
            "data_sources": [
              "Windows Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint network connection logs (Sysmon) and network sensor logs (Zeek) at internet gateways and other key network chokepoints.",
            "action": [
              "Symbolic: Monitor network connection events (Sysmon Event ID 3) and Zeek logs where the initiating process is 'spoolsv.exe'. Enrich the destination IP/domain and check against threat intelligence feeds for known C2 servers. Alert on any positive match or any connection to a destination not on a pre-defined allowlist of legitimate update servers.",
              "Statistical: For all network connections originating from 'spoolsv.exe', calculate a risk score based on the rarity of the destination IP, destination port, requested domain (from Zeek dns.log), and JA3/JA3S hash (from Zeek ssl.log). Sum the inverse frequencies of these features and alert when the combined score exceeds the 98th percentile for the environment.",
              "Machine Learning: Apply time-series anomaly detection (e.g., SARIMA) to the volume, frequency, and data size of network connections from 'spoolsv.exe' on a per-host basis. Train the model on historical data to predict expected traffic patterns. Generate an alert when a significant deviation from the forecast occurs, such as a new, periodic, low-volume connection pattern (heartbeat) characteristic of a C2 channel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges to SYSTEM by abusing the print spooler service?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.012",
        "name": "Print Processors",
        "evidence": [
          {
            "description": "The spoolsv.exe process, running with SYSTEM privileges, loads a DLL whose hash matches a known malicious indicator or exhibits high entropy suggesting it is packed.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process module load logs on all Windows endpoints and servers.",
            "action": [
              "Symbolic: Continuously monitor image load events (Sysmon Event ID 7) where the process 'Image' is 'spoolsv.exe'. Extract the hash (e.g., SHA256) of the loaded DLL from the 'Hashes' field. Alert immediately if this hash matches any entry in a CTI database of malicious files.",
              "Statistical: For all DLLs loaded by 'spoolsv.exe', calculate the file entropy of the DLL. Establish a baseline entropy distribution for legitimate DLLs loaded by the service. Flag any loaded DLL whose file entropy is an outlier (e.g., >7.5, or exceeding 3 standard deviations from the mean), as this can indicate packed or encrypted malicious code.",
              "Machine Learning: Train a decision tree classifier on features of DLLs loaded by 'spoolsv.exe', including 'IsSigned' status, 'SignatureStatus', file entropy, and whether the DLL path is outside of standard system directories (e.g., System32, WinSXS). Use the model to classify each load event as 'benign' or 'suspicious', with 'suspicious' indicating potential privilege escalation."
            ]
          },
          {
            "description": "A registry key is written to the Print Processors hive (HKLM\\SYSTEM\\...\\Print Processors\\...) by a user or process not associated with legitimate software installation or administrative activity.",
            "data_sources": [
              "Windows Event ID 13",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry audit logs on all Windows endpoints and servers, especially high-value assets.",
            "action": [
              "Symbolic: Create a rule to alert on registry write events (Sysmon Event ID 13, Windows Event ID 4657) to any key path containing '\\Control\\Print\\Environments\\' and '\\Print Processors\\'. The rule should trigger if the 'SubjectUserName' or 'User' field is not 'NT AUTHORITY\\SYSTEM' and the 'ProcessName' or 'Image' is not on an allowlist of known installers (e.g., 'msiexec.exe', 'TrustedInstaller.exe').",
              "Statistical: Maintain a baseline of user account and process pairs that have legitimately modified the Print Processors registry hive over the last 90 days. Calculate the frequency of each pair performing this action. Alert when a modification is performed by a user/process pair that has a frequency of zero in the established baseline (i.e., a novel actor).",
              "Machine Learning: Use an unsupervised learning model like Isolation Forest on registry write events targeting the Print Processors hive. Features should include the source process path, user context (e.g., SYSTEM vs. a standard user), time of day, and parent process. The model will learn normal modification patterns and flag anomalous events that deviate significantly."
            ]
          },
          {
            "description": "The spoolsv.exe process, running as SYSTEM, spawns an anomalous child process, such as a command shell or a network tool, indicating post-escalation activity.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process creation logs, including full command-line arguments, from all Windows hosts.",
            "action": [
              "Symbolic: Monitor process creation events (Sysmon Event ID 1, Windows Event ID 4688) where the 'ParentImage' or 'ParentProcessName' is 'spoolsv.exe'. Alert if the child process name ('Image' or 'NewProcessName') is on a watchlist of suspicious tools, including 'cmd.exe', 'powershell.exe', 'net.exe', 'whoami.exe', 'rundll32.exe', or 'pwsh.exe'.",
              "Statistical: Establish an enterprise-wide baseline of all legitimate child processes spawned by 'spoolsv.exe'. Calculate the frequency of each unique parent-child process relationship. Alert when 'spoolsv.exe' spawns a child process that has never been observed before in the baseline or has an extremely low frequency of occurrence (e.g., appears on <0.1% of endpoints).",
              "Machine Learning: Train a classifier (e.g., Random Forest) to distinguish between legitimate and malicious process command lines. For child processes of 'spoolsv.exe', extract features from the 'CommandLine' field, such as length, entropy, special character count, and presence of encoded or web-based commands. Use the trained model to score each new command line, flagging those classified as malicious."
            ]
          },
          {
            "description": "A file is created in the print processor directory by a non-SYSTEM account, immediately followed by a restart of the Print Spooler service outside of a scheduled system reboot or patching window.",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system audit logs and Windows System event logs from all Windows endpoints and servers.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a file creation event (Sysmon Event ID 11) in '\\spool\\prtprocs\\' by a user other than 'NT AUTHORITY\\SYSTEM' is followed within 5 minutes on the same host by a Windows System Event ID 7036 indicating the 'Print Spooler' service has been stopped and then started.",
              "Statistical: Analyze the timing of Print Spooler service restarts (Event ID 7036, where Param1='Print Spooler' and Param2='running'). Build a historical distribution of restart times per host and for the environment. Flag any restart that occurs at a statistically anomalous time (e.g., outside of business hours for endpoints, outside maintenance windows for servers), especially if preceded by file or registry modifications to print processor components.",
              "Machine Learning: Use a time-series anomaly detection model on the frequency of Print Spooler service restarts per host. The model will learn the normal cadence of restarts related to system boots and patching. An alert is generated for a spike in restarts that deviates from the learned pattern, which, when correlated with preceding file or registry modifications, strongly indicates an adversary forcing the service to load their malicious DLL for privilege escalation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]