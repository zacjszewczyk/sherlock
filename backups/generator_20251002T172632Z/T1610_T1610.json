[
  {
    "information_requirement": "Is the adversary executing commands or code by deploying containers?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1610",
        "name": "Deploy Container",
        "evidence": [
          {
            "description": "A container is deployed using an image name or tag that matches an entry on a threat intelligence feed of known malicious or dual-use container images (e.g., public cryptominers, C2 frameworks, or penetration testing distributions).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek docker.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container Registries (internal and external), Docker Hosts, Kubernetes Cluster API Server, Developer Workstations",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 4688) or container logs (Zeek docker.log), parse command lines for 'docker run', 'kubectl apply', or 'ctr run' to extract the image name and tag. Alert if the extracted image name matches a known-bad entry in a container image threat intelligence list.",
              "Statistical: For all container image deployments, calculate the frequency of each image name observed over a 30-day rolling window. Flag images that fall below a 5th percentile frequency threshold as anomalously rare. Adversaries often use unique or newly created image names to avoid signature-based detection.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on known-good and known-bad container image names. Engineer features such as string length, character entropy, n-gram frequency, presence of hexadecimal characters, and matches against a dictionary of common software terms. Use the model to score new image names for their likelihood of being malicious or algorithmically generated."
            ]
          },
          {
            "description": "A container deployment command includes arguments indicative of suspicious execution, such as invoking a shell to run a downloaded script (e.g., 'curl ... | sh'), a reverse shell one-liner, or utilizes host-level namespaces ('--net=host', '--pid=host') to bypass container segmentation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek docker.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Docker Hosts, Kubernetes Worker Nodes, CI/CD Pipelines, Container Orchestration API",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 4688), parse the command-line arguments of container run commands. Use regular expressions to search for and alert on patterns such as 'bash -i', 'nc -e', 'powershell IEX', 'curl...|...sh', or flags like '--net=host' and '--pid=host'.",
              "Statistical: For all container deployment commands, calculate the character entropy of the command-line arguments passed to the container's entrypoint or command. Establish a baseline entropy score for legitimate applications. Flag deployments where the command entropy exceeds 3 standard deviations from the mean, which can indicate obfuscated or encoded payloads.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., Prophet) on the daily frequency of deployments containing suspicious commands or flags (e.g., '--net=host'). A sudden, unexplained spike in the usage of these flags compared to a historical baseline could indicate a coordinated attack campaign."
            ]
          },
          {
            "description": "Within 10 minutes of a container deployment event on a host, that same host initiates network connections to an IP address or domain with a low reputation score, or exhibits a periodic, 'heartbeat' pattern of communication (low jitter, consistent size) indicative of Command and Control (C2) beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Gateways), Docker Hosts, DNS Servers",
            "action": [
              "Symbolic: Correlate container deployment events (Windows Event ID 4688) with subsequent DNS queries (Zeek dns.log) and TCP/UDP connections (Zeek conn.log) from the host's source IP address. Alert if the host connects to any destination IP or domain present on a C2 threat intelligence feed within 10 minutes of the deployment.",
              "Statistical: For each host IP following a container deployment, analyze connection logs (Zeek conn.log) to a single destination. Calculate the jitter (standard deviation of time between connections) and the standard deviation of data volume per connection. A jitter below 1 second and a low packet size deviation are characteristic of C2 beaconing and should be flagged if they fall below a statistically determined threshold.",
              "Machine Learning: Apply a time-series decomposition model (e.g., Seasonal-Trend-Loess) to the outgoing network traffic volume from a host following a container deployment. A strong, previously unseen periodic component in the time series is a high-fidelity indicator of automated beaconing activity and should trigger an alert for analyst investigation."
            ]
          },
          {
            "description": "A container deployment command is executed by a user account not belonging to a pre-defined 'container administrators' or 'CI/CD service accounts' group, or is executed by a service account from an interactive logon session (e.g., Logon Type 2).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers (Active Directory), Docker Hosts, Kubernetes Master Nodes, CI/CD Runners",
            "action": [
              "Symbolic: For each container deployment event (Windows Event ID 4688), enrich the executing user account with its Active Directory group memberships. Alert if the user is not a member of an authorized group. Correlate the Logon ID with login events (Windows Event ID 4624) and alert if the Logon Type is Interactive (Type 2) for a known service account.",
              "Statistical: Build a baseline of (user, source host) pairs that perform container deployments. For each new deployment, calculate the historical frequency of that specific pair. Deployments from pairs that have never been seen before or fall below a 1st percentile frequency should be scored as high risk and flagged for review.",
              "Machine Learning: Train a one-class SVM or Isolation Forest model on legitimate container deployment events, using features like user account, source hostname, time of day, and day of week. Use this model to classify new deployment events as 'inliers' (normal) or 'outliers' (anomalous) and alert on any outliers."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by deploying containers?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1610",
        "name": "Deploy Container",
        "evidence": [
          {
            "description": "A container is deployed using an image and tag that is associated with a published high or critical severity vulnerability (CVE) in a vulnerability database, especially CVEs enabling remote code execution, privilege escalation, or container escape.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek docker.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container Registries, Docker Hosts, Vulnerability Scanners/Databases",
            "action": [
              "Symbolic: Extract container image names from deployment commands (Windows Event ID 4688). Query a vulnerability database API with the image name and tag. Alert on any deployment of an image with a critical CVE related to container escape (e.g., CVE-2019-5736 'runc escape').",
              "Statistical: Periodically scan all running containers and baseline the 'vulnerability surface' (e.g., count of critical CVEs per host). Use a CUSUM control chart to monitor this metric over time. A sharp, sustained increase in the total number of critical vulnerabilities introduced into the environment via new container deployments should trigger an alert.",
              "Machine Learning: Develop a risk score for each container image by training a regression model (e.g., Gradient Boosting) on vulnerability data. Features should include the CVSS score of the highest CVE, the total number of critical vulnerabilities, the age of the vulnerabilities, and whether public exploits are available. Flag deployments of images with a predicted risk score above a learned threshold."
            ]
          },
          {
            "description": "A container deployment command includes arguments that grant excessive permissions, such as '--privileged', or maps sensitive host directories (e.g., '/', '/proc', '/var/run/docker.sock') into the container as a volume mount ('-v').",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek docker.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Docker Hosts, Kubernetes Worker Nodes, Container Orchestration API",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 4688), parse 'docker run' commands. Use regular expressions to create high-severity alerts for flags like '--privileged', '--pid=host', '--ipc=host', or volume mounts mapping host root paths like '/', '/etc', '/root', or '/var/run/docker.sock'.",
              "Statistical: Create an allow-list of approved volume mounts and privileged flags for specific, legitimate applications. For all deployments, calculate the frequency of each flag and mount path used. Alert on the use of any flag or mount not on the allow-list, and flag any rarely used (e.g., less than 1% frequency) privileged configurations for review.",
              "Machine Learning: Train a binary classification model (e.g., Logistic Regression) to distinguish between legitimate and suspicious container configurations. Use features such as a binary flag for each privileged option, a count of volume mounts, and the sensitivity of mounted paths (e.g., score paths based on a tiered system). Use this model to score every deployment, alerting on those classified as suspicious."
            ]
          },
          {
            "description": "Immediately following a container deployment, the host initiates HTTP requests to the cloud metadata service IP (169.254.169.254) to steal credentials, or performs horizontal network scanning, characterized by a high volume of connection attempts from a single source to many unique internal IPs over a short time frame.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Instance Metadata Service Endpoint, Internal Network Segments, Docker Hosts",
            "action": [
              "Symbolic: In network logs (Zeek http.log), create an alert for any HTTP GET request to '169.254.169.254/latest/meta-data/iam/security-credentials/' originating from a container host, as this is a direct attempt to steal IAM role credentials.",
              "Statistical: For each container host (source IP) in Zeek conn.log, calculate the number of unique destination IPs contacted on any single port within a 5-minute window. A count of unique destination IPs exceeding a 99th percentile baseline for that host or host group is indicative of horizontal scanning and should be flagged.",
              "Machine Learning: Use a graph-based anomaly detection algorithm on network flow data (Zeek conn.log). Model hosts as nodes and connections as edges with attributes like duration and port. A newly deployed container host that rapidly creates a large number of new, low-duration edges to many previously unconnected nodes (a 'starburst' pattern) is anomalous and likely represents a network scan."
            ]
          },
          {
            "description": "A container is deployed using a non-standard network mode (e.g., '--network=host') or by creating new host-to-container port mappings ('-p') that expose services not typically associated with the application's baseline or that bypass internal network segmentation controls.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek docker.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Docker Hosts, Network Gateways, Container Network Interfaces",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 4688), parse container deployment commands for the '--network' flag. Maintain a list of approved network names (e.g., 'prod-net', 'dev-net') and alert on any deployment that specifies a network not on this list or uses '--network=host' outside of an approved exception.",
              "Statistical: Baseline the set of ports exposed ('-p' flag) by each known application. For new deployments, flag any exposed ports that are not part of the application's established baseline. Calculate the frequency of all exposed ports across the environment and flag the exposure of rare ports (e.g., below 1st percentile frequency) for review.",
              "Machine Learning: Train an autoencoder on vectors representing normal network configurations for deployments (e.g., one-hot encoded network mode, multi-hot encoded exposed ports). A high reconstruction error when processing a new deployment's configuration indicates a deviation from learned normal patterns and should be flagged as anomalous."
            ]
          }
        ]
      }
    ],
    "version": "2.3",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]