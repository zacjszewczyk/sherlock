[
  {
    "information_requirement": "Is the adversary escalating privileges using Process Doppelg\u00e4nging?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.013",
        "name": "Process Doppelg\u00e4nging",
        "evidence": [
          {
            "description": "The observation of a process creation event (Sysmon Event ID 1) where the parent process hash is found on a threat intelligence feed for Process Doppelg\u00e4nging tools, and the child process image path points to a legitimate system binary (e.g., svchost.exe, csc.exe).",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Executive Workstations, All Windows Servers",
            "action": [
              "Create a real-time detection rule that joins process creation events (Sysmon Event ID 1) with a threat intelligence list of file hashes for known Process Doppelg\u00e4nging tools. Alert when a known malicious hash is observed for the ParentImage and the Image field corresponds to a common system binary (e.g., svchost.exe, explorer.exe, csc.exe).",
              "For each process creation event, calculate the Shannon entropy of the ParentCommandLine field. Establish a baseline entropy score for common parent processes (e.g., explorer.exe, services.exe) over a 30-day period. Alert when a parent process instance exhibits a command-line entropy that exceeds the 99th percentile of its established baseline, suggesting obfuscated parameters.",
              "Train a supervised classification model (e.g., Gradient Boosting) using features from Sysmon Event ID 1, such as ParentImage, Image, CommandLine length, user context, and session ID. The model should be trained on labeled datasets of benign and malicious process creations to classify new events as suspicious, specifically focusing on patterns associated with Process Doppelg\u00e4nging."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) is observed where a common user-facing application (e.g., winword.exe, acrord32.exe, chrome.exe) is the parent process spawning a core system child process (e.g., svchost.exe, lsass.exe), and the child process's 'Token Elevation Type' is 'Type 2' (%%1937), indicating the use of an elevated token which is anomalous for this parent-child relationship.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers, Virtual Desktop Infrastructure (VDI)",
            "action": [
              "Create a detection rule that triggers when a 'Creator Process Name' from a defined list of user applications (e.g., winword.exe, excel.exe, powershell.exe, chrome.exe) spawns a 'New Process Name' from a list of core system binaries (e.g., lsass.exe, services.exe, csrss.exe, csc.exe) and the 'Token Elevation Type' is '%%1937'.",
              "Query all process creation events (Windows Event ID 4688) over a 30-day rolling window to compute the frequency of every unique parent-child process pair. Generate an alert for any observed pair that falls into the bottom 1st percentile of frequency across the enterprise, as this indicates a statistically rare and potentially malicious event.",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to process creation event features, including parent process name, child process name, user session ID, and token elevation type. Identify and investigate clusters classified as noise or outliers, as these may represent one-off malicious actions like process injection from an unusual parent context."
            ]
          },
          {
            "description": "A process, previously identified as suspicious via an anomalous creation event, subsequently requests access (Sysmon Event ID 10) to the 'lsass.exe' process with high-privilege access rights (e.g., 0x1010 for PROCESS_VM_READ and PROCESS_QUERY_INFORMATION) or attempts a read operation (Windows Event ID 4663) on the SAM database file (%windir%\\system32\\config\\SAM).",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Authentication Servers, Credential Stores",
            "action": [
              "Create a correlation rule that triggers when a Process ID from a high-risk process creation alert (e.g., from an anomalous parent-child pair) is seen as the SubjectProcessId within 60 seconds in an object access event (Sysmon Event ID 10) targeting lsass.exe with GrantedAccess rights including '0x1010'.",
              "For all processes that access lsass.exe (Sysmon Event ID 10), create a frequency distribution of the source process image names over a 30-day baseline. Alert when a process image name that is statistically rare (e.g., not in the top 95% of common accessors like svchost.exe or security agents) performs this action.",
              "Develop a sequence analysis model, such as a Hidden Markov Model (HMM), trained on event sequences following process creation. Train the model to recognize malicious state transitions, like 'Anomalous Process Creation' -> 'Process Access to lsass.exe' -> 'Outbound Network Connection'. Flag sequences with a low probability under the benign model as potential attacks."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using Process Doppelg\u00e4nging?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.013",
        "name": "Process Doppelg\u00e4nging",
        "evidence": [
          {
            "description": "Anomalous use of Transactional NTFS (TxF) APIs is observed, such as a process calling the sequence CreateTransaction -> CreateFileTransacted -> RollbackTransaction in a short time window. This pattern is highly indicative of Process Doppelg\u00e4nging, as these APIs are deprecated and rarely used by legitimate software.",
            "data_sources": [
              "EDR Telemetry (API Monitoring)",
              "Sysmon Event ID 26 (FileCreateTransacted)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Create a detection rule that triggers when a single process ID generates API calls for CreateTransaction, CreateFileTransacted, and RollbackTransaction within a 5-second window. Exclude known software updater and installer processes from this rule's scope.",
              "Generate a list of all unique processes that call any TxF-related API (e.g., CreateFileTransacted from Sysmon Event ID 26) over a 30-day period. Alert on any process executing these calls that is not on an established allow-list of known good installers or system components, as this represents a statistically rare behavior.",
              "Train a sequence-to-sequence (Seq2Seq) autoencoder model on API call sequences from benign processes. Feed real-time API call sequences from processes into the model. A high reconstruction error for a given sequence indicates it is anomalous and does not match learned benign patterns, potentially identifying the specific TxF abuse sequence."
            ]
          },
          {
            "description": "A legitimate-appearing system process (e.g., svchost.exe, explorer.exe, csc.exe), identified by its process name and path, initiates an outbound network connection (Zeek conn.log, Sysmon Event ID 3) to a destination IP or domain present on a threat intelligence feed, or to a domain with a creation date of less than 30 days old.",
            "data_sources": [
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies), DNS Servers, All Windows Endpoints",
            "action": [
              "Correlate network connection logs (Sysmon Event ID 3) with DNS query logs (Zeek dns.log). Alert if the destination IP or resolved CNAME matches a known malicious indicator from a threat intelligence feed and the 'Image' field in the Sysmon event is a common system binary not typically associated with direct internet access (e.g. csc.exe, services.exe).",
              "For all DNS requests (Zeek dns.log), calculate the Shannon entropy of the queried domain and check its WHOIS registration age. Assign a risk score to connections (Zeek conn.log) where the domain is younger than 30 days or has entropy > 3.5. Alert if a system process (from Sysmon Event ID 3) initiates a connection with a high cumulative risk score.",
              "Train an anomaly detection model (e.g., an Isolation Forest) on network connection metadata (bytes sent/received, duration, protocol, destination port) from Sysmon Event ID 3, specifically for whitelisted system processes. The model learns the normal network behavior profile for processes like 'svchost.exe'. Flag any new connection with a high anomaly score, indicating it deviates from the learned benign profile."
            ]
          },
          {
            "description": "A process creation event (Sysmon Event ID 1) is observed where the 'Image' field points to a legitimate, signed Microsoft executable, but its 'ParentImage' is an unlikely process (e.g., winword.exe, chrome.exe) or its 'CommandLine' is null when one is typically expected for that process.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Terminal Servers",
            "action": [
              "Define a tree of expected parent-child relationships for critical system processes (e.g., 'wininit.exe' -> 'services.exe' -> 'svchost.exe'). Create a rule to alert on any process creation event (Sysmon Event ID 1) that violates this defined process lineage, for example, 'svchost.exe' being parented by 'explorer.exe'.",
              "For each critical system process (e.g., 'rundll32.exe', 'csc.exe'), build a statistical baseline of its command-line length and token count over 30 days. Flag any instance where the command line is an outlier, such as a length of zero when the mean is greater than 10, or a length that is more than 3 standard deviations from the mean.",
              "Train a One-Class SVM model on benign process creation event features (parent image, command line structure, user) for a specific system process like 'rundll32.exe'. Use the trained model in production to identify any new creation events for that process that the model classifies as an outlier, indicating potential masquerading or abuse."
            ]
          },
          {
            "description": "A process identified by name as a standard system utility (e.g., svchost.exe, csc.exe) exhibits network beaconing behavior, defined as periodic, fixed-interval outbound connections with low data volume jitter, or connections to non-standard ports for common protocols.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon Event ID 3",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS recursive resolvers, Endpoint Devices",
            "action": [
              "Use Zeek's native analysis to generate notices in 'notice.log' for events like 'C2::Beaconing' or 'SSL::Invalid_Server_Cert'. Create a correlation rule to join the source IP of these notices with process network events (Sysmon Event ID 3) to identify if a legitimate-looking system process is the source of the suspicious traffic within a 5-minute window.",
              "For each source-destination IP pair in network logs (Zeek conn.log), group connections by hour and calculate the standard deviation of the time delta between consecutive connections. A standard deviation below 1.0 second indicates highly periodic beaconing. Further risk-score this activity if the protocol is unexpected or the source process (via Sysmon Event ID 3) is a system binary.",
              "Apply a time-series forecasting model (e.g., ARIMA) to the volume of outbound data per-process, per-hour (from Sysmon Event ID 3 and Zeek conn.log). Generate an alert when the actual data volume significantly exceeds the forecasted volume and its confidence interval, suggesting unexpected C2 communication from a doppelg\u00e4nged process."
            ]
          },
          {
            "description": "A process associated with a core system binary (e.g., runtimebroker.exe, services.exe, csc.exe) spawns a child process indicative of interactive command-line use or reconnaissance activity, such as cmd.exe, powershell.exe, whoami.exe, net.exe, or ipconfig.exe.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Internal Web Servers, Developer Workstations",
            "action": [
              "Create a high-severity alert rule for any event (Sysmon Event ID 1) where the 'ParentImage' is a core system process (e.g., svchost.exe, lsass.exe, services.exe, csc.exe) and the 'Image' is an interactive shell or reconnaissance tool (e.g., cmd.exe, powershell.exe, whoami.exe, net.exe, nltest.exe).",
              "Build a historical baseline of all child processes spawned by each system process across the enterprise using Sysmon Event ID 1 data. Alert when a system process spawns a child image name that has never been observed before for that parent or is in the lowest 1st percentile of historical frequency.",
              "Construct a process relationship graph where processes are nodes and parent-child relationships are edges. Apply a community detection algorithm (e.g., Louvain Modularity) to identify normal clusters of activity. An event such as 'svchost.exe' spawning 'cmd.exe' would create an anomalous edge between two normally separate communities, flagging it as a high-risk 'bridge' event to be investigated."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]