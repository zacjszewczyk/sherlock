[
  {
    "information_requirement": "Is the adversary exploiting software vulnerabilities to disable or bypass our defensive security controls?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1211",
        "name": "Exploitation for Defense Evasion",
        "evidence": [
          {
            "description": "Observed network traffic matching signatures of known exploits targeting security software vulnerabilities, or anomalous protocol communication from security agents that indicates a successful bypass.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, and internal network segments monitoring security tool management servers.",
            "action": [
              "Symbolic: Apply a continuously updated set of network-based intrusion detection signatures against traffic logs. Scan Zeek http.log and conn.log for specific strings, headers, or patterns (e.g., User-Agents, URI patterns) matching known exploits for vulnerabilities in common enterprise security products.",
              "Statistical: Analyze the entropy of payloads sent to or from security management servers and agents using Zeek files.log or conn.log. Establish a baseline of payload entropy over a 30-day period. Alert on any traffic flow where the entropy exceeds the 99th percentile of the baseline, as this can indicate obfuscated exploit code or encrypted C2 from a compromised agent.",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA) on the volume of traffic per protocol for each security agent. Generate an alert if the observed traffic volume significantly deviates from the forecasted volume, as a sudden spike or drop could indicate a compromised agent being used for unauthorized communication or a disabled agent, respectively."
            ]
          },
          {
            "description": "Process execution event where the process name or command-line arguments match known exploit tools or scripts designed to disable or bypass security products.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations and servers, particularly those hosting security management consoles or critical applications.",
            "action": [
              "Symbolic: Search process creation events (Windows Event ID 4688) where the 'NewProcessName' or 'CommandLine' field matches a watchlist of known exploit tool names and arguments (e.g., 'Disable-WindowsDefender.ps1', 'av_killer.exe', 'dumpert.exe'). Use regular expressions for broader matching.",
              "Statistical: Calculate the rarity of command-line arguments used with legitimate system utilities that can interact with services (e.g., sc.exe, taskkill.exe, powershell.exe). An argument combination targeting a security service process that is statistically rare across the enterprise (e.g., in the bottom 1% of frequency) is a high-confidence indicator of a targeted attack.",
              "Machine Learning: Use a classification model (e.g., Logistic Regression) trained on command-line strings to classify them as benign or malicious. Features can include n-grams, string length, presence of special characters, and keyword matching. A high 'malicious' probability score for a command targeting a security process indicates a likely exploit attempt."
            ]
          },
          {
            "description": "A security software process or service crashing or terminating unexpectedly, immediately followed by suspicious activity on the same host.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Windows Event ID 4688",
              "Windows Event ID 7034",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations and servers, especially Domain Controllers and other high-value assets.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a security service crash event (Windows Event ID 7034 'service terminated unexpectedly', 1000/1001 'application error') is followed within 5 minutes on the same host by a process creation event (Windows Event ID 4688) for a known discovery tool (whoami.exe, ipconfig.exe, net.exe) or an unsigned process.",
              "Statistical: For each host, establish a baseline of security software crash/termination frequency. Trigger an alert if the number of crashes on a host exceeds a statistical threshold (e.g., 3 standard deviations above the mean or the 95th percentile) within a rolling 1-hour window, which may indicate repeated, potentially unsuccessful, exploit attempts.",
              "Machine Learning: Use a sequence analysis model (e.g., a Hidden Markov Model) to learn normal sequences of system events on a host. A sequence involving a security process termination followed by anomalous network connections (e.g., to a new external IP in Zeek conn.log) and subsequent process creations would be flagged as a low-probability, high-risk sequence indicative of successful exploitation."
            ]
          },
          {
            "description": "Observation of a file hash, network indicator, or process behavior previously logged as 'blocked' by a security tool now being successfully executed or accessed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek file.log",
              "Zeek conn.log",
              "Security tool alert logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log aggregation platform (SIEM), endpoint workstations and servers, network egress points (Firewalls/Proxies).",
            "action": [
              "Symbolic: Maintain a dynamic watchlist of file hashes, domains, and IPs from all security tool 'block' or 'prevent' alerts. Create a high-priority rule to alert if any of these indicators are subsequently observed in an 'allow' or 'success' event, such as a process execution (Windows Event ID 4688) or a successful network connection (Zeek conn.log).",
              "Statistical: For each security control, monitor the time series of its 'block' alert volume, categorized by alert type. Use statistical change point detection to automatically identify a sudden and sustained drop to zero for a rule that historically triggers frequently. Such a drop may indicate the underlying control was disabled or bypassed.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., Prophet or LSTM) to forecast the expected volume of key security alerts ('Malware Blocked', 'C2 Domain Blocked'). Generate an alert when the actual alert count falls significantly below the forecasted lower-bound confidence interval for a sustained period, suggesting the underlying sensor has been evaded or disabled."
            ]
          },
          {
            "description": "An untrusted parent process (e.g., Microsoft Office application) writes a file to disk which is then loaded (e.g., as a DLL) by a separate, high-privilege process or a known security software process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek file.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations and servers, user home directories, and temporary file locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp).",
            "action": [
              "Symbolic: Create a detection that chains events: 1) A file write event (Windows Event ID 4663) from a parent process like WINWORD.EXE or OUTLOOK.EXE to a temporary location. 2) A subsequent process creation event (Windows Event ID 4688) where the command line of a high-privilege or security process references the written file, indicating it is being loaded.",
              "Statistical: Analyze parent-child process relationships across the environment. Calculate the frequency of a security tool process (e.g., MsMpEng.exe, WDFB.exe) being the child of an Office application or web browser. This relationship's frequency should be effectively zero; any instance is a high-confidence statistical anomaly that warrants immediate investigation.",
              "Machine Learning: Use a graph-based analysis model to build a visual representation of process, file, and network activities. An anomalous path in the graph representing 'Office App -> writes -> DLL -> loaded by -> Security Agent Process' would be identified as a highly improbable subgraph, indicative of an exploit chain for defense evasion."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]