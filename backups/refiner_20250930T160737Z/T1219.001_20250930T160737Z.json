[
  {
    "information_requirement": "Is the adversary using IDE tunneling for command and control?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1219.001",
        "name": "IDE Tunneling",
        "evidence": [
          {
            "description": "An outbound network connection from a known IDE process (e.g., code.exe, jetbrains_client.exe) to a destination IP address or domain present on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, Egress Network Points (Firewalls/Proxies), DNS Servers",
            "action": [
              "Symbolic: Correlate process creation events (Windows Event ID 4688) for known IDEs with outbound network connections (Zeek conn.log) from the same host. Join the destination IP or the resolved domain (from Zeek dns.log) against a threat intelligence feed of known malicious C2 servers. Alert on any match.",
              "Statistical: For all domains contacted by IDE processes, calculate the rarity of each domain across the enterprise over a 30-day window. Alert on connections to domains in the bottom 5th percentile of prevalence, as these may represent newly established C2 infrastructure not yet present in threat intelligence feeds.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from Zeek conn.log and dns.log (e.g., TTL, number of associated IPs, domain length, character entropy) to predict whether a domain is legitimate or malicious. Apply this model in real-time to domains contacted by IDE processes and alert on high-probability malicious classifications."
            ]
          },
          {
            "description": "Execution of an IDE tunneling command-line tool (e.g., 'code tunnel') with suspicious arguments, or the presence of an outbound TLS connection with a JA3/S hash or Server Name Indication (SNI) value not matching an established allowlist for authorized remote development services.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, Virtual Development Environments (VDEs), Egress Network Points",
            "action": [
              "Symbolic: Create a hunting rule to search process command-line arguments (Windows Event ID 4688) for the execution of 'code tunnel' or 'gh cs tunnel'. Alert if executed by a non-developer user account or if the command includes unexpected persistence or sharing arguments.",
              "Statistical: For all TLS connections (Zeek ssl.log), establish a baseline of common JA3/S hashes and SNIs associated with legitimate IDE tunneling services (e.g., VS Code, GitHub Codespaces, JetBrains Gateway). Calculate the frequency of all JA3/S hashes observed from developer workstations. Alert on the appearance of low-frequency or previously unseen JA3/S hashes originating from IDE-related processes.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features extracted from TLS handshakes (JA3/S hash, SNI, cipher suites) to group similar connections. Label clusters corresponding to known, legitimate services. Monitor for and alert on the emergence of new, small clusters or connections that are classified as outliers, especially when originating from IDE processes."
            ]
          },
          {
            "description": "The presence and execution of IDE-related processes (e.g., code.exe) or the installation of IDE-related services on a host not designated as a developer workstation in the asset inventory, such as a domain controller or production server.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Servers (Domain Controllers, Database Servers), Executive Laptops, Financial Department Workstations",
            "action": [
              "Symbolic: Maintain an asset group of authorized developer workstations. Create a detection rule that alerts whenever a process creation event (Windows Event ID 4688) for a known IDE executable or a service installation event (Windows Event ID 7045) for an IDE-related service occurs on a host not belonging to this group.",
              "Statistical: For each host group (e.g., web servers, domain controllers), establish a baseline of authorized software using frequency analysis of process execution events. Alert if an IDE-related process is executed on a host where its historical execution frequency is zero.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on the software profile (set of running processes) of critical server groups. The model learns the boundary of 'normal' software behavior. Apply the model to detect any host that deviates from this norm, specifically flagging alerts where the anomalous process is an IDE or tunneling tool."
            ]
          },
          {
            "description": "An outbound network connection from an IDE process that exhibits characteristics anomalous to typical interactive developer sessions, such as an unusually long duration, high data volume, or a highly periodic 'heartbeat' pattern.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, Egress Network Points, Cloud Development Environments",
            "action": [
              "Symbolic: Define a rule that flags any connection from a known IDE process (correlated from Windows Event ID 4688 and Zeek conn.log) that remains active for longer than a static threshold (e.g., 24 hours) or transfers more than a set amount of data (e.g., 10 GB) in a single session.",
              "Statistical: For each developer user, establish a baseline profile of their typical IDE network activity, including 95th percentile for session duration and data transferred. Alert when a new session exceeds these statistical thresholds. Additionally, calculate the entropy of inter-packet arrival times for long-lived connections; a very low entropy can indicate automated, periodic C2 beaconing.",
              "Machine Learning: Apply a time-series anomaly detection model (e.g., ARIMA or LSTM) to the bytes_out and connection duration metrics for all connections associated with IDE processes. The model will learn the normal rhythm and volume of developer traffic. Alert on connections that the model flags as significant anomalies, which could represent data exfiltration or persistent C2 communications."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]