[
  {
    "information_requirement": "Is the adversary staging or utilizing pre-positioned capabilities to support operations against the network? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1608",
        "name": "Stage Capabilities",
        "evidence": [
          {
            "description": "A confirmed match exists between an outbound network connection's destination (IP, domain, or URL) and an entry on a high-confidence threat intelligence feed categorizing the destination as malicious infrastructure (e.g., C2, malware distribution point).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., Firewalls, Web Proxies), DNS resolvers",
            "action": [
              "Symbolic Logic: Continuously join network logs (Zeek conn.log destination IPs, http.log host headers, dns.log queries) with a diverse set of CTI feeds (updated at least hourly) that list known malicious indicators. Alert on any exact matches.",
              "Statistical Method: Calculate the prevalence of connections to each external destination IP/domain across the organization. Destinations that are both rare (e.g., contacted by < 1% of hosts) and present on a lower-confidence or grey-list CTI feed should have their risk score elevated for further analysis.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on labeled datasets of malicious and benign network flows. Features should include CTI feed matches, destination port, data volume, and domain/IP reputation scores to classify new outbound connections and identify C2 traffic that evades simple signature matching."
            ]
          },
          {
            "description": "An outbound HTTP or TLS connection contains an artifact (User-Agent, URI path, JA3/JA3S hash) that matches a known signature for a malware family or C2 framework.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., Firewalls, Web Proxies)",
            "action": [
              "Symbolic Logic: Scan Zeek http.log for known malicious User-Agent strings and URI patterns from a regularly updated signature list. Similarly, compare JA3 and JA3S hashes from Zeek ssl.log against a list of known fingerprints for adversary tools (e.g., Cobalt Strike, Metasploit). Alert on any direct matches.",
              "Statistical Method: Establish a baseline of common JA3/JA3S hashes and User-Agent strings across the enterprise. Calculate the rarity of each observed artifact and flag connections using artifacts that fall below a prevalence threshold (e.g., seen in less than 0.1% of all connections or on fewer than 5 hosts).",
              "Machine Learning: Use unsupervised clustering algorithms (e.g., DBSCAN) on features extracted from TLS handshakes (JA3, cipher suites, extensions) and HTTP headers. Identify and investigate small, anomalous clusters of traffic that deviate from large clusters representing normal browser and application activity to discover unknown C2 channels."
            ]
          },
          {
            "description": "An outbound connection is established to a destination using a non-standard port for the observed protocol, a self-signed TLS certificate, a certificate with a validity period of less than 90 days, or a domain resolving from a dynamic DNS provider.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points (e.g., Firewalls, Web Proxies), DNS resolvers",
            "action": [
              "Symbolic Logic: Create rules to alert on specific high-risk conditions: (1) HTTP/TLS traffic over any port other than 80/443, (2) TLS connections where the issuer and subject fields of the certificate are identical (indicating self-signed), and (3) DNS queries for hostnames within known dynamic DNS provider domains (e.g., no-ip.com, duckdns.org).",
              "Statistical Method: For all TLS connections, calculate the distribution of certificate validity durations. Flag any certificates in the lower 5th percentile (e.g., validity < 90 days), as adversaries often use short-lived certificates. Similarly, baseline port usage per application protocol and flag connections where the port is a statistical outlier for that service.",
              "Machine Learning: Develop a time series anomaly detection model (e.g., ARIMA) for the daily count of new certificate issuers seen across the network. A sudden spike in previously unseen certificate authorities or subjects can indicate an adversary staging new C2 infrastructure or a large-scale phishing campaign."
            ]
          },
          {
            "description": "An internal host resolves or connects to a domain that was registered within the last 60 days (Newly Registered Domain), has a high character entropy score, or has a small Levenshtein distance to a known high-value domain (typosquat).",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers, Egress points (e.g., Firewalls, Web Proxies)",
            "action": [
              "Symbolic Logic: Enrich Zeek dns.log data with WHOIS information to identify the domain registration date and alert on connections to domains registered within the last 60 days. Maintain a list of high-value domains and use string comparison (e.g., Levenshtein distance < 3) to alert on potential typosquatting.",
              "Statistical Method: For each queried domain name in Zeek dns.log, calculate the Shannon entropy of the character distribution. Establish a baseline for normal entropy scores and flag domains with entropy scores in the top 5th percentile, a common characteristic of Domain Generation Algorithms (DGAs).",
              "Machine Learning: Train a classifier (e.g., a Long Short-Term Memory network) on a labeled dataset of DGA and legitimate domain names. Use this model to predict in real-time the probability that a newly observed domain is algorithmically generated, detecting DGAs that evade simpler statistical methods."
            ]
          },
          {
            "description": "A file (executable, script, or archive) is downloaded from a public file-sharing or code repository, and within 5 minutes, a new process is created on the same host involving the execution of that file or a file extracted from it.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Egress points (e.g., Web Proxies)",
            "action": [
              "Symbolic Logic: Create a correlation rule: IF a file is downloaded from a raw content delivery domain (e.g., raw.githubusercontent.com, pastebin.com/raw/) AND a new process creation event (Windows Event ID 4688) is observed on the same host within 5 minutes with a command line matching the downloaded filename, THEN generate a high-severity alert.",
              "Statistical Method: For each host, create a baseline of file types and source domains for downloads. Calculate the frequency of downloads for file types like .exe, .ps1, .bat, and .zip. Alert when a host downloads a file type from a source that is a statistical outlier for that host or its peer group (e.g., a user in accounting downloads a .ps1 from GitHub).",
              "Machine Learning: Use a time series analysis model to monitor the volume of data downloaded from code/file sharing sites per user. Anomaly detection models (e.g., Seasonal-Hybrid ESD) can identify sudden, uncharacteristic spikes in download activity, which could indicate bulk downloading of malicious tools from a staged repository."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]