[
  {
    "information_requirement": "Is the adversary building malicious container images on hosts to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1612",
        "name": "Build Image on Host",
        "evidence": [
          {
            "description": "A container build process, identified by the execution of 'docker build' or similar commands, initiates network connections to destination IPs/domains present on a threat intelligence feed, or involves files whose hashes match known malicious indicators.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host systems, CI/CD pipeline servers, Network egress points, DNS resolvers",
            "action": [
              "Symbolic: Correlate container build process command-line logs (Windows Event ID 4688) with network connection logs (Zeek conn.log, dns.log) from the same host within a 5-minute window. Join the destination IP or resolved domain against a threat intelligence feed of known malicious indicators. Alert on any match.",
              "Statistical: For each build process, calculate the entropy of requested domain names (from Zeek dns.log). Establish a baseline of domain entropy for legitimate builds. Flag any build whose associated domain entropy exceeds the 95th percentile of the baseline, indicating potential DGA or unusual domain usage.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features extracted from network connections during builds, such as JA3/JA3S hashes, destination port, data volume, and connection duration. Use the model to classify each build's network profile as 'benign' or 'suspicious'. Investigate builds classified as 'suspicious' with high confidence."
            ]
          },
          {
            "description": "A container build command (e.g., 'docker build', 'buildah build') is executed with command-line arguments or flags associated with defense evasion or obfuscation, such as non-standard Dockerfile paths or disabling the cache.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host systems, Developer workstations, CI/CD pipeline servers",
            "action": [
              "Symbolic: Scan process creation logs (Windows Event ID 4688) for 'docker build' commands. Match command-line arguments against a curated list of suspicious patterns, such as '--no-cache', '-f /tmp/*', '-f /var/tmp/*', or piping from `curl` or `wget`. Alert on any match.",
              "Statistical: For each user, establish a baseline of frequently used 'docker build' command-line arguments and flags. Calculate the Jaccard similarity score between the arguments of a new build command and the user's historical baseline. Flag commands with a similarity score below a threshold (e.g., < 0.2), indicating a significant deviation from normal behavior.",
              "Machine Learning: Use an anomaly detection algorithm (e.g., Isolation Forest) on tokenized command-line arguments from all 'docker build' events. The model will learn common patterns. Flag commands that are identified as outliers, suggesting they are structurally different from the majority of legitimate build commands."
            ]
          },
          {
            "description": "A container build process is executed on a host not explicitly categorized as a build server (e.g., a domain controller, database server) or by a user account not belonging to a developer or CI/CD service group.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain controllers, Production application servers, Database servers, Container host systems, Identity and Access Management (IAM) systems",
            "action": [
              "Symbolic: Maintain an explicit allow-list of authorized build server hostnames and authorized user/service accounts. Create a rule to alert whenever a 'docker build' process (Windows Event ID 4688) is detected where the 'Hostname' or 'SubjectUserName' is not on the respective allow-list.",
              "Statistical: For each host, profile the frequency of build commands over a 30-day rolling window. Alert if a build command occurs on a host where the historical build frequency is zero or falls below the 1st percentile for all hosts (i.e., it is an extremely rare event for that host type).",
              "Machine Learning: Train a One-Class SVM model on feature vectors representing legitimate build events, including categorical features for the user's department, host role, and time of day. Use the model to classify new build events. Flag any event classified as an anomaly, indicating it does not conform to the profile of legitimate activity."
            ]
          },
          {
            "description": "During a container build, the host establishes network connections to external IP addresses or domains that are not on an approved list of container registries, software repositories, or other legitimate resources.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, Container host systems",
            "action": [
              "Symbolic: During the timeframe of a 'docker build' process (Windows Event ID 4688), monitor associated network connections (Zeek conn.log, Zeek dns.log). Compare destination domains/IPs against an allow-list of approved registries (e.g., docker.io, gcr.io, quay.io, internal artifactory). Alert on any connection to a destination not on the list.",
              "Statistical: Profile the distribution of destination Autonomous System Numbers (ASNs) for all network connections made during build processes. Establish a baseline of common ASNs (e.g., Google, Amazon, Microsoft). Alert when a build process connects to an ASN that falls outside the top 98% of most frequently used ASNs, indicating a connection to a rare or residential ISP.",
              "Machine Learning: Employ a time series forecasting model (e.g., ARIMA) to predict the expected volume of data transferred (orig_bytes + resp_bytes from Zeek conn.log) to non-allow-listed destinations during a build. An actual data transfer volume that significantly exceeds the forecasted value (e.g., > 3 standard deviations) indicates an anomalous download and should be flagged."
            ]
          },
          {
            "description": "A multi-stage event sequence is observed on a single host: 1) A 'docker build' command completes, creating a new image. 2) The newly created image is used to launch a container via 'docker run' within a short time window. 3) The new container immediately initiates suspicious network or process activity.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host systems, Network egress points, Internal network segments",
            "action": [
              "Symbolic: Create a correlation rule that triggers when: (1) a 'docker build' process (Event ID 4688) is followed by (2) a 'docker run' process (Event ID 4688) using the new image tag within 5 minutes on the same host, and (3) the container's subsequent network traffic (Zeek conn.log) includes connections to a known C2 IP address from a threat feed.",
              "Statistical: For the sequence 'build followed by run', analyze the resulting container's network traffic (Zeek conn.log). Calculate the periodicity of outbound connections to a single destination IP using the standard deviation of time deltas between connections. A very low standard deviation (e.g., < 1 second for a 60-second beacon) indicates highly regular, machine-generated beaconing activity and should be alerted.",
              "Machine Learning: Use a sequence analysis model (e.g., a Hidden Markov Model or LSTM) trained on sequences of events (process creation, network connection, file modification) following legitimate container deployments. Feed the event sequence following a 'build-then-run' event into the model. Flag sequences with a low probability score, indicating they deviate from normal post-deployment behavior."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]