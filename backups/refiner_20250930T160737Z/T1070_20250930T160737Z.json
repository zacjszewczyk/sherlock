[
  {
    "information_requirement": "Is the adversary attempting to remove indicators of compromise to evade detection?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1070",
        "name": "Indicator Removal",
        "evidence": [
          {
            "description": "Execution of a known indicator removal tool, identified by file hash, or a built-in utility with a specific command-line signature associated with wiping artifacts.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, Exchange), user endpoints, central log repositories.",
            "action": [
              "Create a detection rule that triggers on process creation (Windows Event ID 4688) where the process hash matches a known indicator removal tool (e.g., SDelete, BCWipe) or the command line contains highly specific malicious patterns (e.g., `wevtutil cl Security`, `sdelete -accepteula`).",
              "For all command-line executions, calculate the entropy of the command string. Establish a baseline entropy score for common administrative commands. Flag commands with an entropy score in the top 99th percentile, which can indicate obfuscation often used by malicious tools.",
              "Train a supervised classification model (e.g., Random Forest) on labeled command-line data (Windows Event ID 4688) to predict maliciousness. Features should include command length, presence of special characters, use of specific keywords (e.g., 'delete', 'clear', 'remove'), and n-gram analysis of the command string."
            ]
          },
          {
            "description": "The clearing of a high-value Windows Event Log, identified by the generation of a specific, high-fidelity event ID.",
            "data_sources": [
              "Windows Event ID 1102",
              "Windows Event ID 104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, member servers, critical workstations, Security Information and Event Management (SIEM) platform.",
            "action": [
              "Create a high-priority alert that triggers immediately upon the generation of Windows Event ID 1102 ('The audit log was cleared') or Windows Event ID 104 ('The log file was cleared'). This is a high-fidelity indicator of malicious activity.",
              "Analyze the frequency of Event ID 1102/104 per user and host over time. While the baseline frequency should be near zero, establish a statistical threshold (e.g., more than one occurrence in a 90-day period for a non-security-administrator account) to identify anomalous clearing activity.",
              "Use an anomaly detection model on the time series of log volumes ingested into the SIEM from critical hosts. A sudden, unexplained drop in log volume from a specific host, especially following other suspicious activity, can indicate that logging has been cleared or disabled."
            ]
          },
          {
            "description": "Execution of built-in utilities (vssadmin.exe, fsutil.exe) with specific command parameters to delete forensic artifacts like Volume Shadow Copies or the USN Journal.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, database servers, endpoints of privileged users, backup servers.",
            "action": [
              "Create a detection rule that triggers on process creation (Windows Event ID 4688) for `vssadmin.exe` with command-line arguments containing 'delete shadows' or `fsutil.exe` with arguments containing 'usn deletejournal'. Alert on any match.",
              "Establish a baseline for the execution frequency of `vssadmin.exe` and `fsutil.exe` per host and user. Alert when the execution count for a user or host exceeds a statistically significant threshold (e.g., 99th percentile) within a short time window (e.g., 1 hour).",
              "Develop a sequence analysis model that identifies a chain of suspicious commands. Train the model to detect a pattern where discovery commands (e.g., `vssadmin list shadows`) are followed shortly by deletion commands (e.g., `vssadmin delete shadows /all`)."
            ]
          },
          {
            "description": "A statistically significant spike in file deletion activity, such as wiping entire directories or mass deletion of specific file types, deviating from baseline user or system behavior.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical file shares, user profile directories, application installation directories, system directories (e.g., System32).",
            "action": [
              "Monitor process creation events (Windows Event ID 4688) for the execution of commands known for mass deletion, such as `del /F /S /Q`, `cipher /w:`, or PowerShell's `Remove-Item -Recurse -Force` targeting sensitive directories.",
              "For each user and host, establish a baseline of file deletion counts (Windows Event ID 4663 with DELETE access) per hour. Use descriptive statistics to alert when the number of deletions in an hour exceeds a high percentile (e.g., 99th) or is more than 3 standard deviations above the mean for that entity.",
              "Implement a time-series anomaly detection model on file deletion counts per critical directory (NAI). A sudden, sharp spike in deletions that deviates significantly from the historical pattern indicates potential indicator removal."
            ]
          },
          {
            "description": "A change to the system audit policy that disables or reduces the level of logging, identified by a specific event ID or command-line execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4719"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers (for Group Policy Objects), all Windows endpoints and servers, log management infrastructure.",
            "action": [
              "Create a high-priority alert for any instance of Windows Event ID 4719 ('System audit policy was changed'). Additionally, alert on process creation (Windows Event ID 4688) of `auditpol.exe` or `wevtutil.exe` with command-line arguments that disable or reduce logging (e.g., `/set /success:disable`, `/enabled:false`).",
              "Periodically query endpoints for their audit policy configuration and compare it against a 'golden image' baseline. Use statistical analysis to identify hosts with outlier configurations or an unusual number of policy deviations from the baseline.",
              "Train a classification model to distinguish between legitimate and malicious audit policy changes. Features could include the user making the change, time of day, specific policies modified, and correlation with preceding suspicious activity."
            ]
          },
          {
            "description": "Modification of a file's timestamps (timestomping) to match those of legitimate system files, identified via tool execution or statistical analysis of file metadata.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System directories (e.g., C:\\Windows\\System32), temporary directories, user profile directories where malware may be staged.",
            "action": [
              "Monitor process creation (Windows Event ID 4688) for the execution of known timestomping utilities (e.g., `touch.exe`) or PowerShell commands containing `.CreationTime=`, `.LastAccessTime=`, or `.LastWriteTime=`.",
              "Periodically scan critical directories and calculate the delta between file Creation, Modified, and Accessed timestamps. Statistically analyze the distribution of timestamps within a directory; files with timestamps that are significant outliers from the local cluster of timestamps are suspicious.",
              "Use an unsupervised clustering algorithm (e.g., DBSCAN) on the timestamps of files within a directory. Files that do not belong to the main cluster (i.e., are identified as noise or outliers) are candidates for timestomping."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]