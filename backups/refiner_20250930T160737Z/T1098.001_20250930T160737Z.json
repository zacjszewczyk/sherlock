[
  {
    "information_requirement": "Is the adversary establishing persistence by adding cloud credentials?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1098.001",
        "name": "Additional Cloud Credentials",
        "evidence": [
          {
            "description": "A cloud credential modification API call (e.g., AWS CreateAccessKey, Azure UpdateApplication/addSecret) originates from an IP address associated with a known malicious actor, anonymizing proxy, or TOR exit node.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service Endpoints, Internet Gateway, Threat Intelligence Platform",
            "action": [
              "Symbolic: Correlate the source IP address for credential modification events against a threat intelligence feed of known malicious IPs, anonymizers, or TOR exit nodes. Generate an alert for any match.",
              "Statistical: For each user, calculate the entropy of the set of source Autonomous System Numbers (ASNs) used for credential modifications over the last 90 days. A sudden, high-entropy event (i.e., a modification from a new or very rare ASN for that user) that exceeds the 95th percentile of historical entropy scores indicates anomalous activity.",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA) on the volume of credential modification events per geographic location. An observed volume from a specific country that significantly deviates from the forecasted range indicates a potential targeted campaign or compromised account."
            ]
          },
          {
            "description": "A cloud management tool (e.g., aws.exe, az.exe) or script (e.g., PowerShell) is executed on an endpoint to add new credentials to a cloud identity, and the execution context is anomalous (e.g., performed by a non-administrative user or on a non-standard host).",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrative Workstations, Cloud-connected Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a rule that triggers when a process creation event (Windows Event ID 4688) for a cloud CLI tool (`aws.exe`, `az.exe`, `gcloud.exe`) is observed on a host not in the 'Cloud Administrators' asset group, and the process is executed by a user not in the 'Cloud Administrators' user group.",
              "Statistical: Establish a baseline of parent-child process relationships for cloud CLI tools. Calculate the frequency of each relationship. Flag any execution where the parent process is statistically rare (e.g., `winword.exe` spawning `powershell.exe` which then calls `az.exe`), falling below a 5% frequency threshold.",
              "Machine Learning: Use a classification model (e.g., Random Forest) trained on features from process execution events (user, host, parent process, command-line arguments) and associated network logs to classify each cloud CLI execution as 'benign' or 'suspicious'. A 'suspicious' classification for a credential modification action would trigger an alert."
            ]
          },
          {
            "description": "An existing user or service principal adds new credentials to an identity in a manner that deviates from its established behavioral baseline, such as at an unusual time or to an unusual target.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Identity Provider (IdP) Systems, Cloud Audit Log Aggregation Platform",
            "action": [
              "Symbolic: Define a rule that alerts when a service principal, which is not a designated identity management principal (e.g., not part of a CI/CD pipeline), performs a credential modification action on another principal.",
              "Statistical: For each user/principal, profile the distribution of credential modification actions by day-of-week and hour-of-day. Use a percentile-based approach to flag any modification that occurs in an unusual time window (e.g., outside the 5th-95th percentile of their historical activity times).",
              "Machine Learning: Employ an unsupervised clustering algorithm (e.g., DBSCAN) on features of credential modification events (actor, target principal type, source IP geolocation, time). Identify and alert on events that are classified as outliers/noise and do not belong to any established cluster of normal administrative behavior."
            ]
          },
          {
            "description": "A newly created cloud credential is used for the first time from a geographic location that is either statistically rare for the associated identity or physically impossible given the location of the credential creation event ('impossible travel').",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure SignIn Logs",
              "Google Cloud Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators, Cloud Authentication Endpoints, Internet Gateway",
            "action": [
              "Symbolic: For each new credential creation event, create a rule that triggers if the first authentication event using that credential occurs within a velocity threshold that indicates 'impossible travel' (e.g., distance between creation location and first-use location divided by time elapsed is greater than 800 km/h).",
              "Statistical: Maintain a statistical profile of the top 10 most common source countries for each user. When a new credential's first use originates from a country not in this user's top 10 list, calculate the rarity of that country across the entire organization's login data. If the country's frequency is below the 1st percentile, flag the event.",
              "Machine Learning: Use a time-series anomaly detection model to monitor the sequence of authentication locations for a given identity. When a new credential is created and used, feed its authentication location into the model. An event flagged as an anomaly by the model indicates a significant deviation from the established spatial-temporal pattern of that identity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges by adding cloud credentials with elevated permissions?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1098.001",
        "name": "Additional Cloud Credentials",
        "evidence": [
          {
            "description": "A sequence of API calls associated with credential modification matches a known, documented pattern for IAM privilege escalation.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Cloud Audit Log Aggregation Platform",
            "action": [
              "Symbolic: Implement detection rules that look for specific, ordered sequences of API calls known to facilitate privilege escalation, such as a user with `iam:PassRole` permissions creating a new EC2 instance (`ec2:RunInstances`) and passing a high-privilege role to it, then accessing that instance to use the assumed credentials.",
              "Statistical: Analyze the co-occurrence frequency of different IAM-related API calls within a short time window (e.g., 5 minutes). Flag sequences of calls that are statistically rare across the organization's baseline but are known components of privilege escalation paths (e.g., `CreatePolicyVersion` followed by `SetDefaultPolicyVersion` on a role an attacker controls).",
              "Machine Learning: Train a sequence-based model (e.g., an LSTM network) on benign sequences of cloud API calls. Use the trained model to identify anomalous sequences of events related to role and policy modifications. A sequence with a high anomaly score that involves credential modification is a strong indicator of privilege escalation."
            ]
          },
          {
            "description": "A user or service principal adds new credentials to a different identity that possesses a higher level of privilege than the acting principal (e.g., a 'user' role adding a secret to a 'Global Administrator' service principal).",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Identity Governance and Administration (IGA) Platform",
            "action": [
              "Symbolic: For every credential modification event, retrieve the role/permission level of the actor and the target. Trigger an alert if `actor_permission_level < target_permission_level` based on a predefined role hierarchy (e.g., Contributor modifying Owner, Application Administrator modifying Global Administrator).",
              "Statistical: Assign a numerical risk score to all IAM roles. Calculate the difference in risk score between the actor and the target for every credential modification. Flag any event where this difference exceeds a set threshold (e.g., 2 standard deviations above the mean difference, which is typically zero or negative).",
              "Machine Learning: Use a graph-based anomaly detection algorithm on the organization's IAM structure. Model users, roles, and permissions as a graph. A credential modification action that creates a new, high-privilege edge in the graph originating from a low-privilege node would be flagged as a structural anomaly indicative of privilege escalation."
            ]
          },
          {
            "description": "Immediately following the addition of a new credential to a privileged identity, that identity is used to perform sensitive actions (e.g., disabling logging) or access data inconsistent with its historical baseline.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud IAM Service, Sensitive Data Repositories (e.g., S3 Buckets, Databases), Cloud Administration Endpoints",
            "action": [
              "Symbolic: Create a rule that triggers if, within one hour of a credential being added to a privileged role, that role is used to perform a 'destructive' or 'high-impact' action from a predefined list (e.g., `DeletePolicy`, `DisableLogging`, `DeleteBucket`).",
              "Statistical: For each privileged identity, baseline the daily rate of sensitive API calls. After a credential modification, monitor this rate. If the rate of sensitive calls in the next 24 hours exceeds the 99th percentile of the historical daily rate for that identity, flag it for review.",
              "Machine Learning: Use a 'first-seen' model. For each privileged identity, maintain a set of its historically performed actions. After a credential modification, if the identity performs a sensitive action it has never performed before, classify this as a high-risk anomaly. This can be modeled as a one-class SVM or a simple lookup against a historical baseline."
            ]
          },
          {
            "description": "A temporary or federated user session is used to add new, permanent credentials to a cloud-native identity, converting temporary access into a persistent backdoor.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity Federation Service (e.g., ADFS), Cloud STS Endpoints, Cloud IAM Service",
            "action": [
              "Symbolic: Create a high-severity alert for any event where `userIdentity.type` is `AssumedRole` or `FederatedUser` (in AWS) or the identity is from an external IdP (in Azure) and the performed action is a credential modification on a permanent, cloud-native IAM user or service principal.",
              "Statistical: Calculate the ratio of permanent credential modifications to total actions for both permanent and temporary identities. If the ratio for temporary identities exceeds a statistically significant threshold (e.g., 3 standard deviations above the mean for all identities), it suggests abuse of temporary access for persistence.",
              "Machine Learning: Train a classification model to predict the likelihood that a session will perform a credential modification, using features like session type (permanent vs. temporary), source IP, user agent, and initial actions. A high probability score for a credential modification from a temporary session should be investigated."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]