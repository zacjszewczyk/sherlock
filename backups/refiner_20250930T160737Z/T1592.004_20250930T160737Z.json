[
  {
    "information_requirement": "Is the adversary conducting reconnaissance on client configurations?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1592.004",
        "name": "Client Configurations",
        "evidence": [
          {
            "description": "An internal client establishes an outbound connection to an external domain or IP address present on a threat intelligence feed for reconnaissance, phishing, or client fingerprinting infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate web proxy, DNS resolvers, and network egress points.",
            "action": [
              "Symbolic: Join destination IPs from Zeek conn.log and queried domains from Zeek dns.log against a high-confidence threat intelligence feed of known reconnaissance infrastructure. Generate an alert for any match.",
              "Statistical: Calculate the rarity of requested domains across the enterprise. If a domain is requested by fewer than 0.1% of hosts and is younger than 30 days old, increase its risk score. Flag hosts connecting to multiple high-risk-score domains in a short period.",
              "Machine Learning: Employ a domain generation algorithm (DGA) detection model on Zeek dns.log data. Use a classifier (e.g., logistic regression or a deep learning model) trained on features like domain entropy, n-gram frequency, and domain length to score and identify algorithmically generated domains often used for malicious C2 and reconnaissance."
            ]
          },
          {
            "description": "An outbound HTTP request from an internal client contains URI patterns, specific Javascript library names (e.g., 'fingerprint.js'), or parameter combinations indicative of a known client fingerprinting toolkit.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate web proxy and network egress points.",
            "action": [
              "Symbolic: Scan Zeek http.log URIs and request bodies using regular expressions for signatures of known client fingerprinting scripts and libraries (e.g., 'fingerprint.js', 'client.js'). Correlate multiple signature matches from a single client to the same external domain to increase detection confidence.",
              "Statistical: For each HTTP request, calculate the Shannon entropy of the URI query string. Establish a baseline for URI entropy per user and per destination domain. Flag requests where the entropy exceeds the 99th percentile of the established baseline, as fingerprinting scripts often use long, high-entropy query strings.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features extracted from HTTP requests, including URI length, number of parameters, parameter entropy, user-agent string length, and number of headers. Use this model to classify each request as either 'benign' or 'fingerprinting'."
            ]
          },
          {
            "description": "A single external source IP initiates connections to an anomalously high number of internal hosts or destination ports, targeting common client-side services (e.g., RDP, SMB, VNC).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing firewalls, DMZ network segments, and VPN concentrators.",
            "action": [
              "Symbolic: Maintain and query a blocklist of known malicious scanning IPs. Generate an alert for any inbound connection attempt from an IP on this list targeting internal client IP space.",
              "Statistical: For each external source IP, calculate the number of unique destination hosts and unique destination ports contacted within a 1-minute window. Flag any source IP where the port diversity (entropy of destination ports) or host count exceeds 3 standard deviations from the global baseline for inbound traffic.",
              "Machine Learning: Use a density-based clustering algorithm (e.g., DBSCAN) on inbound connection logs. Use features like source IP, destination port, and protocol. Network scanning activity will form a dense cluster characterized by one source IP connecting to many hosts/ports, which will be identified as an anomaly separate from sparse, legitimate traffic."
            ]
          },
          {
            "description": "A single client generates outbound web requests with an unusually high number of headers or makes DNS requests for a high number of disparate domains in a short time frame.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate web proxy, endpoint devices, and DNS resolvers.",
            "action": [
              "Symbolic: Create a rule that triggers if an outbound HTTP request contains a specific combination of Client-Hint headers (e.g., `Sec-CH-UA-Arch`, `Sec-CH-UA-Model`, `Sec-CH-UA-Platform-Version`) directed to a domain not on an allowlist of known-good services.",
              "Statistical: For each client, establish a baseline for the average number of unique domains queried per minute. Alert when a client's activity exceeds the 98th percentile for this metric over a 5-minute rolling window, indicating potential fingerprinting activity.",
              "Machine Learning: Apply a time-series anomaly detection model (e.g., LSTM autoencoder) to each client's DNS query rate per second. A sudden, sharp spike in the model's reconstruction error indicates a significant deviation from normal browsing behavior, which could be caused by a fingerprinting script."
            ]
          },
          {
            "description": "An internal host executes a sequence of commands to enumerate local client configurations (e.g., browser versions, installed software) and subsequently initiates an outbound network connection to an unknown destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard user endpoints, developer workstations, and servers with user-like browsing activity.",
            "action": [
              "Symbolic: Create a detection rule for a process creation event (Windows Event ID 4688) with a command line matching reconnaissance patterns (`wmic product get`, `systeminfo`, `reg query HKLM\\SOFTWARE\\Clients`) followed within 60 seconds by an outbound network connection (Zeek conn.log) from the same host to an IP with a low reputation score.",
              "Statistical: Profile command-line arguments for `powershell.exe`, `cmd.exe`, and `wmic.exe`. Calculate the rarity of specific argument combinations using TF-IDF. A command execution with a statistically rare combination of arguments related to system enumeration should be flagged for investigation.",
              "Machine Learning: Use a sequence-based anomaly detection model (e.g., a Hidden Markov Model) to analyze chains of events: parent process -> child process -> network connection. Train the model on benign activity. Flag sequences like `powershell.exe` -> `wmic.exe` -> `[outbound TCP connection to new IP]` as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]