[
  {
    "information_requirement": "Is the adversary maintaining persistence by modifying Security Support Providers?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.005",
        "name": "Security Support Provider",
        "evidence": [
          {
            "description": "A new DLL name appearing in the Security Packages registry key matches a known malicious SSP DLL.",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Standard User Workstations",
            "action": [
              "Symbolic: Monitor Windows Event ID 4657 or Sysmon Event ID 13 for modifications to 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages' or 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages'. Compare the 'New Value' or 'TargetObject' field, which contains the DLL name, against a threat intelligence list of known malicious SSP DLLs (e.g., 'mimilib.dll', 'wcespy.dll'). Generate a high-priority alert upon a match.",
              "Statistical: For all modifications to the target registry keys, calculate the prevalence of the added DLL name across the entire enterprise over a 30-day baseline. An added DLL that falls below the 1st percentile in prevalence (i.e., is extremely rare) should be flagged for investigation, as legitimate SSPs are typically uniform across the environment.",
              "Machine Learning: Develop a classification model (e.g., Random Forest) trained on features of registry modification events. Features should include the process making the change (e.g., 'reg.exe', 'powershell.exe'), the user context, time of day, and the string entropy of the new DLL name. Use the model to score each SSP registry modification event for its likelihood of being malicious."
            ]
          },
          {
            "description": "The LSA Subsystem Service (lsass.exe) loads a DLL that is unsigned, has a rare signer, or is not part of the established baseline for the host or enterprise, particularly after a system reboot.",
            "data_sources": [
              "Sysmon Event ID 7",
              "Windows Event ID 4657",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows systems' process memory and file systems, especially Domain Controllers and privileged access workstations.",
            "action": [
              "Symbolic: Monitor Sysmon Event ID 7 for any DLL loaded by 'lsass.exe'. Compare the loaded DLL against a curated allowlist of known-good SSPs and system DLLs (e.g., 'kernel32.dll', 'msv1_0.dll', 'kerberos.dll'). Any DLL not on the allowlist should trigger an alert. On Windows 8.1/2012R2+, monitor for events generated by 'AuditLevel = 8' for LSASS.exe, which specifically logs unsigned SSP loads.",
              "Statistical: Create a baseline of all (DLL, Signer) pairs loaded by 'lsass.exe' across the enterprise. For each new DLL load event, calculate its prevalence. A DLL whose signer is in the bottom 5th percentile of prevalence is anomalous. Correlate this with a recent system boot (Windows Event ID 6005) and registry modification (Windows Event ID 4657) to increase confidence.",
              "Machine Learning: Use a sequence analysis model (e.g., an LSTM) to learn the normal sequence of DLLs loaded by 'lsass.exe' during system startup. Train the model on Sysmon Event ID 7 data from thousands of boot sequences. Generate an alert when the model detects a deviation from the learned normal sequence, such as the injection of an unexpected DLL."
            ]
          },
          {
            "description": "The lsass.exe process initiates an outbound network connection, especially to a rare destination or shortly after a system reboot that followed a suspicious registry modification.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon Event ID 3",
              "Windows Event ID 4657",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Domain Controllers, User Workstations",
            "action": [
              "Symbolic: Correlate Windows Event ID 4657 (SSP registry modification) with subsequent Sysmon Event ID 3 (Network Connection) events from 'lsass.exe'. Create a rule to alert if 'lsass.exe' initiates an outbound connection to an IP address or domain on a known bad reputation list within 24 hours of the registry change.",
              "Statistical: Profile the typical network behavior of 'lsass.exe' using Sysmon Event ID 3. The profile should include destination ports, data volume, and connection frequency. Use percentile-based alerting to flag connections where the destination port is not in the top 99% of commonly used ports for LSASS or the volume of data sent is more than 3 standard deviations above the mean.",
              "Machine Learning: Apply a one-class SVM anomaly detection model to network connections made by 'lsass.exe'. Features can include destination port, protocol, connection duration, bytes sent/received (from Zeek conn.log), and JA3/JA3S hashes. Any connection that the model classifies as an outlier, especially after a reboot (Windows Event ID 6005) on a host with a recent SSP registry modification, warrants investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting privilege escalation by abusing Security Support Providers?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.005",
        "name": "Security Support Provider",
        "evidence": [
          {
            "description": "Process command-line arguments indicate the execution of a known tool or script that automates the modification of Security Support Providers.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Member Servers",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) for command-line arguments containing keywords and regular expressions associated with SSP abuse tools (e.g., 'Install-SSP', 'memssp', 'Invoke-Mimikatz'). Alert upon any match, especially if the parent process is a non-standard shell.",
              "Statistical: Analyze command-line arguments across the enterprise to establish a baseline of normal commands. Calculate the entropy and length of command lines. A command with unusually high entropy (indicating obfuscation) or length that targets the LSA registry keys should be flagged. For example, alert on commands targeting these keys where the command line length is in the 99th percentile.",
              "Machine Learning: Train a classification model (e.g., Gradient Boosting) to identify malicious PowerShell or command-line execution. Features should include command length, character distribution (entropy), presence of specific keywords ('Lsa', 'Security Packages'), parent process name, and user context. Use the model to score all command-line executions for potential SSP manipulation attempts."
            ]
          },
          {
            "description": "The Security Packages registry key is modified in a user session that originated from a non-administrative account, indicating an exploit was used to elevate privileges.",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 1",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Workstations",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a Windows Event ID 4657 (Registry modification) on an SSP key occurs, and the process ID responsible can be traced back via parent process IDs (from Sysmon Event ID 1 logs) to an initial process started by a non-administrative user during their logon session (Windows Event ID 4624, Logon Type 2 or 10).",
              "Statistical: Profile the user accounts associated with modifications to the 'Lsa\\Security Packages' keys. In a mature environment, these changes should only be performed by specific administrative or system deployment accounts. Create a frequency table of users making this change. Any user account appearing in this list that is not on a pre-defined list of system/admin accounts is a high-confidence indicator.",
              "Machine Learning: Use a graph-based analysis model to map user sessions and process lineage. Create a graph where nodes are users, processes, and registry keys, and edges represent actions. Search for short paths from a non-privileged user node to an SSP registry key node. The existence of such a path is a strong anomaly indicative of privilege escalation."
            ]
          },
          {
            "description": "Anomalous process execution under the SYSTEM context occurs after a system reboot, following a suspicious modification to the Security Packages registry key by a process traced back to a non-administrative user.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Windows Event ID 6005",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows systems, with a focus on post-reboot activity on systems flagged for suspicious registry modifications.",
            "action": [
              "Symbolic: Tag any host where a suspicious SSP registry modification occurs (Windows Event ID 4657). After the next reboot event (Windows Event ID 6005) on that host, trigger a high-priority alert if a process creation event (Windows Event ID 4688) shows 'cmd.exe' or 'powershell.exe' being spawned by 'lsass.exe'.",
              "Statistical: For each host, create a baseline profile of all processes that run as 'NT AUTHORITY\\SYSTEM' within the first 10 minutes after a reboot. On a host that has been flagged for a suspicious SSP registry change, compare the post-reboot processes against this baseline. Any process running as SYSTEM that is not in the baseline or has a very low baseline frequency (<1% prevalence) is a strong indicator of compromise.",
              "Machine Learning: Use a time-series anomaly detection model on the count of processes spawned as SYSTEM post-reboot. A sudden spike in the number of SYSTEM processes after a reboot on a flagged machine could indicate that a malicious SSP has successfully loaded and is executing its payload. The model would learn the normal 'fan-out' of processes during startup and flag significant deviations."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]