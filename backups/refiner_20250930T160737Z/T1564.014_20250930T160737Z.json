[
  {
    "information_requirement": "Is an adversary hiding malicious payloads or data in file or directory extended attributes (xattrs) to evade detection?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.014",
        "name": "Extended Attributes",
        "evidence": [
          {
            "description": "Execution of command-line utilities used for manipulating extended attributes, such as 'xattr' on macOS or 'setfattr'/'getfattr' on Linux.",
            "data_sources": [
              "Sysmon for Linux Event ID 1",
              "Linux Auditd logs",
              "macOS Endpoint Security Framework (ESF) events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Linux servers (web, database, application), macOS developer workstations, macOS servers.",
            "action": [
              "Symbolic Logic: Create a SIEM rule to generate a high-severity alert for any process creation event where the command line contains 'xattr -w', 'setfattr -n user.', or 'getfattr --only-values'. Correlate these events with subsequent execution by scripting interpreters (bash, python, osascript) or direct execution of the output within a 5-minute window from the same host or user.",
              "Statistical Method: Establish a baseline for the frequency of 'xattr' and 'setfattr' command usage per user and host. Calculate the 99th percentile for the daily count of these commands per user. Alert when a user's activity exceeds this threshold. Additionally, analyze the entropy of the values being written to xattrs via command line; high-entropy data may indicate encrypted or compressed payloads and should be flagged.",
              "Machine Learning: Train a logistic regression classifier on process execution events from Linux and macOS systems. Use features such as the parent process name (e.g., 'sshd', 'cron', 'zsh'), command-line arguments (presence of specific flags), user context (root vs. non-root), and execution time. Label known-good administrative scripts and known-bad TTPs. Use the trained model to classify new 'xattr'/'setfattr' executions as benign or suspicious in real-time."
            ]
          },
          {
            "description": "An extended attribute is created with a non-standard name or contains data with high entropy, suggesting an embedded payload.",
            "data_sources": [
              "Linux Auditd logs (setxattr syscall)",
              "macOS ESF events (file metadata modification)",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical system directories (/bin, /usr/bin, /etc), user home directories, and web-accessible directories (/var/www/html) on Linux and macOS hosts.",
            "action": [
              "Symbolic Logic: Monitor for the creation of 'user.' namespace attributes on Linux whose names are random-looking strings or mimic legitimate files (e.g., 'user.payload.b64'). On macOS, alert on custom attribute names that do not start with 'com.apple.' or other known application prefixes. Decode and scan the content of newly created xattrs for file headers (e.g., PE, ELF, Mach-O) or interpreter directives (e.g., '#!/bin/bash').",
              "Statistical Method: Periodically scan file systems and calculate the Shannon entropy of the values stored in extended attributes, particularly in the 'user.' namespace on Linux. Establish a baseline entropy score for legitimate xattrs (which are often simple strings). Flag any xattr whose value has an entropy score greater than 3 standard deviations above the mean for its file type, indicating likely packed or encrypted data.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) to monitor the rate of xattr creation on critical servers, baselined against software installation and patching cycles. A sudden spike in the creation of xattrs outside of these windows is anomalous. Correlate this spike with network download events (from Zeek files.log) to the same host moments before the spike to increase confidence."
            ]
          },
          {
            "description": "A process reads an extended attribute and subsequently initiates a network connection to a rare destination or executes a child process from memory.",
            "data_sources": [
              "Linux Auditd logs (getxattr syscall)",
              "Sysmon for Linux Event ID 1",
              "Sysmon for Linux Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, DNS servers, and any Linux/macOS endpoints with direct internet access.",
            "action": [
              "Symbolic Logic: Create a correlation rule that triggers when a process reads an xattr (e.g., via 'getfattr' command or 'getxattr' syscall) and the same process ID (PID) or its child subsequently makes a network connection (Sysmon for Linux Event ID 3) to an IP address on a threat intelligence blocklist within a 60-second window.",
              "Statistical Method: For each process that reads an xattr, analyze its subsequent network connections using Zeek conn.log data. Compare the destination IP, port, and data volume (resp_bytes) to historical baselines for that host and process. Use a scoring model where connections to a country not seen in the last 90 days, a port outside the top 10 most common for that host, or a data volume in the 95th percentile add to a risk score. A high cumulative score indicates a suspicious connection potentially fueled by a payload from an xattr.",
              "Machine Learning: Use a graph-based analysis model. Create nodes for processes, files, xattrs, and network destinations. Create edges for actions like 'reads_xattr', 'creates_process', and 'connects_to'. Use a community detection algorithm to find clusters of related activity. A small, tightly-connected cluster involving an xattr read followed by a network connection to a new external IP, with no associated user login activity, should be classified as a high-priority incident."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]