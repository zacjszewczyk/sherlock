[
  {
    "information_requirement": "Has the adversary escalated privileges using token manipulation?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1134.003",
        "name": "Make and Impersonate Token",
        "evidence": [
          {
            "description": "A process, identified by a malicious hash or a file path known for token manipulation (e.g., Mimikatz, JuicyPotato), executes and is immediately followed by a new logon session (Windows Logon Type 9) for a higher-privileged account on the same host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Administrative Workstations",
            "action": [
              "Symbolic: Correlate process creation events (Windows Event ID 4688) against a threat intelligence feed of malicious file hashes. If a match occurs, search for a subsequent Windows Event ID 4624 with Logon Type 9 on the same host within 60 seconds, where the 'TargetUserName' has higher privileges (e.g., is a member of 'Domain Admins') than the 'SubjectUserName' of the malicious process.",
              "Statistical: For each Logon Type 9 event, calculate the time delta since the last process creation by the same parent process. Establish a baseline of these time deltas for legitimate applications (e.g., 'runas.exe'). Flag any Logon Type 9 event where the preceding process creation is a statistical outlier in terms of rarity (e.g., a process that has never been seen creating a Logon Type 9 event) or where the time delta is unusually short (e.g., below the 1st percentile).",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) on labeled historical data from Windows Event IDs 4688 and 4624. Features should include process name, parent process name, command line arguments, time since parent process start, privilege level of subject vs. target user, and the rarity of the process creating a Logon Type 9 event. The model will predict the likelihood that a Logon Type 9 event is part of a malicious privilege escalation sequence."
            ]
          },
          {
            "description": "A new logon session (Windows Logon Type 9) is created by a parent process that does not typically perform such actions, such as a web server worker process (w3wp.exe), a document application (WINWORD.EXE), or a scripting engine (wscript.exe).",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers, Web Servers, User Workstations",
            "action": [
              "Symbolic: Filter for all Windows Event ID 4624 with Logon Type 9. For each, identify the parent process name from the corresponding Windows Event ID 4688. Alert if the parent process name is on a blocklist of suspicious parents (e.g., 'w3wp.exe', 'WINWORD.EXE', 'powershell.exe') or is not on an allowlist of known-good parent processes (e.g., 'runas.exe', 'services.exe').",
              "Statistical: Establish a baseline of parent-process-to-logon-user relationships for Logon Type 9 events. Alert when a parent process creates a Logon Type 9 session for a user it has rarely or never created a session for before (e.g., a process that normally only creates sessions for 'SERVICE' accounts suddenly creates one for a 'Domain Admin' account).",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on features extracted from parent-child process relationships leading to Logon Type 9 events. Features can include parent process name, command line entropy, user context, and target user context. Identify clusters of anomalous behavior that deviate from the large, dense clusters of normal administrative activity."
            ]
          },
          {
            "description": "A non-privileged user account ('SubjectUserName') successfully initiates a new logon session (Windows Logon Type 9) for a privileged account ('TargetUserName'), and the resulting logon session ('TargetLogonId') is then used to perform sensitive actions like accessing LSASS memory or modifying system files.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, High-Value Asset Servers, Tier 0 Administrator Workstations",
            "action": [
              "Symbolic: Create a rule that triggers when a Windows Event ID 4624 (Logon Type 9) shows a 'SubjectUserName' from a 'Standard Users' group creating a session for a 'TargetUserName' in a 'Privileged Users' group (e.g., Domain Admins). Correlate this event's 'TargetLogonId' with subsequent high-impact events like Windows Event ID 4656/4663 (Object Access) on the lsass.exe process within a 5-minute window.",
              "Statistical: For each user, build a profile of the accounts they typically impersonate via Logon Type 9. Calculate the frequency and privilege gap (difference in privilege levels) for these impersonations. Alert when a user impersonates an account that is a statistical outlier, for example, the privilege gap is in the 99th percentile of all observed gaps for that user, or the target account is one they have never impersonated before.",
              "Machine Learning: Implement a time-series anomaly detection model on the sequence of actions performed by a logon session ('TargetLogonId'). After a Logon Type 9 event creates a new session, monitor the sequence of subsequent events (file access, process creation, network connections) under that Logon ID. The model, trained on normal user and admin behavior, will flag sequences that are improbable or associated with known attack patterns."
            ]
          },
          {
            "description": "The 'runas.exe' command is executed with command-line arguments indicating a non-interactive session or credential saving, followed by the execution of suspicious child processes like 'powershell.exe' or 'cmd.exe'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Jump Servers, IT Helpdesk Systems",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688) for 'NewProcessName' ending in 'runas.exe'. Alert if the command line contains suspicious combinations, such as '/savecred' or '/netonly', especially when the parent process is a script interpreter (e.g., 'powershell.exe', 'cscript.exe') or a web-related process.",
              "Statistical: Profile the command-line arguments used with 'runas.exe' across the environment. Calculate the rarity (e.g., inverse document frequency) of each argument and combination of arguments. Alert when 'runas.exe' is executed with a command-line combination that falls below a rarity threshold (e.g., in the bottom 5% of observed combinations).",
              "Machine Learning: Train a sequence analysis model (e.g., an LSTM) on the chain of processes spawned after a 'runas.exe' execution. The model learns normal administrative workflows (e.g., runas -> mmc.exe). It will then flag sequences that deviate from these learned patterns, such as 'runas.exe' -> 'cmd.exe' -> 'powershell.exe -enc ...', as potentially malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary bypassing defenses using token manipulation?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1134.003",
        "name": "Make and Impersonate Token",
        "evidence": [
          {
            "description": "A process, identified by a malicious hash, creates a new logon session (Windows Logon Type 9) and uses the 'runas.exe' command with the '/netonly' flag to authenticate to remote systems using different credentials, evading local endpoint monitoring focused on the original user context.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal-facing Servers, Staging Servers, User Workstations",
            "action": [
              "Symbolic: Create a rule that triggers when a process creation event (Windows Event ID 4688) for 'runas.exe' contains '/netonly' in the command line, AND the parent process hash is present on a threat intelligence blocklist. This directly links a known malicious tool to a specific defense evasion TTP.",
              "Statistical: Establish a baseline of which users and processes legitimately use 'runas.exe /netonly'. Alert when usage deviates from this baseline, such as use by a non-administrative user for the first time, use by a service account outside of its normal function, or use from a process that has never been observed as a parent of 'runas.exe'.",
              "Machine Learning: Use a graph-based anomaly detection model to analyze relationships between users, processes, and remote hosts. A node representing a user connected to a process node (e.g., 'malware.exe'), which in turn connects to a 'runas /netonly' node, and then to a remote host node it has never connected to before, would form an anomalous subgraph."
            ]
          },
          {
            "description": "The 'runas.exe' command is executed with the '/savecred' argument from a non-interactive process or a temporary file path (e.g., %TEMP%, %APPDATA%), indicating an attempt to persist credentials for later use without user interaction.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Multi-user Servers (e.g., Citrix, RDS)",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688) for 'runas.exe'. Alert if the command line contains '/savecred' AND the parent process is non-interactive (e.g., 'svchost.exe', 'w3wp.exe') OR the 'CreatorUser' is a service account (e.g., 'NT AUTHORITY\\SYSTEM').",
              "Statistical: Profile the file paths from which 'runas.exe' is commonly executed. Calculate the rarity of the execution path for each 'runas.exe' event. Alert when 'runas.exe /savecred' is executed from a statistically rare location, such as a path with string entropy in the 95th percentile or a path located in a user's browser cache directory.",
              "Machine Learning: Train a classification model to distinguish between legitimate and malicious 'runas.exe /savecred' executions. Features should include the parent process name, full command line, user context, and working directory. The model can identify malicious usage by learning the patterns of legitimate administrative use and flagging deviations."
            ]
          },
          {
            "description": "A new logon session (Windows Logon Type 9) is created, followed immediately by outbound network connections to unusual destinations or using uncommon protocols, suggesting evasion of local network monitoring by operating under a different user's network context.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, Critical Asset Subnets",
            "action": [
              "Symbolic: Upon detection of a Windows Event ID 4624 (Logon Type 9), correlate the 'ProcessId' with network connection events (Zeek conn.log) originating from the same host within 60 seconds. Alert if the destination IP address is on a known C2 blocklist.",
              "Statistical: For each user, build a baseline of normal network behavior (e.g., common destination countries, ports, data volume). After a Logon Type 9 event, monitor subsequent network traffic. Alert if the traffic deviates significantly, such as connecting to a destination country for the first time, using a port in the 99th percentile of rarity for that user, or showing a data transfer volume 3+ standard deviations above the mean.",
              "Machine Learning: Use a time-series forecasting model (e.g., ARIMA) on network traffic features (e.g., bytes out, connection count) for each host. When a Logon Type 9 event occurs, compare the subsequent network traffic against the model's forecast. A significant, unpredicted spike in outbound traffic following the token creation event indicates an anomaly."
            ]
          },
          {
            "description": "A process creates a Logon Type 9 session to impersonate a legitimate system account (e.g., 'NT AUTHORITY\\SYSTEM') and then modifies or deletes security logs, tools, or configurations to evade detection.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 1102",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log Aggregation Servers, Domain Controllers, Security Appliance Management Interfaces",
            "action": [
              "Symbolic: Create a chained rule: (1) A Windows Event ID 4624 (Logon Type 9) occurs where 'TargetUserName' is 'SYSTEM'. (2) Within 2 minutes, the 'ProcessId' from event (1) or its children spawns 'wevtutil.exe' with 'cl' or 'clear-log' arguments (from Windows Event ID 4688) OR a Windows Event ID 1102 (The audit log was cleared) is logged on the same host. This sequence is a high-fidelity indicator of log tampering.",
              "Statistical: Establish a baseline for the frequency of log clearing events (Event ID 1102) per host. Alert if a log clearing event occurs on a host where it has never happened before, or if the time between a Logon Type 9 and a log clearing event is a statistical outlier (e.g., below the 1st percentile of all such time deltas), suggesting an automated action.",
              "Machine Learning: Deploy a Hidden Markov Model (HMM) trained on sequences of security events. The model learns the probabilities of transitioning between states (e.g., from 'Normal' to 'Escalation' to 'Evasion'). A sequence of 'Logon Type 9' -> 'Process Access to lsass.exe' -> 'Clear Security Log' would represent a low-probability path, triggering a high-confidence alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]