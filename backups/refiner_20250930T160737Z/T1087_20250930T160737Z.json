[
  {
    "information_requirement": "Is the adversary attempting to discover local or domain accounts on the network or in the cloud? (PIR)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1087",
        "name": "Account Discovery",
        "evidence": [
          {
            "description": "A process creation event is observed where the new process's file hash or original filename corresponds to a known account discovery utility (e.g., AdFind, SharpHound).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Privileged Access Workstations",
            "action": [
              "Symbolic: Using a SIEM, create a rule that cross-references the `ProcessHash-SHA256` and `OriginalFileName` fields from process creation events (Windows Event ID 4688) against a curated threat intelligence list of known account discovery tool hashes and names. Trigger a high-severity alert on any match.",
              "Statistical: Profile the frequency of `OriginalFileName` values across the enterprise. Calculate the rarity of each filename. Flag any process execution where the filename has a prevalence of less than 0.01% across all endpoints and is not on an approved software list, as this may indicate a renamed but recognizable tool.",
              "Machine Learning: Train a supervised classification model (e.g., a Random Forest or Gradient Boosting) on labeled process creation event features (parent process, command line entropy, user context, filename rarity) to predict whether a new process is a malicious discovery tool. Use this model to score and alert on suspicious process executions in real-time."
            ]
          },
          {
            "description": "A command-line interpreter (cmd.exe, powershell.exe) is executed with arguments and parameters used to enumerate local or domain users and groups (e.g., `net user /domain`, `Get-ADUser -Filter *`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, Domain Controllers, Application Servers",
            "action": [
              "Symbolic: Deploy detection rules using regular expressions to match specific command-line strings within Windows Event ID 4688. Patterns to match include `net user`, `net group`, `net localgroup`, `dsquery *`, `Get-ADUser`, `Get-LocalGroupMember`, and `Find-LocalAdminAccess`. Escalate alert severity if the command is initiated by a non-administrative user or a system account.",
              "Statistical: For each host, establish a baseline of the frequency and types of enumeration commands executed by user and parent process. Use a statistical model (e.g., Z-score) to detect deviations. An alert should be triggered if a user suddenly executes 3 standard deviations more enumeration commands in an hour than their 30-day average, or if a web server process spawns `net.exe` for the first time.",
              "Machine Learning: Use an unsupervised learning model, such as clustering (e.g., DBSCAN), on command-line logs. Cluster commands based on their structure and tokenized arguments. Identify and investigate clusters that are small (rare command patterns) and contain known enumeration strings, as these represent novel or obfuscated discovery attempts."
            ]
          },
          {
            "description": "A process lineage is observed where a parent process, not typically associated with administrative activity (e.g., OUTLOOK.EXE, WINWORD.EXE, w3wp.exe), spawns a child process (e.g., cmd.exe, powershell.exe) that subsequently executes account discovery commands.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Servers, Microsoft Exchange Servers",
            "action": [
              "Symbolic: Create a detection rule that triggers when a process from a defined list of 'unlikely parents' (e.g., `WINWORD.EXE`, `EXCEL.EXE`, `OUTLOOK.EXE`, `w3wp.exe`, `httpd.exe`) is the parent process in a Windows Event ID 4688 event, and the child process is `cmd.exe`, `powershell.exe`, `wscript.exe`, or `cscript.exe`.",
              "Statistical: Generate a probabilistic graph of all parent-child process relationships observed over a 30-day period. Calculate the transition probability for each edge (parent -> child). Alert on any observed parent-child creation event that has a probability below a set threshold (e.g., < 0.001%), indicating a rare and potentially malicious process chain.",
              "Machine Learning: Implement a time-series anomaly detection model on the frequency of specific rare process chains. A sudden spike in the occurrence of a chain like `OUTLOOK.EXE -> powershell.exe` across multiple hosts, even if rare, could indicate a coordinated phishing campaign leading to discovery, and should be flagged by the model."
            ]
          },
          {
            "description": "A single client host generates a volume or diversity of LDAP, SAMR, or Kerberos queries to a domain controller that is statistically anomalous compared to its own baseline or the baseline of its peer group.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ldap.log",
              "Zeek dce_rpc.log",
              "Windows Event ID 4662"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments fronting Domain Controllers, The Domain Controllers themselves",
            "action": [
              "Symbolic: From Zeek's `dce_rpc.log`, create a rule to alert when the `endpoint` is `samr` and the `operation` is `EnumDomainUsers` or `QueryDisplayInfo`, especially if the request originates from a non-IT-management subnet. Correlate with Windows Event ID 4662 on the DC for `SAMR_USER` or `SAMR_GROUP` object access.",
              "Statistical: In `Zeek ldap.log`, for each source IP, calculate the 95th percentile of LDAP search requests per 10-minute window over a 30-day baseline. Trigger an alert if a source IP exceeds this percentile. Additionally, calculate the Shannon entropy of the `filter` attribute in LDAP searches from a single source; a sudden spike in entropy indicates a wide-ranging, non-standard query pattern characteristic of enumeration.",
              "Machine Learning: Use a peer-grouping algorithm (e.g., K-Means clustering) to group hosts based on their network traffic profiles (ports, protocols, request volumes). Apply a time-series anomaly detection model (e.g., LSTM) to the LDAP/SAMR query volume for each host within its peer group. Flag hosts whose query behavior significantly deviates from their group's norm, indicating a compromised host behaving differently from its peers."
            ]
          },
          {
            "description": "A user or process accesses a pre-defined canary file (honeytoken) designed to appear as an account list, or a single process accesses an anomalously high number of distinct user profiles or sensitive script repositories in a short time frame.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 5145"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File Servers, SharePoint Sites, Network-accessible Script Repositories",
            "action": [
              "Symbolic: Enable object access auditing (SACLs) on decoy files named `passwords.xlsx` or `user_list.csv` in common locations. Create a high-priority alert rule that triggers on any access attempt recorded in Windows Event ID 4663 or 5145 for these specific honeytokens.",
              "Statistical: For file servers, baseline the number of unique sensitive files accessed by each process per hour. Monitor Windows Event ID 4663 and alert when a process (e.g., `powershell.exe`) accesses a number of files that exceeds 3 standard deviations above its established baseline, suggesting a discovery script is iterating through files.",
              "Machine Learning: Train a One-Class SVM (Support Vector Machine) model on features of 'normal' file access patterns (e.g., process name, user, number of files accessed, time of day). Use the trained model to identify outliers in real-time file access events (Windows Event ID 4663/5145), flagging them as anomalous behavior indicative of discovery."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]