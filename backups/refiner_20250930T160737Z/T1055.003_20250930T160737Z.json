[
  {
    "information_requirement": "Has the adversary elevated privileges using thread execution hijacking?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.003",
        "name": "Thread Execution Hijacking",
        "evidence": [
          {
            "description": "A process, identified by a malicious file hash from a threat intelligence feed, accesses the process memory of a higher-integrity-level target process.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Join process access logs (Sysmon Event ID 10) with a threat intelligence feed. Create an alert rule that triggers when a SourceImage with a known malicious hash opens a handle to a TargetImage where the GrantedAccess code includes flags for memory writing (e.g., 0x1F0FFF, 0x0020, 0x0008) and the TargetImage has a higher integrity level than the SourceImage.",
              "Statistical: For all Sysmon Event ID 10 events, calculate the frequency of (SourceImage, TargetImage, GrantedAccess) tuples. Identify statistically rare combinations, particularly where GrantedAccess permits memory modification and the target integrity level is higher. Flag any tuple that falls below the 1st percentile of frequency as anomalous and requiring investigation.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled Sysmon Event ID 10 data. Use features such as SourceImage name, TargetImage name, GrantedAccess code, source and target integrity levels, and process parentage. Deploy the model to score new process access events in real-time, alerting on those classified as 'malicious injection' with high confidence."
            ]
          },
          {
            "description": "A single source process executes a rapid sequence of API calls against a target process, characteristic of thread hijacking (e.g., OpenThread, SuspendThread, VirtualAllocEx, WriteProcessMemory, SetThreadContext, ResumeThread), where the source process is not on an allowlist of known debuggers or monitoring tools.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Sysmon Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially those running critical services.",
            "action": [
              "Symbolic: Create a rule that triggers when a single SourceProcessGUID generates Sysmon Event ID 10 events against the same TargetProcessGUID with GrantedAccess masks for thread suspension (0x0002), memory writing (0x0020), and context setting (0x0100) within a 1-second window, and the SourceImage is not on an established allowlist of administrative/debugging tools.",
              "Statistical: For each process, calculate the entropy of the GrantedAccess codes it requests via Sysmon Event ID 10 over a rolling time window. A sudden spike in entropy for a non-administrative process, followed by access to a higher-privilege process, indicates anomalous behavior. Also, track the rate of Event ID 10 events per (SourceImage, TargetImage) pair; flag pairs exceeding 3 standard deviations above the population mean rate as suspicious.",
              "Machine Learning: Use a sequence-based machine learning model (e.g., an LSTM) to analyze sequences of Sysmon events per process. Train the model on known benign and malicious sequences. Deploy the model to identify sequences that are characteristic of thread hijacking, such as the SuspendThread -> WriteProcessMemory -> SetThreadContext -> ResumeThread pattern, even when obfuscated."
            ]
          },
          {
            "description": "A process running at a lower integrity level successfully opens a handle with high-risk access rights to a process at a higher integrity level.",
            "data_sources": [
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, with a focus on systems processing sensitive data.",
            "action": [
              "Symbolic: Create a high-severity alert rule for any Sysmon Event ID 10 where the SourceImage integrity level is 'Medium' and the TargetImage integrity level is 'High' or 'System', and the GrantedAccess mask includes 0x0020 (PROCESS_VM_WRITE) or 0x0100 (THREAD_SET_CONTEXT).",
              "Statistical: Profile the normal integrity level transitions for process access across the enterprise. Calculate the baseline frequency of all (SourceIntegrity, TargetIntegrity) pairs. Any observed transition from a lower to a higher integrity level that is statistically rare (e.g., occurring less than 0.1% of the time) and involves write/execute permissions should be flagged for immediate review.",
              "Machine Learning: Develop a clustering model (e.g., DBSCAN) on Sysmon Event ID 10 events, using features like source/target integrity levels, GrantedAccess numerical value, and process names. Isolate and analyze clusters that represent low-to-high integrity access. Use these clusters to automatically identify new, similar events that deviate from the large, benign clusters."
            ]
          },
          {
            "description": "A process, identified as the target of a recent thread hijacking attempt, subsequently accesses protected system resources (e.g., SAM hive, LSA secrets registry keys) or creates a network connection for the first time.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4663",
              "Windows Event ID 4657",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Certificate Authorities, Servers hosting LSA secrets, File Servers with sensitive data.",
            "action": [
              "Symbolic: Create a correlation rule that looks for a Sysmon Event ID 10 (with suspicious access rights) followed within 5 minutes by the TargetProcessGUID from that event generating a Windows Event ID 4663 for object '\\\\SAM' or a Windows Event ID 4657 for registry key 'HKLM\\\\SECURITY'.",
              "Statistical: For each process name, build a statistical baseline of normally accessed file paths and registry keys. After a process is identified as a target of injection (via Sysmon EID 10), monitor its subsequent file/registry access. Score the rarity of each access based on the historical baseline. A cumulative rarity score exceeding a percentile threshold (e.g., 99th percentile) for that process indicates post-hijacking activity.",
              "Machine Learning: Use time series analysis on the behavior of a process identified as a hijacking target. Model its normal rate of network connections, file modifications, and child process creation. Anomaly detection algorithms (e.g., Isolation Forest) can then identify sharp, uncharacteristic changes in these time series metrics immediately following a high-risk Sysmon Event ID 10 targeting that process."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using thread execution hijacking?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.003",
        "name": "Thread Execution Hijacking",
        "evidence": [
          {
            "description": "A legitimate, commonly whitelisted process (e.g., svchost.exe, explorer.exe) initiates a network connection to an IP address or domain on a threat intelligence feed, subsequent to being the target of a process access event.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon Event ID 10",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, User Workstations, Web Proxies.",
            "action": [
              "Symbolic: Join Sysmon Event ID 3 (Network Connection) with a C2 threat intelligence feed on the DestinationIp. If a match is found and the initiating Image is a common OS process (e.g., svchost.exe), correlate this event with any Sysmon Event ID 10 event where this process was the TargetImage in the preceding 5 minutes. Trigger a high-priority alert.",
              "Statistical: For each process image name, calculate the baseline set of destination countries and Autonomous System Numbers (ASNs) it communicates with. After a process is targeted for injection (Sysmon EID 10), monitor its subsequent network connections (Sysmon EID 3 or Zeek conn.log). Flag any connection to a country or ASN that is statistically rare (e.g., not in the top 95% of its typical destinations) for that process.",
              "Machine Learning: Train a classification model to predict if a network connection is benign or malicious based on features like process name, destination port, destination IP reputation, JA3/JA3S hash (from Zeek ssl.log), and connection duration. After a process is targeted in a Sysmon EID 10 event, feed its subsequent network connections to the model. An alert is generated if the model classifies a connection as malicious with high confidence."
            ]
          },
          {
            "description": "Process access events with suspicious access rights target common, network-capable, and often-whitelisted processes like web browsers, svchost.exe, or explorer.exe.",
            "data_sources": [
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, any system with internet access.",
            "action": [
              "Symbolic: Define a watchlist of high-value TargetImage processes for evasion (e.g., 'chrome.exe', 'firefox.exe', 'svchost.exe', 'explorer.exe'). Create a rule that triggers an alert if a Sysmon Event ID 10 event shows a TargetImage from this list being accessed with GrantedAccess rights for memory writing (0x0020) or thread manipulation (0x0100).",
              "Statistical: Calculate the baseline frequency of injection attempts (suspicious Sysmon EID 10 events) against all process image names across the enterprise. Use a statistical test (e.g., Z-score) to identify if any specific whitelisted process (like 'svchost.exe') is being targeted at a rate significantly higher (e.g., > 3 standard deviations) than its historical baseline, indicating a targeted campaign.",
              "Machine Learning: Use an unsupervised learning model (e.g., graph-based clustering) to map relationships between SourceImage and TargetImage from Sysmon Event ID 10 data. Identify outlier clusters or edges where an unusual source process (e.g., 'word.exe') is targeting a common whitelisted process ('explorer.exe'). These anomalous relationships can indicate evasion attempts."
            ]
          },
          {
            "description": "A legitimate process, after being targeted by a process access event, spawns an unusual child process (e.g., powershell.exe) or makes a network connection with a high entropy DNS query.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 10",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, Domain Controllers, DNS Servers.",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process (e.g., 'explorer.exe') is the target of a suspicious Sysmon EID 10 event, and within 2 minutes, that same process GUID spawns a child process of 'cmd.exe' or 'powershell.exe' (from Sysmon EID 1).",
              "Statistical: For each parent process name, build a baseline of its normal child processes. After a parent process is targeted for injection, calculate a rarity score for any subsequent child processes it creates. Flag child processes that are statistically unlikely (e.g., 'svchost.exe' spawning 'ftp.exe'). Similarly, analyze DNS queries (Zeek dns.log) originating from the hijacked process; flag queries with an entropy score in the 99th percentile, which may indicate DGA.",
              "Machine Learning: Use a time series anomaly detection model on the behavior of whitelisted processes. Monitor features like child process count, network connection frequency, and DNS query rate. If a process is targeted by a suspicious Sysmon EID 10 event, and the model detects a significant anomaly in its behavioral time series immediately after, flag it as a potential hijacking event."
            ]
          },
          {
            "description": "A process, after being targeted for injection, communicates over the network using protocols or ports inconsistent with its documented function.",
            "data_sources": [
              "Zeek conn.log",
              "Sysmon Event ID 3",
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Network Segments, DNS servers.",
            "action": [
              "Symbolic: Create a rule that alerts when a process known for HTTP/S traffic (e.g., 'chrome.exe') initiates a network connection (Sysmon EID 3) on a non-standard port like TCP/4444 or TCP/8080, especially if that process was recently the target of a suspicious Sysmon EID 10 event.",
              "Statistical: For each process image name, baseline its typical (protocol, destination_port) pairs from Zeek conn.log and Sysmon EID 3 data. After a process is targeted for injection, flag any subsequent network connection it makes if the (protocol, port) pair falls below a frequency threshold (e.g., 1st percentile) for that process's historical behavior.",
              "Machine Learning: Train a one-class SVM or other anomaly detection model on the network behavior of specific, critical processes (e.g., 'lsass.exe', 'winlogon.exe'). The model learns what 'normal' network traffic for that process looks like (which is often none). Any network connection (Sysmon EID 3) initiated by these processes, especially after a process access event (Sysmon EID 10), would be flagged as a high-confidence anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]