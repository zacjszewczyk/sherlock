[
  {
    "information_requirement": "Is the adversary attempting to deobfuscate or decode files or information to evade our defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1140",
        "name": "Deobfuscate-Decode Files or Information",
        "evidence": [
          {
            "description": "A process executes with a file hash matching a known malicious deobfuscation tool from threat intelligence feeds, or a script is logged containing unique strings (e.g., function names, variable names) associated with known malware deobfuscation routines.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, User Workstations, Network Egress Points",
            "action": [
              "Symbolic: Continuously monitor process creation events (Windows Event ID 4688) and compare the file hash of the executed process against a threat intelligence feed of known malicious decoder tools. Also, create detection rules to scan PowerShell script block logs (Windows Event ID 4104) and files extracted from network traffic (Zeek files.log) for unique, hardcoded variable names, function names, or comments associated with known malware deobfuscation stubs. Alert on any matches.",
              "Statistical: For PowerShell script blocks (Windows Event ID 4104), calculate the Shannon entropy of the script content. Establish a baseline entropy score for legitimate scripts in the environment. Flag any script block whose entropy score exceeds a predetermined percentile (e.g., the 99th percentile) of the baseline, as this indicates likely obfuscation or packing.",
              "Machine Learning: Train a classification model (e.g., a Random Forest or Gradient Boosting model) on features extracted from PowerShell script blocks (Windows Event ID 4104). Features should include script length, character frequency, entropy, and the presence of specific keywords (e.g., 'FromBase64String', 'IEX', '-bxor'). Use this model to classify new script blocks as benign or malicious in real-time."
            ]
          },
          {
            "description": "The `certutil.exe` utility is executed with command-line arguments `-decode`, `-decodehex`, or the `-urlcache -split -f` combination, indicating file decoding or retrieval.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule to monitor process creation events (Windows Event ID 4688) for any execution of `certutil.exe` where the command line contains the arguments `-decode`, `-decodehex`, or the combination `-urlcache -split -f`. Alert on any match.",
              "Statistical: Establish a baseline of normal `certutil.exe` usage by analyzing parent processes, command-line arguments, and user accounts over a 30-day period. Use a z-score or interquartile range (IQR) method to flag executions with rare parent processes (e.g., `winword.exe`, `excel.exe`) or executions by users who have never used `certutil.exe` before. A score exceeding 3 standard deviations from the mean or outside 1.5 * IQR should be investigated.",
              "Machine Learning: Develop a time-series anomaly detection model on the frequency of `certutil.exe` executions with decoding arguments per host and per user. An unexpected spike in this activity, particularly outside of normal business hours, would be flagged by the model as a potential intrusion."
            ]
          },
          {
            "description": "PowerShell is executed with the `-EncodedCommand` flag, or a PowerShell script block log contains content indicative of deobfuscation, such as `[System.Convert]::FromBase64String`, `Invoke-Expression` (IEX), character array reassembly, or XOR operations.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, All Windows Servers, Microsoft Exchange Servers",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688) for `powershell.exe` command lines containing `-EncodedCommand`, `-e`, `-enc`, or other obfuscated argument variations. Simultaneously, create a signature-based rule to scan PowerShell Script Block logs (Windows Event ID 4104) for strings like `FromBase64String`, `IEX`, `Invoke-Expression`, and `-bxor`.",
              "Statistical: Calculate the Shannon entropy for all captured PowerShell script blocks (Windows Event ID 4104). Establish a baseline of entropy for legitimate administrative and user scripts. Flag any script block with an entropy score in the top percentile (e.g., > 98th percentile) or any command line with an encoded payload longer than 3 standard deviations from the mean length of legitimate encoded commands.",
              "Machine Learning: Use a trained logistic regression model to score the likelihood of a PowerShell command being malicious based on features like: command line length, presence of encoding flags, entropy of the script block, ratio of alphanumeric to special characters, and the presence of specific deobfuscation function calls. Correlate high-scoring events with subsequent child processes or network connections to low-reputation destinations."
            ]
          },
          {
            "description": "The `cmd.exe` or `powershell.exe` process is used to execute `copy /b` or `type` commands to concatenate multiple source files into a single output file, particularly when the output file has an executable extension (.exe, .dll, .ps1).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, File Servers, Staging Servers",
            "action": [
              "Symbolic: Create a detection rule for process creation events (Windows Event ID 4688) where `cmd.exe` is the parent process and the command line includes `copy /b` or `type` with multiple source files (e.g., using `+` or wildcards) being directed to a single output file with a `.exe`, `.dll`, `.ps1`, or `.bat` extension.",
              "Statistical: Profile the normal usage of `copy /b` and `type` across the enterprise. Establish a baseline for typical source/destination paths and file extensions. Flag any execution where the destination is a user-writable, non-standard executable path (e.g., `%TEMP%`, `C:\\Users\\Public\\`) and the number of concatenated files exceeds the 95th percentile of normal activity.",
              "Machine Learning: Train a decision tree classifier to identify suspicious file reassembly. Features should include the parent process name, the destination file path's rarity score, the output file extension, the number of input files, and the user context. The model can distinguish between legitimate developer/admin activity and adversary tradecraft."
            ]
          },
          {
            "description": "A sequence of events occurs in a short time window: 1. A file is downloaded from an external source. 2. The downloaded file is accessed by a decoding utility (e.g., `certutil.exe`) or scripting interpreter (e.g., `powershell.exe`). 3. A new executable file is created or a new network connection is established by the decoding process.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Perimeter (Gateway/Proxy), DMZ Servers, User Workstations",
            "action": [
              "Symbolic: Create a correlation rule that triggers when, within a 5-minute window on the same host: 1) A file is downloaded (identified in `Zeek http.log` or `files.log`); 2) The file path of the downloaded artifact is used as a command-line argument for `certutil.exe`, `powershell.exe`, or `wscript.exe` (Windows Event ID 4688); and 3) The decoding process subsequently makes a new outbound network connection (`Zeek conn.log`) to a destination not seen in the last 30 days.",
              "Statistical: For each file download event, calculate a risk score based on the source domain/IP reputation, file type, and downloading process. If a file with a high initial risk score is accessed (Windows Event ID 4663) by a known decoding utility, aggregate the risk. Flag any host whose aggregated risk score for this sequence of behaviors exceeds a dynamically adjusted threshold based on the rolling 24-hour average risk score for the entire network.",
              "Machine Learning: Use a graph-based analysis model to map relationships between processes, files, and network connections. Identify anomalous chains of activity where a low-prevalence process downloads a file, which is then passed to another process that spawns a connection to a newly observed domain. The model would learn normal 'causal chains' and flag sequences that deviate significantly."
            ]
          },
          {
            "description": "A process associated with a non-interactive or document-based application (e.g., `winword.exe`, `excel.exe`, `outlook.exe`) spawns a child process known for decoding or executing scripts (e.g., `powershell.exe`, `cmd.exe`, `wscript.exe`, `certutil.exe`).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Microsoft Exchange Servers, Terminal Servers / Citrix Environments",
            "action": [
              "Symbolic: Create a detection rule that alerts on any process creation event (Windows Event ID 4688) where the parent process is `winword.exe`, `excel.exe`, `powerpnt.exe`, or `outlook.exe` and the child process is `powershell.exe`, `cmd.exe`, `wscript.exe`, `cscript.exe`, or `certutil.exe`.",
              "Statistical: Generate a frequency table of all parent-child process relationships observed in the environment over a 30-day baseline period. Calculate the rarity of each observed pair. Flag any newly observed parent-child relationship, or any relationship that falls below a low frequency threshold (e.g., observed less than 5 times enterprise-wide), for investigation.",
              "Machine Learning: Train a Bayesian network to model legitimate parent-child process relationships. The model will calculate the conditional probability P(Child | Parent). When a new process creation event occurs, the model will score its likelihood. Events with a very low probability, such as P(`powershell.exe` | `winword.exe`), would be flagged as highly anomalous and indicative of potential malicious activity."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]