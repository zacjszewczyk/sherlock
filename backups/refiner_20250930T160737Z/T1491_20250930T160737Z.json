[
  {
    "information_requirement": "Has the adversary impacted the integrity of internal or external web assets through defacement?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1491",
        "name": "Defacement",
        "evidence": [
          {
            "description": "A file written to a web server directory has a hash matching a known malicious file from a threat intelligence feed, or network traffic to/from a web server contains a known-bad IP address, domain, or URL string associated with defacement campaigns.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, Content Delivery Network (CDN) edge nodes, Web Application Firewalls (WAF)",
            "action": [
              "Symbolic: Query file creation events (Windows Event ID 4663) where the target path is a web content directory. Join the file hash with a threat intelligence database of known malicious file hashes and alert on any match.",
              "Statistical: Aggregate connection logs (Zeek conn.log) to web servers by source IP. Join source IPs with a reputation feed that provides a numeric threat score. Alert if the average threat score for a given source IP over a 5-minute window exceeds a statistically determined threshold (e.g., 95th percentile of scores seen across all IPs).",
              "Machine Learning: Use a pre-trained Natural Language Processing (NLP) model to scan the response body content in Zeek http.log for text matching known defacement or hacktivist signatures. Alert when the model's classification confidence score for a 'defacement' class exceeds a 0.90 threshold."
            ]
          },
          {
            "description": "A web server process (e.g., w3wp.exe, httpd, nginx) spawns a child process, such as a command shell (cmd.exe, powershell.exe, /bin/sh) or a file transfer utility (certutil.exe, wget, curl), which subsequently modifies a file in a web content directory.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web servers (application layer), Web server host operating systems",
            "action": [
              "Symbolic: Create a rule that triggers when a process creation event (Windows Event ID 4688) shows a known web server process (e.g., 'w3wp.exe') as the parent process and a command shell or scripting engine (e.g., 'cmd.exe', 'powershell.exe') as the child process.",
              "Statistical: Profile all parent-child process relationships on web servers from process creation logs (Windows Event ID 4688). Calculate the baseline frequency of each unique relationship. Alert when a rare relationship occurs, such as a parent-child pair that falls below the 1st percentile of historical frequency.",
              "Machine Learning: Train a random forest classifier on process execution features (parent process name, child process name, command line argument entropy, user context) to classify each process creation event on web servers as 'benign-deployment' or 'suspicious'. Investigate events classified as 'suspicious' with high confidence."
            ]
          },
          {
            "description": "A designated critical web file (e.g., index.html, web.config) is modified by a user account not associated with an authorized deployment process, or the modification occurs outside of a pre-defined maintenance window.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web server file systems (content directories), Version control systems, Change management databases",
            "action": [
              "Symbolic: Maintain an allow-list of service accounts and process names authorized to modify web content directories. Alert on any file modification event (Windows Event ID 4663) in these directories where the 'SubjectUserName' or 'ProcessName' is not on the allow-list.",
              "Statistical: For each web server, create a time-of-day and day-of-week baseline for file modification activity (Windows Event ID 4663) in content directories. Calculate the hourly event count and alert if the count in any given hour exceeds 3 standard deviations from the mean for that specific hour and day-of-week.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on file modification events, using features like user account, source hostname, time of day, and number of files modified. Identify and investigate clusters that are separate from the main 'deployment' and 'benign activity' clusters, as these represent anomalous modification patterns."
            ]
          },
          {
            "description": "The measured content features of a served web page (e.g., text-to-HTML ratio, JavaScript block entropy, count of external image tags) deviate significantly from its historical baseline immediately following a file modification event on the server.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (monitoring HTTP responses), Web server file systems (for at-rest analysis)",
            "action": [
              "Symbolic: For critical pages, store a known-good SHA-256 hash of the page content. Upon a file modification trigger, re-calculate the hash of the served page from the response body in Zeek http.log. Alert if the new hash does not match the known-good hash.",
              "Statistical: For each key web page, baseline the Shannon entropy of its text content. Continuously monitor HTTP responses (Zeek http.log) and recalculate the entropy from the response body. Alert if the entropy score changes by more than 2 standard deviations from the established baseline, indicating a significant change in content structure.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., an LSTM autoencoder) on a vector of page features (page size, image count, link count, script count) extracted from Zeek http.log. Alert when the reconstruction error for a newly observed page's feature vector exceeds a dynamically learned threshold."
            ]
          },
          {
            "description": "A file is written to a web server's content directory via a network protocol (e.g., FTP, SMB) from a source IP outside of the designated administrative network range, or the file's mime-type is inconsistent with expected web content.",
            "data_sources": [
              "Zeek ftp.log",
              "Zeek smb_files.log",
              "Zeek conn.log",
              "Windows Event ID 4663",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web server network interfaces, Internal network segments with access to web servers, File Transfer Protocol (FTP) servers, Server Message Block (SMB) shares",
            "action": [
              "Symbolic: Create a rule to alert on any file write operation detected in Zeek ftp.log or smb_files.log where the destination is a web content directory and the source IP ('id.orig_h') is not within the defined internal management or developer subnets.",
              "Statistical: Profile the distribution of file mime-types transferred to web directories using the 'mime_type' field in Zeek files.log. Calculate the historical frequency of each mime-type. Alert if a file transfer involves a mime-type that is statistically rare (e.g., in the bottom 5th percentile of frequency), such as 'application/zip' or 'application/x-dosexec'.",
              "Machine Learning: Use an isolation forest algorithm to detect anomalies in file transfers. Create a feature set for each transfer including source IP, destination port, protocol, file size, and file mime-type. The model will isolate and score outlier transfers that deviate from normal patterns without prior labeling."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]