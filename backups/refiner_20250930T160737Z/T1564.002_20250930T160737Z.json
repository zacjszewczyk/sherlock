[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by creating hidden user accounts?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.002",
        "name": "Hidden Users",
        "evidence": [
          {
            "description": "A new user account is created (Windows Event ID 4720) where the 'Target User Name' field matches known malicious patterns or deviates significantly from established naming conventions.",
            "data_sources": [
              "Windows Event ID 4720"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Endpoint Devices",
            "action": [
              "Create a detection rule that triggers on Windows Event ID 4720 where the 'Target User Name' matches a watchlist of known malicious account names (e.g., 'support_388945a', 'sysadmin$') or regular expressions associated with penetration testing tools.",
              "For each new user creation event (Windows Event ID 4720), calculate the character-level entropy of the 'Target User Name'. Establish a baseline of entropy scores for legitimate usernames. Alert when a new username's entropy exceeds the 95th percentile of the baseline, indicating a potentially randomized or machine-generated name.",
              "Train a one-class SVM (Support Vector Machine) model on the character n-grams of all existing, legitimate usernames. Use this model to classify new usernames from Windows Event ID 4720 as either 'normal' or 'anomalous', flagging those that fall outside the learned boundary of normal naming conventions."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) is observed where the value of a subkey under `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList` is set to `0`.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Device Registries, Server Registries",
            "action": [
              "Create a high-priority alert that triggers on any Windows Event ID 4657 event where the 'Object Name' contains `\\SpecialAccounts\\UserList\\` and the 'New Value' is `0` or `0x00000000`.",
              "For all processes that modify the `...\\SpecialAccounts\\UserList` registry key, create a frequency count. Establish a baseline of normal processes that interact with this key. Alert when a process not on the baseline, or a process with a historically low frequency of interaction, modifies this key. Correlate with process command-line arguments from Event ID 4688 for context.",
              "Develop a time-series anomaly detection model on the rate of modifications to the `...\\SpecialAccounts\\UserList` key per host. An alert is generated if a sudden spike in modification activity is detected that deviates significantly from the host's historical pattern, potentially indicating a script hiding multiple accounts."
            ]
          },
          {
            "description": "Execution of a command-line process (Windows Event ID 4688) that uses built-in utilities like `reg.exe` to modify the `SpecialAccounts\\UserList` registry key to hide a user.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Command-Line Logs, Server Command-Line Logs",
            "action": [
              "Deploy a detection rule that inspects the command line field in Windows Event ID 4688 logs for the execution of `reg.exe` with arguments matching the pattern `add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList\"` and `/d 0`.",
              "Analyze the parent-child process relationships for all `reg.exe` executions. Calculate the rarity of a specific parent process (e.g., 'powershell.exe', 'cmd.exe', 'winword.exe') spawning `reg.exe` to modify the `SpecialAccounts\\UserList` key. Alert on statistically uncommon parent-child relationships.",
              "Use a classification algorithm (e.g., Random Forest) trained on features from command-line executions (process name, parent process, command-line arguments, argument length, entropy). The model should be trained to distinguish between benign administrative `reg.exe` usage and malicious hiding activity based on these features."
            ]
          },
          {
            "description": "A user account creation event (Windows Event ID 4720) is followed within a short time window (e.g., less than 10 minutes) by a registry modification (Windows Event ID 4657 or 4688) that hides the same user account on the same host.",
            "data_sources": [
              "Windows Event ID 4720",
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Endpoint Device Event Logs, Server Event Logs",
            "action": [
              "Implement a stateful correlation rule that triggers if Event ID 4720 for a `TargetUserName` on a host is followed by Event ID 4657 or 4688 for the same `TargetUserName` on the same host within a 10-minute window, where the second event corresponds to a known hiding action.",
              "For all newly created users, track the time delta between the creation event (4720) and the first subsequent logon event (4624). If a user is created but never logs in, and is instead hidden within a short timeframe, this sequence has a statistical probability near zero in normal operations. Flag any such 'create-and-hide-before-use' sequence.",
              "Use a sequence analysis model, such as a Recurrent Neural Network (RNN), trained on sequences of security events per user and host. The model learns normal event sequences (e.g., create -> login -> activity). An alert is generated when the model observes a low-probability sequence, such as 'create user' -> 'hide user'."
            ]
          },
          {
            "description": "Authentication or network activity is attributed to a user account that does not appear in a baseline list of visible user accounts, or is explicitly listed as hidden in the `SpecialAccounts\\UserList` registry key.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Network Gateway, DNS Servers, Endpoint Device Event Logs",
            "action": [
              "Periodically generate a list of hidden users by querying the `SpecialAccounts\\UserList` key on all endpoints. Create a watchlist from this list. Alert if any authentication event (Windows Event ID 4624, especially Logon Type 3 or 10) occurs where the 'Target User Name' is on this watchlist.",
              "For all successful logins (Event ID 4624), join the 'Target User Name' with a baseline of known, visible users. Calculate the percentage of login events attributed to non-baselined (and therefore potentially hidden) users over a rolling time window. Alert if this percentage exceeds a dynamic threshold (e.g., 3 standard deviations above the mean).",
              "Use a graph-based anomaly detection algorithm. Create a graph where nodes are users and hosts, and edges represent authentication events (4624) or network connections (Zeek conn.log). Augment user nodes with an 'is_hidden' attribute. The algorithm can identify anomalous patterns, such as a hidden user node suddenly becoming highly active or connecting to a critical asset."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]