[
  {
    "information_requirement": "Has the adversary accessed credentials stored in files on the enterprise network? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1552.001",
        "name": "Credentials In Files",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) where the Process File Hash matches a known credential harvesting tool or script from a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints, All Servers, Developer Workstations",
            "action": [
              "Symbolic: Query process creation events (Windows Event ID 4688) and join the logged process hash against a maintained list of known malicious hashes for tools like LaZagne, Mimikatz, and PowerSploit modules. Generate a high-severity alert for any match.",
              "Statistical: For processes not matching known hashes, calculate the entropy of the command line. Establish a baseline entropy score for common system processes (e.g., svchost.exe, cmd.exe). Flag process creations where the command-line entropy exceeds the 99th percentile for that specific process name, as this can indicate obfuscated credential harvesting commands.",
              "Machine Learning: Train a Random Forest classifier on labeled process creation events (Windows Event ID 4688), using features such as process name, parent process name, command-line length, and command-line character distribution. Use the model to classify new process creations in real-time as 'benign' or 'potential credential harvester'."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) where the command line includes file-searching utilities combined with keywords indicative of credential hunting.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Servers, Database Servers, File Shares, Developer Workstations, Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule that monitors process command lines (Windows Event ID 4688) for the co-occurrence of file-searching utilities (e.g., `findstr.exe`, `grep.exe`, `type.exe`, `Get-Content`) and a list of credential-related keywords (e.g., 'password', 'secret', 'private_key', 'id_rsa', 'cpassword'). Also, monitor for direct access (Windows Event ID 4663) to specific credential files like `web.config`, `credentials.xml`, or GPP-related `groups.xml` in SYSVOL by non-system processes.",
              "Statistical: For each user, establish a baseline of the frequency of using search utilities with credential-related keywords. Calculate the daily count of such commands per user. An alert is triggered if a user's daily count exceeds three standard deviations above their personal 30-day moving average, or if any non-administrative user executes such a command.",
              "Machine Learning: Use a Natural Language Processing (NLP) model, such as a pre-trained transformer, to analyze command-line arguments. Fine-tune the model to classify commands based on their semantic intent, identifying those likely associated with searching for credentials, even with obfuscated keywords or novel syntax. Score each command's maliciousness and alert on high-scoring events."
            ]
          },
          {
            "description": "A single process or user accessing an anomalously high number of distinct files with sensitive extensions (e.g., .config, .xml, .yml, .json, .sh, .pem, .kdbx) across multiple directories within a short time window (e.g., 5 minutes).",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File Shares, Code Repositories (on-prem), Web Server Directories, Domain Controllers (SYSVOL)",
            "action": [
              "Symbolic: Create a rule that triggers when a single process name (from Windows Event ID 4663) is observed reading more than 20 unique files with extensions like `.config`, `.xml`, `.yml`, `.pem`, or `.kdbx` from more than 3 distinct directory paths within a 1-minute window.",
              "Statistical: Aggregate file read events (Windows Event ID 4663) by source Process ID and User over 5-minute intervals. For each interval, count the number of unique files accessed with sensitive extensions. Establish a 95th percentile baseline for this count across all users and processes. Generate an alert when any user/process combination exceeds this threshold.",
              "Machine Learning: Apply DBSCAN or another density-based clustering algorithm to file access events (Windows Event ID 4663). Use features like (user, process_name, file_extension, directory_path). Normal activity will form dense clusters. File access patterns that are classified as noise points by the algorithm represent anomalous behavior indicative of credential hunting."
            ]
          },
          {
            "description": "An anomalous process lineage where a parent process associated with a network service (e.g., w3wp.exe, sshd.exe) spawns a child process (e.g., cmd.exe, powershell.exe) that subsequently performs widespread file access or executes credential-searching commands.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers, Web Servers, Remote Access Gateways, Domain Controllers",
            "action": [
              "Symbolic: Create a correlation rule that joins process creation events (Windows Event ID 4688) to identify parent-child relationships. Alert if a parent process like `w3wp.exe`, `httpd.exe`, or `sshd.exe` spawns a shell (`cmd.exe`, `powershell.exe`, `bash.exe`) which then executes a command containing keywords like 'password' or 'secret'.",
              "Statistical: Build a graph of common process execution chains from historical Windows Event ID 4688 data. Calculate the rarity of each parent-child process pair (e.g., `w3wp.exe` -> `powershell.exe` is rare). Correlate this with network connection data from Zeek conn.log. An alert is triggered if a rare process chain originates from a network session with anomalous properties (e.g., rare source ASN, non-standard destination port).",
              "Machine Learning: Use a time-series model (like an LSTM) on event sequences of the form (network_connection -> parent_process_creation -> child_process_creation -> file_access). Train the model on benign sequences. If a new, observed event (e.g., access to `web.config`) deviates significantly from the model's prediction of the next likely event in the sequence, flag it as a potential attack chain."
            ]
          },
          {
            "description": "A user account accesses credential-related files or configuration file directories that are inconsistent with the user's established file access baseline or the baseline of their assigned peer group.",
            "data_sources": [
              "Windows Event ID 4663",
              "Active Directory security logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, File Shares, Domain Controllers, Code Repositories (on-prem)",
            "action": [
              "Symbolic: Maintain a static mapping of roles to allowed file paths (e.g., 'Developers' can access `\\\\dev-share\\*.config`, 'HR' cannot). Generate an alert when a file access event (Windows Event ID 4663) violates this access control logic, for instance, a user from the 'Marketing' group accessing an `id_rsa` file.",
              "Statistical: For each user, profile their typical file access behavior using Windows Event ID 4663 data from the last 30 days, creating a set of 'normal' file extensions and directory paths. Calculate a Jaccard similarity score between the set of files accessed in a new session and the user's historical profile. A score below a threshold (e.g., 0.2) indicates a significant deviation and potential compromise.",
              "Machine Learning: Implement peer group analysis. First, use clustering (e.g., K-Means) on user attributes from Active Directory and historical file access patterns (Windows Event ID 4663) to automatically define peer groups. For each user, compare their real-time file access behavior to the centroid of their cluster using a distance metric (e.g., Mahalanobis distance) to flag users who are significant outliers from their peer group's norm."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]