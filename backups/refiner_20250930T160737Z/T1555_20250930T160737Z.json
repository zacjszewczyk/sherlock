[
  {
    "information_requirement": "Is the adversary attempting to obtain credentials from password stores? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1555",
        "name": "Credentials from Password Stores",
        "evidence": [
          {
            "description": "Execution of a process (Windows Event ID 4688) where the process's SHA256 hash matches a known credential theft tool on a curated threat intelligence list.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, particularly Domain Controllers and administrator jump boxes.",
            "action": [
              "Symbolic: For each new process creation event (Windows Event ID 4688), compare the process hash (e.g., ProcessHash-SHA256) against a threat intelligence list of known credential dumper hashes (e.g., Mimikatz, LaZagne). Generate a critical alert on any match.",
              "Statistical: Calculate the prevalence of each process hash across the enterprise over a 30-day rolling window. A process hash that is present on fewer than 1% of endpoints and is not signed by a trusted publisher should be flagged for investigation. This identifies rare, potentially malicious tools not yet in threat intelligence feeds.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from process creation events, including process hash prevalence, parent process, command-line length, and entropy. The model should be trained on labeled data of known malicious and benign processes to predict the likelihood that a new, unseen process is a credential theft tool. A prediction score exceeding a predefined threshold (e.g., 0.9) triggers an alert."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) contains command-line arguments with strings, patterns, or parameter combinations indicative of credential dumping operations.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, with heightened monitoring on systems processing sensitive data or administrative credentials.",
            "action": [
              "Symbolic: Scan the `CommandLine` or `ProcessCommandLine` field of all process creation events (Windows Event ID 4688) for regular expressions matching known credential dumping commands, such as `sekurlsa::logonpasswords`, `lsadump::sam`, `vault::cred`, or patterns targeting browser profile paths (e.g., `*AppData\\\\..\\\\User Data\\\\Default\\\\Login Data*`). [1]",
              "Statistical: For each process (e.g., powershell.exe, cmd.exe, rundll32.exe), calculate the Shannon entropy of its command-line arguments using the formula $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$. An instance where the entropy score deviates significantly (e.g., > 3 standard deviations) from the process's established baseline indicates potential obfuscation or complex malicious commands.",
              "Machine Learning: Use a Natural Language Processing (NLP) model, like a pre-trained transformer, fine-tuned on a dataset of malicious and benign command lines. The model learns to classify command lines as malicious based on the sequence and combination of arguments, flags, and keywords, identifying novel attack patterns that simple regex might miss."
            ]
          },
          {
            "description": "A process not on a pre-defined allowlist (e.g., chrome.exe, keepass.exe) generates a file read access event (Windows Event ID 4663) for a file or directory known to store credentials, such as browser login databases or credential manager vaults.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, specifically user profile directories containing application data (e.g., %APPDATA%, %LOCALAPPDATA%).",
            "action": [
              "Symbolic: Configure SACLs to log read access (Windows Event ID 4663) on credential store paths (e.g., `*\\Login Data`, `*\\.kdbx`, `%APPDATA%\\Microsoft\\Credentials\\*`). Alert when the `Process Name` in the event is not on a pre-approved list of legitimate applications (e.g., chrome.exe, firefox.exe, keepass.exe).",
              "Statistical: For each monitored credential file path, create a frequency distribution of accessing process names over a 30-day baseline. An alert is generated when a process that is statistically rare for that file path (e.g., in the bottom 5th percentile of access frequency, like `powershell.exe`) attempts a read operation.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., LSTM Autoencoder) on the sequence of file access events for a given user. The model learns the normal pattern of which processes access which credential stores and in what order. An alert is triggered when a sequence of events significantly deviates from the learned normal behavior."
            ]
          },
          {
            "description": "A process requests memory read access (`PROCESS_VM_READ`) to the LSASS process, and the requesting process is not on an established allowlist of legitimate security and system tools.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially Domain Controllers where LSASS holds domain credentials.",
            "action": [
              "Symbolic: Monitor for Sysmon Event ID 10 where `TargetImage` is `lsass.exe` and `GrantedAccess` includes `0x1010`. Alert if the `SourceImage` is not on a strict allowlist of authorized processes (e.g., specific EDR executables, MsMpEng.exe). [2]",
              "Statistical: Profile the `SourceImage` for all LSASS access events. Calculate the enterprise-wide prevalence for each `SourceImage`. Any `SourceImage` with a prevalence below a dynamic threshold (e.g., seen on < 2% of hosts) or that has never been seen before should be considered highly suspicious and trigger an alert.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features from LSASS access events, including `SourceImage` path, parent process, user context, and time of day. The model can group normal access patterns into clusters. Any event that is classified as noise or forms a new, small cluster represents a significant anomaly warranting investigation."
            ]
          },
          {
            "description": "A file read event on a credential store is followed within a short time window (e.g., 5 minutes) by an anomalous network connection from the same host, characterized by a destination IP with low prevalence or high data upload volume.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint file systems, network egress points (e.g., firewalls, proxies), and DNS servers.",
            "action": [
              "Symbolic: Correlate a file read event (Windows Event ID 4663) on a credential store with a subsequent network connection (Zeek conn.log) from the same `id.orig_h` to a destination IP (`id.resp_h`) on a threat intelligence blocklist within a 5-minute window. Alert on a match.",
              "Statistical: For each host that reads a credential store, monitor its subsequent network connections in Zeek conn.log. Calculate the percentile rank of the destination IP's rarity and the total bytes sent (`orig_bytes`). Trigger an alert if, within 5 minutes of the file read, the host connects to an IP in the 99th percentile of rarity and uploads an amount of data greater than the 95th percentile of its typical outbound connection size.",
              "Machine Learning: Implement a sequence analysis model (e.g., Hidden Markov Model) that takes a stream of host events (file reads) and network events (connections) as input. Train the model to recognize the specific temporal sequence of `[read credential store] -> [anomalous network connection]`. The model can assign a probability score to sequences of events, flagging sequences that strongly match the trained malicious pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]