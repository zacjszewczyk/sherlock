[
  {
    "information_requirement": "Is the adversary executing commands via container administration services? (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1609",
        "name": "Container Administration Command",
        "evidence": [
          {
            "description": "A network connection to a container administration API from an IP address on a threat intelligence feed, or a container deployment command referencing an image on a known-malicious image list.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container orchestration control plane nodes (e.g., Kubernetes masters)",
            "action": [
              "Symbolic: Continuously correlate source IP addresses from network connections to container API ports (e.g., Docker 2375/2376, K8s 6443/443, Kubelet 10250) in Zeek conn.log against a CTI feed of malicious IPs. Additionally, monitor process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for `docker run` or `kubectl run` commands and match the specified container image name and tag against a list of known malicious container images. Alert on any match.",
              "Statistical: For all connections to container APIs, calculate the rarity of the source IP's Autonomous System Number (ASN) and geographic location based on a 90-day baseline. Flag any connection originating from an ASN or country seen for the first time or that falls below the 1st percentile of frequency.",
              "Machine Learning: Train a classification model (e.g., Logistic Regression) on enriched Zeek conn.log data. Features should include connection duration, bytes sent/received, source IP rarity (statistical score from previous step), and a boolean for CTI match. The model should classify each connection as 'benign' or 'potentially malicious', flagging the latter for analyst review."
            ]
          },
          {
            "description": "Execution of `docker exec` or `kubectl exec` where the sub-command contains patterns associated with reverse shells, discovery, or data access.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container hosts (e.g., Docker daemons, Kubelets)",
            "action": [
              "Symbolic: Monitor process command-line arguments (Windows Event ID 4688, Sysmon Event ID 1) for `docker exec` or `kubectl exec`. Apply regular expressions to detect high-fidelity malicious sub-commands, such as `/bin/bash -i`, `nc -e`, `cat /etc/shadow`, `whoami`, or `curl/wget` to non-standard ports or raw IP addresses. Alert on matches.",
              "Statistical: For each user, calculate the Shannon entropy of their `exec` command arguments within a rolling 1-hour window. A sudden spike in entropy above the 95th percentile of the user's historical baseline suggests a shift from repetitive, benign commands to varied, exploratory activity. Also track the ratio of short, simple commands to long, complex ones; a deviation from the norm can be anomalous.",
              "Machine Learning: Implement a sequence analysis model (e.g., using an LSTM) on the sequence of `exec` commands issued by a user. Train the model on benign command sequences from developers and CI/CD systems. Flag sequences that have a low probability of being generated by the learned benign model, as these may represent an adversary's command chain."
            ]
          },
          {
            "description": "A `docker run` or `kubectl` deployment command includes arguments that break container isolation, such as `--privileged`, host PID/network namespace sharing, or sensitive host path mounts.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "CI/CD pipeline servers",
            "action": [
              "Symbolic: Create a detection rule that parses command-line arguments (Windows Event ID 4688, Sysmon Event ID 1) for `docker run`, `kubectl run`, or pod/deployment manifests applied via `kubectl apply`. Alert on the presence of high-risk flags and arguments, including `--privileged`, `--host=pid`, `--host=net`, and volume mounts (`-v`) of sensitive host paths like `/`, `/etc`, or `/var/run/docker.sock`.",
              "Statistical: Maintain a profile of which users or service accounts are authorized to use privileged flags. For each user, calculate the frequency of privileged flag usage. Alert if a user not on the authorized list uses a privileged flag, or if an authorized user's frequency of use exceeds 3 standard deviations above their individual baseline.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on container creation events. Features should include the user, source host, image used, and a binary vector representing the presence/absence of various high-risk flags. Clusters of one or a few events, especially those containing rare combinations of features (e.g., a non-admin user from a new host using `--privileged`), should be flagged as anomalous."
            ]
          },
          {
            "description": "Execution of a container administration command (`docker`, `kubectl`) by a user account that has not previously executed such commands, or at a time that is statistically anomalous for that user or the environment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container hosts (e.g., Docker daemons, Kubelets)",
            "action": [
              "Symbolic: Maintain an explicit allow-list of user and service accounts authorized to run `docker` and `kubectl` commands on production hosts. Generate an alert for any execution of these commands by an account not on the list, based on the user field in Windows Event ID 4688 or Sysmon Event ID 1.",
              "Statistical: For each authorized user, establish a baseline of command execution times (hour of day, day of week) over a 30-day period. Use a modified Z-score on the timestamp of an event to detect executions at anomalous times (e.g., a command at 3 AM by a user who has never worked outside 9-5). A score greater than 3.5 should trigger an alert.",
              "Machine Learning: Employ a time-series anomaly detection model (e.g., SARIMA) on the aggregate count of container administration commands per hour. Train the model on historical data to learn normal operational rhythms, including deployment windows and daily developer activity. Flag time intervals where the actual command count significantly deviates from the model's prediction confidence interval."
            ]
          },
          {
            "description": "Network connection volume or source to a container administration API (e.g., Docker daemon, K8s API) deviates significantly from the established baseline.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments hosting container infrastructure",
            "action": [
              "Symbolic: Create a rule to alert on any network connection to a container administration port (e.g., 2375, 6443, 10250) originating from an external, non-whitelisted IP address or from an internal network segment (e.g., user VLANs) that should not have access. This can be implemented as a simple lookup against an access control list of subnets.",
              "Statistical: Using Zeek conn.log, establish a baseline of connection counts per source IP per hour to container APIs. Use a percentile-based threshold to detect outliers. For example, alert if a single source IP's connection count in one hour exceeds the 99th percentile of all source IP hourly connection counts from the past 30 days.",
              "Machine Learning: Apply an unsupervised anomaly detection algorithm like Isolation Forest to Zeek conn.log sessions targeting container APIs. Features for the model should include source IP, source port, duration, orig_bytes, resp_bytes, and protocol. The model will learn what a 'normal' connection looks like and assign an anomaly score to each new connection; high scores indicate potential malicious activity like scanning."
            ]
          },
          {
            "description": "The frequency or entropy of container administration commands executed by a single user or from a single host shows a statistically significant increase compared to its historical baseline.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations with container tools",
            "action": [
              "Symbolic: Define a simple threshold rule that alerts if a single user or host executes more than 50 `docker` or `kubectl` commands in a 5-minute window. This acts as a basic detection for high-volume scripted activity.",
              "Statistical: For each user/host, calculate a rolling 10-minute window of (a) command count and (b) Shannon entropy of the command strings. Compare these values to the user/host's historical 95th percentile for the same metrics. An alert is generated if both count and entropy cross their respective thresholds simultaneously, indicating an unusual burst of diverse activity.",
              "Machine Learning: Use a change point detection algorithm on the time series of command counts per user. This can identify the exact moment a user's behavior shifts from a stable baseline to a new, more active state. This is more robust than a simple threshold and can detect more subtle, sustained increases in activity indicative of an interactive adversary."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]