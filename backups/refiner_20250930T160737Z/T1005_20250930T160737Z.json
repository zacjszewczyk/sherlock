[
  {
    "information_requirement": "Is the adversary collecting data from local systems?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1005",
        "name": "Data from Local System",
        "evidence": [
          {
            "description": "A process is created with a file hash matching a known data collection tool or malware implant.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, Database Servers), Executive workstations, Developer endpoints",
            "action": [
              "Symbolic: Continuously monitor Windows Event ID 4688 (Process Creation) events. Compare the ProcessHash or Image path against a threat intelligence feed of known malicious hashes and file paths associated with data collection tools (e.g., secretsdump.py, SharpHound.exe). Generate a high-severity alert upon any match.",
              "Statistical: For processes not matching known IOCs, calculate the rarity of the process hash across the enterprise over a 30-day rolling window. Flag processes with hashes that appear on fewer than 0.1% of endpoints for analyst review, as this indicates non-standard or potentially unauthorized software.",
              "Machine Learning: Train a binary classification model (e.g., Logistic Regression, Random Forest) using features from process creation events, such as parent process name, user context, command-line length, and hash prevalence. Use the model to classify each new process execution as benign or potentially malicious collection activity, flagging those with a high probability score."
            ]
          },
          {
            "description": "A command-line interpreter or scripting engine (e.g., cmd.exe, powershell.exe) is executed with arguments indicating a search for or archiving of sensitive files.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, SharePoint servers, Code repositories",
            "action": [
              "Symbolic: Create a detection rule that uses regular expressions to scan command-line arguments in Windows Event ID 4688 and script block content in Windows Event ID 4104. The regex should search for combinations of search utilities (e.g., findstr, grep, dir /s), sensitive keywords (e.g., 'password', 'secret', 'config'), and file extensions (e.g., *.kdbx, *.pem, *.sql, *.bak) followed by redirection or archiving commands (e.g., > output.txt, tar -czf, zip).",
              "Statistical: For each command-line execution, calculate the Shannon entropy of the arguments. Unusually high entropy can indicate obfuscated commands or encoded data. Establish a baseline entropy score for common processes (e.g., cmd.exe, powershell.exe) and alert when a new execution's entropy exceeds the 99th percentile of the historical distribution for that process.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA, LSTM) to monitor the frequency of file search and archiving commands per user and per host. The model should learn the normal daily and weekly patterns of such activity. An alert should be triggered if the observed frequency significantly deviates from the forecasted range, indicating a potential burst of collection activity."
            ]
          },
          {
            "description": "A single process accesses an anomalously high number of unique files or directories within a short time frame.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers containing sensitive PII/PHI/Financial data, Critical system directories (e.g., System32), User profile directories",
            "action": [
              "Symbolic: Create a rule that triggers when a single Process ID (from Event ID 4663) generates more than 1000 file-read events across more than 50 unique directories within a 5-minute window. Exclude known backup processes and indexing services by name (e.g., wbengine.exe, SearchIndexer.exe).",
              "Statistical: For each process, calculate the number of unique file paths accessed per minute. Establish a per-process baseline (e.g., winword.exe vs. explorer.exe). Generate an alert if the count for a given process instance exceeds 3 standard deviations above the historical mean for that specific process name across the environment.",
              "Machine Learning: Implement a clustering algorithm (e.g., DBSCAN) on file access events. Use features such as process name, user, hour of day, and the file extensions being accessed. The algorithm will group normal activity into clusters. Any file access event that does not belong to an established cluster ('noise' points) should be flagged as an outlier, representing anomalous collection behavior."
            ]
          },
          {
            "description": "A process accesses files in a pattern inconsistent with its expected behavior, such as a web server process reading user documents or a non-administrative user accessing system configuration files.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web servers, Application servers, Domain Controllers, Endpoints with local admin privileges",
            "action": [
              "Symbolic: Define and monitor for specific anomalous parent-child process relationships indicative of collection, such as winword.exe spawning powershell.exe, or w3wp.exe spawning cmd.exe. Also, create rules that flag any non-system, non-admin account attempting to read files from sensitive directories like C:\\Windows\\System32\\config\\ or C:\\Windows\\NTDS\\.",
              "Statistical: Create a baseline of file path access patterns for critical processes (e.g., lsass.exe, w3wp.exe, sqlservr.exe). For each access event (Event ID 4663), calculate the rarity of the (Process Name, File Path Prefix) tuple. For example, (w3wp.exe, C:\\Users\\) would be extremely rare. Alert on tuples that fall below a 0.01% prevalence threshold.",
              "Machine Learning: Develop a 'User and Entity Behavior Analytics' (UEBA) model that profiles the typical file access behavior for each user and host. The model should learn which applications each user runs, the types of files they access, and the times they are active. An alert should be triggered when a user's activity significantly deviates from their established profile, such as accessing an unusually large number of files outside of business hours."
            ]
          },
          {
            "description": "A command to view or copy the running or startup configuration is executed on a network device, especially when the output is directed to a file or remote server.",
            "data_sources": [
              "Zeek syslog.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches, Edge routers, Firewalls, VPN concentrators",
            "action": [
              "Symbolic: In syslog data forwarded from network devices (ingested via Zeek or a SIEM), create a regex-based rule to detect commands such as 'show running-config', 'copy running-config tftp:', or 'copy system:running-config scp:'. Immediately alert on any command that copies the configuration to a remote location (TFTP, SCP, FTP).",
              "Statistical: Establish a baseline for each network administrator account, tracking the frequency and type of configuration commands they execute. Alert if an account's command usage deviates significantly from its historical profile, such as a sudden spike in 'show' commands or the use of a copy command for the first time in 90 days. Calculate the rarity of the source IP address performing the administration and flag logins from subnets outside of the established management network.",
              "Machine Learning: Use a sequence analysis model to learn common sequences of commands used during legitimate network administration sessions. An anomalous sequence, such as a login immediately followed by a 'copy running-config' command with no preceding diagnostic commands, should be flagged. Correlate the syslog event with network flow data (Zeek conn.log) to model the data transfer; a transfer to an unknown or external IP address following a config copy command would receive a high-risk score."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]