[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by using downgraded system features? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1562.010",
        "name": "Downgrade Attack",
        "evidence": [
          {
            "description": "A new service is created (Windows Event ID 7045) or a process is executed (Windows Event ID 4688) where the associated file hash matches a known vulnerable driver or tool from a threat intelligence feed (e.g., LOLDrivers).",
            "data_sources": [
              "Windows Event ID 7045",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Endpoint Workstations of privileged users",
            "action": [
              "Symbolic: Match file hashes from process creation events (Windows Event ID 4688) and service creation events (Windows Event ID 7045) against a curated list of known vulnerable driver hashes (e.g., from the LOLDrivers project). Generate a high-severity alert upon any match.",
              "Statistical: For each new service or driver loaded, calculate the prevalence of its hash across the enterprise over the last 90 days. Flag drivers with a prevalence below the 5th percentile (i.e., seen on very few machines) for further analysis, as adversaries often use custom or rare tools.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from process and service creation events, including parent process, file path, user context, and hash prevalence. Use the model to predict the likelihood that a newly loaded driver is malicious. A high probability score indicates a potential downgrade attack."
            ]
          },
          {
            "description": "A PowerShell process is initiated with command-line arguments explicitly requesting version 2 (e.g., '-v 2', '-version 2'), which lacks modern security features like Script Block Logging and AMSI.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Windows Event ID 400"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic: Create a detection rule to search process execution logs (Windows Event ID 4688) for command-line strings containing 'powershell' and ('-v 2' or '-version 2'). Correlate this with the EngineVersion field in PowerShell logs (Windows Event ID 400). Alert on any exact match.",
              "Statistical: Establish a baseline of PowerShell versions used per user and host by analyzing PowerShell engine logs (Windows Event ID 400). Calculate the historical frequency of PowerShell v2 execution for each user. An execution by a user who has never used v2 before, or whose v2 usage is more than three standard deviations above their personal baseline, is anomalous.",
              "Machine Learning: Use time-series analysis on PowerShell logging data (Event IDs 4103, 4104) for each host. A sudden cessation of these logs immediately following a PowerShell v2 execution event (Event ID 4688) can be flagged by an anomaly detection model as a potential defense evasion event."
            ]
          },
          {
            "description": "A registry modification event (Windows Event ID 4657) is observed where a value is changed for a key path associated with a critical security control, such as setting `HKLM\\...\\HypervisorEnforcedCodeIntegrity\\Enabled` to `0` or `HKLM\\...\\DisableAntiSpyware` to `1`.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Hyper-V Hosts, and Windows 10/11 Endpoints with Virtualization-Based Security (VBS) enabled",
            "action": [
              "Symbolic: Create a watchlist of critical registry key paths and their secure values (e.g., `HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\DisableAntiSpyware` should be `0`, `HKLM\\SYSTEM\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\\Enabled` should be `1`). Generate a critical alert if a registry modification event (Windows Event ID 4657) sets any of these keys to an insecure value.",
              "Statistical: For each monitored security registry key, establish a baseline of modification frequency. A modification occurring outside of a standard maintenance window (e.g., Patch Tuesday) or initiated by a non-standard process (e.g., not `TiWorker.exe` or `TrustedInstaller.exe`) that exceeds the 99th percentile of modification frequency should be flagged for review.",
              "Machine Learning: Train a classification model to determine if a registry modification is malicious based on features like the process making the change (from correlated Event ID 4688), the key path, the user context, and the time of day. A high probability score for a change to a security-related key indicates a likely downgrade attempt."
            ]
          },
          {
            "description": "Network traffic logs show the use of a weak or deprecated cryptographic protocol (e.g., SSLv3, TLS 1.0, TLS 1.1) or a clear-text protocol (HTTP) for a destination port typically associated with encrypted traffic (e.g., 443).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Network Segments (East-West traffic), VPN Concentrators",
            "action": [
              "Symbolic: Query Zeek `ssl.log` for any connections where the `version` field is 'SSLv3', 'TLSv10', or 'TLSv11'. Separately, query Zeek `conn.log` for connections where `id.resp_p` is 443 and `service` is 'http'. Alert on any matches.",
              "Statistical: For each server IP, calculate the daily ratio of weak TLS versions to strong TLS versions (TLS 1.2+). If this ratio for a given server suddenly increases by more than three standard deviations from its 30-day rolling average, it indicates a potential downgrade attack targeting that server.",
              "Machine Learning: Use unsupervised learning (e.g., clustering with DBSCAN) on Zeek `ssl.log` records, using features like TLS version, cipher suite, server name (SNI), and destination port. Identify clusters of connections that represent anomalous or outlier behavior, which could correspond to SSL/TLS stripping attacks."
            ]
          },
          {
            "description": "Within a short time window on a single host, a sequence of distinct defense evasion commands are observed (e.g., registry modification, service stop, bcdedit), originating from the same parent process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Windows Event ID 7040"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially those hosting critical services",
            "action": [
              "Symbolic: Define a rule that triggers if a single process ID (PID) or parent process ID (PPID) is responsible for 3 or more distinct 'defense evasion' category events (e.g., `bcdedit /set`, `Set-MpPreference -Disable...`, `reg.exe add ...DisableAntiSpyware`, `net stop <security_service>`) within a 5-minute window.",
              "Statistical: For each executed script process (e.g., powershell.exe, cscript.exe), calculate the Shannon entropy of the system commands it spawns within its lifetime. A sudden spike in entropy, especially when correlated with security-related keywords in the child process command lines, indicates a script performing multiple, varied, and potentially malicious actions.",
              "Machine Learning: Use a sequence-aware model like a Recurrent Neural Network (RNN) trained on sequences of process, registry, and service events from known benign and malicious activity. Feed real-time event sequences into the model to classify them as a likely malicious 'disable-then-execute' pattern."
            ]
          },
          {
            "description": "Process execution logs show the use of `bcdedit.exe` with arguments to disable security features (e.g., `/set testsigning on`, `/set nointegritychecks on`), or file/registry modification logs show unauthorized changes to the EFI partition or BCD registry hive.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "UEFI-based systems, Domain Controllers, and BitLocker-encrypted endpoints",
            "action": [
              "Symbolic: Create an alert that fires on any execution of `bcdedit.exe` (Windows Event ID 4688) containing the arguments '/set testsigning on', '/set nointegritychecks on', or '/deletevalue {default} safeboot' outside of an approved change request window.",
              "Statistical: Profile the users and parent processes that legitimately execute `bcdedit.exe`. Any execution by a user or parent process not on an established allow-list (e.g., `TrustedInstaller.exe`, named system administrators) should be considered anomalous and have its risk score significantly increased.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on features of benign `bcdedit.exe` executions (e.g., user, parent process, full command-line, time of day). Use the trained model to identify novel or anomalous executions that deviate significantly from the learned 'normal' behavior, indicating a potential attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]