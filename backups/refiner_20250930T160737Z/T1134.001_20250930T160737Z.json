[
  {
    "information_requirement": "Has the adversary escalated privileges using token impersonation/theft?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1134.001",
        "name": "Token Impersonation-Theft",
        "evidence": [
          {
            "description": "The command line of a created process contains specific substrings associated with known token manipulation tools, such as 'incognito' or 'steal_token'.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations), Critical application servers, Windows Server fleet",
            "action": [
              "Create a high-fidelity alert rule that scans the Process CommandLine field in Windows Event ID 4688 for exact string matches of known malicious token manipulation tool commands (e.g., 'incognito', 'steal_token', 'make_token').",
              "Calculate the entropy of the Process CommandLine field for all processes. Establish a baseline entropy for common processes (e.g., svchost.exe, powershell.exe). Flag instances where a command's entropy is a significant outlier (e.g., > 3 standard deviations from the mean for that process name), which can indicate obfuscated commands used by token manipulation tools.",
              "Train a supervised classification model (e.g., Naive Bayes) on a dataset of labeled command lines (malicious/benign). Use features like n-grams, character frequencies, and presence of special characters. Deploy the model to score new command lines from Windows Event ID 4688 for their likelihood of being malicious."
            ]
          },
          {
            "description": "A process that typically holds privileged tokens and does not spawn interactive shells (e.g., svchost.exe, services.exe, winlogon.exe) creates a child process such as cmd.exe or powershell.exe.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Server fleet, Endpoint devices (workstations)",
            "action": [
              "Create a rule to alert on the creation of specific child processes (e.g., cmd.exe, powershell.exe, pwsh.exe, rundll32.exe) from parent processes that typically hold privileged tokens and should not spawn interactive shells (e.g., lsass.exe, services.exe, winlogon.exe, csrss.exe).",
              "Generate a frequency table of all parent-child process relationships observed in the environment over a 30-day period. Calculate a rarity score for each pair (e.g., 1 / frequency). Alert on any new process creation where the parent-child pair has a rarity score exceeding a defined percentile threshold (e.g., 99.5th percentile).",
              "Use an unsupervised clustering algorithm (e.g., DBSCAN) on process creation events, using features such as Parent Process Name, Process Name, and User Context (e.g., SYSTEM vs. a named user). Identify and investigate small, distinct clusters that deviate from large, well-established clusters of normal activity."
            ]
          },
          {
            "description": "A handle with token duplication rights is requested for a high-privilege process (e.g., lsass.exe, winlogon.exe) by a source process not on an established allowlist.",
            "data_sources": [
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical application servers, High-value user workstations",
            "action": [
              "With object access auditing enabled for lsass.exe, monitor Windows Event ID 4656 for events where the 'Accesses' field contains 'ProcessDupHandle' (access mask 0x40) and the requesting 'ProcessName' is not on an approved allowlist of legitimate security and system tools.",
              "Profile the source processes that request handles to critical system processes like lsass.exe. Calculate the frequency of each source process. Alert when a handle request originates from a source process that is statistically rare (e.g., appears in less than 0.1% of handle requests to lsass.exe), such as a Microsoft Office application or a browser.",
              "Train a One-Class SVM model on benign handle request events (Windows Event ID 4656) for lsass.exe. Use features like the source process name, the user context of the requestor, and the requested access mask. Use the trained model to identify anomalous handle requests that do not conform to the established pattern of normal behavior."
            ]
          },
          {
            "description": "A process, after receiving a new primary token, performs privileged actions such as accessing protected system objects or creating files in system directories, which were not permitted under its original token.",
            "data_sources": [
              "Windows Event ID 4696",
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Server fleet, High-value user workstations (e.g., developers, executives)",
            "action": [
              "Create a correlation rule that triggers when a Windows Event ID 4696 (A primary token was assigned to process) is followed within 60 seconds by a Windows Event ID 4663 (An attempt was made to access an object) from the same Process ID, where the Object Name is a sensitive system file (e.g., SAM, SYSTEM hive) and the access was successful.",
              "For each process after it receives a new token via Event ID 4696, track the number of subsequent high-privilege object accesses (e.g., write access to C:\\Windows\\System32) within a 5-minute window. Establish a baseline for this count across different process names. Alert when the count for a specific process instance exceeds a percentile threshold (e.g., 98th percentile) for that process type.",
              "Develop a time-series model that analyzes the sequence of actions (e.g., file modifications, registry key access) performed by a process after a token assignment event (Event ID 4696). Compare the sequence against a model of normal post-token assignment behavior to detect anomalous sequences indicative of privilege escalation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using token impersonation/theft?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1134.001",
        "name": "Token Impersonation-Theft",
        "evidence": [
          {
            "description": "The command line of a created process contains the exact string 'sekurlsa::pth', used by Mimikatz for pass-the-hash which relies on token creation to impersonate a user.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations), Windows Server fleet, Domain Controllers",
            "action": [
              "Create a high-fidelity alert rule to scan the Process CommandLine field of Windows Event ID 4688 for the exact string 'sekurlsa::pth', which is specific to Mimikatz's pass-the-hash module.",
              "Analyze command-line arguments for patterns associated with credential theft tools. Calculate the Jaccard similarity between new command lines and a known set of Mimikatz command variations. Alert when the similarity score exceeds a high threshold (e.g., 0.9), indicating a close match even with minor obfuscation.",
              "Use a pre-trained Natural Language Processing (NLP) model, fine-tuned on cybersecurity threat intelligence, to classify command lines from Windows Event ID 4688. The model can identify semantic similarities to known malicious commands like 'sekurlsa::pth' even if the exact strings are not present."
            ]
          },
          {
            "description": "Anomalous usage of the 'runas' command is observed, particularly when invoked with credential-saving flags, by non-interactive processes, or from unusual parent processes.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations), Windows Server fleet",
            "action": [
              "Create a rule to detect the use of 'runas.exe' with the '/savecred' command-line argument in Windows Event ID 4688, as this indicates an attempt to persist impersonated credentials.",
              "For each host and user, establish a baseline of 'runas.exe' execution frequency and parent process relationships. Alert when the daily count of 'runas' executions exceeds 3 standard deviations of the 30-day moving average for that entity, or when it is spawned by a parent process (e.g., w3wp.exe, sqlservr.exe) that has never been observed before.",
              "Train a classification model to predict whether a 'runas' execution is benign or suspicious. Use features such as the parent process name, the user context, time of day, and the command-line arguments. A process spawned by a service account outside of business hours would be flagged as highly suspicious."
            ]
          },
          {
            "description": "A process that typically runs in a standard user context, such as explorer.exe or an Office application, is observed running under a highly privileged account like NT AUTHORITY\\SYSTEM.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations), Critical application servers",
            "action": [
              "Create a rule to alert when a process name on a specific watchlist (e.g., explorer.exe, outlook.exe, winword.exe, excel.exe, chrome.exe) is created (Windows Event ID 4688) with a Subject User Name of 'NT AUTHORITY\\SYSTEM'.",
              "Maintain a baseline of the top 95% of user contexts (SubjectUserName) associated with each process name. Alert when a process is created with a user context that falls outside this established baseline, indicating a rare and potentially suspicious combination.",
              "Use an unsupervised anomaly detection algorithm like Isolation Forest on process creation events (Event ID 4688). Feature engineering should include the process name, parent process name, and user context. The model will isolate instances that are 'easiest to separate' from the normal data, such as a user-facing application running as SYSTEM."
            ]
          },
          {
            "description": "A process, after receiving an assigned token, initiates network connections to internal resources using protocols or to destinations that are uncharacteristic for that process, thereby mimicking legitimate traffic.",
            "data_sources": [
              "Windows Event ID 4696",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter (e.g., firewall, IDS/IPS), Internal network sensors, Domain Controllers, Endpoint devices (workstations)",
            "action": [
              "Create a correlation rule that triggers when a process receives a new token (Windows Event ID 4696) and, within 5 minutes, the same process ID initiates a network connection (Zeek conn.log or Windows Event ID 5156) to a privileged port (e.g., 445, 3389, 5985) on a different internal system.",
              "For processes that receive a new token (Event ID 4696), monitor their subsequent network activity in Zeek conn.log. Calculate the Shannon entropy of the destination ports and destination IP addresses they connect to within a 10-minute window. Alert if the entropy for a given process instance is statistically anomalous compared to the baseline for that process name, suggesting scanning or broad lateral movement.",
              "Develop a time-series anomaly detection model (e.g., LSTM) that learns the normal sequence of network connection protocols and destinations for a given process after a token assignment. Use the model to flag sequences that deviate significantly, such as a process that normally only uses HTTPS suddenly making SMB and RDP connections after receiving a new token."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]