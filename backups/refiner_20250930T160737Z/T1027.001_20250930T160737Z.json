[
  {
    "information_requirement": "Is the adversary using binary padding to evade static file-based defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.001",
        "name": "Binary Padding",
        "evidence": [
          {
            "description": "An executable file transferred over the network has a file hash (MD5, SHA1, or SHA256) that matches an entry in a threat intelligence database specifically tagged as padded malware.",
            "data_sources": [
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Proxy server logs, Mail gateway logs",
            "action": [
              "Symbolic: Query Zeek files.log for file transfers where the `md5` or `sha1` hash matches a known-bad hash from a threat intelligence feed that contains indicators for padded malware. Alert on any match.",
              "Statistical: Analyze the entropy of filenames associated with hash matches. Calculate Shannon entropy for each filename and flag those in the top 95th percentile, as high-entropy filenames (e.g., `d78fg3h9j.exe`) for a matched hash are a stronger signal of maliciousness.",
              "Machine Learning: Use a trained classification model (e.g., Random Forest) that takes file hash, source IP reputation, destination asset criticality, and filename entropy as features to predict the likelihood of a hash match being a true positive. Trigger a high-severity alert if the predicted probability exceeds a 0.90 threshold."
            ]
          },
          {
            "description": "A Windows Portable Executable (PE) file transferred over the network has a calculated overlay size (total file size minus the PE header's `SizeOfImage`) that is a statistical outlier, indicating data has been appended after the structured part of the binary.",
            "data_sources": [
              "Zeek pe.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network monitoring sensors (e.g., Zeek sensors) at key network chokepoints like internet gateways or data center ingress/egress points.",
            "action": [
              "Symbolic: For each PE file, join `files.log` (on `fuid`) with `pe.log` (on `id`). Create a rule to alert if the calculated overlay size (`files.log.seen_bytes` - `pe.log.size_of_image`) is greater than zero and the file is an executable type (e.g., `.exe`, `.dll`, `.sys`).",
              "Statistical: For all PE files, calculate the overlay size. Group by filename (e.g., `svchost.exe`, `chrome.exe`) and establish a baseline distribution of overlay sizes. Flag any file where the overlay size exceeds the 99th percentile for its filename group, or exceeds a high absolute threshold (e.g., 1MB) for previously unseen filenames.",
              "Machine Learning: Develop a time series model for the average overlay size of newly observed executables on the network. An anomalous spike in the time series, detected using an algorithm like Seasonal Hybrid ESD (S-H-ESD), could indicate a campaign involving padded malware. Correlate spikes with threat intelligence reporting or other internal alerts."
            ]
          },
          {
            "description": "An executable process is created on a host from a binary whose file size is a significant statistical outlier compared to a historical baseline of file sizes for executables with the same name or located in the same directory path.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, File Servers, Standard user endpoints, Critical application servers",
            "action": [
              "Symbolic: Create a watchlist of critical system executables (e.g., `lsass.exe`, `svchost.exe`, `winlogon.exe`) and their known-good file sizes. Alert on any process creation event (Sysmon Event ID 1) where the executable name matches the watchlist but its `FileSize` deviates from the known-good size.",
              "Statistical: For all process creation events (Sysmon Event ID 1), extract `Image` (path) and `FileSize`. For each unique `Image` path, maintain a running calculation of the mean and standard deviation of `FileSize`. Trigger an alert when a new process is created from an image whose size is more than 3 standard deviations from the historical mean for that path.",
              "Machine Learning: Use an unsupervised learning algorithm like Isolation Forest on host file data, using features such as file size, file path depth, filename entropy, and PE section count. Flag files that are identified as anomalies as they are structurally different from the majority of files on the endpoint, which could be due to padding."
            ]
          },
          {
            "description": "A process, previously flagged as potentially padded by another detection method (e.g., anomalous file size, large PE overlay), subsequently executes child processes associated with discovery (`whoami.exe`, `net.exe`) or initiates network connections with high-entropy domain names.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek pe.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint process monitoring agents, DNS resolvers, Network egress points",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process ID (from Sysmon Event ID 1) associated with a file flagged for anomalous size or PE overlay is then observed as a parent process for known discovery commands like `whoami.exe`, `net.exe`, or `ipconfig.exe`.",
              "Statistical: For processes spawned from a potentially padded executable, monitor their network activity in `Zeek conn.log`. Calculate the periodicity of outbound connections using time-delta analysis. A highly regular connection interval (low standard deviation in time between connections) to the same destination IP is indicative of C2. Flag processes whose connection intervals have a standard deviation below a set threshold (e.g., < 1.0 seconds).",
              "Machine Learning: Implement a risk scoring system. An initial 'padded binary' alert assigns a base risk score to a process. Use a model to analyze subsequent behaviors (e.g., child processes, network connections, DNS queries) and add to this score. For example, a model could classify DNS queries from the process as benign or DGA-like based on features like query length and n-gram frequency. A DGA-like query would significantly increase the process's overall risk score."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]