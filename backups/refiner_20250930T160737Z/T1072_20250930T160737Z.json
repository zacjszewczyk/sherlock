[
  {
    "information_requirement": "Has the adversary executed commands using software deployment tools?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1072",
        "name": "Software Deployment Tools",
        "evidence": [
          {
            "description": "A file hash or name, associated with a software package deployed by a centralized management tool, matches an entry on a threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints and Servers",
            "action": [
              "Symbolic: From deployment tool logs and process creation events (Windows Event ID 4688), extract file hashes (MD5, SHA256) and process names. Join this data against a threat intelligence database of known-bad indicators. Alert on any exact match.",
              "Statistical: For all deployed package names, calculate the character frequency distribution and n-gram frequency. Compare these distributions against a baseline of legitimate software names in the environment. Flag names with unusually high entropy or n-gram scores that fall in the 99th percentile, suggesting randomization or obfuscation.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features extracted from deployed binaries, such as PE header information, imported functions, and string entropy. Use the model to classify each new deployed file as benign or malicious. Flag deployments classified as malicious with high confidence for analyst review."
            ]
          },
          {
            "description": "A command line or script content from a software deployment job contains strings, commands, or obfuscation patterns indicative of malicious behavior.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator",
            "action": [
              "Symbolic: Using regular expressions, scan command-line arguments from process creation events (Windows Event ID 4688) and script blocks from deployment logs. Search for high-fidelity patterns like 'powershell -enc', 'IEX(New-Object Net.WebClient).DownloadString', 'reg save HKLM\\SAM', and other known LOLBAS abuse patterns. Alert on any match.",
              "Statistical: For all command lines executed by deployment tools, calculate the length and character entropy. Establish a baseline of these metrics for legitimate administrative scripts. Alert on commands that are statistical outliers, such as those exceeding the 98th percentile for length or entropy, which can indicate obfuscated or complex malicious commands.",
              "Machine Learning: Develop a Natural Language Processing (NLP) model trained on a labeled dataset of benign and malicious PowerShell/batch scripts. Pre-process script contents by tokenizing and vectorizing. Use the model to classify the intent of each script deployed. Flag scripts classified as malicious, credential dumping, or reconnaissance for investigation."
            ]
          },
          {
            "description": "A software deployment job is initiated by a user, at a time, or targets a set of systems that deviates from an established baseline of normal administrative activity for that tool.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator",
            "action": [
              "Symbolic: Maintain an explicit allow-list of user accounts and service accounts authorized to initiate software deployments. Alert whenever a deployment job is initiated by an account not on this list. Correlate with the source hostname/IP to verify it originates from an authorized administrative workstation.",
              "Statistical: For each administrative user, build a historical profile of deployment activity including: 1) time-of-day and day-of-week distribution, 2) frequency of deployment, 3) typical number of target systems per job. Use a scoring system where deviations (e.g., job at 3 AM, job on a Sunday, job targeting 1 system instead of 500) add to a risk score. Alert when a cumulative risk score for a single job exceeds a predefined threshold (e.g., 3 standard deviations from the mean risk score).",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA or LSTM) on the volume and frequency of software deployment jobs globally and per-administrator. The model will learn the normal rhythm of patching and software pushes. Flag any spikes or dips in activity that the model identifies as anomalous, which could indicate either a mass malicious deployment or a halt of the service as part of an attack."
            ]
          },
          {
            "description": "A chain of correlated events is observed within a short time window: 1) a software deployment job, 2) followed by process execution on a target, 3) followed by the creation of a new service or an external network connection from that process.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688",
              "Windows Event ID 4697",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints, Network Egress Points (Firewalls, Proxies)",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when, on the same host and within 5 minutes: 1) a process is created by the deployment agent (e.g., ccmexec.exe), AND 2) that new process (by ProcessID) creates a new service (Windows Event ID 4697) OR establishes a network connection (from Zeek conn.log) to a destination IP not on the corporate network allow-list. Alert on this specific sequence.",
              "Statistical: For processes spawned by software deployment tools, baseline the frequency of subsequent child processes, network connections, and system changes (like service creation). Calculate the rarity of each sequence of events. Alert when a deployment leads to a statistically rare follow-on action, such as a process that has never been seen to create a network connection before doing so, especially if the destination IP has a low reputation score.",
              "Machine Learning: Use a graph-based analysis model. Create nodes for users, deployment jobs, processes, and network endpoints. Create edges based on observed activity (e.g., 'user' initiates 'job', 'job' creates 'process', 'process' connects to 'IP'). Train the model to recognize normal subgraphs of activity. Flag new, structurally different subgraphs that represent novel chains of behavior, such as a deployment leading to a connection to a rare external domain."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary moved laterally using software deployment tools?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1072",
        "name": "Software Deployment Tools",
        "evidence": [
          {
            "description": "A software package, deployed to a system where the initiating user has no prior history of interaction, has a file hash or name that matches a known remote access trojan (RAT), credential harvester, or lateral movement tool.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, Tier 0/1 Servers, All Corporate Endpoints",
            "action": [
              "Symbolic: From deployment logs, identify jobs targeting systems outside the initiator's normal administrative scope. Extract file hashes (SHA256) of packages in these jobs and join against a CTI feed specifically curated for RATs and lateral movement tools (e.g., PsExec, Cobalt Strike beacons). Alert on any match.",
              "Statistical: Build a baseline of which users/admins deploy to which groups of systems. For each new deployment, calculate a 'lateral movement risk score' based on the rarity of the source-destination pairing. If a deployment to a new host group (e.g., from IT Workstation Support to Domain Controllers) occurs, and the package name is an outlier (high entropy), significantly increase the risk score and alert if it exceeds a percentile-based threshold (e.g., 99th percentile).",
              "Machine Learning: Use a graph-based clustering algorithm (e.g., K-Means on graph embeddings) to group assets based on typical deployment patterns (e.g., 'Workstation Patch Group', 'Server Patch Group'). Train a classifier to predict the likely group for any new deployment. Flag deployments that are misclassified with high confidence, as this indicates a deviation from normal lateral software distribution, which could be malicious lateral movement."
            ]
          },
          {
            "description": "A command line or script executed via a software deployment job contains syntax for tools and protocols commonly used for lateral movement, such as PsExec, WinRM, WMI, or remote schtasks creation.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, All Corporate Endpoints and Servers, SIEM/Log Aggregator",
            "action": [
              "Symbolic: From process creation events (Windows Event ID 4688) originating from the deployment agent, use regular expressions to scan command-line arguments for patterns indicating lateral movement tool usage, such as 'psexec.exe \\\\', 'winrs.exe -r:', 'wmic /node:', or 'schtasks /create /s'. Alert on any match, as these tools should not typically be executed via a centralized deployment system.",
              "Statistical: Analyze the frequency of specific command-line parameters used in deployment jobs. While a parameter like '/install' might be common, parameters like '-r:', '/node:', or '/s' (in the context of remote tools) should be extremely rare. Establish a frequency count for all parameters and alert on the appearance of parameters that fall below a low frequency threshold (e.g., seen less than 5 times in 90 days), indicating non-standard usage.",
              "Machine Learning: Train a sequence-to-sequence model on command-line arguments. The model learns the normal structure and order of commands and arguments for legitimate deployments. Feed new command lines into the model and flag any with a high perplexity score, indicating the model finds the sequence surprising and anomalous, which is common for ad-hoc malicious commands versus structured software installations."
            ]
          },
          {
            "description": "A software deployment job is initiated from a source IP or hostname that is not on an approved list of administrative consoles, or is associated with a recent, separate security alert.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Administrative Workstations, VPN Concentrators, SIEM/Log Aggregator",
            "action": [
              "Symbolic: From the deployment tool's logs, extract the source IP address for every initiated job. Maintain a strict allow-list of IP ranges for administrative subnets and VPNs. If a job is initiated from an IP outside this list, or from an IP associated with an active security incident ticket, generate a high-priority alert.",
              "Statistical: For each admin user, baseline their typical source IP addresses and subnets for initiating deployments (from Windows Event ID 4624 logon events on the management server). Calculate the probability of a user logging in from a given IP. If a deployment is initiated following a login from a statistically improbable IP (e.g., a country they have never logged in from, verified with GeoIP lookup on Zeek conn.log data), flag the activity for review.",
              "Machine Learning: Use an unsupervised learning model, like an autoencoder, trained on session data for administrators (e.g., source IP, time of day, number of actions). The model learns to reconstruct 'normal' sessions. A session involving a login from a rare location followed by a software deployment would have a high reconstruction error, flagging it as an anomaly indicative of session hijacking or credential compromise being used for lateral movement."
            ]
          },
          {
            "description": "The targeting pattern of a software deployment job is inconsistent with typical broad-scale patching, instead showing a 'low-and-slow' or 'island-hopping' pattern targeting a small number of critical assets.",
            "data_sources": [
              "Software deployment tool logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, Database Servers, Network Flow Collectors",
            "action": [
              "Symbolic: Create a rule that alerts when a deployment job targets a small set of hosts (<5) that are members of different, sensitive Active Directory groups (e.g., one 'Domain Controller', one 'PCI Server', one 'Developer Workstation'). This cross-functional, small-batch targeting is highly indicative of manual, malicious lateral movement, not automated patching.",
              "Statistical: Analyze the size of target groups for all deployment jobs. The distribution will likely be bimodal (e.g., very large groups for patches, single-digit groups for testing). Any job whose target count falls into a statistically sparse middle range (e.g., 5-20 hosts) and occurs outside a designated testing window should be flagged. This isolates unusual batch sizes that don't fit normal operations.",
              "Machine Learning: Model lateral movement as a path-finding problem on a graph of network assets. Use reinforcement learning to train an agent to identify 'valuable' paths (sequences of host deployments) that an attacker might take. Monitor real deployment sequences and flag any that closely match the high-reward paths identified by the RL agent, indicating a likely reconnaissance or lateral spread pattern."
            ]
          },
          {
            "description": "A privileged account performs a software deployment action that is uncharacteristic for that account's role or history, such as deploying a new type of package or targeting an unusual asset group.",
            "data_sources": [
              "Software deployment tool logs",
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCCM/Intune Management Servers, Domain Controllers, SIEM/Log Aggregator",
            "action": [
              "Symbolic: For each administrative role (e.g., Server Admin, Workstation Admin), define the expected types of packages and target collections they manage. Create a policy that alerts if an account from one role (e.g., Workstation Admin) attempts to deploy a package to a collection from another role (e.g., Domain Controller collection).",
              "Statistical: For each privileged account, create a historical baseline of activity including: 1) entropy of package names deployed, 2) set of target collections, 3) time of day. Continuously score new activity against this baseline. Alert if an account's activity deviates by more than 2-3 standard deviations on multiple metrics simultaneously (e.g., a new package name with high entropy, deployed to a new collection, at an unusual time).",
              "Machine Learning: Use a peer group analysis model (clustering, e.g., DBSCAN) to group administrators with similar deployment behaviors. When an administrator's action falls outside the typical behavior of their identified peer group, flag it as an anomaly. This can detect an attacker using a compromised account in a way that is inconsistent with the account's legitimate user and their colleagues."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]