[
  {
    "information_requirement": "Is the adversary using proxy techniques for command and control communications?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1090",
        "name": "Proxy",
        "evidence": [
          {
            "description": "An outbound network connection is established to a destination IP address or domain known to be associated with malicious proxy/anonymity services, C2 infrastructure, or unapproved commercial VPNs, as identified by threat intelligence.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Internet Gateway, Corporate DNS Resolvers, Web Proxy Logs",
            "action": [
              "Symbolic: Implement a detection rule that joins DNS query logs (Zeek dns.log) with connection logs (Zeek conn.log) using the connection UID. Alert when a successful outbound connection is made to a destination IP or domain present on a threat intelligence watchlist categorized as 'Proxy', 'Tor', 'C2', or 'Unsanctioned VPN'.",
              "Statistical: For all externally resolved domains, calculate the historical query frequency and prevalence (percent of hosts querying) across the enterprise over a 30-day baseline. Alert on successful connections to domains that are statistically rare (e.g., in the bottom 5th percentile for query frequency) and are not categorized as benign.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on domain name features (length, entropy, presence of keywords, TLD type) and connection features (port, protocol, data volume) to predict the probability of a destination being malicious. Alert when the model flags a connection to a previously unseen destination with a high confidence score."
            ]
          },
          {
            "description": "A process creation event is observed for an executable file whose name matches a known proxy/tunneling tool or whose command-line arguments contain patterns for establishing a proxy or reverse tunnel.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Domain Controllers (for centralized logging)",
            "action": [
              "Symbolic: Create and maintain a watchlist of known proxy tool executable names (e.g., 'chisel.exe', 'ligolo-ng.exe', 'ngrok.exe', 'plink.exe') and suspicious command-line argument patterns (e.g., '-R:', '-L:', '-D', 'reverse', 'tunnel'). Deploy a detection rule that scans process creation events (Windows Event ID 4688) and alerts on any match.",
              "Statistical: For each host, establish a baseline of normally executed processes and their command-line structures over a 30-day period. Calculate the rarity of each new process execution across the enterprise. Alert when a process is executed that is statistically rare (e.g., seen on < 1% of endpoints) and is immediately followed by a network connection event.",
              "Machine Learning: Train an unsupervised clustering model (e.g., DBSCAN) on vectorized command-line arguments, using features such as argument count, presence of IP addresses, port numbers, and specific keywords. Identify and investigate clusters of anomalous command-line usage that deviate from known-good administrative or user behavior."
            ]
          },
          {
            "description": "A network connection to an external destination originates from a process not typically expected to make network connections (e.g., lsass.exe) or from an executable located in a non-standard, user-writable directory (e.g., C:\\Users\\...\\AppData\\Local\\Temp).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Detection and Response (EDR) Systems, Critical Servers, User Workstations",
            "action": [
              "Symbolic: Correlate host-based network connection events (Windows Event ID 5156) with process creation events (Windows Event ID 4688). Create a rule to alert if a process not on a pre-defined 'network-allowed' process list (e.g., web browsers, updaters) initiates an outbound connection to an external IP address.",
              "Statistical: For each process name (e.g., 'svchost.exe'), build a baseline of parent processes and executable paths. Use frequency analysis to detect and alert when a network connection originates from a process with a statistically rare parent-child relationship or from an uncommon file path (e.g., a path with a low prevalence score across the environment).",
              "Machine Learning: Use an anomaly detection model (e.g., Isolation Forest) on enriched process-network events. Features should include process name, path, command line, user context, destination IP/port, and connection duration/volume. The model should identify and score processes exhibiting network activity that is abnormal compared to their learned multi-dimensional baseline."
            ]
          },
          {
            "description": "A network connection on a standard port (e.g., 80, 443, 53) contains traffic that does not conform to the expected protocol, as identified by a network sensor's dynamic protocol analysis, suggesting tunneled C2 traffic.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Taps/Spanning Ports feeding Zeek sensors, Internet Gateway, DMZ Network Segment",
            "action": [
              "Symbolic: Create a detection rule that triggers on Zeek conn.log events where `id.resp_p` is a standard port (e.g., 53, 80, 443) but the `service` field is not in the set of allowed services for that port (e.g., for port 53, `service` should be 'dns'). Also, create a high-priority alert for any `weird.log` event of type 'possible_split_routing' or 'non_dns_traffic_on_dns_port'.",
              "Statistical: For each standard port, calculate the entropy of the connection payload for a sample of sessions to establish a baseline entropy range for normal protocol traffic. Alert on connections where the payload entropy falls significantly outside the 95th percentile for the given port, suggesting encrypted or obfuscated traffic masquerading as a standard protocol.",
              "Machine Learning: Train a multi-class classification model (e.g., Gradient Boosting) to predict the application-layer protocol based on port-independent features such as packet size distribution, inter-arrival times, and payload entropy. Flag connections where the model's predicted protocol class mismatches the port's intended protocol with high confidence."
            ]
          },
          {
            "description": "A network connection exhibits a statistically significant anomaly in its data flow pattern, such as a highly asymmetrical data transfer ratio (orig_bytes vs. resp_bytes) or an unusually long duration combined with low, periodic data transfers (beaconing).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress/Internet Gateway, Internal Network Core Switches, Server-to-Server Traffic Segments",
            "action": [
              "Symbolic: Create a rule that alerts on long-running TCP connections (e.g., duration > 24 hours) with low total bytes transferred (e.g., < 5 MB) that are not associated with known services that use persistent connections (e.g., database connections, some messaging protocols).",
              "Statistical: For each destination port/service, calculate a historical baseline for the ratio of `orig_bytes` to `resp_bytes`. Using the Z-score or Interquartile Range (IQR) method, flag connections where this ratio is a statistical outlier (e.g., Z-score > 3 or < -3). This can detect large uploads masked as web browsing or other forms of data exfiltration.",
              "Machine Learning: Use a time-series analysis model (e.g., ARIMA) to forecast expected data volume and packet frequency for long-lived connections. Alert when the observed traffic pattern significantly deviates from the forecast, indicating potential C2 beaconing. Additionally, use a clustering algorithm (e.g., K-Means) on connection features (duration, total bytes, byte ratio) to identify small, outlier clusters representing anomalous C2 behaviors."
            ]
          },
          {
            "description": "A mismatch is observed between the TLS Server Name Indication (SNI) field sent in the TLS Client Hello and the subsequent HTTP Host header within the same encrypted session, particularly when the SNI points to a legitimate CDN and the Host header points to a suspicious domain.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Proxies, Network Taps monitoring traffic to CDNs, Internet Gateway",
            "action": [
              "Symbolic: Using the Zeek connection UID, correlate `ssl.log`, `dns.log`, and `http.log`. Create a rule to alert when `ssl.log.server_name` does not match `http.log.host` AND `ssl.log.server_name` belongs to a known CDN provider (e.g., 'a.cloudfront.net', 'azureedge.net') while `http.log.host` is not a known-good domain associated with that provider.",
              "Statistical: Maintain a list of high-reputation domains (e.g., top 1M list) and CDNs. Profile the frequency of SNI/Host header mismatches for each SNI domain. Alert when the rate of mismatches for a specific SNI domain exceeds a statistical threshold (e.g., > 3 standard deviations above its baseline mismatch rate), which could indicate it is being abused for domain fronting.",
              "Machine Learning: Develop a reputation scoring system for domains seen in HTTP Host headers, using features like domain age, registration info, and historical query volume. Train a classifier to predict malicious domains. Trigger an alert when a domain fronting event (SNI/Host mismatch) occurs and the inner 'Host' domain is classified as malicious with high confidence."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]