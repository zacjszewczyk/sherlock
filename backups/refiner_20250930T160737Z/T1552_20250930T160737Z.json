[
  {
    "information_requirement": "Is the adversary searching for or accessing unsecured credentials?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1552",
        "name": "Unsecured Credentials",
        "evidence": [
          {
            "description": "Network connections to known malicious C2 servers immediately following suspicious file access or credential-searching activity on a host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Network Egress Points",
            "action": [
              "Symbolic Logic: Correlate process creation events (Windows Event ID 4688, Sysmon Event ID 1) containing credential-search keywords (e.g., 'password', 'private_key', 'api_key') with subsequent network connection logs (Zeek conn.log) from the same host. Generate an alert if the destination IP address in the connection log matches a known malicious C2 address from a threat intelligence feed within a 10-minute window.",
              "Statistical Method: For hosts identified by the symbolic logic (even if the destination IP is not a known C2), analyze the properties of the outbound connection. Calculate the rarity of the destination ASN, country, and port compared to the host's 30-day baseline. An alert is triggered if the connection's properties fall outside the 99th percentile of historical activity, indicating a statistically anomalous outbound connection following credential searching.",
              "Machine Learning Method: Train a time-series model (e.g., LSTM) on a host's normal network traffic volume (bytes_out in Zeek conn.log). Following a credential-search event (from Event ID 4688), monitor the host's outbound traffic. Use the model to predict the expected traffic volume. An alert is generated if the actual traffic significantly deviates from the predicted volume, suggesting data exfiltration."
            ]
          },
          {
            "description": "Execution of common system utilities (e.g., findstr, grep, PowerShell, reg.exe) with command-line parameters indicative of searching for credentials or accessing known plaintext credential stores.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Developer Workstations, File Servers, CI/CD Pipeline Servers",
            "action": [
              "Symbolic Logic: From process creation logs (Windows Event ID 4688, Sysmon Event ID 1), create a detection rule that uses regular expressions to find the co-occurrence of search utilities (`findstr`, `grep`, `Select-String`, `reg query`) and sensitive keywords (`password`, `secret`, `api_key`, `id_rsa`, `HKCU\\\\Software\\\\SimonTatham\\\\PuTTY\\\\Sessions`). Alert on any match.",
              "Statistical Method: Calculate the entropy of command-line arguments for all executed processes. Establish a baseline entropy score for common system processes. A process like `findstr.exe` or `grep.exe` executing with unusually high-entropy arguments (indicating complex search patterns or obfuscation) should be flagged for review, especially if the parent process is a web server or Office application.",
              "Machine Learning Method: Develop a classification model (e.g., Random Forest) trained on labeled command-line arguments (malicious vs. benign). Features could include argument length, character distribution, presence of keywords, and parent process name. Use this model to score all new command-line executions in real-time, alerting on those classified as having a high probability of being malicious credential-searching activity."
            ]
          },
          {
            "description": "A single process rapidly accessing an unusually large number of distinct files, especially configuration files or documents, which is characteristic of automated credential harvesting scripts.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Shared Network Drives, User Profile Directories (e.g., C:\\Users\\*), Source Code Repositories",
            "action": [
              "Symbolic Logic: Create a rule that triggers when a single process (identified by Process ID from Windows Event ID 4688/4663) accesses more than 20 files with extensions like `.config`, `.xml`, `.yml`, `.ini`, or `.pem` within a 1-minute window. This provides a simple, high-fidelity tripwire for blatant credential harvesting.",
              "Statistical Method: For each process on each host, calculate a 30-day rolling average and standard deviation for the number of unique files accessed per minute. Generate an alert when a process exceeds its baseline by more than 3 standard deviations (Z-score > 3), indicating a statistically significant burst of file access activity.",
              "Machine Learning Method: Use a clustering algorithm (e.g., DBSCAN) on file access events. Features should include the process name, the directory path of the accessed file, and the file extension. The algorithm can identify anomalous clusters of activity, such as a single `powershell.exe` process accessing a large number of disparate files in user profile directories, which deviates from normal, more localized file access patterns."
            ]
          },
          {
            "description": "Anomalous network egress, identified by file transfer metadata or connection patterns to rare destinations, that occurs within minutes of high-volume local file access.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DMZ Servers, Hosts with high-volume file access",
            "action": [
              "Symbolic Logic: Monitor Zeek files.log for file transfers where the filename matches a regex for credential-related terms (e.g., `.*(creds|pass|secret|backup|export).*(zip|txt|csv)`). Correlate this with recent high-volume file access events (Windows Event ID 4663) from the source host within the last 15 minutes. An alert is generated on a match.",
              "Statistical Method: After detecting a host with high-volume file access, analyze its subsequent network connections from Zeek conn.log. For each connection, calculate a rarity score based on the historical frequency of the destination IP, ASN, and country for that specific host. A connection with a rarity score in the top 1% (99th percentile) for that host's baseline constitutes an anomalous exfiltration attempt.",
              "Machine Learning Method: Apply time-series analysis to the `conn_state` field in Zeek conn.log for each host. A sudden change in the distribution of connection states (e.g., a spike in `S0` or `REJ` states) following a file-searching event can indicate network scanning or enumeration activity. An anomaly detection model (e.g., ARIMA) can flag these significant state changes."
            ]
          },
          {
            "description": "An unusual process chain where a process spawned from a web server or document-handling application (e.g., Office, Adobe Reader) executes command-line searches for credentials.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Servers (IIS, Apache), User Workstations with Microsoft Office, Mail Servers",
            "action": [
              "Symbolic Logic: Using process creation logs (Windows Event ID 4688, Sysmon Event ID 1) that include parent process information, create a rule to detect known-bad process chains. Alert when a parent process like `winword.exe`, `excel.exe`, `w3wp.exe`, or `outlook.exe` spawns a child process of `cmd.exe` or `powershell.exe`, which in turn spawns a credential-search utility like `findstr.exe` or `reg.exe`.",
              "Statistical Method: For every parent-child process pair observed in the environment, calculate its frequency. Identify statistically rare process chains by flagging any pair that falls below a low frequency threshold (e.g., observed less than 5 times across the entire enterprise over 30 days). These low-prevalence chains, especially those involving shell processes, warrant investigation.",
              "Machine Learning Method: Model process lineage as a graph. Use a graph-based anomaly detection algorithm to identify unusual paths or subgraphs. Train the model on a baseline of normal process execution graphs. The model can then score new process chains based on their deviation from learned normal behavior, flagging suspicious chains like an Office application spawning PowerShell that then executes encoded commands."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]