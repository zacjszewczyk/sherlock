[
  {
    "information_requirement": "Is an adversary abusing the Extension CLSID Verification Host (verclsid.exe) to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.012",
        "name": "Verclsid",
        "evidence": [
          {
            "description": "Execution of verclsid.exe with a command-line argument containing a CLSID known to be associated with malicious activity.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly those running user applications or scripts.",
            "action": [
              "Symbolic Logic: Monitor process creation events (Windows Event ID 4688) for `verclsid.exe`. Parse the command line to extract the CLSID argument (e.g., `/S /C {CLSID}`). Compare the extracted CLSID against a threat intelligence feed or an internal watchlist of known malicious CLSIDs. Generate a high-severity alert upon a match.",
              "Statistical Method: Establish a baseline of all CLSIDs invoked by `verclsid.exe` across the enterprise over a 30-day period. Calculate the frequency of each CLSID. Flag any CLSID that is statistically rare (e.g., appears in less than the 1st percentile of observations), as this may represent a newly introduced or seldom-used malicious COM object.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using features from the process execution event, including parent process name, parent command-line entropy, user context, and the invoked CLSID. Use the trained model to score new `verclsid.exe` executions in real-time, alerting on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "Execution of verclsid.exe is spawned by a non-standard parent process, such as a Microsoft Office application, a scripting engine, or an interactive shell.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, particularly those with Microsoft Office installed; Application servers running scheduled tasks or scripts.",
            "action": [
              "Symbolic Logic: Create a static list of expected parent processes for `verclsid.exe` (e.g., `explorer.exe`, `svchost.exe`). Monitor process creation events (Windows Event ID 4688) and alert whenever `verclsid.exe` is spawned by a parent process not on this allowlist, especially `winword.exe`, `excel.exe`, `powershell.exe`, or `cmd.exe`.",
              "Statistical Method: For each user and host, build a statistical profile of parent-child process relationships involving `verclsid.exe`. Calculate the frequency of each parent process. Alert when a rare parent-child relationship is observed that deviates significantly from the established baseline (e.g., a parent process never before seen for that user executing `verclsid.exe`).",
              "Machine Learning: Utilize an unsupervised learning model, such as an isolation forest, on process creation events. Use features like parent process name, child process name (`verclsid.exe`), user, and host. The model will learn the boundary of normal process parent-child relationships and flag any new execution that the model identifies as an anomaly."
            ]
          },
          {
            "description": "The parent process of verclsid.exe has a command line containing high-entropy strings, obfuscated scripts, download cradles, or references to remote resources.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, email gateways (for macro-enabled documents), and web proxies (for drive-by downloads).",
            "action": [
              "Symbolic Logic: For each `verclsid.exe` execution, inspect the command line of its parent process. Use regular expressions to search for known malicious patterns, such as `IEX`, `DownloadString`, `FromBase64String`, or suspicious domains. Generate an alert if any of these patterns are found.",
              "Statistical Method: Calculate the Shannon entropy score for the command line of the parent process of every `verclsid.exe` execution. Establish a baseline distribution of these entropy scores for the environment. Flag any command line with an entropy score that falls in the top percentile (e.g., >95th percentile), as high entropy can indicate obfuscation.",
              "Machine Learning: Develop a sequence-based model (e.g., an LSTM) trained on a large corpus of benign and malicious command lines. The model learns to predict the likelihood of a command-line sequence being malicious. Apply this model to the parent process command line of `verclsid.exe` executions and alert on those classified as malicious."
            ]
          },
          {
            "description": "The verclsid.exe process, identified by its Process GUID from host logs, is associated with an outbound network connection in network logs within a short time window.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (monitored by Zeek sensors), DNS servers, and all Windows endpoints.",
            "action": [
              "Symbolic Logic: Correlate process creation events for `verclsid.exe` (Windows Event ID 4688) with network connection logs (Zeek conn.log) using the source IP and a tight time window (e.g., under 60 seconds). Since `verclsid.exe` making any network connection is anomalous, generate a high-severity alert for any correlation found.",
              "Statistical Method: Analyze destination IPs and ports for all network connections across the enterprise. For any connection made by `verclsid.exe`, compare the destination against a list of statistically rare or low-reputation domains/IPs. A connection to a destination in the bottom 1st percentile of popularity is highly suspicious.",
              "Machine Learning: Use a graph-based anomaly detection model where nodes are processes, IPs, and domains. Create an edge between a `verclsid.exe` process node and a destination IP node if a connection occurs. The model, trained on normal network behavior, would identify the creation of this edge as a structural anomaly in the graph, as `verclsid.exe` nodes are typically isolated."
            ]
          },
          {
            "description": "The verclsid.exe process spawns a child process, such as a command shell or scripting interpreter, which is not legitimate behavior.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers.",
            "action": [
              "Symbolic Logic: Monitor process creation events (Windows Event ID 4688) where the `ParentProcessName` is `verclsid.exe`. Because this behavior is never legitimate, create a high-severity alert for any event matching this condition, regardless of the child process name.",
              "Statistical Method: Prioritize investigations by analyzing the child process spawned by `verclsid.exe`. Assign a risk score based on the general rarity of that child process in the environment. For example, `verclsid.exe` spawning a rare custom executable would be higher risk than it spawning `cmd.exe`.",
              "Machine Learning: Frame this as a binary classification problem. For every process creation event, features would include `ParentProcessName` and `ChildProcessName`. Train a simple decision tree model on labeled data where `ParentProcessName == 'verclsid.exe'` is always labeled as malicious. The model will create a simple, interpretable rule to flag these events automatically."
            ]
          },
          {
            "description": "Execution of verclsid.exe with a CLSID that is not registered on the host or has not been previously observed in the environment.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, user workstations, application servers, and specifically the Windows Registry on these systems.",
            "action": [
              "Symbolic Logic: Upon detecting a `verclsid.exe` execution with a CLSID, query the host's registry (e.g., via an EDR tool) to verify if the CLSID exists under `HKEY_CLASSES_ROOT\\CLSID\\`. If the CLSID is not registered, generate a high-severity alert, as this indicates a potentially malicious in-memory or fileless COM object.",
              "Statistical Method: Maintain a historical baseline of all CLSIDs executed by `verclsid.exe` across the enterprise. Use a 'first seen' analysis. When a `verclsid.exe` execution uses a CLSID that has never been observed in the environment's history, flag it for investigation. This can be implemented as a simple lookup against a continuously updated set of known CLSIDs.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA) on the count of new or unique CLSIDs appearing per day. A sudden spike in the number of 'first seen' CLSIDs could indicate a widespread campaign, and the model would flag this anomalous increase in novelty."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]