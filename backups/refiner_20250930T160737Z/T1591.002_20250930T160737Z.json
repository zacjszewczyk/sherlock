[
  {
    "information_requirement": "Is the adversary conducting reconnaissance on our business relationships? (PIR)",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1591.002",
        "name": "Business Relationships",
        "evidence": [
          {
            "description": "Outbound network connections or DNS requests from internal hosts to external IP addresses or domains matching a threat intelligence feed of known reconnaissance infrastructure, malicious proxies, or threat actors associated with supply chain attacks.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/egress points, DNS resolvers",
            "action": [
              "Symbolic Logic: Correlate the `id.resp_h` field in `conn.log` and the `query` field in `dns.log` against a high-confidence threat intelligence feed of known reconnaissance infrastructure, anonymization services (e.g., TOR exit nodes, commercial VPNs), and domains associated with supply chain attackers. Generate an alert for any match.",
              "Statistical Method: For DNS queries in `dns.log`, calculate the Levenshtein distance between requested domains and a curated list of legitimate business partner domains. Flag queries with a low distance (e.g., less than 3) but not an exact match as potential typosquatting. Prioritize alerts where the resolved IP is from an autonomous system (AS) not associated with the legitimate partner.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from `dns.log` (query length, entropy of the query name, TLD, number of subdomains) and contextual data (domain age, WHOIS privacy) to predict whether a domain is malicious or benign. Apply this model to all new DNS queries to identify previously unseen reconnaissance domains."
            ]
          },
          {
            "description": "A single external source IP generating an abnormally high volume of DNS queries or HTTP requests to public-facing web pages listing partners, clients, or supply chain information, with request patterns indicative of automated scraping.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, DMZ network segments",
            "action": [
              "Symbolic Logic: Create a rule to alert on DNS queries of type `AXFR` or `ANY` in `dns.log`. Additionally, create a signature to match `user_agent` strings in `http.log` against a list of known web crawlers and scraping tools (e.g., 'Scrapy', 'HTTrack', 'Wget', 'python-requests').",
              "Statistical Method: For each source IP (`id.orig_h`) in `http.log`, calculate the request rate (requests per minute) to URLs containing keywords like '/partners', '/clients', or '/about'. Flag any IP whose request rate exceeds the 99th percentile of the historical distribution for traffic to those pages. Also, calculate the entropy of the `uri` path requested by a single IP; a low entropy may indicate scraping of a single directory.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., SARIMA or LSTM) to monitor the volume of HTTP GET requests to partner-related pages. The model should learn the normal daily and weekly patterns (seasonality) and flag significant, unexpected spikes in traffic volume from one or more source IPs as potential scraping activity."
            ]
          },
          {
            "description": "A high volume of failed or successful connection attempts from an unauthorized external IP address to a network service designated for business partner use (e.g., partner VPN, extranet portal, B2B API gateway).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Partner extranet servers, VPN concentrators, B2B API gateways",
            "action": [
              "Symbolic Logic: Maintain an allow-list of known business partner IP ranges. Generate an alert for any connection attempt in `conn.log` to a designated partner service (e.g., extranet TCP/443, partner VPN UDP/500) where the source IP (`id.orig_h`) is not on the allow-list. Also, alert on any event in `weird.log` where the destination is a partner service.",
              "Statistical Method: For a given partner service, establish a baseline of connection states from unknown IPs (e.g., 'S0' for SYN only, 'REJ' for rejected). Calculate the Z-score for the count of failed connection states ('S0', 'REJ') from a single source IP over a 5-minute window. A Z-score greater than 3 indicates a statistically significant deviation, suggesting a port scan or enumeration attempt.",
              "Machine Learning: Implement a one-class SVM (Support Vector Machine) model trained on legitimate connection patterns to partner services (features: source IP, source port, duration, bytes sent/received). Use this model to classify all new connections as either 'normal' or 'anomalous'. Anomalous connections from unknown IPs should be flagged for investigation as potential reconnaissance."
            ]
          },
          {
            "description": "A connection originating from a known business partner's IP range that targets an internal host or service outside of the explicitly allowed set, or involves a data transfer volume significantly larger than the established baseline for that partner.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments, Data center core, Application servers",
            "action": [
              "Symbolic Logic: For each business partner IP range, define a strict rule set specifying allowed destination IPs (`id.resp_h`) and ports (`id.resp_p`). Generate a high-severity alert for any connection from a partner IP that violates this rule set, such as attempting to connect to an internal domain controller or an RDP port on a workstation.",
              "Statistical Method: For each partner relationship, establish a baseline for daily data transfer volume (sum of `orig_bytes` + `resp_bytes` in `conn.log`). Use the Inter-Quartile Range (IQR) method to identify outliers. Flag any daily transfer volume that exceeds Q3 + 1.5 * IQR as a potential anomalous data transfer, indicating a compromised partner.",
              "Machine Learning: Use a graph-based anomaly detection algorithm. Model the network as a graph where nodes are IPs and edges are connections. Train the model on normal traffic to learn the community structure (e.g., 'Partner A' community only talks to 'Application X' community). Flag any new edge that connects a node from a partner community to an unexpected internal community (e.g., 'HR Servers') as a high-risk anomaly."
            ]
          },
          {
            "description": "A user account accesses a number of files or a volume of data related to business partnerships (e.g., contracts, contact lists, API keys) that is a statistical anomaly compared to their own historical behavior or the behavior of their peer group.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers hosting partner data, SharePoint sites for vendor management, Active Directory",
            "action": [
              "Symbolic Logic: Tag sensitive file shares containing partner data as 'critical'. Create a rule that alerts when a user account generates more than a fixed threshold (e.g., 100) of file access events (Windows Event ID 4663) from these shares within a one-hour window.",
              "Statistical Method: For each user, establish a 30-day rolling baseline of the average and standard deviation of daily file access counts (Windows Event ID 4663) on partner-related repositories. Generate an alert if a user's daily access count exceeds three standard deviations from their personal baseline. Additionally, compare a user's activity to their peer group and flag if their activity is in the top 5th percentile.",
              "Machine Learning: Employ a User and Entity Behavior Analytics (UEBA) solution that models each user's typical behavior, incorporating features like time of day for file access, volume of data accessed, and types of files accessed. An alert should be triggered when the model detects a significant deviation from the user's established 'normal' pattern, indicating potential internal reconnaissance."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]