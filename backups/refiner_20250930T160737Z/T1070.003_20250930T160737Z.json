[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by clearing command history?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense-Evasion",
    "indicators": [
      {
        "technique_id": "T1070.003",
        "name": "Clear Command History",
        "evidence": [
          {
            "description": "The execution of a process where the command line contains an exact, case-insensitive match for a known history-clearing command (e.g., 'history -c', 'Clear-History') or a file deletion command targeting a standard history file path (e.g., 'rm ~/.bash_history', 'del ConsoleHost_history.txt').",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts",
            "action": [
              "Symbolic: Create a high-fidelity SIEM rule that triggers an alert upon detection of a process creation event (Windows Event ID 4688) or PowerShell script block (Windows Event ID 4104) containing the literal command line strings: 'history -c', 'Clear-History', 'rm ~/.bash_history', 'rm ~/.zsh_history', 'del %APPDATA%\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt', or 'cat /dev/null > ~/.bash_history'.",
              "Statistical: For each host, calculate the daily and weekly frequency of the explicit history-clearing commands identified by the symbolic rule. Establish a baseline for these counts across all hosts. Alert when a host's daily count exceeds the 99th percentile for the entire organization or exceeds 3 standard deviations above its own 30-day moving average.",
              "Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on labeled command-line execution data (Windows Event ID 4688, 4104). Use n-grams from the command line, process name, and parent process as features to predict if a command is a 'history clearing' event. Use the model to score all command-line executions, flagging those with a high probability score to uncover obfuscated variations."
            ]
          },
          {
            "description": "A process execution or script block that modifies shell environment variables to disable history (e.g., 'HISTSIZE=0', 'SaveNothing'), or uses obfuscated commands to delete or nullify history files (e.g., base64 encoded 'rm', concatenation to build the command).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Developer Workstations, Administrator Bastion Hosts",
            "action": [
              "Symbolic: Implement a SIEM rule using regular expressions to detect process command lines (Windows Event ID 4688) or script blocks (Windows Event ID 4104) that set history-related variables to null/zero (e.g., /HISTSIZE=0/i, /unset HISTFILE/i, /HistorySaveStyle.*SaveNothing/i). Also, search for file redirection from /dev/null or NUL to a history file (e.g., />.*history/i).",
              "Statistical: Calculate the character entropy of command-line arguments in process creation events (Windows Event ID 4688). Establish a baseline entropy score for commands per user. Alert when a command's entropy score is more than 3 standard deviations above the user's historical average, especially if the command involves file manipulation or environment variable settings, as this may indicate obfuscation.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on the frequency of history-related environment variable modifications (e.g., 'HISTSIZE', 'PSReadlineOptions') per host. Train the model on historical data of such events. An alert is generated when the observed frequency of these modifications significantly deviates from the forecasted pattern."
            ]
          },
          {
            "description": "A file modification or deletion event targeting a known shell history file (e.g., 'ConsoleHost_history.txt', '.bash_history') where the acting process is not a standard interactive shell (e.g., 'powershell.exe', 'bash.exe') or has an anomalous parent process (e.g., 'services.exe', 'winword.exe').",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories on file servers, Local user profiles on endpoints and servers, Administrator Bastion Hosts",
            "action": [
              "Symbolic: Enable file system auditing (SACL) on 'C:\\Users\\*\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\'. Create a SIEM rule to alert on a file deletion event (Windows Event ID 4663 with Accesses: DELETE) for 'ConsoleHost_history.txt' where the Process Name is not 'powershell.exe' or 'explorer.exe'.",
              "Statistical: Profile parent-child process relationships for all processes. Create a frequency map of (ParentProcess, ChildProcess) tuples that modify history files. Flag any instance of a process modifying a history file where the parent-child relationship is rare (e.g., occurs in less than 0.1% of all observed relationships), such as 'winword.exe' spawning 'cmd.exe' which then deletes 'ConsoleHost_history.txt'.",
              "Machine Learning: Train a One-Class SVM model on features of 'normal' file modification events for history files. Features should include: process name, parent process name, user context, and time of day. The model learns the boundary of normal activity. Any file modification event targeting a history file that falls outside this learned boundary is classified as an anomaly."
            ]
          },
          {
            "description": "The clearing of command history or deletion of a history file occurs within a short time window (e.g., under 5 minutes) following a successful remote login (RDP, SSH, WinRM) to the same host, especially if the login itself is anomalous (e.g., from a new geography, at an unusual time).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing servers, VPN gateways, Domain Controllers, Administrator Bastion Hosts, Network perimeter firewalls",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a successful remote logon (Windows Event ID 4624 with Logon Type 3 or 10) is followed within 5 minutes on the same host by a history-clearing command (from Windows Event ID 4688 or 4104). For SSH, correlate a new connection in 'Zeek conn.log' with subsequent history-clearing commands from host logs.",
              "Statistical: For each user, baseline typical remote login behavior using Zeek conn.log and Windows Event ID 4624, including source IP geolocation and time of day. Calculate a risk score for each login based on deviations from the baseline. If a history-clearing event occurs shortly after a login with a risk score above the 95th percentile, generate a high-severity alert.",
              "Machine Learning: Implement a sequence analysis model (e.g., Hidden Markov Model) to learn common event sequences for a user session. Train the model on event types like logins, process executions, and file modifications. Trigger an alert when the model observes a low-probability sequence, such as [Anomalous Remote Login -> History Clear -> Malicious Process Execution]."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]