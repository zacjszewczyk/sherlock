[
  {
    "information_requirement": "Is the adversary attempting to gain account credentials using password spraying?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1110.003",
        "name": "Password Spraying",
        "evidence": [
          {
            "description": "A cluster of authentication failures (Windows Event ID 4625 or 4771) or connection attempts (Zeek conn.log) originating from a source IP address present on a threat intelligence feed, or web-based authentication attempts (Zeek http.log) using a User-Agent string associated with known offensive security tools.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4625",
              "Windows Event ID 4771"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, Externally-facing web applications, Domain Controllers, VPN concentrators",
            "action": [
              "Symbolic: Continuously correlate source IP addresses from authentication failure logs (Windows Event IDs 4625, 4771) and connection logs (Zeek conn.log) against a CTI feed of known malicious IPs or anonymizing proxies. For web-based services, scan Zeek http.log for User-Agent strings associated with password spraying tools (e.g., `ruler`, `ms-office`, `kerbrute`). Alert on any matches from high-confidence sources.",
              "Statistical: For IPs matching a CTI feed, calculate the entropy of the target usernames within a 5-minute window. A high entropy score, significantly above the 95th percentile of the baseline for all source IPs, indicates the IP is targeting a wide variety of accounts, which is characteristic of spraying.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled historical data, using features such as IP reputation, User-Agent string, time of day, and number of failed authentications. Use this model to predict in real-time whether a new authentication attempt is part of a password spraying campaign."
            ]
          },
          {
            "description": "A single source IP address generates a high number of Kerberos pre-authentication failures (Windows Event ID 4771 with Failure Code '0x18') across more than N distinct accounts within a T minute window.",
            "data_sources": [
              "Windows Event ID 4771"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Symbolic: Create a rule to trigger an alert when a single source IP address generates Windows Event ID 4771 with Failure Code '0x18' for more than 10 distinct user accounts within a 5-minute window. This is a hard-coded threshold for a clear spraying pattern.",
              "Statistical: On Domain Controllers, filter for Windows Event ID 4771 with Failure Code '0x18'. Group events by source IP over a 10-minute window and count the number of distinct target accounts. Establish a baseline for this count across all source IPs and alert when any IP exceeds the 99th percentile of this distribution, indicating an anomalous number of targeted accounts.",
              "Machine Learning: Apply a clustering algorithm (e.g., DBSCAN) to Kerberos failure events, using features like source IP, time, and target account. A dense cluster of events from a single IP targeting many different accounts would be isolated as an anomalous cluster indicative of a password spray."
            ]
          },
          {
            "description": "A single source IP address generates authentication failures (Windows Event ID 4625) against a high ratio of distinct accounts to total attempts, or a high raw count of distinct failed accounts, within a short time frame.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4771"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, VPN concentrators",
            "action": [
              "Symbolic: Create a rule that alerts when a single source IP is responsible for failed authentications (Windows Event ID 4625) for more than 20 unique user accounts within a 15-minute period. This simple threshold can catch less stealthy spray attacks.",
              "Statistical: Aggregate failed login events (Windows Event IDs 4625, 4771) by source IP. For each IP, calculate the ratio of distinct failed usernames to the total number of failed logins within a rolling 30-minute window. Flag source IPs where this ratio is anomalously high (e.g., > 0.8) and the total number of attempts exceeds a nominal threshold (e.g., > 10).",
              "Machine Learning: Develop a feature vector for each source IP over a time window, including: count of failed logins, count of unique accounts targeted, and the standard deviation of inter-arrival times between login attempts. Use an anomaly detection model (e.g., Isolation Forest) to score each source IP's activity, with high scores indicating a likely password spray."
            ]
          },
          {
            "description": "A successful authentication (Windows Event ID 4624) from a source IP address that, within the preceding M minutes, was the source of authentication failures (Windows Event ID 4625 or 4771) against N or more other accounts.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Windows Event ID 4771"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, VPN concentrators, Externally-facing web applications",
            "action": [
              "Symbolic: Create a stateful rule that triggers a high-severity alert when a source IP generates >10 failed logins (Event ID 4625/4771) across distinct accounts and then has a successful login (Event ID 4624) within 30 minutes. This directly identifies a successful spray attempt and the compromised account.",
              "Statistical: Maintain a list of 'suspect' IPs flagged by other statistical password spray detections (e.g., high failure count, high username entropy). For any successful login (Event ID 4624), calculate the probability of it being malicious based on whether the source IP is on this 'suspect' list. A successful login from an IP with a high preceding failure rate has a statistically higher chance of being malicious.",
              "Machine Learning: Use a sequence-aware model (e.g., a Hidden Markov Model) trained on user session data. A sequence of 'many-fails' followed by a 'single-success' from the same source IP would be identified as a low-probability (anomalous) sequence, triggering an alert."
            ]
          },
          {
            "description": "A statistically significant increase in the aggregate volume of authentication failures (Windows Event ID 4625, 4771) or failed connection attempts to authentication-related ports (e.g., 445, 389, 88, 3389) compared to a historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4625",
              "Windows Event ID 4771"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, Domain Controllers, VPN concentrators",
            "action": [
              "Symbolic: Create a 'tripwire' rule that alerts if the total count of Windows Event ID 4625 events across all domain controllers exceeds a high, fixed threshold (e.g., 5000 events in 1 hour) that is well above any normal business activity. This acts as a coarse, last-resort detector for a massive, noisy attack.",
              "Statistical: Monitor the aggregate volume of failed authentication events (Windows Event IDs 4625, 4771) per hour. Establish a baseline of normal failure volume and its standard deviation for each hour of the day and day of the week. Alert on any deviation that exceeds 3 standard deviations above the seasonal moving average.",
              "Machine Learning: Apply a time-series anomaly detection algorithm (e.g., ARIMA or Prophet) to the count of failed authentications or failed connections to authentication ports (e.g., 88, 389, 445 in Zeek conn.log). The model will learn the normal seasonality and trends, and flag any observations that fall outside its predicted confidence interval."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]