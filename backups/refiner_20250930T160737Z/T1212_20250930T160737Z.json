[
  {
    "information_requirement": "Has the adversary exploited a software vulnerability to access or forge credentials on the network? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1212",
        "name": "Exploitation for Credential Access",
        "evidence": [
          {
            "description": "Confirmed network traffic patterns matching signatures for known credential access exploits, such as an all-zero Netlogon challenge (Zerologon/CVE-2020-1472) or specific EFSRPC RPC calls targeting domain controllers (PetitPotam/CVE-2021-36942).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dce_rpc.log",
              "Zeek ntlm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Network segments containing authentication servers",
            "action": [
              "Symbolic: Deploy and monitor network intrusion detection signatures for known exploits like Zerologon (all-zero challenge in Netlogon RPC) and PetitPotam (EFSRPC API calls like EfsRpcOpenFileRaw). Alert on any signature match against traffic destined for Domain Controllers.",
              "Statistical: Analyze Zeek's dce_rpc.log to establish a baseline of normal RPC operations and endpoints targeting authentication servers. Calculate the frequency of rare or sensitive RPC calls (e.g., related to SAMR, LSARPC) per source host. Flag hosts whose call frequency for these operations exceeds the 99th percentile of the established baseline.",
              "Machine Learning: Train a supervised classification model (e.g., a Random Forest) on labeled PCAP data to distinguish between benign and malicious RPC traffic sequences associated with credential exploitation. Use features like RPC call frequency, endpoint pairs, call sequences, and payload characteristics. Deploy the model to score live network traffic sessions for real-time threat detection."
            ]
          },
          {
            "description": "Kerberos ticket requests (TGS-REQ) for multiple, distinct Service Principal Names (SPNs) from a single host in a short time frame, or the use of Kerberos tickets with anomalous attributes such as weak encryption (RC4-HMAC) or abnormally long lifetimes.",
            "data_sources": [
              "Windows Event ID 4769",
              "Zeek kerberos.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers hosting critical services, Kerberos Key Distribution Center (KDC)",
            "action": [
              "Symbolic: Search for Windows Event ID 4769 where the Service Name does not end in '$' (indicating a user account SPN) and the ticket encryption type is RC4-HMAC (0x17). Correlate with successful authentication (Event ID 4624) using the resulting ticket to identify a potential Kerberoasting attack.",
              "Statistical: For each host, profile the number of unique SPNs requested (from Event ID 4769) within a 1-hour window. Calculate a baseline distribution of these counts across all hosts. Alert on any host whose count of unique SPN requests exceeds 3 standard deviations above the mean, indicating potential Kerberoasting enumeration.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA or LSTM) on the volume of Event ID 4769 logs per host. Train the model on historical data to predict expected ticket request volume. An alert is generated when the observed volume significantly deviates from the predicted range, which could indicate a large-scale ticket request event."
            ]
          },
          {
            "description": "An unexpected termination or crash of the Local Security Authority Subsystem Service (lsass.exe) process on a Domain Controller or critical server, which may indicate an exploit attempt or a failed credential dumping operation.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Credential stores, Critical application servers",
            "action": [
              "Symbolic: Create a high-severity alert rule that triggers immediately upon detection of Windows Event ID 1000 (Application Error) where the 'Faulting application name' is 'lsass.exe'. This event is always critical and requires immediate investigation.",
              "Statistical: Establish a baseline of normal process relationships by analyzing parent-child process data from Event ID 4688. Calculate the entropy of parent processes for lsass.exe (which should be very low, typically wininit.exe). An increase in entropy or the appearance of an anomalous parent process for lsass.exe indicates suspicious activity preceding a potential crash.",
              "Machine Learning: Develop an unsupervised clustering model (e.g., DBSCAN) using features from process monitoring data (Event ID 4688) and performance counters (CPU/memory usage) for lsass.exe. The model should group normal behavior into a large cluster. Any data point identified as a noise point or belonging to a small, sparse cluster is flagged as an anomaly, potentially indicating exploit-induced stress or instability."
            ]
          },
          {
            "description": "Anomalous process execution on a web server originating from a web service process (e.g., w3wp.exe, httpd.exe), followed by the creation of network connections to internal authentication services.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing web servers, Application servers, Internal network segments",
            "action": [
              "Symbolic: Monitor for process creation events (Event ID 4688) where the parent process is a common web server process (e.g., 'w3wp.exe', 'tomcat.exe', 'httpd.exe') and the child process is a command shell ('cmd.exe', 'powershell.exe') or a known reconnaissance tool ('whoami.exe', 'nltest.exe').",
              "Statistical: Profile the child processes typically spawned by your web server processes. Calculate the rarity of each child process using a simple frequency count. Alert when a web server spawns a child process with a rarity score in the top 1% (e.g., 'net.exe').",
              "Machine Learning: Use a graph-based analysis model to map normal process-to-network-connection behavior. Create nodes for processes and network destinations. An anomaly is detected when a new, suspicious edge is created, such as a web server process ('w3wp.exe') spawning a shell that then initiates a connection to a Domain Controller (identified via Zeek conn.log) on port 445 or 389."
            ]
          },
          {
            "description": "Multiple authentication attempts using identical or near-identical authentication tokens or nonces within a short time window, particularly against services not protected by anti-replay mechanisms.",
            "data_sources": [
              "Zeek ntlm.log",
              "Zeek kerberos.log",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers, Legacy application servers, Network traffic ingress/egress points",
            "action": [
              "Symbolic: In application or authentication logs, look for multiple authentication requests using the exact same session token or nonce value where the system should enforce uniqueness. Alert on any duplicate value detected within the token's expected validity period.",
              "Statistical: In Zeek ntlm.log, for a given user and server, calculate the time difference between consecutive NTLM authentication attempts. Establish a baseline for this delta. A cluster of attempts with a near-zero delta or a delta that matches a known network latency pattern could indicate a replay attack. Flag any source IP generating NTLM authentications with time deltas in the bottom 1st percentile.",
              "Machine Learning: Train a sequence analysis model (e.g., an LSTM autoencoder) on streams of authentication data (features like source IP, username, timestamp, protocol-specific fields from Zeek). The model learns normal sequences of authentication events. A replay attack, which disrupts the normal temporal sequence, would result in a high reconstruction error, triggering an anomaly alert."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]