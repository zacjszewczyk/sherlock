[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using Control Panel items?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.002",
        "name": "Control Panel",
        "evidence": [
          {
            "description": "A process executes a Control Panel item (.cpl file), and either the file hash matches a known malicious hash, or the process subsequently initiates a network connection to an IP address or domain on a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Domain Controllers, Application Servers, Network Egress Points",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) for command lines containing `.cpl`. Extract the file path, calculate its hash, and join against a threat intelligence database of known malicious file hashes. Separately, correlate the Process ID with network connection logs (Zeek conn.log) and DNS query logs (Zeek dns.log) within 5 minutes of execution. Join the destination IP addresses and domains against a threat intelligence feed of known malicious indicators. Alert on any match.",
              "Statistical: For all `.cpl` file executions, analyze the prevalence of the file hash across the enterprise. Calculate the enterprise-wide prevalence for each executed CPL file hash. Flag any CPL file hash that is present on a statistically insignificant number of hosts (e.g., < 5 hosts, or less than 1% of the endpoint population) for manual review.",
              "Machine Learning: Develop a supervised classification model (e.g., Random Forest) trained on features from both process and subsequent network events following a CPL execution. Features should include file path entropy, parent process name, network connection port, destination IP reputation score, data volume transferred, and connection duration. Use this model to classify each CPL execution event as 'benign' or 'malicious'."
            ]
          },
          {
            "description": "The `control.exe` or `rundll32.exe` process is executed with a command-line argument referencing a `.cpl` file path that is not within the standard `\\%SystemRoot\\%\\System32\\` or `\\%SystemRoot\\%\\SysWOW64\\` directories.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) for a `NewProcessName` of `control.exe` or `rundll32.exe` where the `CommandLine` contains `.cpl`. Use a regular expression to extract the file path. Compare the directory of the CPL file against an allowlist of standard system directories (e.g., `C:\\Windows\\System32`, `C:\\Windows\\SysWOW64`). Alert on any execution where the CPL path is not on the allowlist, especially paths in user profiles, temp directories, or network shares.",
              "Statistical: For each CPL execution, calculate the Shannon entropy of the file path string. Establish a baseline of path entropy for legitimate CPL executions from standard directories. Flag executions where the path entropy exceeds a high percentile (e.g., 95th percentile) of the baseline, as high entropy can indicate randomized or obfuscated paths often used by malware.",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) or an autoencoder trained on the file paths of legitimate CPL executions observed over a 30-day period. Apply this model to new CPL execution paths to detect anomalies. Paths that are flagged as outliers by the model represent significant deviations from established normal behavior and warrant investigation."
            ]
          },
          {
            "description": "A `control.exe` process is created with a parent process that is not `explorer.exe` or `svchost.exe`. Specifically, parent processes like `winword.exe`, `excel.exe`, `outlook.exe`, `powershell.exe`, `cmd.exe`, or `wscript.exe` are observed.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) where the `NewProcessName` is `control.exe`. Create an allowlist of expected `ParentProcessName` values (e.g., `explorer.exe`, `svchost.exe`, `services.exe`). Generate an alert for any execution of `control.exe` where the parent process is not on this allowlist, with high severity for parents like `winword.exe`, `excel.exe`, `powershell.exe`, and `cmd.exe`.",
              "Statistical: Over a 30-day rolling window, calculate the frequency of all parent-child process relationships where the child process is `control.exe`. Identify parent processes that fall below a low frequency threshold (e.g., seen less than 5 times across the enterprise) or represent a low percentile (e.g., bottom 5%) of all `control.exe` parent-process pairs. These rare relationships are highly suspicious.",
              "Machine Learning: Model parent-child process relationships across the enterprise as a directed graph. Apply a community detection algorithm (e.g., Louvain Modularity) to identify clusters of normal behavior. A `control.exe` process spawned by a parent that is part of an anomalous, low-prevalence cluster should be flagged for investigation."
            ]
          },
          {
            "description": "A file with a `.cpl` extension is created on disk by a process, followed within 60 seconds by a process creation event (`control.exe` or `rundll32.exe`) that executes that same file path on the same host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Web servers",
            "action": [
              "Symbolic: Correlate file creation events (Sysmon Event ID 11) where `TargetFilename` ends in `.cpl` with process creation events (Windows Event ID 4688) on the same host. Trigger an alert if a process creation for `control.exe` or `rundll32.exe` executes the same `.cpl` file path within 60 seconds of its creation. Assign a higher risk score if the process that created the file is a browser, script interpreter, or command-line utility like `curl.exe` or `certutil.exe`.",
              "Statistical: For every file-write-then-execute sequence involving a `.cpl` file, calculate the time delta between the write (Sysmon Event ID 11 timestamp) and the execution (Windows Event ID 4688 timestamp). Establish a baseline distribution of these time deltas for legitimate software installers. Flag sequences where the time delta is in a low percentile (e.g., bottom 10%, indicating immediate execution) as suspicious.",
              "Machine Learning: Use a sequence analysis model, such as a Recurrent Neural Network (RNN) or Hidden Markov Model (HMM), trained on sequences of system events (process creation, file creation, network connection). The model learns normal sequences of activity. Flag any sequence involving the creation and immediate execution of a `.cpl` file that the model identifies as having a low probability of occurrence."
            ]
          },
          {
            "description": "A process, initiated via `control.exe` or a `rundll32.exe` call to a `.cpl` file, establishes one or more network connections exhibiting anomalous characteristics, such as connections to non-standard ports, periodic beaconing behavior, or unusually high data transfer volumes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, Proxy Servers, Endpoint devices",
            "action": [
              "Symbolic: For each `control.exe` or `rundll32.exe` CPL execution (Windows Event ID 4688), identify the Process ID. Correlate this with network connection logs (Zeek conn.log) by host IP and timestamp. Alert if the destination IP is on a threat intelligence list, the destination port is not a standard web port (e.g., 80, 443), or the requested domain (from Zeek dns.log) has a low reputation score or was registered within the last 30 days.",
              "Statistical: For network connections spawned by CPL executions, calculate the entropy of the requested domain name (from Zeek dns.log). Flag domains with entropy scores in the 99th percentile, which is indicative of Domain Generation Algorithms (DGA). Additionally, analyze connection data volumes (`orig_bytes` + `resp_bytes` in Zeek conn.log) and flag connections that are statistical outliers (e.g., > 3 standard deviations from the mean for that host).",
              "Machine Learning: Apply time series analysis to the network connections from a host after a CPL execution. Use a forecasting model like ARIMA or an anomaly detection algorithm like Isolation Forest on metrics such as bytes transferred per minute and connections per minute. An alert should be generated if the model detects significant deviations from the established baseline, which could indicate C2 beaconing or data exfiltration."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]