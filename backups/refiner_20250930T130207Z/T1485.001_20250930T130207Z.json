[
  {
    "information_requirement": "Has the adversary impacted data availability or integrity by deleting cloud storage data?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1485.001",
        "name": "Lifecycle-Triggered Deletion",
        "evidence": [
          {
            "description": "A log record of a network connection from an internal host to a cloud storage API endpoint where the source or destination IP is a known malicious indicator, or a process execution log showing a cloud CLI command with parameters matching signatures of known destructive malware.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Proxies), Endpoints of developers and cloud administrators, Threat Intelligence Platforms",
            "action": "Symbolic: Create a rule to correlate Zeek conn.log against a CTI feed of malicious IPs. Separately, create a signature-based rule for Windows Event ID 4688 to detect cloud CLI executions (aws.exe, az.exe, gcloud.exe) with command-line arguments matching known destructive malware patterns. Statistical: For all connections to cloud storage API endpoints, calculate the entropy of the subdomain for each FQDN in Zeek dns.log. A sudden spike in entropy for a given source IP may indicate interaction with algorithmically generated bucket names. Alert if entropy for a source IP exceeds the 99th percentile of its historical values. ML: Train a classification model (e.g., Random Forest) on process command lines (Event ID 4688), labeling known-good administrative scripts and known-bad malware commands. Use the model to score new, unseen CLI executions for maliciousness based on features like parameter combinations, argument length, and presence of obfuscated strings."
          },
          {
            "description": "A Windows Event ID 4688 log showing the execution of a cloud CLI process (e.g., 'aws.exe', 'az.exe') with command-line arguments that configure a storage lifecycle policy with an expiration period of 1 day or less.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints of developers and cloud administrators, CI/CD pipeline servers, Virtual machine instances with cloud SDKs installed",
            "action": "Symbolic: Create a detection rule for Windows Event ID 4688 events where `ProcessName` is a cloud CLI and `CommandLine` contains keywords like 'put-bucket-lifecycle-configuration', 'delete-retention-policy', or 'lifecycle-file' AND parameters indicating immediate deletion (e.g., 'Days:1', 'Days: 0', 'delete_marker_gc_after_days:1'). Statistical: For each user, establish a baseline of normal cloud CLI command usage, tracking the frequency of lifecycle management commands. Alert if a user executes these commands at a rate exceeding 3 standard deviations above their individual baseline, or if the `Expiration` day value is in the bottom 1st percentile of all historically set values organization-wide. ML: Use an anomaly detection model (e.g., Isolation Forest) on a feature set derived from CLI executions: {user, source_host, command_type, is_off_hours, lifecycle_day_value}. Train the model on known-good administrative activity to identify executions that are outliers across multiple dimensions."
          },
          {
            "description": "A time-series of logs from a single host showing a sequence of events within a short window (e.g., 30 minutes): [1] Cloud CLI execution for storage reconnaissance (e.g., 's3 ls'), followed by [2] a CLI execution modifying a lifecycle policy.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints of developers and cloud administrators, Network Egress Points (Firewalls/Proxies), Log Aggregation Systems (SIEM)",
            "action": "Symbolic: Define a stateful detection rule that triggers when a specific source IP executes a cloud storage 'list' command (e.g., 'aws s3 ls') followed within 30 minutes by a 'put-bucket-lifecycle-configuration' command. Correlate this host-based sequence with Zeek conn.log to confirm connections to the cloud provider's API endpoint. Statistical: Model command sequences using a Markov chain for each user role (e.g., developer, admin). Calculate the transition probability between 'list' and 'put-lifecycle' commands. Alert if a sequence with a very low probability occurs, indicating a deviation from normal administrative workflows. ML: Use a sequence-based anomaly detection model like a Recurrent Neural Network (RNN) or LSTM trained on sequences of CLI commands per user session. The model learns normal administrative 'sentences' of commands and flags sequences that are grammatically incorrect or highly improbable."
          },
          {
            "description": "A time-series analysis of network flow data (e.g., Zeek conn.log) showing a statistically significant drop (e.g., >3 standard deviations) in the volume of traffic sent to a known cloud storage destination, for which there is no corresponding change control or maintenance window.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Proxies), Servers responsible for backups and log shipping, Application servers writing to cloud storage",
            "action": "Symbolic: For critical backup processes, define a 'heartbeat' rule. If no connection is seen in Zeek conn.log from the backup server to the cloud storage bucket FQDN for a predefined interval (e.g., 2 hours), generate a high-priority alert. Statistical: For each critical data flow to a cloud bucket, calculate a rolling 30-day baseline of traffic volume (bytes_out) per hour. Use descriptive statistics to define a normal range (e.g., mean +/- 2 standard deviations). Alert if the hourly traffic volume drops below this range for a sustained period. ML: Implement a time-series forecasting model (e.g., ARIMA or Prophet) for each major data flow to cloud storage. The model will predict the expected traffic volume for the next hour. Generate an alert if the actual observed traffic falls outside the model's prediction confidence interval, indicating an unpredicted cessation of data flow."
          },
          {
            "description": "A network connection log from an internal host to a cloud API endpoint, where the source host is not in the predefined group of administrative systems, or the connection occurs outside of that host's or user's typical active hours.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Proxies), Domain Controllers and Authentication Servers, Endpoints of developers and cloud administrators",
            "action": "Symbolic: Maintain an explicit allowlist of host IP addresses authorized to connect to cloud management API endpoints. Monitor Zeek conn.log for any connections to these endpoints originating from IPs not on the list and generate an alert. Statistical: For each administrative host, create a baseline profile of API connection times using Windows Event ID 4624 login times and Zeek conn.log timestamps. Use percentile analysis to define 'normal' working hours (e.g., 5th to 95th percentile of connection times). Alert if a connection to a management API occurs outside this established time window. ML: Use a clustering algorithm (e.g., DBSCAN) on connection data {source_ip, dest_fqdn, user_agent, time_of_day}. This can automatically group normal administrative connection patterns. Any connection that does not fall into a known cluster is flagged as an anomaly, potentially indicating unauthorized activity."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]