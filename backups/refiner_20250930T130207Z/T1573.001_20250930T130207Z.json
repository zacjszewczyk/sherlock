[
  {
    "information_requirement": "Is the adversary communicating with command and control infrastructure using symmetric cryptography? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1573.001",
        "name": "Symmetric Cryptography",
        "evidence": [
          {
            "description": "A network connection is established from an internal host to an external IP address or domain that is present on a threat intelligence feed and tagged as C2 infrastructure known to use symmetric encryption.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), DNS Resolvers",
            "action": "Symbolic: Join Zeek conn.log destination IPs and dns.log queried domains against a CTI feed of known symmetric-key C2 servers; alert on any match. Statistical: Analyze the prevalence of connections to newly observed CTI-flagged domains. A domain queried by a small number of hosts (e.g., below the 5th percentile of domain request counts) that is also on a CTI list warrants a higher priority alert. Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on historical CTI data and network metadata (protocol, port, data volume) to predict the likelihood that a connection to a previously unseen IP or domain is malicious C2."
          },
          {
            "description": "A process is created (Windows Event ID 4688) from a non-standard directory (e.g., %TEMP%, %APPDATA%) or with a name matching a known malicious hash or signature, and this process subsequently initiates outbound network connections.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Application Servers, Domain Controllers",
            "action": "Symbolic: Monitor Windows Event ID 4688 for process names or paths matching IOCs (hashes, regex patterns like `svchost.exe` from a non-system path) and correlate with any subsequent outbound connection in Zeek conn.log. Statistical: Establish a baseline of common process execution paths and parent-child relationships. Flag executions that fall into a low percentile of historical occurrences (e.g., path rarity < 1%), especially when correlated with network activity. Machine Learning: Develop an anomaly detection model (e.g., Isolation Forest) on process command-line arguments. High anomaly scores for processes that also initiate network traffic indicate potential malicious execution."
          },
          {
            "description": "Outbound network traffic on a standard port (e.g., 443, 80) fails to conform to the expected protocol (e.g., no valid TLS handshake on 443) and exhibits a payload entropy significantly higher than the established baseline for that port.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Network Segments",
            "action": "Symbolic: Define rules to flag non-TLS traffic on port 443 by checking for an empty `uid` in ssl.log for a corresponding `uid` in conn.log. Statistical: For each destination port, calculate the 95th percentile of payload entropy over a 30-day rolling window using Zeek files.log. Alert on any connection whose payload entropy exceeds this threshold, especially if it also meets the symbolic protocol-mismatch rule. Machine Learning: Use a time-series forecasting model (e.g., ARIMA) to predict expected traffic volume and entropy levels for specific ports. An alert is generated when observed entropy significantly deviates from the forecasted values."
          },
          {
            "description": "A sequence of network connections from a single host to a single external destination exhibits a periodic, 'heartbeat' pattern with consistent timing and data size, or demonstrates a data transfer ratio (bytes sent vs. bytes received) that is anomalous for the given port.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Host-to-Network Interfaces",
            "action": "Symbolic: Create a rule to identify beaconing by flagging any host making connections to the same destination IP at regular intervals (e.g., every 300s +/- 10s) with a consistent payload size (+/- 10%) for more than 5 occurrences. Statistical: For each source-destination pair, calculate the ratio of `orig_bytes` to `resp_bytes` from conn.log. Alert when a ratio deviates by more than 3 standard deviations from the established baseline for that destination port. Machine Learning: Apply time-series analysis, such as autocorrelation, to connection timestamps for each source-destination pair to identify repeating, periodic signals. A strong periodic signal, especially to an uncategorized IP, is a high-confidence indicator of C2."
          },
          {
            "description": "A process, not on an established allowlist, is observed initiating an outbound network connection that concurrently displays multiple suspicious attributes, such as high entropy, beaconing behavior, and a protocol mismatch for the destination port.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Application Servers, Network Egress Points",
            "action": "Symbolic: Create a correlation rule that triggers when a process hash from Windows Event ID 4688 is not found in a software allowlist AND it initiates a connection to a destination IP on a CTI blocklist. Statistical: Develop a composite risk score for each process. Increment the score for each anomaly: process path rarity < 5th percentile, network connection entropy > 95th percentile for the port, data ratio > 3 standard deviations from the port mean. Alert when the cumulative score exceeds a predefined threshold. Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on a feature set combining process and network data (e.g., process path rarity, network entropy, beaconing score). Flag clusters that are separate from the main 'normal' cluster as multi-faceted behavioral outliers."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]