[
  {
    "information_requirement": "Is the adversary conducting reconnaissance against the organization using passive DNS?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1596.001",
        "name": "Search Victim-Owned Websites",
        "evidence": [
          {
            "description": "One or more DNS queries for the organization's domains originate from an external IP address present on a threat intelligence feed with a 'reconnaissance' or 'scanner' tag. Alternatively, queries are observed for hostnames known to be associated with adversary command and control (C2) or phishing campaigns that mimic the organization's domain.",
            "data_sources": [
              "Zeek dns.log",
              "Threat Intelligence Platform Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS Servers, Public-facing DNS Resolvers, Network Egress/Ingress Points (Firewalls)",
            "action": "1. (Symbolic) Continuously ingest threat intelligence feeds of known malicious IPs. Create a rule to generate an alert when a DNS query in Zeek dns.log has a source IP (`id.orig_h`) that matches an IP on the 'reconnaissance' or 'malicious scanner' threat feed. 2. (Statistical) For IPs that match the IOC list, calculate the frequency of queries over a 24-hour period. Escalate alerts for IPs that are both on the list and exhibit a query frequency above the $$ 95^{th} $$ percentile of all external DNS clients to prioritize actively scanning threats. 3. (Machine Learning) Use a supervised classification model (e.g., Logistic Regression, Random Forest) trained on labeled historical data (IPs, query types, query FQDNs) to classify incoming queries as 'benign' or 'recon'. A query classified as 'recon' with high confidence ($$ > 0.90 $$) triggers an investigation."
          },
          {
            "description": "A single external source IP issues a sequence of DNS queries for common service (SRV) records (e.g., `_gc._tcp`, `_ldap._tcp`, `_kerberos._tcp`) within a short time frame, such as 60 seconds. Or, an external source issues multiple A/AAAA record queries for the same FQDN with a low TTL, receiving different IP addresses in response, one of which is an internal (RFC1918) address, indicative of DNS Rebinding.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS Servers, Network Egress/Ingress Points (Firewalls)",
            "action": "1. (Symbolic) Create a detection rule that searches Zeek dns.log for queries where `qtype` is 'SRV' and the `query` field matches a list of sensitive service discovery patterns (e.g., `_gc._tcp.*`, `_ldap._tcp.*`, `_kerberos.*`) originating from an external `id.orig_h`. Alert if more than 3 such distinct queries are seen from the same source IP within 5 minutes. 2. (Statistical) For each external source IP, calculate the ratio of SRV queries to total queries. Establish a baseline for this ratio across all external clients. An IP whose SRV query ratio exceeds the $$ 99.9^{th} $$ percentile of the baseline distribution is flagged as anomalous. 3. (Machine Learning) Use a sequence analysis model (e.g., Hidden Markov Model) to identify query sequences characteristic of reconnaissance tools. Train the model on known-bad query sequences (e.g., from DNSenum) and benign traffic to detect tool-like enumeration patterns based on the sequence of `qtype` and subdomain structure."
          },
          {
            "description": "An unauthorized external IP address sends a DNS query with a `qtype` of 'AXFR' or 'IXFR' to an organizational authoritative name server. Alternatively, a statistically significant volume of 'ANY' `qtype` queries are observed from a single external source.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS Servers",
            "action": "1. (Symbolic) Create a high-severity, zero-tolerance alert that triggers immediately if a query in Zeek dns.log is observed where `qtype` is 'AXFR' or 'IXFR' and the source IP (`id.orig_h`) is not on an explicit allow-list of secondary DNS servers. 2. (Statistical) For queries with `qtype` = 'ANY' from external sources, establish a baseline of the count per source IP over a 1-hour window. Flag any source IP whose 'ANY' query count exceeds $$ 3\\sigma $$ (3 standard deviations) above the mean of this baseline. 3. (Machine Learning) Employ a one-class SVM or Isolation Forest model trained on normal DNS traffic characteristics (`qtype` distribution, query volume). The model should identify queries with rare `qtype` values like 'AXFR' or an anomalously high frequency of 'ANY' as outliers, providing a more robust detection than simple thresholding."
          },
          {
            "description": "A single external source IP generates a high volume of DNS queries for the organization's domain, where a large percentage ($$ > 80\\% $$) of the responses are 'NXDOMAIN', indicating subdomain brute-forcing. The queried subdomains also exhibit high character-level entropy.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS Servers, DNS Resolvers",
            "action": "1. (Symbolic) For each external `id.orig_h` in Zeek dns.log, maintain a count of total queries and queries resulting in an 'NXDOMAIN' response (`rcode_name` = 'NXDOMAIN') over a 5-minute window. Trigger an alert if `(NXDOMAIN_count / total_count) > 0.8` AND `total_count > 50`. 2. (Statistical) For each source IP, calculate the Shannon entropy of the set of unique subdomains queried within a 10-minute window: $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$. An IP with an entropy score in the $$ > 98^{th} $$ percentile, combined with a high NXDOMAIN rate, is highly indicative of enumeration. 3. (Machine Learning) Use a clustering algorithm like DBSCAN on features extracted from DNS queries (query count, NXDOMAIN ratio, query rate, average subdomain entropy). The algorithm will group normal traffic into dense clusters, and IPs flagged as noise or outliers by the model should be investigated for scanning activity."
          },
          {
            "description": "A statistically significant increase in the volume of DNS queries for the organization's domains is observed, exceeding historical norms by several standard deviations. The surge is composed of queries from a large number of geographically and organizationally diverse source IPs and is not correlated with any known marketing or operational event.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS Servers, Network Egress/Ingress Points (Firewalls)",
            "action": "1. (Symbolic) Monitor the rate of incoming DNS queries per minute. If the rate increases by more than 300% compared to the previous 1-hour moving average and persists for more than 5 minutes, trigger a low-severity alert. 2. (Statistical) Maintain a time series of DNS query volume per minute. Calculate a rolling 30-day baseline with mean and standard deviation for each 15-minute interval of the day. Generate an alert when the current query volume exceeds the baseline mean by more than $$ 4\\sigma $$ (4 standard deviations). 3. (Machine Learning) Implement a time series forecasting model (e.g., SARIMA or Prophet) that accounts for daily and weekly seasonality. If the actual observed volume significantly deviates from the model's prediction (i.e., falls outside the $$ 99\\% $$ confidence interval), flag it as an anomaly indicative of a potential coordinated reconnaissance event."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]