[
  {
    "information_requirement": "Is the adversary maintaining persistence using malicious or abused software extensions?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1176",
        "name": "Software Extensions",
        "evidence": [
          {
            "description": "A network connection is established from a browser process to a destination IP address or domain present on a high-confidence threat intelligence feed. Alternatively, a file creation or registry key modification event occurs, matching a known hash or identifier of a malicious extension.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Network egress points (e.g., web proxy, firewall)",
            "action": "Continuously monitor network and host logs. 1. (Symbolic) Join browser process events (Windows Event ID 4688) with network connection logs (Zeek conn.log) and DNS queries (Zeek dns.log). Alert if the destination IP or resolved domain matches an entry on a high-confidence C2 threat intelligence feed. 2. (Statistical) Analyze Zeek conn.log to identify browser processes communicating with IP addresses that have a very low prevalence (<0.01%) across the enterprise over the last 30 days. Calculate the Jaccard similarity between the set of domains contacted by a user's browser today and their historical 90-day baseline; a score below a tuned threshold (e.g., 0.5) indicates a significant behavior change. 3. (Machine Learning) Use a pre-trained NLP model to classify DNS query names as either legitimate or DGA-like. Flag browser-initiated DNS queries that are classified as DGA with high confidence, as this can indicate C2 communication from a malicious extension."
          },
          {
            "description": "A process creation event is observed where a browser is launched with command-line flags for loading unpacked extensions (e.g., '--load-extension=') pointing to a non-standard directory (e.g., %TEMP%, C:\\Users\\Public). Alternatively, a file modification event within a browser's extension directory is initiated by a non-browser, non-updater process (e.g., powershell.exe, cmd.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations, servers)",
            "action": "Monitor process creation and file modification events on endpoints. 1. (Symbolic) Create a detection rule that searches process creation events (Windows Event ID 4688) for browser executables launched with the '--load-extension=' argument. Alert if the specified path is in a low-reputation directory like %TEMP% or %PUBLIC%. 2. (Statistical) For each user, establish a baseline of parent processes that launch browser executables. Calculate the rarity of a parent-child process relationship (e.g., powershell.exe -> chrome.exe). A statistically rare parent process, such as one falling below the 1st percentile of observed parent processes, should be flagged for review. 3. (Machine Learning) Train a classification model (e.g., Random Forest) on command-line arguments from Event ID 4688. Features can include argument length, presence of keywords ('--load-extension'), and path entropy. Use the model to score new browser process launch events for their likelihood of being a malicious sideloading attempt."
          },
          {
            "description": "A file or object access event is recorded within a protected browser directory (e.g., Chrome's 'User Data' folder containing 'Login Data' or 'Cookies' databases) where the initiating process is not the browser executable itself, an official updater, or a whitelisted administrative tool.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, File servers hosting roaming profiles",
            "action": "Implement detailed file access auditing on sensitive browser directories. 1. (Symbolic) Monitor file access events (Windows Event ID 4663) in paths like '%LOCALAPPDATA%\\Google\\Chrome\\User Data\\Default\\'. Create an allowlist of legitimate processes (e.g., chrome.exe, software_reporter_tool.exe). Alert whenever a process not on the allowlist accesses files like 'Login Data' or 'Cookies'. 2. (Statistical) For sensitive browser files (e.g., 'Login Data'), monitor the frequency of access by different processes per host. Use entropy to score the distribution of unique processes accessing these files over a 24-hour window. A sudden spike in entropy indicates that many new processes are accessing the file and should be investigated. 3. (Machine Learning) Use an anomaly detection algorithm (e.g., Isolation Forest) on file access events (Event ID 4663). Features should include process name, access type (read/write), time of day, and file path. The model can learn normal access patterns and flag deviations, such as a script accessing the cookie database at 3:00 AM."
          },
          {
            "description": "A browser process initiates network connections characterized by high character-set entropy in the domain name, a recent domain registration date (e.g., < 30 days), non-standard destination ports, or a highly periodic 'heartbeat' communication pattern.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., web proxy, firewall), DNS servers",
            "action": "Analyze enriched network logs from network sensors. 1. (Symbolic) Alert on any connection from a browser process to a destination port that is not 80 or 443, excluding known-good applications. Additionally, check DNS responses for WHOIS data and alert on queries to domains registered within the last 30 days. 2. (Statistical) For each host, calculate the Shannon entropy of all DNS queries originating from browser processes. Alert if the entropy for a given host exceeds the 95th percentile of the enterprise baseline, indicating potentially randomized DGA domains. Separately, analyze connection logs for periodic, low-volume communications by calculating the standard deviation of the time delta between connections to a given destination; a very low standard deviation indicates beaconing. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) on aggregated network connection data per host (bytes sent/received per minute, connection count). Train the model on baseline activity and use it to detect significant deviations from the learned norm, which could be caused by an extension's C2 or data exfiltration activity."
          },
          {
            "description": "Within a defined time window (e.g., 60 minutes) following a file creation event in a browser extension directory, one or more subsequent suspicious events are observed on the same host, such as new service creation, new scheduled task creation, or execution of scripting engines.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Windows Event ID 4698",
              "Windows Event ID 7045"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Active Directory domain controllers",
            "action": "Correlate host events to identify suspicious sequences. 1. (Symbolic) Create a correlation rule that triggers when a file creation event (Event ID 4663) in an extension directory is followed within 60 minutes on the same host by a new service creation (Event ID 7045), a new scheduled task (Event ID 4698), or a powershell.exe execution (Event ID 4688). 2. (Statistical) Calculate the conditional probability of a persistence event (e.g., new service) occurring given a new extension installation has occurred within the last hour. Use a chi-squared test to assess if the association between 'new extension' and 'new persistence' event types is statistically significant compared to their independent baseline frequencies. 3. (Machine Learning) Use a Granger causality test to formally test if the time series of 'new extension installation events' is a useful predictor for the time series of 'new persistence mechanism events' across the enterprise. A strong, lagged correlation suggests a causal link that warrants investigation."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]