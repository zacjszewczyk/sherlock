[
  {
    "information_requirement": "Has the adversary collected sensitive data via local email files?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1114.001",
        "name": "Local Email Collection",
        "evidence": [
          {
            "description": "A process with a file hash matching a known-malicious entry in a threat intelligence feed, or originating from a process tree with a known-malicious ancestor, accesses a file with a .pst or .ost extension.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Executive laptops, Mail archive servers",
            "action": "Symbolic: Continuously monitor for file access events (Windows Event ID 4663) where the target filename ends in .pst or .ost. For each event, retrieve the associated Process ID and use it to find the process creation event (Windows Event ID 4688). Extract the process image's file hash and compare it against a threat intelligence feed of known malicious hashes. Alert on any match. Statistical: For processes accessing .pst or .ost files, calculate the prevalence of the process name across the enterprise. Alert if a process with a low prevalence score (e.g., seen on <1% of endpoints) or high file path entropy accesses email files. Machine Learning: Train a random forest classifier on process execution data (Windows Event ID 4688) enriched with file access information (Windows Event ID 4663). Features should include process name, parent process, command-line arguments, file path entropy, and whether the process accessed a .pst/.ost file. Use the trained model to classify new process/file-access events in real-time as 'benign' or 'malicious collection'."
          },
          {
            "description": "A command-line interpreter or utility (e.g., cmd.exe, powershell.exe, robocopy.exe) is executed with arguments that explicitly reference, copy, or archive files with .pst or .ost extensions.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances, Administrative jump boxes",
            "action": "Symbolic: Monitor process creation events (Windows Event ID 4688) for common command-line interpreters. Use a library of regular expressions to detect arguments targeting email files, such as 'copy *.pst', 'robocopy .ost', or 'Compress-Archive -Path *.pst'. Alert on any match. Statistical: For each command-line execution, calculate a rarity score based on the combination of the process and its arguments. Establish a baseline of common administrative commands. A command that is statistically rare (e.g., beyond the 99th percentile of rarity) and also references .pst or .ost files should be flagged. Machine Learning: Use a Natural Language Processing (NLP) model, such as a TF-IDF vectorizer, to transform command-line arguments into numerical features. Train a logistic regression model to classify command lines as 'benign' or 'suspicious collection', allowing detection of novel patterns not matching specific regular expressions."
          },
          {
            "description": "A process not on an established allowlist (e.g., not outlook.exe, searchindexer.exe) accesses a .pst or .ost file and subsequently initiates an external network connection within a defined, short time window (e.g., under 5 minutes).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, DNS servers",
            "action": "Symbolic: Create a stateful rule that triggers when a process not in an 'Email-Access-Allowlist' reads a .pst or .ost file (Windows Event ID 4663). Within 5 minutes, check for a network connection event (Zeek conn.log) from the same source IP to an external destination. Correlate the destination IP with threat intelligence feeds and alert if a non-allowlisted process accesses email files and connects to a known-malicious IP. Statistical: For processes accessing .pst/.ost files, profile their typical network behavior using Zeek conn.log. For each process, calculate the baseline bytes sent and destination port distribution. Alert when a process, after accessing an email file, initiates a network connection that is a statistical outlier (e.g., bytes sent is > 3 standard deviations above its mean). Machine Learning: Develop a time-series anomaly detection model (e.g., LSTM) for each host's data exfiltration pattern (bytes out over time from Zeek conn.log). When a process accesses a .pst/.ost file (Windows Event ID 4663), feed the subsequent outbound network traffic data for that host into the model. An anomaly score exceeding a predefined threshold indicates a potential exfiltration event."
          },
          {
            "description": "A large volume of data is read from a .pst or .ost file, followed by a file creation of similar size in a common staging directory (e.g., C:\\Users\\Public, C:\\Windows\\Temp, C:\\PerfLogs) by the same process.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Publicly writable network shares",
            "action": "Symbolic: Create a rule that triggers when a process like `cmd.exe`, `powershell.exe`, or `robocopy.exe` is launched (Windows Event ID 4688) with command-line arguments indicating a .pst or .ost file is being copied to a common staging directory. Alert on a match. Statistical: Monitor file read events (Windows Event ID 4663) on .pst/.ost files. For the process performing the read, monitor its subsequent file write operations. Calculate the total bytes read from email files and total bytes written to staging directories over a 10-minute window. If the ratio of bytes written to staging versus bytes read from email files is close to 1 and the total volume exceeds a dynamic threshold (e.g., 95th percentile of daily file I/O for that user), generate an alert. Machine Learning: Train a graph-based model where nodes are processes, files, and users. An edge is created when a process accesses a file. Use a graph algorithm to identify a subgraph showing a non-standard process reading a .pst file and then writing to a file in a temp directory, which would be flagged as a high-risk 'staging' activity."
          },
          {
            "description": "A single user account or process accesses .pst or .ost files belonging to multiple, distinct user profiles within a one-hour window, exceeding a statistically determined threshold.",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers hosting roaming profiles, Shared workstations, Citrix/VDI servers",
            "action": "Symbolic: Maintain a list of authorized administrative accounts (e.g., backup agents). Monitor file access events (Windows Event ID 4663) for .pst/.ost files. If a user or process not on the authorized list accesses email files from more than one distinct user profile path (e.g., `C:\\Users\\<username>\\...`) within an hour, trigger a high-severity alert. Statistical: For each source user account, aggregate all .pst/.ost file access events (Windows Event ID 4663) over a rolling 1-hour window. Count the number of unique user profiles targeted. Establish a baseline for each source user; for most, this count will be 1. Alert if the count for any user exceeds a threshold, such as >2, or a value that is 3 standard deviations above their personal baseline. Machine Learning: Use an unsupervised learning model, such as DBSCAN, to cluster file access events. Features for each event can include source user, source process, and target user profile. The model will group normal, single-user access into a large, dense cluster. Outlier points or small clusters identified by DBSCAN would represent anomalous access patterns, such as one user accessing many different profiles."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]