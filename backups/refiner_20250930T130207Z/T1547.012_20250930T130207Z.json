[
  {
    "information_requirement": "Is the adversary maintaining persistence using print processors?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.012",
        "name": "Print Processors",
        "evidence": [
          {
            "description": "A file with a known malicious hash or a name exhibiting high entropy is created in the system's print processor directory (e.g., C:\\Windows\\System32\\spool\\prtprocs\\x64\\).",
            "data_sources": [
              "Windows Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on all Windows endpoints and servers, particularly Domain Controllers and critical application servers.",
            "action": "1. (Symbolic) Monitor Sysmon Event ID 11 for file creation events where 'TargetFilename' is within the print processor directory. Extract the file hash from the 'Hashes' field and correlate it against a threat intelligence feed of known malicious file hashes. Alert on any match. 2. (Statistical) For all files created in the print processor directory, calculate the Shannon entropy of the filename. Establish a baseline of typical filename entropy for legitimate print processors. Alert on new filenames with an entropy score exceeding the 95th percentile of the baseline, as this is indicative of randomized names used by adversaries. 3. (Machine Learning) Train a logistic regression classifier using features from file creation events (e.g., file size, filename entropy, writing process name, file extension) from known-good system images and malware sandboxes. Use the model to classify each new file creation in the print processor directory, flagging those with a high probability of being malicious."
          },
          {
            "description": "The spoolsv.exe process loads a DLL that is unsigned or has an untrusted signature, or a file is written to the print processor directory by an anomalous parent process such as a script interpreter or a process running from a temporary user directory.",
            "data_sources": [
              "Windows Event ID 7",
              "Windows Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process and file system logs on all Windows endpoints and servers.",
            "action": "1. (Symbolic) Create a rule to alert when Sysmon Event ID 7 shows spoolsv.exe loading a DLL where the 'Signed' field is 'false' or the 'SignatureStatus' is not 'Valid'. Separately, alert when Sysmon Event ID 11 shows a file write to '...\\prtprocs\\...' where the writing process `Image` is 'cmd.exe', 'powershell.exe', or 'wscript.exe'. 2. (Statistical) Maintain a baseline of legitimate parent processes that write to the print processor directory. Calculate the rarity of each parent process writing to this directory across the enterprise over a 30-day window. Alert on any parent process that falls below a 1% frequency threshold (i.e., is extremely rare). 3. (Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on features from DLL load events by spoolsv.exe, including signature status, file path of the DLL, and DLL name entropy. Identify clusters of outliers that do not group with known-good DLL loads, which often represent legitimate system or driver files, and flag them for investigation."
          },
          {
            "description": "A file creation event in the print processor directory is followed within a 60-second window by a registry modification that points to the new file under HKLM\\SYSTEM\\...\\Print Processors\\... .",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 4657",
              "Windows Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry and file system logs on all Windows endpoints and servers.",
            "action": "1. (Symbolic) Create a correlation rule that triggers when a Sysmon Event ID 11 (File Create) in 'C:\\Windows\\System32\\spool\\prtprocs\\*' is followed on the same host within 1 minute by a Windows Event ID 4657 or Sysmon Event ID 13 (Registry SetValue) to a key path containing '\\Control\\Print\\Environments\\' and '\\Print Processors\\'. The registry value data must contain the filename from the file creation event. 2. (Statistical) For each host, track the time delta between file writes to the print processor directory and subsequent registry writes to the print processor hive. A time delta that is more than 3 standard deviations shorter than the host's baseline average for this activity (if any) could indicate automated adversary scripting. 3. (Machine Learning) Develop a sequence analysis model (e.g., a Hidden Markov Model) trained on the typical sequence of events surrounding legitimate software installation. Feed sequences of file and registry events into the model. Flag any sequence that has a low probability score, indicating a deviation from normal installation behavior, such as the direct 'file write -> registry write' pattern without intermediate installer process events."
          },
          {
            "description": "The spoolsv.exe process initiates an external network connection to an IP address or domain not on an established allowlist of known-good destinations.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies) and endpoint network telemetry.",
            "action": "1. (Symbolic) Monitor Sysmon Event ID 3 and Zeek conn.log for connections where the initiating process is 'spoolsv.exe'. Alert if the destination IP or resolved domain is found on a CTI feed of malicious C2 servers or is not on a pre-defined allowlist of legitimate destinations. 2. (Statistical) For spoolsv.exe network connections, calculate the rarity of the destination IP, destination port, and JA3 hash (from Zeek). Create a risk score by summing the inverse frequencies of these features. Alert when the combined risk score for a connection exceeds a percentile-based threshold (e.g., 98th percentile). 3. (Machine Learning) Use time-series analysis on the volume and frequency of spoolsv.exe network beacons. Train a model (e.g., SARIMA) on historical data to predict expected traffic patterns. Generate an alert for significant deviations from the forecast, such as a new, periodic, low-volume connection pattern emerging after a system reboot, which is characteristic of a C2 channel."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to gain elevated privileges via print processors?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.012",
        "name": "Print Processors",
        "evidence": [
          {
            "description": "The spoolsv.exe process, running with SYSTEM privileges, loads a DLL whose SHA256 or MD5 hash matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on all Windows endpoints and servers.",
            "action": "1. (Symbolic) Continuously monitor Sysmon Event ID 7 (Image Load) where 'Image' is 'spoolsv.exe'. Extract the hash (e.g., SHA256) of the loaded DLL from the 'Hashes' field. Match this hash against a CTI database of known malicious file hashes. An alert on a match indicates high-confidence privileged code execution. 2. (Statistical) Analyze the entropy of all DLLs loaded by spoolsv.exe. Establish a baseline entropy distribution for legitimate DLLs. Flag any loaded DLL whose file entropy is an outlier, for example, exceeding 3 standard deviations from the mean, as this can indicate packed or encrypted malicious code. 3. (Machine Learning) Train a decision tree classifier on features of DLLs loaded by spoolsv.exe, including 'IsSigned', 'SignatureStatus', file entropy, and whether the DLL path is in a standard system directory. Use the model to classify each DLL load event as 'benign' or 'suspicious', indicating potential privilege escalation."
          },
          {
            "description": "A registry key is written to the Print Processors hive (HKLM\\SYSTEM\\...\\Print Processors\\...) by a process or user account not associated with legitimate administrative or installation activities.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry logs on all Windows endpoints and servers.",
            "action": "1. (Symbolic) Create a rule to alert on Windows Event ID 4657 or Sysmon Event ID 13 for writes to any key under '...\\Print\\Environments\\...\\Print Processors\\'. The rule should trigger if the 'SubjectUserName' is not 'SYSTEM' or a member of a whitelisted admin group, AND the 'ProcessName' is not a known installer process (e.g., 'msiexec.exe'). 2. (Statistical) Maintain a list of user accounts and processes that have legitimately modified the Print Processors registry hive in the last 90 days. Calculate the frequency of each user/process pair performing this action. Alert when a modification is performed by a pair with a frequency of zero in the baseline period (i.e., a novel actor). 3. (Machine Learning) Use an unsupervised learning model like Isolation Forest on registry write events targeting the Print Processors hive. Features should include the source process path, user context, and time of day. The model will learn normal modification patterns and flag anomalous events that deviate significantly."
          },
          {
            "description": "The spoolsv.exe process, running as SYSTEM, spawns a child process that is uncharacteristic of normal print spooler behavior, such as a command shell or a network reconnaissance tool.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on all Windows endpoints and servers.",
            "action": "1. (Symbolic) Monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) where the parent process is 'spoolsv.exe'. Alert if the child process name is on a watchlist of suspicious processes, including 'cmd.exe', 'powershell.exe', 'net.exe', 'whoami.exe', or 'rundll32.exe'. 2. (Statistical) Establish a baseline of all legitimate child processes spawned by 'spoolsv.exe' across the enterprise. Calculate the parent-child process relationship frequency. Alert when 'spoolsv.exe' spawns a child process that has never been observed before or has an extremely low frequency (e.g., appears on <0.1% of endpoints). 3. (Machine Learning) Train a classifier to distinguish between legitimate and malicious process command lines. For child processes of spoolsv.exe, extract features from the command line (e.g., length, special character count, presence of encoded commands). Use the trained model to score each new command line, flagging those that are classified as malicious."
          },
          {
            "description": "A file is created in the print processor directory by a non-SYSTEM process, followed by a restart of the Print Spooler service outside of a scheduled system reboot or patching window.",
            "data_sources": [
              "Windows Event ID 11",
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File system, service control manager, and process execution logs on all Windows endpoints and servers.",
            "action": "1. (Symbolic) Create a correlation rule that triggers when a Sysmon Event ID 11 (File Create) in '...\\prtprocs\\...' by a non-SYSTEM user is followed within 5 minutes on the same host by a Windows Event ID 7036 indicating the 'Print Spooler' service has been stopped and then started. 2. (Statistical) Analyze the timing of Print Spooler service restarts (Event ID 7036). Build a historical distribution of restart times per host. Flag any restart that occurs at an anomalous time (e.g., outside of established maintenance windows for servers), especially if preceded by a file write to the print processor directory. 3. (Machine Learning) Use a time-series anomaly detection model on the frequency of Print Spooler service restarts per host. The model will learn the normal cadence of restarts. An alert is generated for a spike in restarts that deviates from the learned pattern, which, when correlated with preceding file or registry modifications, strongly indicates an adversary forcing the service to load their malicious DLL for privilege escalation."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]