[
  {
    "information_requirement": "Is the adversary capturing audio from endpoint devices? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1123",
        "name": "Audio Capture",
        "evidence": [
          {
            "description": "A process creation event is observed where the process image hash or filename matches a known indicator of compromise (IOC) associated with audio capture malware.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows Defender Event ID 1116",
              "Windows Defender Event ID 1117"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Laptops, Conference room systems",
            "action": "1. (Symbolic) Query process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for process image hashes or names that match a curated threat intelligence feed of known audio capture malware (e.g., Attor, Prikormka). Also, search for specific threat names in Windows Defender alerts (Event IDs 1116, 1117). 2. (Statistical) Track the daily count of Defender alerts (Event ID 1116) related to spyware or audio capture tools. Calculate a 90-day moving average and standard deviation. Flag any day where the alert count exceeds three standard deviations above the average. 3. (Machine Learning) Train a logistic regression classifier on process metadata (e.g., file path entropy, signature status, parent process name, command-line length) to predict if a newly executed process is malicious. Use features from known audio malware as the positive class and legitimate audio-using applications (e.g., Teams, Zoom) as the negative class to score new processes for audio capture risk."
          },
          {
            "description": "A command-line execution or script block contains strings, arguments, or API calls specific to initiating audio recording via system utilities or programming interfaces.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer machines, Administrator jump boxes",
            "action": "1. (Symbolic) Using regular expressions, search command-line logs (Windows Event ID 4688, Sysmon Event ID 1) and PowerShell script block logs (Event ID 4104) for keywords related to audio capture tools (`ffmpeg`, `sox`, `soundrecorder`) and API calls (`System.Media.SoundPlayer`, `Win32_SoundDevice`, `mciSendString`). 2. (Statistical) For all PowerShell script blocks (Event ID 4104), calculate the information entropy of the script content. Establish a baseline entropy score for typical administrative and user scripts. Flag scripts with entropy scores in the top 5th percentile, especially if they also contain low-frequency cmdlets or API references, as these may be obfuscated. 3. (Machine Learning) Use a Long Short-Term Memory (LSTM) autoencoder trained on a baseline of normal command-line argument sequences for legitimate processes (e.g., svchost.exe, powershell.exe). A high reconstruction error for a new command line suggests an anomalous, potentially malicious, sequence of arguments used to invoke audio capture."
          },
          {
            "description": "An unsigned, anomalously-located, or rare process acts as a parent to a legitimate audio-capable application, or a legitimate audio application spawns an unexpected child process (e.g., PowerShell, cmd.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Executive laptops, Endpoints with collaboration software installed",
            "action": "1. (Symbolic) Create an allowlist of legitimate parent processes (e.g., `explorer.exe`, `svchost.exe`) for known audio-capable applications (e.g., `Teams.exe`, `Zoom.exe`, `VoiceRecorder.exe`). Alert when a process creation event shows one of these applications being launched by a parent process that is not on the list, is unsigned, or runs from a non-standard directory (`%TEMP%`, `%APPDATA%`). 2. (Statistical) Build a baseline model of normal parent-child process relationships across the enterprise. For each audio-capable application, calculate the frequency of its observed parent processes. Flag any parent-child relationship that falls below a rarity threshold (e.g., observed on fewer than 1% of endpoints), indicating an anomalous launch. 3. (Machine Learning) Model process ancestry as a directed graph. Use a graph-based anomaly detection algorithm (e.g., PageRank on the process-parent graph) to identify processes with unusual centrality or connectivity. A process that launches an audio application but has a very low PageRank score (i.e., is not a common or expected ancestor) could be part of a malicious execution chain."
          },
          {
            "description": "A process creates files with audio-like characteristics (e.g., .wav, .mp3 extensions; periodic creation; sizes consistent with recordings) in user-writable or temporary directories.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User home directories, Shared network drives, Temporary file system locations (e.g., C:\\Users\\<user>\\AppData\\Local\\Temp)",
            "action": "1. (Symbolic) Monitor file creation events (Sysmon Event ID 11) for new files with common audio extensions (.wav, .mp3, .m4a, .ogg) created by processes not on an allowlist of legitimate media applications. Correlate the creating process ID with process creation logs (Sysmon Event ID 1) to check for suspicious process characteristics. 2. (Statistical) For a given process, analyze the timestamps of its file creation events. Calculate the inter-arrival time between file creations and flag processes with a low standard deviation in these times, indicating periodicity. Also, alert if the file sizes are consistently within a range typical for audio snippets (e.g., 100KB - 5MB). 3. (Machine Learning) Apply a time series anomaly detection model (e.g., Seasonal-Hybrid-ESDs) to the volume and frequency of file writes to disk by individual processes. Train the model on baseline activity for user endpoints. An alert is triggered when a process initiates a pattern of file writes that is anomalous compared to its own history and the behavior of similar processes."
          },
          {
            "description": "A process previously associated with suspicious audio-related activity initiates outbound network connections with anomalous characteristics, such as connections to rare domains, large data uploads, or use of non-standard protocols.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log",
              "Sysmon Event ID 3",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, Proxy servers, User workstations",
            "action": "1. (Symbolic) Correlate network connection events (Sysmon Event ID 3, Zeek conn.log) with process data (Sysmon Event ID 1). Alert if a process previously flagged for suspicious audio-related behavior communicates with a destination IP or domain on a threat intelligence blocklist. Check Zeek dns.log for queries to known C2 domains. 2. (Statistical) For each process, establish a baseline of its network behavior, including average outbound data volume (`orig_bytes` in Zeek conn.log) and destination port frequency. Alert when a process's outbound data transfer in a single session exceeds the 99th percentile of its historical baseline. Calculate the JA3 hash for TLS connections and flag hashes that are rare across the enterprise. 3. (Machine Learning) Use an unsupervised learning model like Isolation Forest on network connection features (e.g., duration, `orig_bytes`, `resp_bytes`, destination port, protocol) from Zeek conn.log. Train the model on all network traffic to identify anomalous connections. Prioritize anomalies originating from processes that have also triggered low-level audio capture indicators (e.g., suspicious file writes)."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]