[
  {
    "information_requirement": "Has the adversary obtained valid credentials through password cracking?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1110.002",
        "name": "Password Cracking",
        "evidence": [
          {
            "description": "A file transfer or process execution event involving a file whose hash or name matches a known password cracking utility.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, Development servers, Network egress points",
            "action": "Implement a multi-faceted detection strategy for password cracking tools. Symbolic: Maintain and regularly update a watchlist of file hashes and filenames for password cracking tools (e.g., Hashcat, John the Ripper, Cain & Abel). Create a SIEM rule to generate a high-priority alert on any process creation (Windows Event ID 4688) or file transfer over the network (Zeek files.log) that matches this list. Statistical: Analyze command-line arguments from process creation events (Windows Event ID 4688). Calculate the Shannon entropy of argument strings and flag executions where entropy exceeds a baseline threshold (e.g., > 95th percentile) for common processes like powershell.exe, which may indicate encoded payloads or hash lists. Machine Learning: Train a classification model (e.g., Random Forest) on features from process execution events (e.g., parent process, user context, command-line entropy, argument patterns) to distinguish legitimate administrative activity from the execution of suspicious tools. Use the model to score new process events for the likelihood of being a password cracking attempt."
          },
          {
            "description": "Command-line arguments captured in process creation logs that contain patterns specific to credential dumping tools used to acquire hashes for offline cracking.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, Privileged Access Workstations (PAWs)",
            "action": "Proactively hunt for credential dumping activity. Symbolic: Deploy and monitor SIEM rules that use regular expressions to detect command-line patterns indicative of credential dumping (e.g., `sekurlsa::logonpasswords`, `lsadump::sam`, `ntdsutil.exe ac i ntds`, `vssadmin create shadow`). Statistical: Establish a baseline of normal `ntdsutil.exe` usage. Monitor for deviations, specifically the use of the `ifm` (Install From Media) subcommand, which is rare in typical operations. Calculate the frequency of `ifm` usage per host and alert if the daily count for any host exceeds a low threshold (e.g., > 0), especially on non-Domain Controller systems. Machine Learning: Use a time-series anomaly detection model on the execution frequency of `ntdsutil.exe` and `vssadmin.exe` per host. A sudden, anomalous spike in the execution of these utilities, particularly outside of standard backup windows or on non-standard servers, can indicate precursor activity for acquiring the NTDS.dit file for offline cracking."
          },
          {
            "description": "A non-standard process requests read access to the LSASS process memory or to the SAM or NTDS.dit files, indicating an attempt to harvest credential material.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4663",
              "Sysmon Event ID 10"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Authentication Servers, Endpoint workstations",
            "action": "Monitor for direct credential access attempts. Symbolic: Create a high-priority alert for any process not on an approved whitelist (e.g., `lsass.exe`, `wininit.exe`, approved AV/EDR solutions) that requests access to the LSASS process memory (Sysmon Event ID 10) with access rights like `0x1010` or `0x1410`. Also, alert on any non-system process accessing the SAM file (`C:\\Windows\\System32\\config\\SAM`) or NTDS.dit file (`C:\\Windows\\NTDS\\ntds.dit`) using Windows Event ID 4663. Statistical: Profile normal process access to LSASS. Build a frequency table of `(SourceImage, TargetImage, CallTrace)` tuples from Sysmon Event ID 10. Alert on any access from a `SourceImage` that falls below a rarity threshold (e.g., seen on < 1% of endpoints or < 5 times in the last 30 days). Machine Learning: Develop a supervised learning model (e.g., Logistic Regression) to classify LSASS access events as benign or malicious. Features can include the source process name, parent process name, user context, access mask requested, and the statistical rarity of the process call stack. This model can help reduce false positives from legitimate but uncommon administrative tools."
          },
          {
            "description": "A successful authentication event (e.g., logon type 2, 3, or 10) for a user account that exhibits multiple anomalous properties simultaneously, such as a novel source IP/geolocation and the absence of prior failed login attempts from that source.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Gateways, External-facing services (OWA, RDP gateways), Authentication servers",
            "action": "Detect the use of successfully cracked credentials. Symbolic: Alert on any successful interactive or remote interactive login (Windows Event ID 4624 with Logon Type 2, 3, or 10) for a privileged account (e.g., member of Domain Admins) that originates from an IP address on a threat intelligence watchlist of known malicious IPs. Statistical: For each user, maintain a historical baseline of source IP addresses, geolocations (derived from Zeek conn.log), and typical login times. Calculate a risk score for each new successful login (Event ID 4624). Increment the score for factors like: new source country, login outside of business hours (e.g., > 2 standard deviations from mean login hour), or new ISP/ASN. If there are zero preceding failed logins (Event ID 4625) from that IP for that user within the last 24 hours, multiply the risk score. Alert on logins exceeding a defined risk score threshold. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on user login data, with features like source IP geolocation, time of day, and day of week. Logins that are classified as noise or outliers by the algorithm represent significant deviations from established user or peer group patterns and should be flagged for review as a potential 'impossible travel' or other credential abuse scenario."
          },
          {
            "description": "A correlated sequence of events, beginning with the creation or anomalous access of a credential store backup (e.g., ntds.dit copy), followed by a large data transfer from the source host, and culminating in a successful login from a new external source using an account from that domain.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Windows Event ID 4663",
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, File Servers, Network egress points",
            "action": "Detect the full chain of offline password cracking from theft to use. Symbolic: Create a multi-stage SIEM correlation rule. Stage 1: Trigger on `ntdsutil` or `vssadmin` command-line usage for backups (Event ID 4688). Stage 2: Within 1 hour, look for a large outbound data transfer (e.g., >50MB, a typical size for NTDS.dit) from the same host IP (Zeek conn.log `orig_bytes`). Stage 3: Within the next 72 hours, look for a successful login (Event ID 4624) for a domain account from an external IP not seen in the last 30 days. An alert fires if all three stages are met. Statistical: Monitor the volume of outbound data per host using a time-series analysis. Following a trigger event (like `ntdsutil ifm`), check if the outbound data volume from that host in the next hour is a statistical outlier (e.g., > 99th percentile of that host's hourly outbound traffic). Correlate this statistical anomaly with the subsequent anomalous login event. Machine Learning: Use a sequence analysis model (e.g., a Hidden Markov Model) trained on event logs to learn normal sequences of administrative activity. The specific sequence of `[Suspicious Backup Command] -> [Anomalous Data Egress] -> [Anomalous Remote Login]` would be identified by the model as a low-probability, high-risk sequence, triggering a single, high-confidence alert."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]