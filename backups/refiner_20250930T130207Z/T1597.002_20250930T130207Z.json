[
  {
    "information_requirement": "Has an adversary leveraged purchased technical data (credentials, infrastructure details) to conduct targeted reconnaissance or initial access against the enterprise? (PIR)",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1597.002",
        "name": "Purchase Technical Data",
        "evidence": [
          {
            "description": "A successful or failed authentication attempt (Windows Event ID 4624/4625) matches a username or credential hash from a known data breach corpus or dark web intelligence feed.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Threat Intelligence Feed (Breached Credentials)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (Domain Controllers, ADFS), VPN Concentrators, Cloud Identity Providers (e.g., Azure AD)",
            "action": "1. Symbolic (IOC Match): Continuously ingest and update a threat intelligence database of breached credentials associated with the organization's domains. Create a SIEM rule that triggers an alert when a username from a failed (Windows Event ID 4625) or successful (Windows Event ID 4624) login event exactly matches a username in the breached credential database. 2. Statistical (Frequency Analysis): For all accounts identified by the IOC match, analyze their login history over the last 90 days. Calculate the 95th percentile for daily failed login counts per user. Trigger a higher-severity alert if a matched account's failed login count on a given day exceeds this statistical threshold, indicating a potential brute-force or password spraying attempt. 3. Machine Learning (Classification): Train a logistic regression model on historical login data, using features like time of day, source IP geolocation, source ASN, and whether the account is on a breach list. Use the model to classify each new successful login as 'benign' or 'suspicious'. A successful login by a breached account that the model classifies as 'suspicious' with high confidence (>0.8) should be flagged for immediate investigation."
          },
          {
            "description": "A statistically significant increase in network scanning (Zeek conn.log) or authentication failures (Windows Event ID 4625) from external sources, targeting specific internal assets, within 72 hours of receiving a threat intelligence report about the sale of the organization's technical data.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4625",
              "Threat Intelligence Report"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateways, Demilitarized Zone (DMZ) Servers, Threat Intelligence Platforms",
            "action": "1. Symbolic (Correlation Rule): Upon ingestion of a threat intelligence report detailing a data sale, create a time-bound SIEM correlation rule. The rule should look for any connection attempts (Zeek conn.log) or authentication failures (Windows Event ID 4625) originating from IOCs (IPs, domains) mentioned in the report within a 7-day window. 2. Statistical (Change Point Detection): Establish a baseline of daily connection attempts to non-public services and a baseline of failed login counts. Apply a change point detection algorithm (e.g., CUSUM) to these time series. An alert is generated if a statistically significant upward change point is detected within 72 hours of receiving a high-confidence threat intelligence report. 3. Machine Learning (Time Series Forecasting): Use a SARIMA forecasting model to predict the expected volume of scanning traffic and authentication failures. If the actual observed volume exceeds the model's upper 99% confidence interval for a sustained period (e.g., >1 hour) after an intelligence trigger, flag this as a significant anomaly indicative of targeted reconnaissance."
          },
          {
            "description": "An external source IP establishes connections to multiple distinct, non-public internal ports where the destination port entropy for that source is anomalously low, indicating targeted probing rather than random scanning.",
            "data_sources": [
              "Zeek conn.log",
              "Asset Inventory Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Taps at Internet Egress/Ingress Points, Firewall Log Aggregators",
            "action": "1. Symbolic (List-Based): Maintain a list of known public-facing services (e.g., TCP/80, TCP/443 on web servers). Create a rule to alert on any successful external connection (Zeek conn.log conn_state = 'SF') to an internal IP address on a port not on this public services list. 2. Statistical (Entropy): For each external source IP, calculate the Shannon entropy of the destination ports it attempts to connect to over a 5-minute window. Establish a baseline entropy distribution for typical internet background noise. Alert when a source IP exhibits an entropy score below the 5th percentile, suggesting it is targeting specific, known ports. 3. Machine Learning (Clustering): Use a DBSCAN clustering algorithm on features from Zeek conn.log (source IP, destination IP, destination port, protocol). Isolate and investigate small, dense clusters that are distinct from the large 'background noise' cluster, as they represent groups of similar, anomalous connections that could indicate a coordinated scan."
          },
          {
            "description": "A single user account experiences a successful login (Windows Event ID 4624) from a geographic location that is physically impossible to have traveled to since its last successful login, based on IP geolocation and time difference.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "IP Geolocation Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers (Domain Controllers), VPN Concentrators, Network Flow Collectors",
            "action": "1. Symbolic (Rule-Based): For each successful user login (Event ID 4624), enrich the source IP with geolocation data from Zeek conn.log. If the source country is on a denylist of high-risk countries, generate a low-severity alert. 2. Statistical (Impossible Travel Calculation): For each new successful login, retrieve the timestamp and location of the previous successful login for that same user. Calculate the required travel speed (distance/time). If this speed exceeds a statistically improbable threshold (e.g., >600 mph or 965 kph), generate a high-severity alert for 'impossible travel'. 3. Machine Learning (User Behavior Anomaly Detection): Build a profile for each user that includes a set of 'normal' source countries, ASNs, and login time-of-day windows. Use an Isolation Forest model trained on this historical 'normal' profile. If a new login event is flagged as an outlier by the model, escalate it for investigation."
          },
          {
            "description": "Network traffic (Zeek http.log) contains URI patterns or payloads matching exploit signatures for a specific, non-public web application, originating from an external source IP with no prior history of interacting with that application.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Vulnerability Scan Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Application Servers (DMZ and Internal), Intrusion Detection System (IDS) Sensors, Network Taps",
            "action": "1. Symbolic (Signature Match): Correlate vulnerability scan data with asset inventory to identify unpatched, non-public services. Create a specific SIEM rule that looks for known exploit patterns (e.g., specific URIs in Zeek http.log) targeting these exact services from external IPs. 2. Statistical (URI Rarity): For each non-public web application, build a frequency distribution of all requested URIs from the last 90 days of Zeek http.log data. Alert on any request for a URI that falls in the bottom 1st percentile of rarity, as this may indicate enumeration of a hidden endpoint. 3. Machine Learning (Sequence Analysis): Model user sessions on web applications as sequences of URI requests. Use an LSTM autoencoder to learn normal user navigation patterns. Flag any session from an external IP that has a high reconstruction error, indicating its navigation sequence is anomalous and does not follow typical user flows."
          },
          {
            "description": "An authenticated session in a cloud environment (e.g., O365, AWS) from a previously unseen IP/ASN combination is followed by a statistically unusual volume of data egress or access to sensitive data repositories.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log",
              "Cloud Provider Audit Logs (e.g., Azure AD Sign-in logs, AWS CloudTrail)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Log Aggregator (SIEM), Cloud Identity Provider, Network Flow Collectors monitoring traffic to cloud provider IP ranges",
            "action": "1. Symbolic (Correlation Rule): Create a SIEM rule that correlates a successful cloud login from a new country (from Cloud Provider Audit Logs) with subsequent DNS requests (Zeek dns.log) for known data exfiltration sites from the same internal source IP within 1 hour. 2. Statistical (Data Egress Anomaly): For each user, establish a baseline of daily data egress volume from key cloud services. Calculate a moving average and standard deviation. Generate an alert if a user's daily egress volume exceeds 4 standard deviations above the 30-day moving average. 3. Machine Learning (Peer Group Analysis): Use K-Means clustering to group users into peer groups based on their roles and typical cloud application usage. If a user's activity deviates significantly from the centroid of their assigned peer group (e.g., a Finance user starts accessing developer tools in AWS), flag the session as anomalous."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]