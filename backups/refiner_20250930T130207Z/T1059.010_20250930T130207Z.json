[
  {
    "information_requirement": "Has the adversary executed commands using AutoHotKey or AutoIT scripts?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.010",
        "name": "AutoHotKey & AutoIT",
        "evidence": [
          {
            "description": "Execution of AutoHotKey/AutoIt scripts or compiled executables matching known malicious file hashes or making network connections to known C2 infrastructure.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "From Windows Event ID 4688 process creation logs, extract file hashes for any executed process named 'AutoHotkey.exe', 'AutoIt3.exe', or any unidentified '.exe' files. Compare these hashes against a threat intelligence database of known malicious files. Separately, from Zeek conn.log, identify network connections originating from hosts running these processes and inner join the destination IP addresses or domains with a CTI feed of known C2 infrastructure. Investigate and alert on any confirmed match."
          },
          {
            "description": "Execution of AutoHotKey/AutoIt interpreters from non-standard file paths or executing scripts located in temporary or user-writable directories.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Event ID 4688) for `AutoHotkey.exe` or `AutoIt3.exe`. Establish a baseline of legitimate installation paths (e.g., `C:\\Program Files\\AutoHotkey`). Alert on executions where the interpreter's path is outside this baseline (e.g., `C:\\Users\\Public\\`, `%TEMP%`). Additionally, analyze the script file path provided as an argument and flag executions of scripts from high-risk directories such as `%APPDATA%`, `%TEMP%`, or world-writable network shares. Use frequency analysis on script file parent directories to identify rare outliers."
          },
          {
            "description": "Execution of an unsigned compiled executable with PE characteristics common to AutoIt/AutoHotKey wrappers, such as specific section names or import patterns.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek pe.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for execution of unsigned executables via Windows Event ID 4688. If the file traversed the network, analyze its characteristics from Zeek pe.log; otherwise, use endpoint agent data. Specifically look for Portable Executable (PE) section names like 'AU3!', 'AutoIT', or indications of common packers like 'UPX'. Use correlation analysis to link the presence of these patterns with other suspicious behaviors, such as the executable being unsigned or running from a temporary location, to increase confidence."
          },
          {
            "description": "An AutoHotKey/AutoIt process spawning suspicious child processes, particularly command shells, PowerShell, or LOLBAS binaries, to execute obfuscated or malicious commands.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Use Windows Event ID 4688 data to construct process ancestry trees. Identify instances where a parent process (`AutoHotkey.exe`, `AutoIt3.exe`, or a suspected compiled script identified via other detections) spawns a child process such as `cmd.exe`, `powershell.exe`, `rundll32.exe`, `wscript.exe`, or `certutil.exe`. Analyze the child process's command line for indicators of malicious activity like high-entropy strings (indicating obfuscation), base64 encoded payloads, or keywords associated with file download or remote execution (`-enc`, `downloadstring`, `IEX`). Use correlation analysis to link the parent script execution to the child command execution."
          },
          {
            "description": "Anomalous network activity from an AutoHotKey/AutoIt process, such as connections to rare external IP addresses, use of non-standard ports, or data transfer patterns indicative of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process execution of `AutoHotkey.exe`/`AutoIt3.exe` (from endpoint logs) with outbound network connections from the same host (Zeek conn.log). Establish a baseline of normal network destinations for any legitimate scripts in the environment. Use descriptive statistics and percentile analysis to identify connections to geographically unusual or low-frequency IP addresses. Apply time series analysis to connection logs to detect periodic, fixed-interval connections (beaconing behavior). Flag HTTP/S traffic over non-standard ports associated with these processes."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]