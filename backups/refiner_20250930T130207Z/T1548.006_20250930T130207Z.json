[
  {
    "information_requirement": "Has the adversary escalated privileges by manipulating macOS TCC?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1548.006",
        "name": "TCC Manipulation",
        "evidence": [
          {
            "description": "Direct modification of the TCC.db SQLite database by a known malicious tool or unauthorized process.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) file events",
              "Process execution events",
              "File hashes"
            ],
            "data_platforms": [
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for any write or modification events on the TCC database file located at `/Library/Application Support/com.apple.TCC/TCC.db`. Correlate the writing process with a list of known-good system processes. Investigate any unauthorized process, especially if its hash matches a known malicious tool, that modifies this file."
          },
          {
            "description": "Execution of command-line tools, such as `sqlite3`, to programmatically alter TCC.db permissions.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process events"
            ],
            "data_platforms": [
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process execution events for the `sqlite3` binary where the command-line arguments include the path `/Library/Application Support/com.apple.TCC/TCC.db`. This specific pattern is a strong indicator of direct manipulation. Analyze the parent process of `sqlite3` to add context; execution by a user-launched script or unexpected daemon is highly suspicious."
          },
          {
            "description": "A trusted application with existing TCC permissions (e.g., Terminal, VSCode) spawning an unusual child process that subsequently accesses TCC-protected data or establishes a network connection.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process and file events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal child processes for applications commonly granted broad TCC permissions (e.g., Terminal.app, iTerm.app). Monitor for anomalous parent-child relationships, such as Terminal spawning a downloaded script which then accesses `~/Library/Messages` or `~/Library/Safari`. Correlate process execution data with Zeek conn.log to detect when these unexpected child processes initiate outbound network connections. Use frequency analysis on parent-child pairings to identify rare occurrences."
          },
          {
            "description": "A newly installed or unsigned application rapidly acquiring TCC permissions without a corresponding user approval prompt, followed by suspicious file or network activity.",
            "data_sources": [
              "macOS Unified Log",
              "macOS Endpoint Security Framework (ESF) events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate TCC.db modification events (indicating a permission change) with application installation and execution logs. Use time series analysis to detect when a permission grant occurs within seconds of an application's first run, especially for unsigned applications. Further correlate this event with subsequent high-volume file access to protected locations (`~/Documents`, `~/Desktop`) or new, unexpected network flows observed in Zeek conn.log. The absence of a corresponding approval event in the macOS Unified Log is a key indicator of a behavioral anomaly."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by manipulating macOS TCC?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1548.006",
        "name": "TCC Manipulation",
        "evidence": [
          {
            "description": "Network connections to known malicious C2 infrastructure from a process that has inherited sensitive TCC permissions (e.g., screen capture, full disk access).",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Identify processes with sensitive TCC permissions (e.g., `kTCCServiceScreenCapture`, `kTCCServiceSystemPolicyAllFiles`). Correlate process IDs and associated network activity from these processes with Zeek conn.log data. Inner join the destination IP addresses and domains from these connections against a high-confidence threat intelligence feed of known C2 servers. Alert on any matches."
          },
          {
            "description": "A process with screen capture or accessibility permissions spawning a command-line file transfer utility (e.g., `curl`, `wget`, `ncat`) to exfiltrate data.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a detection pattern for parent-child process relationships where a parent process known to have `kTCCServiceScreenCapture` or `kTCCServiceAccessibility` permissions (e.g., Zoom, Slack, ScreenCapture.app) spawns a child process of `curl`, `wget`, `ncat`, or other network utilities. Correlate with Zeek conn.log to confirm outbound data transfer. This pattern indicates an adversary is abusing a trusted application's permissions to exfiltrate data captured via its approved access."
          },
          {
            "description": "A process with microphone or camera TCC permissions (`kTCCServiceMicrophone`, `kTCCServiceCamera`) generating sustained, low-bandwidth, periodic outbound network traffic inconsistent with the application's normal function.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Baseline the normal network behavior (e.g., data volume, destination reputation, protocol, connection frequency) of applications with camera/mic access (e.g., Zoom, FaceTime, Teams). Use time series analysis on Zeek conn.log data to detect significant behavioral deviations, such as an application that normally sends megabytes of video data suddenly sending kilobytes in a steady, periodic stream (beaconing). Such behavior may indicate exfiltration of captured audio or keystrokes rather than legitimate conference traffic. Use correlation analysis to link these network patterns to the specific host process."
          },
          {
            "description": "An application gaining Full Disk Access and immediately performing a recursive file enumeration of sensitive user directories, followed by data staging and exfiltration.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) file and process events",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Define a behavioral sequence: 1. A process gains `kTCCServiceSystemPolicyAllFiles` permission. 2. Within minutes, the same process initiates high-volume file read operations across sensitive directories (`~/Documents`, `~/Library/Messages`, `~/Library/Mail`). 3. This is followed by write activity to a temporary staging directory (e.g., `/tmp/`, `~/.Trash/`). 4. Finally, a significant outbound data transfer is observed from the host in Zeek conn.log or Zeek files.log. Correlating this entire sequence of events provides a high-confidence indicator of data theft enabled by TCC bypass."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]