[
  {
    "information_requirement": "Is the adversary establishing persistence using modified Pluggable Authentication Modules?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1556.003",
        "name": "Pluggable Authentication Modules",
        "evidence": [
          {
            "description": "A successful Windows authentication (Logon Type 3, 10) occurs using a username/password combination known to be a hardcoded backdoor credential in a specific Pluggable Authentication Module (PAM) malware variant.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, VPN Concentrators authenticating via RADIUS, All Windows Endpoints",
            "action": "Create and maintain a watchlist of usernames and password patterns associated with known PAM backdoor malware. 1. (Symbolic) Implement a SIEM rule to generate a high-severity alert upon any successful Windows authentication (Event ID 4624) using a username from this watchlist. 2. (Statistical) For all successful logins, calculate the baseline frequency of each username. Flag any successful login where the username's frequency is below the 1st percentile and the source IP is rare (has a low historical login count for that user). 3. (ML) Develop a time-series anomaly detection model for the volume of login failures (Event ID 4625) followed by a success (Event ID 4624) from a single source IP; a sharp, anomalous spike can indicate credential guessing or testing of a backdoor."
          },
          {
            "description": "A series of successful Windows authentications (Event ID 4624) originates from a known Linux host IP address at highly regular, machine-like intervals (e.g., every 60 minutes +/- 5 seconds), indicative of an automated persistence mechanism using credentials obtained via PAM.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Authentication servers (NPS/RADIUS), Internet gateway, Internal network sensors",
            "action": "1. (Symbolic) Define a rule to flag any successful interactive (Logon Type 2, 10) Windows login (Event ID 4624) that originates from an IP address identified as a Linux server and bypasses an expected MFA control point. 2. (Statistical) For each source IP identified as a Linux host, analyze the inter-arrival time of successful Windows authentications (Event ID 4624). A very low standard deviation of these time deltas (e.g., below 5 seconds) for a series of 5+ logins suggests automated, beacon-like activity. Use entropy on the minute-of-the-hour for logins from a source; low entropy indicates regularity. 3. (ML) Use a time-series forecasting model (e.g., ARIMA) to predict the expected volume and timing of logins from Linux subnets to Windows hosts. An observed pattern of highly periodic spikes that consistently deviates from the forecasted model indicates a potential automated persistence mechanism."
          },
          {
            "description": "A user account, primarily associated with Linux systems, exhibits a sustained pattern of successful Windows logins (Event ID 4624) with multiple anomalous characteristics simultaneously, such as a rare source country, unusual logon type, and off-hours timing, suggesting credential compromise via PAM.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Windows Servers, VPN Concentrators, DNS Servers, Internet Gateway",
            "action": "1. (Symbolic) For accounts tagged as 'Linux-primary users' in an identity management system, create a rule to alert on any successful Windows login (Event ID 4624) that occurs outside of standard business hours (e.g., 10 PM - 5 AM local time) and originates from an IP geolocated to a country not on an approved list. 2. (Statistical) For each user, build a baseline profile of their Windows login activity including common source ASNs, logon types, and hours. For each new login, calculate a risk score by summing deviation points (e.g., +1 for rare ASN, +1 for rare logon type). Flag logins exceeding a percentile-based threshold (e.g., 95th percentile) of this risk score. 3. (ML) Employ a clustering algorithm (e.g., DBSCAN) on user login data, using features like geolocation, time of day, and target system. Logins that do not belong to a user's established clusters ('noise' points) represent significant deviations from normal behavior and are candidates for investigation."
          },
          {
            "description": "A single non-service user account has two successful Windows authentications (Event ID 4624) from different geolocations where the time elapsed between them is less than the minimum required travel time, indicating simultaneous credential use.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, VPN Concentrators, Cloud Authentication Services, Internet Gateway",
            "action": "1. (Symbolic) For every successful login (Event ID 4624), retrieve the source IP and its geolocation. Cache the user, time, and location. For the next login by the same user, calculate the distance and time difference. If (distance / time_diff) > 1000 km/h, generate an 'Impossible Travel' alert. 2. (Statistical) Aggregate all impossible travel alerts over 30 days. Identify users who trigger these alerts with a frequency in the top 5th percentile, as this indicates persistent, simultaneous abuse rather than a one-off anomaly. 3. (ML) Train a classifier to distinguish between benign impossible travel events (e.g., rapid VPN switching) and malicious ones using features such as the consistency of the source ISP/ASN for each location and subsequent post-login behavior."
          },
          {
            "description": "Immediately following a high-risk Windows authentication (as identified by other evidence), a low-prevalence process is executed (Windows Event ID 4688) or a network connection is made to a rare external destination (Zeek conn.log), indicating the persistent access is being actively used.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Windows Servers, Domain Controllers, User Endpoints",
            "action": "1. (Symbolic) Create a correlation rule that triggers when a user account generates an 'Impossible Travel' or 'Anomalous Login' alert and, within 5 minutes on the target host, executes a process matching a watchlist of suspicious utilities (e.g., `whoami.exe`, `nltest.exe`). 2. (Statistical) For each user-host pair, create a baseline of normally executed processes. After a high-risk login, flag any subsequent process (Event ID 4688) that is rare for that user on that host (e.g., in the bottom 5th percentile of execution frequency). 3. (ML) Use a sequence analysis model (e.g., Hidden Markov Model) to learn common sequences of actions following a login. Flag login sessions where the post-authentication process and network activity sequence has a very low probability according to the trained model."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by tampering with authentication modules?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1556.003",
        "name": "Pluggable Authentication Modules",
        "evidence": [
          {
            "description": "A network connection is observed in Zeek conn.log from an internal Linux host to an external IP address or domain known to be a C2 server for malware that specifically modifies PAM to bypass local logging or security controls.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Core network switches, DNS resolvers",
            "action": "1. (Symbolic) Continuously ingest threat intelligence feeds for C2 indicators associated with PAM-modifying malware. Create a SIEM rule to alert on any connection in Zeek conn.log or DNS query in Zeek dns.log from an internal Linux host IP to a matching indicator. 2. (Statistical) Profile the external connectivity of Linux servers. Calculate the rarity of each destination IP/domain. Flag connections to destinations that fall in the bottom 1st percentile of connection frequency across the Linux server population. 3. (ML) Train a classifier on Zeek connection metadata (e.g., duration, bytes sent, protocol) to identify C2-like traffic. Use features like high-entropy DNS queries and long-lived connections with periodic 'heartbeats' to score and flag potential C2 channels."
          },
          {
            "description": "Successful Windows authentications (Event ID 4624) originating from a RADIUS client (e.g., a Linux-based VPN server) consistently lack a corresponding successful MFA log event for the same user within a 3-minute window, indicating a potential MFA bypass facilitated by a compromised PAM module on the RADIUS client.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Policy Servers (NPS), Domain Controllers, RADIUS servers, MFA platforms, VPN Concentrators",
            "action": "1. (Symbolic) For every successful RADIUS-based Windows login (Event ID 4624), require a matching successful MFA log for the same username within the last 3 minutes. Create a rule to alert if no such MFA log is found. 2. (Statistical) Calculate the ratio of successful MFA logs to successful RADIUS logins per user and per RADIUS client (Linux VPN server). A user or client with a ratio significantly deviating from the mean (e.g., >2 standard deviations below) indicates a systematic bypass. 3. (ML) Use a clustering model to group users based on their MFA-to-login ratios and other authentication features. Users who fall into a 'low-ratio' or 'no-MFA' cluster are prime candidates for investigation."
          },
          {
            "description": "A successful Windows authentication (Event ID 4624) is part of a network session (Zeek conn.log) that violates established network segmentation policies (e.g., a login to a finance server from a developer-subnet Linux host) without a corresponding firewall block log.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network sensors, Domain Controllers, Critical Server VLANs",
            "action": "1. (Symbolic) Codify network segmentation rules into a lookup table (e.g., 'dev_subnet' cannot access 'prod_db_subnet'). Join Zeek conn.log data with Windows login data (Event ID 4624). Alert on any successful login session that violates these codified rules. 2. (Statistical) Model the network graph of normal authentications, showing which subnets typically authenticate to which other subnets. Calculate the frequency of each source-destination subnet pair. Flag any successful authentication path that has a very low frequency (e.g., bottom 1st percentile). 3. (ML) Use graph analytics (e.g., community detection) on the authentication network graph. Nodes (subnets/hosts) with new, high-centrality edges that violate policy could represent a compromised asset being used as a pivot point."
          },
          {
            "description": "A sequence of failed Windows logins (Event ID 4625) with specific, non-password-related error codes is immediately followed by a successful login (Event ID 4624) from the same source IP, suggesting an attacker is probing and then successfully exploiting a defense evasion mechanism.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS Servers, Edge Authentication Gateways",
            "action": "1. (Symbolic) Create a rule to detect a sequence from a single source IP within 1 minute: N+ failed logins (Event ID 4625) with status codes other than 'bad password', followed by one successful login (Event ID 4624). 2. (Statistical) For each source IP, calculate the ratio of failed-to-successful logins over a 5-minute rolling window. A sudden spike in this ratio followed by a drop to zero is anomalous. Flag IPs whose ratio pattern exceeds the 98th percentile of historical volatility. 3. (ML) Use a sequence-matching algorithm to find login patterns that match known attack signatures (e.g., probing for disabled accounts then succeeding with a valid one)."
          },
          {
            "description": "A user account successfully authenticates to a Windows server using a logon type (e.g., Logon Type 4 - Batch) that the user has never used before on that server, potentially indicating a compromised credential from a Linux system is being used to evade defenses that monitor only interactive logons.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, Tier 0 assets",
            "action": "1. (Symbolic) Create a watchlist of sensitive accounts (e.g., Domain Admins) and alert on any successful login (Event ID 4624) by these accounts using non-approved logon types (e.g., Logon Type 5 - Service). 2. (Statistical) For each user-server pair, create a historical baseline of used logon types. For each new login, if the logon type has never been seen before for that pair, flag it as a 'first occurrence' anomaly. 3. (ML) Train a peer group analysis model where users are grouped by role. Flag a user whose logon type behavior deviates significantly from their peer group (e.g., a developer suddenly using a logon type only seen with admins)."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to access credentials via compromised authentication modules?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1556.003",
        "name": "Pluggable Authentication Modules",
        "evidence": [
          {
            "description": "A network connection is observed in Zeek conn.log from a multi-user Linux host (e.g., jump box, shared development server) to an external IP address or domain known to be an exfiltration destination for credential harvesting malware.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Core network sensors monitoring Linux server subnets",
            "action": "1. (Symbolic) Ingest and apply threat intelligence feeds specific to credential theft malware exfiltration points. Generate a high-severity alert for any DNS query (Zeek dns.log) or network connection (Zeek conn.log) from a Linux server to a matching indicator. 2. (Statistical) For each Linux server, baseline the daily volume of data uploaded to external destinations. Alert if the daily upload volume for a server exceeds 4 standard deviations above its 30-day moving average. 3. (ML) Use a domain generation algorithm (DGA) detection model on outbound DNS queries from Linux hosts. A positive match is a strong indicator of compromise by a credential harvester."
          },
          {
            "description": "Outbound DNS queries from a Linux host are observed in Zeek dns.log containing unusually long subdomains or TXT record queries with high entropy, characteristic of DNS tunneling used to exfiltrate credentials harvested by a modified PAM module.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS Resolvers, Internet Gateway, Web Proxies",
            "action": "1. (Symbolic) Create a rule to detect DNS queries for TXT records where the query length exceeds 200 characters, originating from a Linux server. 2. (Statistical) Calculate the Shannon entropy of all DNS query labels (subdomains) originating from Linux hosts. Flag any query whose entropy is in the 99th percentile, as this suggests encoded, non-human-readable data. 3. (ML) Train a classifier to distinguish between legitimate and tunneled DNS traffic using features like query length, record type, query frequency, and label entropy to provide a probability score for exfiltration."
          },
          {
            "description": "A significant spike in outbound data transfer volume (Zeek conn.log) from a Linux host is observed within minutes of a high-volume login event on that same host (e.g., many users logging in at the start of a workday), suggesting batch exfiltration of credentials harvested by PAM.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network sensors monitoring Linux server subnets, Internet Gateway",
            "action": "1. (Symbolic) Define a 'high-login' period (e.g., 8-9 AM Mon-Fri). Create a rule to alert if a multi-user Linux server initiates an outbound connection to a new, never-before-seen destination IP during this period. 2. (Statistical) Correlate two time series: inbound connection count to port 22 (SSH) on Linux hosts (as a proxy for login activity), and outbound data volume from the same hosts. A high cross-correlation score with a short time lag is suspicious. 3. (ML) Use a Granger causality test to determine if the time series of 'inbound SSH connections' is statistically useful in forecasting the 'outbound data volume' time series. A positive result suggests a relationship where logins may be 'causing' data exfiltration."
          },
          {
            "description": "A single source IP address generates a high volume of failed Windows logins (Event ID 4625) across many different user accounts, followed by successful logins (Event ID 4624) for a subset of those accounts, consistent with a password spraying attack using credentials stolen from a central Linux system via PAM.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS servers, Internet Gateway",
            "action": "1. (Symbolic) Create a rule to alert when a single source IP generates >100 failed login events (Event ID 4625) across >20 unique accounts, followed by at least one successful login (Event ID 4624) within a 1-hour window. 2. (Statistical) Over a 10-minute window, calculate the ratio of unique accounts attempted to the number of successful logins from a single source IP. A very high ratio (e.g., > 50:1) is indicative of password spraying. Flag sources with a ratio >3 standard deviations above the mean. 3. (ML) Use a clustering algorithm (e.g., K-Means) to group source IPs based on their login behavior, using features like total attempts, failure/success ratio, and number of unique accounts targeted. IPs that fall into a 'high-volume, low-success' cluster are likely conducting password spray attacks."
          },
          {
            "description": "On a Windows host, a process associated with credential dumping (e.g., lsass.exe being accessed by a non-system process) is observed via Windows Event ID 4688, running under the context of a user account whose credentials were confirmed to be stolen via a PAM compromise.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, High-value user endpoints",
            "action": "1. (Symbolic) Create a correlation rule that alerts if an account that triggered a 'Password Spray Success' or 'Impossible Travel' alert is then used to execute a process with a command line matching signatures for Mimikatz or `procdump.exe` targeting `lsass.exe`. 2. (Statistical) Baseline parent-child process relationships. Flag any anomalous relationship, such as `winlogon.exe` spawning `cmd.exe`, especially when initiated by a user recently flagged for suspicious login behavior. Calculate the rarity of the parent-child pair; pairs in the bottom 1st percentile are highly suspicious. 3. (ML) Train a classification model on process command-line arguments to identify obfuscated credential dumping commands by recognizing patterns of encoding, concatenation, and other obfuscation techniques."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]