[
  {
    "information_requirement": "Has the adversary executed commands on guest VMs using ESXi administration services?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1675",
        "name": "ESXi Administration Command",
        "evidence": [
          {
            "description": "A process spawned by vmtoolsd.exe on a guest VM contains command-line arguments, or initiates network connections, matching known-bad indicators from threat intelligence feeds (e.g., malicious file hashes, C2 domains/IPs, or specific commands used by ESXi-targeting malware).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Guest Virtual Machines (especially Domain Controllers, Database Servers), Network Egress Points",
            "action": "Symbolic Logic: For every process creation event (Windows Event ID 4688) with parent 'vmtoolsd.exe', join with network logs (Zeek conn.log, dns.log) from the same host. Scan the child process command line, file hash, and any subsequent network connections for matches against a threat intelligence feed of known-bad indicators (hashes, IPs, domains, command strings like 'esxcli vm process kill'). Alert on any match. Statistical: Calculate the historical rarity of command-line arguments used in processes spawned by 'vmtoolsd.exe'. Flag any argument string that falls below a low percentile threshold (e.g., 1st percentile) of historical usage frequency, indicating an unusual command. Machine Learning: Use a trained classification model (e.g., Logistic Regression, Random Forest) to score the maliciousness of a command line based on features like string length, character entropy, presence of IP addresses, and keyword matches. An event with a high maliciousness score, even without a direct IOC match, should be flagged for review."
          },
          {
            "description": "The vmtoolsd.exe process on a guest VM is observed spawning a command-line interpreter or scripting engine (e.g., cmd.exe, powershell.exe, sh, bash, wscript.exe), which is a high-confidence indicator of arbitrary command execution.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Guest Virtual Machines (especially Domain Controllers, Database Servers)",
            "action": "Symbolic Logic: Create a high-priority alert that triggers on any process creation event (Windows Event ID 4688) where the ParentProcessName is 'vmtoolsd.exe' and the ProcessName is one of: 'cmd.exe', 'powershell.exe', 'pwsh.exe', 'wscript.exe', 'cscript.exe', 'sh', 'bash', 'zsh'. This behavior is almost always malicious and warrants immediate investigation. Statistical: Over a 30-day window, calculate the total count of shell processes spawned by vmtoolsd.exe per host. Alert if this count exceeds a baseline of zero. Additionally, calculate the entropy of parent-child process pairs across the environment; a sudden increase in the entropy of pairs involving 'vmtoolsd.exe' indicates it is spawning a wider, anomalous variety of children. Machine Learning: Develop a sequence analysis model (e.g., using an LSTM) to learn normal process execution chains on guest VMs. Flag any sequence where 'vmtoolsd.exe' is followed by a shell process as a high-probability anomaly, as this sequence should not exist in legitimate operations."
          },
          {
            "description": "A child process is spawned by vmtoolsd.exe that is not part of an established baseline of legitimate, expected child processes for VMware Tools operations.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Guest Virtual Machines (especially Domain Controllers, Database Servers)",
            "action": "Symbolic Logic: Establish and maintain a strict allowlist of known-good child processes for 'vmtoolsd.exe' (this list is typically very small, e.g., 'VMwareUser.exe', or empty). Create an alert to trigger for any process creation event (Windows Event ID 4688) where the parent is 'vmtoolsd.exe' and the child process name is not on the allowlist. Statistical: For each unique child process spawned by 'vmtoolsd.exe', calculate its prevalence (frequency) across the entire fleet of guest VMs over a 30-day period. Alert on any child process that is statistically rare, for example, appearing on fewer than 1% of hosts or falling in the bottom 5th percentile of process frequency. Machine Learning: Use an unsupervised anomaly detection algorithm like one-class SVM or Isolation Forest, trained on features of normal 'vmtoolsd.exe' child processes (e.g., process name, command-line length, user context). Apply the model to new events to identify outliers that deviate significantly from the learned 'normal' profile."
          },
          {
            "description": "A network connection from an ESXi management IP to a guest VM on a vSphere API port (e.g., TCP/902) is temporally correlated with subsequent anomalous process creation or outbound network activity from that guest VM.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ESXi Host Management Interfaces, vCenter Server, Virtual Machine Network Segments, Network Egress Points",
            "action": "Symbolic Logic: Correlate network logs (Zeek conn.log) with host logs (Windows Event ID 4688). Trigger an alert if a connection from a known ESXi host IP to a guest VM IP on TCP port 902 is followed within a 2-minute window by a process spawned from 'vmtoolsd.exe' on that guest VM that matches a known suspicious pattern (e.g., spawning a shell, running reconnaissance commands like 'whoami' or 'net user'). Statistical: For each guest VM, establish a baseline of the daily volume (bytes) and count of connections received from ESXi management IPs. Use time-series analysis to detect significant deviations (e.g., a spike exceeding 3 standard deviations from the mean) in this traffic. Correlate these spikes with subsequent spikes in the number of processes spawned by 'vmtoolsd.exe' on the same guest. Machine Learning: Use a graph-based analysis model to represent relationships: ESXi hosts, guest VMs, and processes are nodes. Create edges for 'connects to' (from Zeek) and 'spawns' (from Event ID 4688). Search for the specific subgraph pattern: [ESXi Host] -> [Guest VM] -> [vmtoolsd.exe] -> [Anomalous Process]. A classifier can be trained to score the risk of these subgraphs based on process names, command-line arguments, and connection properties."
          },
          {
            "description": "A single source, such as an ESXi host or a compromised administrative workstation, initiates guest operations commands across an anomalously high number of distinct guest VMs within a short time frame.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Guest Virtual Machines (fleet-wide), ESXi Host Management Interfaces, vCenter Server",
            "action": "Symbolic Logic: Create a rule that triggers if a single source IP (identified from ESXi host-to-guest communication in Zeek conn.log) is associated with 'vmtoolsd.exe'-spawned processes on more than a static threshold of guest VMs (e.g., > 10 VMs) within a 5-minute window. This indicates a potential automated attack. Statistical: Aggregate all 'vmtoolsd.exe'-spawned process events (Windows Event ID 4688) across all guest VMs. Group by the source ESXi host (requires a mapping of guest IP to host, or can be inferred from network logs). Calculate the entropy of the set of targeted guest VMs for each ESXi host over a rolling 10-minute window. A sudden, sharp increase in entropy for a single host indicates it is targeting a much wider and more random set of VMs than usual, which is a strong indicator of malicious fan-out activity. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on a dataset of guest operation events. Use features like source ESXi host, timestamp, and target guest VM. A dense cluster of events originating from a single host and targeting many different VMs in a short time would be identified as an anomalous cluster, indicative of a coordinated attack like ransomware deployment."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]