[
  {
    "information_requirement": "Is the adversary communicating with command and control infrastructure using proxy techniques?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1090",
        "name": "Proxy",
        "evidence": [
          {
            "description": "Connections from internal hosts to external IP addresses or domains known to be associated with proxy/anonymity services, C2 infrastructure, or unapproved commercial VPNs.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Inner join DNS queries (Zeek dns.log) and outbound connections (Zeek conn.log) with continuously updated cyber threat intelligence (CTI) feeds listing known malicious proxy IPs, Tor exit nodes, and C2 domains. Maintain and enforce a list of approved corporate VPNs and alert on connections to any unapproved proxy or VPN services. Investigate all connections to flagged destinations, especially if originating from sensitive servers or involving large data transfers."
          },
          {
            "description": "Execution of known proxy or tunneling tools on endpoints, identified by process names or specific command-line arguments.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688) for process names associated with common proxy/tunneling tools (e.g., chisel.exe, ligolo-ng.exe, ngrok.exe, plink.exe, ssh.exe). Scan process command-line arguments for patterns indicative of proxying or reverse tunneling, such as '-R', '-L', '-D' for SSH, or specific syntax for other tools like 'chisel server' or 'chisel client'. Use regular expression matching and maintain a list of suspicious process names and argument patterns for alerting."
          },
          {
            "description": "Network connections originating from processes not typically expected to make external network connections, or from recently created executables.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate host-based network connection events (Windows Event ID 5156) with process creation events (Windows Event ID 4688) to establish a baseline of which processes normally make external connections. Use frequency analysis to identify rare or new processes making outbound connections. Flag connections from unexpected system processes (e.g., svchost.exe from a non-standard path, lsass.exe) or from executables with a very recent creation time. Correlate these host events with network logs (Zeek conn.log) to analyze the destination and traffic characteristics."
          },
          {
            "description": "Anomalous port-protocol mismatches where traffic on standard ports (e.g., 80, 443, 53) does not conform to the expected protocol, suggesting protocol tunneling.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek protocol logs",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek's protocol identification for traffic on common ports (e.g., 53, 80, 443, 445). Flag connections where the identified protocol (e.g., in `conn.log` service field) does not match the port's standard use (e.g., non-DNS traffic over TCP/53, non-HTTP/TLS traffic over 80/443). Review entries in `weird.log` for protocol violations. Use entropy measures on payload data for suspect connections to identify encrypted or obfuscated traffic masquerading as a standard protocol."
          },
          {
            "description": "Unusual data flow patterns such as highly asymmetrical data transfers or connections with unusually long durations and low traffic volume, indicative of a C2 channel.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek conn.log to model typical connection characteristics. Use statistical methods (e.g., Z-score, IQR on byte ratios) to detect highly asymmetrical connections (orig_bytes vs resp_bytes), which may indicate data exfiltration. Simultaneously, use time series analysis and descriptive statistics (mean, median, standard deviation) to identify connections with unusually long durations but very low, periodic data transfer (beaconing), suggesting an interactive C2 channel. Use linear regression to model expected session duration vs. data volume and flag outliers."
          },
          {
            "description": "Mismatch between the TLS Server Name Indication (SNI) field and the subsequent HTTP Host header or the initial DNS query, indicative of Domain Fronting.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate network events using Zeek's unique session ID (UID). For TLS traffic, compare the `server_name` field in Zeek ssl.log with the `host` header in the corresponding Zeek http.log record. Also, compare the `server_name` with the initial DNS query (`query` field in dns.log) that resolved to the destination IP. Flag sessions where the inner HTTP `host` header differs from the outer TLS `server_name`, especially if the `server_name` points to a high-reputation CDN (e.g., cloudfront.net, azureedge.net) while the `host` header is a suspicious, uncategorized, or low-reputation domain. Use correlation analysis to automate this comparison and alert on discrepancies."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]