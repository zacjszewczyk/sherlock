[
  {
    "information_requirement": "Is the adversary establishing persistence via event triggered execution?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546",
        "name": "Event Triggered Execution",
        "evidence": [
          {
            "description": "Creation of event triggers containing known malicious file hashes, command-line arguments, or script content.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4657 (Registry Value Modified) for common persistence keys (e.g., Run keys) and Windows Event ID 4688 for processes created in startup folders. Extract file paths, command-line arguments, and hashes from these events. Compare the hashes of files being added to startup locations or referenced in registry keys against a CTI feed of known malicious file hashes. Scan command-line arguments and registry values for known malicious strings or script snippets. Alert on any matches."
          },
          {
            "description": "Modification of specific, commonly abused event trigger locations (e.g., AppCert DLLs, Winlogon helper DLLs, COM hijacking keys, Image File Execution Options) to point to non-standard executables or scripts.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a high-priority watchlist of specific registry keys and system locations frequently abused for event-triggered persistence (e.g., `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options`, `HKLM\\...\\Winlogon\\Notify`, specific COM CLSIDs). Monitor Windows Event ID 4657 for any modification to these locations. Correlate the modification with the responsible process (via Event ID 4688). Scrutinize changes made by non-system/non-installer processes or changes pointing to files in user-writable directories (`%APPDATA%`, `%TEMP%`)."
          },
          {
            "description": "An anomalous process (e.g., non-system binary, script interpreter) is executed at logon or system startup, and subsequently initiates network communication.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process creation events (Windows Event ID 4688) with logon events (Windows Event ID 4624) or system startup sequences. Establish a baseline of normal startup/logon processes. Flag new or low-frequency processes executing during these events using percentile analysis on process names and parent processes. Correlate the execution of these anomalous processes with subsequent outbound network connections (Zeek conn.log) within a short time window (e.g., 2 minutes) to identify persistent C2 channels."
          },
          {
            "description": "Creation of a WMI event subscription where the filter and consumer components are created in a short timeframe by an unusual process, and the consumer executes a script or obfuscated command.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5860",
              "Windows Event ID 5861"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for WMI-Activity Event ID 5861 (WMI consumer created) and 5860 (WMI filter created). Correlate filter and consumer creation events that occur closely in time. Analyze the process responsible for creation (via Event ID 4688). Scrutinize consumers that execute script content directly (`VBScript.EventConsumer`) or use `CommandLineEventConsumer` to launch script interpreters (powershell.exe, wscript.exe) or unusual binaries. Use entropy measures on the command-line arguments within the consumer to detect obfuscation."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary elevating privileges via event triggered execution?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546",
        "name": "Event Triggered Execution",
        "evidence": [
          {
            "description": "Execution of a file with a known malicious hash via an event trigger mechanism, where the resulting process runs with elevated privileges (e.g., SYSTEM).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for all process creation events. Filter for processes running with high privileges (e.g., user is NT AUTHORITY\\SYSTEM). Extract the hash of the executable (`NewProcessName`). Compare this hash against a continuously updated CTI feed of known malicious file hashes, especially those associated with privilege escalation tools or malware. Alert on any match."
          },
          {
            "description": "A legitimate system process, known to be vulnerable to hijacking (e.g., a service with an unquoted service path), executes a payload from an adversary-controlled location instead of its intended binary.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a list of known vulnerable event trigger patterns (e.g., services with unquoted paths, hijackable DLL paths for system processes). Monitor Windows Event ID 4688 for process creation events related to these triggers. Alert when the `NewProcessName` path does not match the legitimate, expected path, especially if it points to a user-writable directory (e.g., `C:\\Program Files\\Some App\\program.exe` instead of the expected `C:\\Program Files\\Some App\\legit.exe`). Correlate the process execution with prior file creation events in that directory."
          },
          {
            "description": "A process running as a standard user modifies a configuration for an event trigger, which subsequently causes a different process to execute with elevated system privileges.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate configuration changes with executions across privilege levels. Step 1: Monitor Windows Event ID 4657 (Registry Modified) or file creation events in locations that control event triggers (e.g., Task Scheduler tasks). Log the user context (`SubjectUserName`) of the modification, filtering for standard users. Step 2: Monitor Windows Event ID 4688 for process creation events matching the configured trigger. Step 3: Alert if the triggered process (Step 2) executes with elevated privileges (e.g., as SYSTEM) and can be linked back to the low-privilege modification (Step 1) within a reasonable time window (e.g., 1 hour). Use correlation analysis on file/registry paths and timestamps to establish the link."
          },
          {
            "description": "An event-triggered process running with high privileges (e.g., SYSTEM) initiates unexpected network connections or spawns anomalous child processes, such as a command shell or script interpreter.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal behavior for processes typically initiated by event triggers and running as SYSTEM (e.g., processes spawned by Task Scheduler, certain services). Monitor Windows Event ID 4688 to detect deviations from this baseline. Flag the creation of interactive child processes (`cmd.exe`, `powershell.exe`) or any outbound network connections (correlated with Zeek conn.log) from these high-privilege, event-triggered processes. A linear regression model could be used to predict expected network traffic volume from these processes, flagging significant positive residuals as anomalous."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]