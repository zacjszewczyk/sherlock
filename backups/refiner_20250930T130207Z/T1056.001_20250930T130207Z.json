[
  {
    "information_requirement": "Has the adversary gained access to credentials via input capture? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1056.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "A file is created or executed whose hash matches a known keylogger, or a registry key/value is modified that exactly matches a known keylogger's persistence or configuration artifact.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Windows Event ID 4657",
              "Sysmon Event ID 12",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Critical Application Servers, Domain Controllers",
            "action": "1. (Symbolic) Ingest a threat intelligence feed of known keylogger file hashes and registry IOCs. Create a detection rule that queries for file creation/execution events (Sysmon EID 1, 11) and registry set events (Sysmon EID 13) and alerts on any match with the IOC feed. 2. (Statistical) For registry modifications to sensitive keys (e.g., `AppInit_DLLs`, `HKLM\\...\\Winlogon\\Userinit`), calculate the historical daily modification frequency for each host. Flag modifications on any host where the daily count exceeds 3 standard deviations above its 90-day rolling average. 3. (Machine Learning) Feed features from registry modification events (e.g., process name, parent process, target registry path, new value data type, value length) into a pre-trained Gradient Boosting Machine classifier to score the likelihood of the modification being malicious. Alert on any modification with a score > 0.9."
          },
          {
            "description": "An unsigned or anomalously signed driver is loaded, or a sensitive registry key related to accessibility features (e.g., Image File Execution Options for sethc.exe) is modified by a non-standard process.",
            "data_sources": [
              "Windows Event ID 4657",
              "Sysmon Event ID 12",
              "Sysmon Event ID 13",
              "Windows Event ID 4697",
              "Windows Event ID 7045",
              "Sysmon Event ID 6",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers / Citrix Servers, Privileged Access Workstations",
            "action": "1. (Symbolic) Create a detection rule that alerts when a driver is loaded (Sysmon EID 6) where the `Signed` field is `false` and the driver is not on a pre-approved exception list. 2. (Statistical) For each host, establish a baseline of common signers for loaded drivers (Sysmon EID 6 `Signature` field). Calculate the prevalence of each signer across the enterprise. Flag any driver loaded from a signer that is in the bottom 5th percentile of prevalence (i.e., a very rare signer). 3. (Machine Learning) Use a time-series anomaly detection model (e.g., LSTM) on the frequency of `AppInit_DLLs` registry modifications per hour across the environment. An alert is triggered if the model detects a statistically significant anomaly compared to the learned baseline of system and application update behavior."
          },
          {
            "description": "A process is created from a user-writable path (e.g., AppData), has a high-entropy executable (>7.2), and loads DLLs associated with keyboard input (e.g., user32.dll) without having a corresponding graphical user interface.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Windows Event ID 4657",
              "Sysmon Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Point-of-Sale Terminals",
            "action": "1. (Symbolic) Alert if a process loads `user32.dll` (Sysmon EID 7) and its process name (e.g., `svchost.exe`) is running from an atypical path (e.g., not `C:\\Windows\\System32`). 2. (Statistical) For each new executable file created (Sysmon EID 11), calculate its Shannon entropy. Flag any executable with an entropy score $$ > 7.2 $$ that is not part of a known-good software installer or on an application allowlist. 3. (Machine Learning) Train a One-Class SVM model on features of legitimate processes that load `user32.dll` (e.g., parent process name, command line length, count of loaded DLLs). Use the trained model to identify outlier processes that also load `user32.dll` but do not fit the established profile of benign, interactive applications."
          },
          {
            "description": "A non-browser process creates hidden or sequentially named files with frequent, small write operations (<1KB per write), especially within 10 minutes of that same process deleting browser cookie files.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 23",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Application Servers, Authentication Servers",
            "action": "1. (Symbolic) Alert when a process deletes files matching browser cookie paths (Sysmon EID 23, e.g., `*Cookies*`) AND the process image name is not `chrome.exe`, `firefox.exe`, `msedge.exe`, or a known system utility. 2. (Statistical) For processes creating files (Sysmon EID 11), monitor the rate of file modification events. Flag files that receive more than 10 write operations per minute with an average write size of less than 1KB, which is anomalous for typical file saves. 3. (Machine Learning) Implement a sequence analysis model (e.g., Hidden Markov Model) to detect the specific chain of events: 1. Process A (non-browser) deletes browser cookies (Sysmon EID 23). 2. Process B (potentially Process A) creates a log file (Sysmon EID 11). 3. Process B makes an external network connection (Sysmon EID 3). The model flags this entire sequence as a high-confidence event."
          },
          {
            "description": "A non-browser or script-based process (e.g., powershell.exe, cscript.exe) deletes files located in standard browser cookie or cache directories (e.g., Chrome's User Data folder).",
            "data_sources": [
              "Sysmon Event ID 23",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers / Citrix Servers",
            "action": "1. (Symbolic) Create a rule that alerts when `TargetFilename` in a Sysmon EID 23 event contains `\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Cookies` and the `Image` field is not `chrome.exe`. 2. (Statistical) Establish a baseline of processes that legitimately delete browser data (e.g., `CCleaner.exe`, browser updaters). For any process not on this baseline, track the frequency of cookie deletion events per user. Flag any user account where a non-standard process deletes cookies more than twice in a 24-hour period. 3. (Machine Learning) Use a DBSCAN clustering algorithm on cookie deletion events, using features like process name, parent process name, and time of day. This can automatically group legitimate, widespread cleaning activities and isolate anomalous, singular deletions by suspicious processes as noise or separate small clusters."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary collecting and staging keystroke data? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1056.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "A file, registry entry, named pipe, or mutex is created that matches a specific, high-confidence indicator of a known keylogger family used for data collection.",
            "data_sources": [
              "Sysmon Event ID 1",
              "Sysmon Event ID 11",
              "Sysmon Event ID 12",
              "Sysmon Event ID 13",
              "Sysmon Event ID 17",
              "Sysmon Event ID 18"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Enterprise Endpoints (Workstations and Servers), Domain Controllers",
            "action": "1. (Symbolic) Continuously query the SIEM for Sysmon events (EID 11, 13, 17) where the `TargetFilename`, `TargetObject`, or `PipeName` matches a blocklist of known keylogger IOCs. 2. (Statistical) Calculate the enterprise-wide prevalence of all named pipes created (Sysmon EID 17). Flag any named pipe whose name is unique (seen only on a single host) and has a character entropy score $$ > 3.5 $$, which is uncharacteristic of legitimate inter-process communication mechanisms. 3. (Machine Learning) Deploy a pre-trained ML model that performs lexical analysis on file and registry paths to classify them as benign or malicious. This model can detect algorithmically generated or suspicious-looking paths used by malware for staging, even without an exact IOC match."
          },
          {
            "description": "A kernel-mode driver is loaded that is unsigned, has a recent compilation timestamp not associated with a known patch cycle, or is initiated by a non-system process like explorer.exe.",
            "data_sources": [
              "Sysmon Event ID 6",
              "Windows Event ID 7045",
              "Windows Event ID 4697",
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Privileged Access Workstations, Critical Application Servers",
            "action": "1. (Symbolic) Alert when Sysmon EID 6 shows a driver load where `Signed` is `false` and the `Image` is not on an approved exception list for legacy hardware or software. 2. (Statistical) For all driver load events (Sysmon EID 6), extract the `Signature` field. Create a baseline of trusted signers. Alert on any driver signed by an entity not in the top 95% of most common signers in your environment. 3. (Machine Learning) Use a K-Means clustering algorithm on newly installed services (EID 7045), using features such as service name length, number of numeric characters in the name, and binary path depth. This can automatically group legitimate services and isolate outliers with randomly generated names or unusual paths, which often serve as loaders for keyloggers."
          },
          {
            "description": "A process previously flagged for suspicious registry or file behavior establishes a network connection to an external IP address over a non-standard port or with a low-prevalence JA3/JA3S TLS fingerprint.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies), DNS Servers, All Endpoints",
            "action": "1. (Symbolic) Correlate process GUIDs from host-based alerts (e.g., suspicious registry write) with subsequent network connection events (Sysmon EID 3) from the same GUID. If the destination IP is on a C2 blocklist from threat intelligence, escalate the alert. 2. (Statistical) From `Zeek ssl.log`, build a frequency table of all JA3 fingerprints observed across the enterprise. Alert when a TLS connection is established using a JA3 hash that has been seen on fewer than 5 hosts, indicating a rare client. 3. (Machine Learning) Feed TLS connection metadata (JA3, JA3S, destination IP, SNI, port) into a pre-trained classifier that determines the likelihood of the connection being malicious C2 traffic. This can identify keylogger exfiltration even when connecting to previously unknown infrastructure."
          },
          {
            "description": "A non-browser process initiates periodic, low-volume (e.g., < 2KB) outbound network connections to a single external IP address, exhibiting a regular 'heartbeat' pattern consistent with batched keystroke exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies), User Workstations",
            "action": "1. (Symbolic) Alert if a process other than a web browser or approved update agent makes an outbound connection (Sysmon EID 3) to a destination IP categorized as 'Newly Observed Domain' by threat intelligence. 2. (Statistical) For each source-destination IP pair in `Zeek conn.log`, calculate the time delta between consecutive connections. A standard deviation of these time deltas $$ < 5 $$ seconds indicates a highly regular, machine-generated heartbeat. Also, flag pairs where the 95th percentile of `orig_bytes` is $$ < 2048 $$ bytes. 3. (Machine Learning) Use a Fast Fourier Transform (FFT) on a time series of connection counts per minute for each source-destination pair. A strong peak in the frequency domain indicates a periodic signal (beaconing). The model automatically flags pairs with strong periodicity not matching known legitimate traffic like NTP."
          },
          {
            "description": "A hidden file or a file in a temporary directory experiences a steady stream of small write operations, and its total size closely matches the volume of data sent in a subsequent outbound network connection from the same process.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Staging Servers, Network Egress Points",
            "action": "1. (Symbolic) Alert if `Zeek files.log` shows a file being transferred whose filename matches a file previously flagged for suspicious write activity by a host-based rule. 2. (Statistical) For a given process, correlate file write events (Sysmon EID 11) with network connection events from `Zeek conn.log`. Trigger an alert if $$ | \\text{file_size_bytes} - \\text{orig_bytes} | < 100 $$ within a 5-minute window, indicating the file was likely exfiltrated. 3. (Machine Learning) Implement a state machine model that tracks process behavior. The model transitions between states: `START` -> `SUSPICIOUS_FILE_WRITE` (triggered by frequent, small writes to a hidden file) -> `NETWORK_CONNECTION` (triggered by an external connection from the same process). A transition to the `NETWORK_CONNECTION` state immediately after `SUSPICIOUS_FILE_WRITE` triggers a high-severity alert for 'Staged Data Exfiltration'."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]