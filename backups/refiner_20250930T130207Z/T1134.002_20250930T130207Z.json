[
  {
    "information_requirement": "Has the adversary escalated privileges by creating a process with a stolen or manipulated token?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1134.002",
        "name": "Create Process with Token",
        "evidence": [
          {
            "description": "Creation of a process with a known malicious tool name where the new process token belongs to a highly privileged account (e.g., SYSTEM) but the parent process does not.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for process creation events. Maintain a watchlist of process names associated with credential theft or token manipulation tools. Alert when a process with a name on this list is created AND the 'Subject User Name' for the new process is a privileged account (e.g., NT AUTHORITY\\SYSTEM) while the 'Creator Subject User Name' is a standard user account. Correlate with 'Token Elevation Type' to confirm full administrative privileges."
          },
          {
            "description": "Execution of common living-off-the-land binaries (e.g., powershell.exe, cmd.exe) by a parent process that typically does not spawn them (e.g., winlogon.exe, lsass.exe), where the new process is created with an elevated token.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish baselines of normal parent-child process relationships using descriptive statistics on historical Windows Event ID 4688 data. Alert when a high-privilege system process (e.g., `services.exe`, `lsass.exe`) spawns an interactive shell (`powershell.exe`, `cmd.exe`) or other LOLBin. Use frequency analysis to identify rare parent-child-token combinations, especially where the child process's token is elevated above the parent's typical context."
          },
          {
            "description": "A process is created with a token that grants it a higher integrity level or user privilege (e.g., SYSTEM) than its parent process, and the parent is not a known legitimate privilege broker.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Windows Event ID 4688 logs. Compare the 'Creator Subject User Name' and 'Creator Process Name' with the 'Subject User Name' of the new process. Flag all instances where a non-privileged user or process spawns a child process running as a privileged user (e.g., SYSTEM, Administrator) or at a higher integrity level (e.g., High or System). Maintain and use an allow-list of legitimate parent processes that perform this action (e.g., `svchost.exe` for services, UAC prompts via `consent.exe`) to reduce false positives. Investigate all unapproved escalations."
          },
          {
            "description": "An anomalous process creation event with an elevated token is immediately followed by suspicious network activity or attempts to access credentials.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process creation events (Event ID 4688) indicating privilege escalation via token manipulation with subsequent outbound network connections (Zeek conn.log) from the host within a short time window (e.g., 1-5 minutes). Use correlation analysis to link the process creation event with suspicious network behaviors, such as connections to known malicious IPs, unusual ports, or C2-like beaconing. Prioritize alerts where the newly escalated process itself is the one initiating the network connection."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary bypassing defenses by creating a process with a stolen or manipulated token?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1134.002",
        "name": "Create Process with Token",
        "evidence": [
          {
            "description": "A process with a known suspicious name or command-line signature is created with a token belonging to a legitimate, trusted system process (e.g., explorer.exe, svchost.exe, lsass.exe) to masquerade its origin.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a watchlist of suspicious process names or command-line arguments associated with evasion tools or malware. Monitor Windows Event ID 4688 and alert when a process on this watchlist is created where the 'Creator Process Name' is a legitimate system process (e.g., `explorer.exe`, `svchost.exe`) but the parent-child relationship is anomalous (e.g., `explorer.exe` does not typically launch 'suspicious.exe')."
          },
          {
            "description": "A common system process (e.g., svchost.exe, lsass.exe, services.exe) spawns a child process that is uncharacteristic for that parent, especially if the child is unsigned or located in an unusual directory like AppData or Temp.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a strict baseline of legitimate child processes for commonly impersonated, high-privilege parent processes (e.g., `lsass.exe`, `wininit.exe`, `services.exe`). Monitor Windows Event ID 4688 for any deviations from this baseline. Use frequency analysis on parent-child pairs across the enterprise to find rare occurrences which are highly suspicious. Alert on any child process spawned from `lsass.exe`."
          },
          {
            "description": "A process is created where the 'Creator Process' (the process that invoked the API) is different from the 'Parent Process' specified in the event, indicating impersonation to break the process tree for evasion.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Enable and monitor Windows Event ID 4688, specifically comparing the 'Parent Process Name' field with the 'Creator Process Name' field (requires specific audit policy). Alert on any discrepancies where these two fields do not match, as this indicates one process (`Creator`) caused another process (`Parent`) to spawn the new process, a key indicator of advanced injection and impersonation techniques. Use statistical analysis to find processes that frequently appear as a `Creator Process` but rarely as a `Parent Process` for the same child."
          },
          {
            "description": "Multiple, unrelated processes are created under the same, non-interactive logon session ID over a short period, suggesting a single stolen token is being repeatedly used to spawn different tools while evading user-based detections.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Windows Event ID 4688 and group processes by 'Logon ID'. Correlate the 'Logon ID' with Windows Event ID 4624 to determine the 'Logon Type' (e.g., 2 for Interactive, 3 for Network, 5 for Service). Flag logon sessions with a non-interactive Logon Type (e.g., Network, Service, Batch) that spawn an unusually high number or diverse set of child processes with disparate parent processes. Use descriptive statistics (mean, stddev, IQR) to establish a baseline for process creation count per logon session type and alert on significant outliers."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]