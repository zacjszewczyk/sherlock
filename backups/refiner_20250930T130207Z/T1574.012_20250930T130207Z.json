[
  {
    "information_requirement": "Is the adversary maintaining persistence using COR_PROFILER?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574.012",
        "name": "COR_PROFILER",
        "evidence": [
          {
            "description": "A known malicious profiler DLL, identified by its file hash or CLSID, is written to a system or referenced in COR_PROFILER registry keys.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for file creation events (via file system monitoring or process command lines in Event ID 4688) for files with hashes matching known malicious profiler DLLs. Separately, monitor Windows Event ID 4657 for modifications to `COR_PROFILER` keys and correlate the written CLSID against a threat intelligence list of known malicious profilers. Alert on any match, as this is a high-fidelity indicator of compromise."
          },
          {
            "description": "A .NET process is launched with COR_ENABLE_PROFILING and COR_PROFILER environment variables set, especially targeting processes that run automatically or for long durations (e.g., services, scheduled tasks).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for process creation events containing the strings `COR_ENABLE_PROFILING=1` and `COR_PROFILER` in their process command line or environment block. Baseline legitimate profiler usage from known software installers or diagnostic tools. Flag any unauthorized usage, paying special attention to processes associated with services (`services.exe` parent), scheduled tasks (`svchost.exe -k netsvcs` parent), or common system processes (`explorer.exe`) often used for persistence."
          },
          {
            "description": "A profiled .NET process initiates periodic network connections (beaconing) to an external destination or establishes a long-lived, low-volume connection consistent with a C2 channel.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate processes launched with `COR_PROFILER` variables (from Windows Event ID 4688) with their subsequent network activity (from Zeek conn.log) based on source IP and time. Use time series analysis to identify periodic, 'heartbeat' connections to a single external IP. Analyze connection statistics (duration, bytes transferred) using descriptive statistics and percentile analysis to find long-running sessions with abnormally low data transfer, distinguishing them from normal activity. Use correlation analysis to link these persistent C2-like patterns back to the initial profiling event."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using COR_PROFILER?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574.012",
        "name": "COR_PROFILER",
        "evidence": [
          {
            "description": "A known malicious profiler DLL, identified by its file hash or CLSID, is used to target a high-privilege .NET process.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor registry modifications (Event ID 4657) to `COR_PROFILER` keys and process creation events (Event ID 4688) that set profiling variables. Correlate the profiler CLSID or DLL hash against a CTI list of known malicious profilers. Specifically alert when a known malicious profiler is used in conjunction with a process running as SYSTEM or with a High integrity level, which is a strong indicator of a privilege escalation attempt."
          },
          {
            "description": "A low-privilege process modifies the COR_PROFILER registry keys for the current user (HKCU) immediately before a high-privilege .NET process is launched by the same user.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for a specific sequence of events within a short time window (e.g., < 1 minute): 1. A process running at Medium or Low integrity modifies HKCU `Environment` registry keys for `COR_PROFILER` (Event ID 4657). 2. The same user launches a .NET process with High or System integrity (Event ID 4688). Correlate these events using user session ID and timestamps. This pattern is highly indicative of privilege escalation, as the high-privilege process may unintentionally load the user-specified malicious profiler."
          },
          {
            "description": "A profiled .NET process performs privileged actions inconsistent with its normal function, such as creating a new local administrator account, modifying system files, or spawning a child process with elevated privileges.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4720",
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Identify .NET processes launched with `COR_PROFILER` variables (Event ID 4688). Monitor the subsequent actions taken by that process ID. Trigger alerts if the profiled process creates a new user account (Event ID 4720), adds a member to a privileged group like Administrators (Event ID 4732), writes to protected directories like System32 (via file monitoring), or spawns a child process (e.g., `cmd.exe`, `powershell.exe`) with a higher integrity level than its own."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using COR_PROFILER?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574.012",
        "name": "COR_PROFILER",
        "evidence": [
          {
            "description": "A known malicious profiler DLL, identified by its file hash or CLSID and specifically designed for defense evasion, is used to profile a security tool.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor registry modifications (Event ID 4657) and process creation events (Event ID 4688) for the use of `COR_PROFILER`. Correlate the profiler CLSID or DLL hash against a CTI list of profilers known to be used for defense evasion (e.g., tools that unhook EDR functions). Specifically alert when a known malicious profiler is used to target a .NET process associated with security software (e.g., EDR agent, AV service)."
          },
          {
            "description": "The COR_PROFILER environment variables or registry keys are set specifically to target a .NET-based security product (e.g., EDR agent, antivirus scanner) in an unauthorized manner.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a list of .NET processes associated with installed security tools. Monitor process creation events (Event ID 4688) where the process name matches this list AND `COR_PROFILER` variables are set. Also, monitor registry modifications (Event ID 4657) where the `COR_PROFILER_PATH` variable is set for a specific executable that matches a security tool. Use frequency analysis to identify rare events and alert on any profiling of security software not correlated with legitimate software updates or diagnostics."
          },
          {
            "description": "A security tool process, after being profiled via COR_PROFILER, either terminates unexpectedly, stops generating telemetry, or fails to detect subsequent known malicious activity on the host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "First, identify when a security tool process is launched with profiling enabled (Event ID 4688). Second, monitor for its unexpected termination (Event ID 4689). Third, establish a baseline for telemetry volume from that host/tool; use time series analysis to detect a significant drop in logs post-profiling. Fourth, correlate the profiling event with any subsequent high-confidence malicious activity on the same host (e.g., connection to a known C2 IP in Zeek conn.log, execution of a known malicious script) that should have been blocked, indicating the defense was successfully disabled."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]