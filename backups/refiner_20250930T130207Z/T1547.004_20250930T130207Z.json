[
  {
    "information_requirement": "Is the adversary maintaining persistence using Winlogon Helper DLLs?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.004",
        "name": "Winlogon Helper DLL",
        "evidence": [
          {
            "description": "A known malicious DLL or executable file, identified by hash or name, is referenced by a Winlogon registry key (Userinit, Shell, Notify).",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for write events (Windows Event ID 4663) for DLL/EXE files in system directories (e.g., C:\\Windows\\System32). Hash the newly created/modified file and compare it against a CTI feed of known malicious file hashes. Independently, monitor for modifications to Winlogon registry keys (Windows Event ID 4657) and compare the referenced file paths/names against a list of known malicious filenames associated with this technique. Alert on any confirmed match."
          },
          {
            "description": "Modification of the 'Userinit' or 'Shell' registry values, or creation of a new subkey under the 'Notify' key within 'HKLM\\...\\Winlogon'.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a strict baseline for the `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit` (default: `C:\\Windows\\system32\\userinit.exe,`) and `\\Shell` (default: `explorer.exe`) registry values. Monitor for any change to these values using Windows Event ID 4657. Also, monitor for the creation of any new subkey under `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify`. Any modification or addition is a highly suspicious pattern indicative of this technique and should be immediately investigated."
          },
          {
            "description": "An anomalous process, such as a command shell or scripting interpreter, is spawned as a child of winlogon.exe, userinit.exe, or explorer.exe immediately following a user logon event.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688). Correlate user logon events (Windows Event ID 4624, Type 2 or 10) with subsequent process creations within a short time window. Flag any instances where `winlogon.exe`, `userinit.exe`, or `explorer.exe` spawn unexpected child processes like `cmd.exe`, `powershell.exe`, `cscript.exe`, `wscript.exe`, or any executable from a non-standard location (e.g., Temp folders, user profiles). Use descriptive statistics on child process names and paths for these parents to identify low-frequency, anomalous events."
          },
          {
            "description": "A sequence of events where a new file is written to a system directory, followed shortly by a modification to a Winlogon registry key that references the new file.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate file creation/write events (Windows Event ID 4663) in system directories (e.g., C:\\Windows\\System32) with registry modification events (Windows Event ID 4657) affecting Winlogon keys within a short time window (e.g., 5 minutes). Specifically, look for a new DLL path in a `Notify` key or an appended path in the `Userinit`/`Shell` value that matches the filename from the preceding file write event on the same host. This temporal correlation of file and registry events is a strong behavioral indicator of this persistence mechanism being established."
          },
          {
            "description": "Anomalous outbound network connections originating from core logon processes like userinit.exe or explorer.exe, or their immediate child processes.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a strict baseline for network traffic from `userinit.exe` (should have none) and `explorer.exe` (should be predictable). Monitor Zeek conn.log for any outbound connections from hosts where the source process can be attributed to these, especially to non-standard ports or IP addresses with poor reputation. On the endpoint, correlate process creation (Windows Event ID 4688) with network connection events to link suspicious child processes of the Winlogon chain to their network activity. Use time series analysis to detect unusual spikes in data volume or connection counts associated with these processes following a logon event."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges using Winlogon Helper DLLs?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege-Escalation",
    "indicators": [
      {
        "technique_id": "T1547.004",
        "name": "Winlogon Helper DLL",
        "evidence": [
          {
            "description": "A Winlogon registry key is modified to point to a DLL or executable with a hash matching a known privilege escalation tool.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Upon detection of a modification to a Winlogon registry key (Windows Event ID 4657) or a file write to a path referenced by that key (Windows Event ID 4663), calculate the hash of the referenced file. Compare this hash against a CTI database of known hacking tools, specifically those used for privilege escalation (e.g., Mimikatz, PowerSploit modules, credential dumpers). An alert on a hash match is a high-confidence indicator of privilege escalation activity."
          },
          {
            "description": "The 'Userinit' registry value is modified to include command-line arguments indicative of direct privilege escalation, such as adding a user or modifying a group membership.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for modifications to the `HKLM\\...\\Winlogon\\Userinit` registry value using Windows Event ID 4657. Parse the new value string and use regular expressions to search for patterns of command-line utilities used for privilege escalation, such as `net user /add`, `net localgroup /add`, `wmic process call create`, or calls to `reg.exe` to modify other security settings. The default value is a single executable path; the presence of additional commands is a strong pattern of this TTP."
          },
          {
            "description": "A process launched via the Winlogon mechanism executes with SYSTEM integrity level and performs privileged actions such as creating an administrative account or modifying a privileged group.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4720",
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Define a behavioral sequence by correlating events on a single host within a short time window (e.g., 2 minutes): 1. An anomalous process is created (Windows Event ID 4688) by `winlogon.exe` or `userinit.exe`. 2. The new process is running with SYSTEM privileges (SubjectLogonId: 0x3e7) or High Integrity Level. 3. This same process (correlated by Process ID) then triggers subsequent events like creating a new user (Windows Event ID 4720) or adding a member to a local administrative group (Windows Event ID 4732). Alerting on this full chain provides high-fidelity detection of privilege escalation."
          },
          {
            "description": "An unexpected process launched by the Winlogon helper mechanism attempts to access the memory of the LSASS process to dump credentials.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for anomalous child processes of `winlogon.exe` or `userinit.exe` (Windows Event ID 4688). Correlate the Process ID of the anomalous process with object access events (Windows Event ID 4656, with Audit Kernel Object Auditing enabled). Specifically, look for the process requesting read access (e.g., Access Mask containing `PROCESS_VM_READ` (0x10) or `PROCESS_ALL_ACCESS` (0x1F0FFF)) to the `lsass.exe` process. This behavior is a strong indicator of a post-escalation attempt to dump credentials."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]