[
  {
    "information_requirement": "Has the adversary attempted to impact external systems through defacement? (PIR)",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1491.002",
        "name": "External Defacement",
        "evidence": [
          {
            "description": "A file written to a web server directory, or an HTTP response body served from it, contains content (text, HTML, image hash) that matches a known defacement signature.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers (e.g., IIS, Apache), Content Delivery Network (CDN) logs, File Integrity Monitoring (FIM) systems.",
            "action": "For each file write event (Windows Event ID 4663) in a web directory or HTTP response (Zeek http.log), perform a multi-tiered check. 1. (Symbolic) Scan the file content or HTTP body against a threat intelligence feed of known defacement-related image hashes (MD5, SHA256 from Zeek files.log), text strings, and malicious script signatures. Alert on any match. 2. (Statistical) Calculate the Jaccard similarity score between the new file and its previous version. A score below a tuned threshold (e.g., $$< 0.5$$) for an existing page indicates a significant, potentially unauthorized change. Monitor the rate of change for key files; a modification outside a normal deployment window that also has a low similarity score is a high-confidence alert. 3. (ML) Use a pre-trained text classification model (e.g., a Naive Bayes or SVM classifier) to analyze the text content of new or modified web pages. Train the model on a corpus of known defaced pages and legitimate pages to classify new content as 'Defacement', 'Legitimate', or 'Suspicious' to detect novel attacks."
          },
          {
            "description": "An HTTP request targeting an external web application contains URI parameters, headers, or a request body matching patterns of common web application exploits (e.g., SQLi, XSS, Command Injection) that often precede defacement.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network edge traffic sensors, Web Application Firewalls (WAFs), reverse proxy servers.",
            "action": "Analyze inbound HTTP requests from Zeek http.log. 1. (Symbolic) Use regular expressions to search URI fields and POST body content for patterns indicative of SQL injection (e.g., `' OR '1'='1'`), command injection (e.g., `';id;'`, `';whoami'`), and XSS (e.g., `<script>`). Correlate matches with a successful HTTP response code (e.g., 200). 2. (Statistical) For each source IP, calculate the Shannon entropy of characters in URI parameters. A sudden spike in entropy for a given parameter, exceeding the 95th percentile of its historical distribution, can indicate obfuscated exploit strings. 3. (ML) Employ a supervised classification model (e.g., Logistic Regression) trained on labeled datasets of malicious and benign HTTP requests. Use features like request length, parameter count, presence of special characters, and entropy scores to classify each request as 'Attack' or 'Benign' in near-real-time."
          },
          {
            "description": "Web content files (e.g., HTML, JS, CSS) are modified on a web server by an unauthorized user, at an anomalous time, or via an unexpected parent process.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of public-facing web servers, especially web root directories (e.g., C:\\inetpub\\wwwroot).",
            "action": "Monitor file system activity on web servers. 1. (Symbolic) Create a rule that triggers when Windows Event ID 4663 (Object Access) shows a write operation within a web root directory and the associated user account is not on an approved list of administrative or deployment accounts. Correlate this with the parent process from Event ID 4688; if the parent is not a legitimate deployment tool, alert. 2. (Statistical) Establish a baseline of file modification activity using a time series analysis of event counts (Windows Event ID 4663). Alert on spikes in modification volume that exceed 3 standard deviations from the mean for a given hour of the day or day of the week. 3. (ML) Use an anomaly detection algorithm (like Isolation Forest) on features from file modification events: time of day, day of week, user account, process name (from EID 4688), and file extension. The model can learn the pattern of 'normal' deployment activity and flag modifications that deviate significantly from this multi-dimensional baseline."
          },
          {
            "description": "A command shell, scripting interpreter, or network utility process is executed on a web server, initiated by the web server process itself (e.g., w3wp.exe), and is temporally correlated with an inbound network connection from an untrusted source.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process execution logs on public web servers, Authentication logs on domain controllers and web servers.",
            "action": "Hunt for evidence of web shell execution on servers. 1. (Symbolic) Alert on any instance where a web server process (e.g., `w3wp.exe`, `httpd.exe`) is the parent process for a child process like `cmd.exe`, `powershell.exe`, or `bash` (from Windows Event ID 4688). 2. (Statistical) Analyze command-line arguments in Windows Event ID 4688 for statistical rarity. Calculate a baseline of common process executions and their arguments and use a TF-IDF (Term Frequency-Inverse Document Frequency) approach to score the rarity of command-line arguments. A high score indicates an unusual command. 3. (ML) Develop a sequence analysis model (e.g., a Hidden Markov Model) to model normal sequences of process executions. A sequence like 'inbound connection (Zeek conn.log) -> web server process spawns cmd.exe (EID 4688) -> file write (EID 4663)' would be flagged as a highly anomalous sequence."
          },
          {
            "description": "An HTTP POST request to a web server exhibits anomalous characteristics, such as a file upload of a script type (.php, .aspx) to a static content directory, an unusually large request body, or a high frequency of POSTs from a single source IP.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ network segments, reverse proxy logs, load balancer logs.",
            "action": "Inspect HTTP POST requests for signs of web shell uploads. 1. (Symbolic) Create a rule to detect HTTP POST requests (from Zeek http.log) where the `filename` in the `Content-Disposition` header has a script extension (e.g., .php, .jsp, .aspx) and the target URI path is an uploads or images directory. 2. (Statistical) For each unique URI on the web server, baseline the distribution of POST request body lengths. Alert when a new POST request's body length exceeds the 99th percentile for that specific URI, which could indicate an attacker posting a large defacement page. 3. (ML) Use a clustering algorithm (e.g., DBSCAN) on features extracted from HTTP POST requests: source IP, user-agent, request body length, and URI. This can automatically group 'normal' user behavior and identify outliers that do not fit any cluster, which could represent the upload of a defacement tool."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]