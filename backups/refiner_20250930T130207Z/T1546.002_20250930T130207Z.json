[
  {
    "information_requirement": "Is the adversary establishing persistence using screensaver configuration?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546.002",
        "name": "Screensaver",
        "evidence": [
          {
            "description": "Creation or execution of a screensaver (.scr) file that matches a known malicious hash or filename.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688) for processes with an image path ending in '.scr'. Upon detection, calculate the executable's file hash. Correlate both the file hash and the filename against an up-to-date cyber threat intelligence feed of known malicious screensaver files and associated IOCs. Generate a high-priority alert on any match."
          },
          {
            "description": "Modification of screensaver registry keys to point the executable path (SCRNSAVE.exe) to a non-standard directory or to disable security settings (ScreenSaverIsSecure).",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor registry modification events (Windows Event ID 4657) for the keys `HKCU\\Control Panel\\Desktop\\SCRNSAVE.exe` and `HKCU\\Control Panel\\Desktop\\ScreenSaverIsSecure`. Alert on any modification where `SCRNSAVE.exe` is set to a path outside of `C:\\Windows\\System32\\` or `C:\\Windows\\SysWOW64\\`, or where `ScreenSaverIsSecure` is set to `0`. Correlate these changes with the parent process that made them to identify unauthorized modifications not associated with standard system or user configuration activities."
          },
          {
            "description": "A screensaver executable (.scr file) initiating any outbound network connections, which is inherently anomalous behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process creation events on hosts (Windows Event ID 4688 for processes ending in '.scr') with network connection logs (Zeek conn.log) originating from the same host IP address within a short time window. Since legitimate screensavers should not initiate network traffic, any outbound connection from a .scr process is highly suspicious. Use correlation analysis to link the host-based execution event with the network traffic and investigate the destination IP/domain. Enrich the destination IP with threat intelligence data."
          },
          {
            "description": "Execution of a screensaver executable (.scr file) from an unusual file path, such as a user's temporary directory, download folder, or email attachment folder.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688) for any process ending in '.scr'. Analyze the full file path of the executable. Establish a baseline of legitimate screensaver paths (e.g., `C:\\Windows\\System32`, `C:\\Windows\\SysWOW64`). Use frequency analysis and path string matching to flag any `.scr` file executing from non-standard or user-writable locations like `%APPDATA%`, `%TEMP%`, `Downloads`, or `Outlook Temp` folders. Use descriptive statistics on execution paths across the enterprise to identify rare outliers."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary elevating privileges via screensaver execution?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546.002",
        "name": "Screensaver",
        "evidence": [
          {
            "description": "A screensaver process spawns a child process whose executable hash matches a known privilege escalation tool.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688). Identify all parent processes with an image path ending in '.scr'. For each child process spawned by a screensaver, calculate the file hash of the child's executable. Correlate this hash against a CTI feed of known malicious tools, focusing on those used for privilege escalation (e.g., Mimikatz, PrintSpoofer, BadPotato variants). Alert on any confirmed match."
          },
          {
            "description": "Execution of a legitimate screensaver with specific, non-standard command-line parameters known to be associated with privilege escalation or UAC bypass techniques.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688) for legitimate screensaver executables (e.g., `logon.scr`, `scrnsave.scr`). Analyze the provided command-line arguments for each execution. Maintain a list of known malicious or suspicious argument patterns, particularly those used in UAC bypass techniques, and use regular expression matching to detect them. Alert on any execution that matches a known malicious command-line pattern."
          },
          {
            "description": "A screensaver process spawning suspicious child processes, such as a command shell (cmd.exe, powershell.exe), or a process running with a different, higher-integrity user context.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688), creating parent-child process relationship trees. Identify any parent process ending in '.scr'. Flag instances where the child process is an interactive shell (cmd.exe, powershell.exe, wscript.exe, cscript.exe), or where the `SubjectUserName` or integrity level of the child process is higher than that of the parent screensaver process (e.g., parent runs as user, child runs as SYSTEM). Use correlation analysis to link these suspicious process chains, as this is a strong indicator of privilege escalation."
          },
          {
            "description": "A screensaver process or its child process attempts to access or modify highly sensitive system resources, such as critical registry hives (SAM, SECURITY), or read memory from privileged processes like lsass.exe.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process creation events for screensavers (Windows Event ID 4688) with subsequent object access events (Windows Event ID 4663 for file/process access, Windows Event ID 4657 for registry access). Create a high-fidelity alert for any screensaver process (or its direct children) that attempts to gain read/write access to `lsass.exe` memory, the SAM hive (`C:\\Windows\\System32\\config\\SAM`), or critical security-related registry keys. Use frequency analysis to baseline normal object access for legitimate screensavers (which should be minimal to none) and detect any deviations."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]