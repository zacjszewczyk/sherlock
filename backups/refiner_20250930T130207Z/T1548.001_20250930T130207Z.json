[
  {
    "information_requirement": "Has the adversary escalated privileges using Setuid/Setgid?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1548.001",
        "name": "Setuid and Setgid",
        "evidence": [
          {
            "description": "Execution of a known malicious binary with the SUID bit set, or exploitation of a known vulnerability in a legitimate SUID binary.",
            "data_sources": [
              "auditd logs",
              "sysmon for Linux Event ID 1 (Process Creation)"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a list of file hashes or names of known malicious tools that abuse SUID. Monitor process execution logs (auditd, Sysmon for Linux Event ID 1) for the execution of any file on this list where the file possesses SUID/SGID permissions. Additionally, monitor for command-line arguments targeting known vulnerabilities (e.g., specific flags or exploit strings for a CVE) in legitimate SUID binaries like `pkexec`."
          },
          {
            "description": "Discovery activity to find SUID/SGID executables, or modification of file permissions to add the SUID/SGID bit to an executable.",
            "data_sources": [
              "auditd logs",
              "sysmon for Linux Event ID 1 (Process Creation)",
              "shell history logs"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process execution logs (auditd, Sysmon for Linux) and shell history for `find` commands with arguments like `-perm -4000` or `chmod` commands with arguments like `+s` or `4755`. Prioritize alerts for `chmod` being applied to shell binaries (e.g., `bash`, `sh`), interpreters (`python`, `perl`), or any file in a world-writable directory like `/tmp`. Use correlation analysis to link this activity to subsequent execution of the found/modified binary."
          },
          {
            "description": "A low-privilege user executes a legitimate SUID binary in a way that spawns a root-level shell or child process.",
            "data_sources": [
              "auditd logs",
              "sysmon for Linux Event ID 1 (Process Creation)"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal command-line arguments and parent-child process relationships for common SUID binaries (e.g., `passwd`, `sudo`). Monitor process execution logs (auditd, Sysmon for Linux) for executions of these binaries by non-root users that result in a child process of a shell (`bash`, `sh`, etc.) running with an effective UID of 0 (root). Use process tree analysis to detect this anomalous sequence."
          },
          {
            "description": "An outbound network connection is initiated from a process that gained root privileges through SUID binary execution.",
            "data_sources": [
              "auditd logs",
              "sysmon for Linux Event ID 1 (Process Creation)",
              "sysmon for Linux Event ID 3 (Network Connection)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process execution data with network connection logs. Identify processes running with an effective UID of 0 (root) whose parent process was run by a non-root user. If such a privileged process initiates an outbound network connection (Sysmon for Linux Event ID 3, Zeek conn.log), flag it as highly suspicious. Use correlation analysis on process ID, timestamp, and user context to link the privilege escalation to the network activity. Analyze destination IPs against threat intelligence and use frequency analysis to detect rare destinations."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using Setuid/Setgid?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1548.001",
        "name": "Setuid and Setgid",
        "evidence": [
          {
            "description": "A file with the SUID or SGID bit set matches the hash of a known malicious tool, backdoor, or cryptominer.",
            "data_sources": [
              "File integrity monitoring logs",
              "Results from periodic file system scans"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Periodically scan the entire file system for all files with the SUID or SGID bit set (e.g., `find / -type f \\( -perm -4000 -o -perm -2000 \\)`). Calculate the hash (e.g., SHA256) of each discovered file. Compare these hashes against a threat intelligence database of known malicious files. Alert on any matches."
          },
          {
            "description": "The SUID or SGID bit is present on an unusual file type (e.g., shell script, interpreter) or a file in an unexpected location (e.g., /tmp, /dev/shm, user home directory).",
            "data_sources": [
              "File integrity monitoring logs",
              "Results from periodic file system scans"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a baseline allowlist of legitimate SUID/SGID binaries and their standard paths (e.g., `/usr/bin/passwd`). Periodically scan the file system for all SUID/SGID files and compare them against this baseline. Flag any SUID/SGID file that is not on the list, especially if it's a shell interpreter (`bash`, `python`, `perl`), a script, or located in a non-standard or world-writable directory."
          },
          {
            "description": "A recently created or modified file has its SUID/SGID bit set, indicating a potential backdoor being planted for persistent access.",
            "data_sources": [
              "auditd logs",
              "sysmon for Linux Event ID 1 (Process Creation)",
              "sysmon for Linux Event ID 11 (File Create)"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for file creation events (Sysmon for Linux Event ID 11) followed closely by a `chmod` process execution (Sysmon for Linux Event ID 1) that adds SUID/SGID bits to the newly created file. Use time series analysis or set a short time window (e.g., < 5 minutes) to correlate these two events. Alert on any file created and made SUID/SGID, particularly in unusual locations."
          },
          {
            "description": "A legitimate but rarely used SUID binary is executed by a user or service account that has no valid business reason for its use, indicating abuse of a misconfiguration.",
            "data_sources": [
              "auditd logs",
              "sysmon for Linux Event ID 1 (Process Creation)"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Profile the normal execution of all SUID/SGID binaries across the environment, recording which users/service accounts execute them and with what frequency. Use descriptive statistics (frequency counts, mean) to build a baseline of normal activity. Monitor for executions that are statistical outliers using methods like IQR or Z-scores, such as a web service account (`www-data`) executing `/usr/bin/mount` or an application account executing `passwd`. Use linear regression to detect anomalous spikes in the usage of a specific SUID binary."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]