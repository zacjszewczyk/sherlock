[
  {
    "information_requirement": "Is the adversary maintaining persistence using modified Security Support Providers?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.005",
        "name": "Security Support Provider",
        "evidence": [
          {
            "description": "A known malicious DLL filename is added to the Security Packages registry key.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4657 (A registry value was modified) for changes to `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages` or `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages`. Compare the newly added DLL filename from the event data against a curated threat intelligence list of known malicious SSP DLL names (e.g., 'mimilib.dll', 'wcespy.dll'). Trigger a high-priority alert on any match."
          },
          {
            "description": "An unsigned or abnormally rare DLL is added to the Security Packages registry key, deviating from the established enterprise baseline of legitimate SSPs.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of legitimate, signed DLLs listed in the `Lsa\\Security Packages` registry keys across all endpoints and servers. Monitor Windows Event ID 4657 for any modification to these keys. For any newly added DLL, trigger a process to validate its digital signature against trusted publishers. Use frequency analysis (descriptive statistics) to identify DLLs that are rare or unique to a single host. An unsigned or low-prevalence DLL added to this key is highly suspicious and requires immediate investigation."
          },
          {
            "description": "The lsass.exe process initiates an outbound network connection, particularly after a system reboot following a suspicious registry modification.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4657",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate system startup events (Windows Event ID 6005) with network connection logs (Zeek conn.log) from the same host. While Zeek does not provide process attribution, hunt for any anomalous outbound connections from a host shortly after a reboot, especially to non-standard ports or IP addresses with poor reputation. Prioritize hosts that recently had an SSP registry modification (Windows Event ID 4657). Use time series analysis on a host's post-reboot connection patterns to spot deviations from its baseline."
          },
          {
            "description": "A process requests a handle to lsass.exe with access rights sufficient for memory scraping, indicative of in-memory credential dumping by a malicious SSP.",
            "data_sources": [
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Enable auditing for process object access (Audit Handle Manipulation) and configure a System Access Control List (SACL) on the lsass.exe process to log handle requests. Monitor Windows Event ID 4656 for processes requesting handles to lsass.exe with access masks indicative of memory reading (e.g., `PROCESS_VM_READ` - 0x10). Establish a baseline of legitimate processes that interact with LSASS (e.g., `csrss.exe`, `services.exe`) and use frequency analysis to alert on any outliers or processes not on the allowlist requesting such access, especially after a system reboot."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting privilege escalation by abusing Security Support Providers?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.005",
        "name": "Security Support Provider",
        "evidence": [
          {
            "description": "Execution of a known privilege escalation tool or script that automates the modification of Security Support Providers.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for process creation events, including command-line arguments. Use regular expressions and a maintained list of known tool names, script modules, or command-line patterns (e.g., PowerSploit's `Install-SSP`, `Invoke-Mimikatz -Command 'privilege::debug' 'misc::memssp'`) to detect their execution. Correlate the execution with the user context and alert immediately if such a tool is run by a non-administrative user."
          },
          {
            "description": "The Security Packages registry key is modified by a process running in a non-administrative user context.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4657 for any modification to `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages` or `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages`. Scrutinize the 'Subject User Name' and 'Process Name' fields in the event data. Alert with the highest priority if the modification is attributed to any user account that is not 'SYSTEM' or a member of the local or domain 'Administrators' group, as this indicates a likely successful bypass of security controls to achieve privilege escalation."
          },
          {
            "description": "A sequence of events showing a non-administrative user executing a suspicious process, followed immediately by modification of the Security Packages registry key.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Use time-based correlation analysis to link a chain of suspicious activities. Hunt for a non-administrative user launching an unusual or suspicious process (e.g., a script, a downloaded executable - Event 4688), followed within a very short time window (e.g., under 1 minute) by a modification to the `Lsa\\Security Packages` registry key (Event 4657) attributed to that same user or process. Alert on this sequence as a high-confidence privilege escalation event in progress."
          },
          {
            "description": "Anomalous process execution under the SYSTEM context occurs after a system reboot, following a suspicious modification to the Security Packages registry key by a non-administrative user.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Windows Event ID 6005"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "First, detect a suspicious SSP registry modification (Windows Event ID 4657), particularly one performed by a non-admin. Flag the host. Following the next system reboot (Windows Event ID 6005), monitor all process creation events (Windows Event ID 4688) on that host. Alert on any processes running as `NT AUTHORITY\\SYSTEM` that deviate from the host's established post-reboot baseline. The spawning of interactive shells (`cmd.exe`, `powershell.exe`) or networking tools (`net.exe`, `ipconfig.exe`) as SYSTEM post-reboot on such a host is a strong indicator of successful privilege escalation."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]