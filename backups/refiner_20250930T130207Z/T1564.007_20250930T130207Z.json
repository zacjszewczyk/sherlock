[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using VBA stomping?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.007",
        "name": "VBA Stomping",
        "evidence": [
          {
            "description": "Office document hash matches a known malicious file, or an Office application initiates a network connection to a known malicious command and control (C2) IP address or domain.",
            "data_sources": [
              "Zeek file.log",
              "Zeek conn.log",
              "Windows Event ID 11"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Extract file hashes from documents transferred over the network (Zeek file.log) or created on endpoints (Windows Event ID 11). Correlate these hashes against a threat intelligence feed of known malicious files. Separately, inner join network connection logs (Zeek conn.log) where the source is an Office application with a CTI feed of known malicious C2 IPs and domains. Alert on any match."
          },
          {
            "description": "Structural anomalies within an MS Office document's VBA project, such as a mismatch between VBA source code and compiled p-code, detected by specialized file parsers.",
            "data_sources": [
              "Zeek file.log",
              "Output from file analysis tools (e.g.",
              "Olevba)"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Implement a file analysis pipeline. Extract MS Office documents from network traffic (Zeek file.log). Submit files for automated analysis using a VBA parsing tool (e.g., Olevba). Search the tool's output for specific keywords indicating stomping, such as 'VBA Stomping' or 'P-code contains suspicious instructions not present in source code'. Generate a high-severity alert for any files flagged with these specific patterns and correlate with network source information."
          },
          {
            "description": "An MS Office application (e.g., winword.exe, excel.exe) spawns a child process commonly used for malicious execution, such as a scripting engine or LOLBAS.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for all parent-child process relationships. Establish a baseline of normal child processes for Office applications across the enterprise. Alert on any deviations, particularly the creation of `powershell.exe`, `cmd.exe`, `wscript.exe`, `cscript.exe`, `mshta.exe`, `rundll32.exe`, or `certutil.exe`. Analyze the command-line arguments of these child processes for high entropy (indicating obfuscation), suspicious keywords like `IEX` or `DownloadString`, or execution from unusual file paths (e.g., %APPDATA%). Use correlation analysis to link the process creation event to a recently opened document."
          },
          {
            "description": "An MS Office application initiates an outbound network connection exhibiting anomalous characteristics, such as connecting to an unusual destination or using non-standard protocols.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 3"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Zeek conn.log and Windows Event ID 3 (Sysmon Network Connection) for all network connections initiated by Office processes. Establish a baseline of legitimate destination IPs, domains, and ports for these applications. Use time series analysis to detect anomalous data transfer volumes or connection frequencies. Flag connections to non-standard ports, dynamic DNS domains, or IPs with low reputation scores. Calculate the entropy of requested domain names to identify potential Domain Generation Algorithms (DGAs) and use linear regression to detect anomalous growth in outbound traffic from a single host's Office applications."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]