[
  {
    "information_requirement": "Has the adversary collected and staged data using custom archiving methods?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1560.003",
        "name": "Archive via Custom Method",
        "evidence": [
          {
            "description": "A process executes with a name, hash, or command-line argument matching threat intelligence for custom archiving tools or scripts, or exhibits high command-line entropy.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, particularly those of privileged users and those hosting sensitive data.",
            "action": "For each process creation event (Windows Event ID 4688), perform three checks. Symbolic Logic: Compare the process hash and name against a threat intelligence feed of known custom archivers. Also, use a regex rule to match suspicious command-line patterns (e.g., `powershell.exe -e`, `certutil -encode`). Statistical Method: Calculate the Shannon entropy of the command-line arguments. Alert if the entropy for a process like `powershell.exe` exceeds the 95th percentile of its historical baseline, suggesting obfuscation. Machine Learning: Use a pre-trained classification model (e.g., Random Forest) that uses features like command-line entropy, argument length, and parent process to score the event's likelihood of being malicious. An alert is generated for high-scoring events."
          },
          {
            "description": "A single process reads an anomalously high number of distinct files from sensitive directories and writes to a single file in a staging location, inconsistent with known backup or software activity.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User profile directories (Documents, Desktop), file servers, and common staging directories (e.g., %TEMP%, %APPDATA%) on endpoints and servers.",
            "action": "Correlate process creation (Windows Event ID 4688) with file access (Windows Event ID 4663). Symbolic Logic: Alert if a process not on an organizational allowlist of backup/archiving tools reads from >100 distinct file paths in user directories within 5 minutes and then writes to a single file in a staging directory like C:\\Users\\Public\\. Statistical Method: For each process, calculate the ratio of unique files read to files written over a 10-minute window. Establish a baseline for this ratio for common processes. Alert if a process deviates by more than 3 standard deviations from its peer group's baseline. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features like file read count, file write count, unique directories accessed, and process path. Identify and alert on clusters of activity that do not group with known, legitimate processes."
          },
          {
            "description": "An outbound network flow, not associated with a standard encrypted protocol (like TLS/SSH), exhibits sustained high byte entropy (>7.5 bits/byte) immediately following suspected on-host data collection.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, particularly firewalls and routers capable of generating NetFlow or hosting Zeek sensors.",
            "action": "Analyze outbound network traffic from hosts with prior suspicious activity alerts. Symbolic Logic: Create a rule that triggers when a host previously flagged for anomalous file access initiates an outbound connection in `Zeek conn.log` on a non-standard port (e.g., not 80, 443, 22) with a payload size >10MB. Statistical Method: Using Zeek's file analysis framework or an integrated packet capture tool, calculate the byte entropy for connection payloads. Alert when the entropy of a flow's payload is above the 98th percentile for its destination port, excluding known encrypted protocols. Machine Learning: Train a time-series anomaly detection model (e.g., LSTM Autoencoder) on per-host network flow features (bytes out, duration, packets out). Alert when the model reports a high reconstruction error, indicating a deviation from the host's normal network behavior profile, especially if correlated with high payload entropy."
          },
          {
            "description": "A common, legitimate process (e.g., WINWORD.EXE) spawns an unusual child process (e.g., powershell.exe) that is statistically rare for that parent and which subsequently performs extensive file access.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, with a focus on systems running common business applications (e.g., Microsoft Office, web browsers).",
            "action": "Analyze parent-child process relationships from Windows Event ID 4688. Symbolic Logic: Maintain and alert on a static list of forbidden parent-child relationships (e.g., `Acrobat.exe` spawning `cmd.exe`). Statistical Method: For each parent process name, calculate the frequency of all its child process names across the enterprise over a 30-day period. Alert when a parent spawns a child process that is in the bottom 1st percentile of frequency for that parent. Machine Learning: Use a graph-based algorithm to model all observed process chains. Apply a community detection algorithm to find normal clusters of activity. Flag any new process chain that bridges two otherwise separate communities (e.g., a Microsoft Office process spawning a system administration tool) as a high-risk anomaly."
          },
          {
            "description": "A large file (>50MB) is created in a common staging directory by a non-backup process, and is followed within minutes by a large outbound network connection from the same host.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Common staging directories (e.g., C:\\Windows\\Tasks, %TEMP%, Recycle Bin) on endpoints and servers, and network egress points.",
            "action": "Correlate file system, process, and network events by host and time. Symbolic Logic: Alert when a file creation event (Windows Event ID 4663) for a file >50MB in `%TEMP%` by a process not in an allowlist (e.g., `['backup.exe', 'msiexec.exe']`) is followed within 5 minutes by an outbound `Zeek conn.log` flow from the same host with `orig_bytes` > 50MB. Statistical Method: Calculate the 95th percentile for file sizes created in staging directories. Also calculate the 95th percentile for outbound flow sizes (`orig_bytes`) per host. Alert when both a file creation and a subsequent network flow from the same host exceed these respective thresholds in a short time window. Machine Learning: Implement a sequence analysis model (e.g., Hidden Markov Model) to learn common event sequences. Flag improbable sequences, such as a large file write followed immediately by a large data egress to a new destination, as suspicious."
          },
          {
            "description": "An outbound network connection from a host shows a data volume or duration that is a statistical outlier compared to its 30-day baseline, and the destination is a newly observed or low-reputation IP/domain.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and enterprise DNS servers.",
            "action": "Analyze outbound network connections from `Zeek conn.log` and `dns.log`. Symbolic Logic: Alert on any outbound connection where the destination IP is on a threat intelligence blocklist or the FQDN from the `Zeek dns.log` query was first registered in the last 7 days. Statistical Method: For each host, maintain a 30-day rolling baseline (mean and standard deviation) of outbound `orig_bytes` per connection. Alert if a new connection's `orig_bytes` exceeds 4 standard deviations above the mean. Further increase risk if the destination IP is in the bottom 5th percentile of most frequently contacted IPs for that host. Machine Learning: Use a one-class SVM (Support Vector Machine) trained on normal `Zeek conn.log` features (duration, `orig_bytes`, protocol, destination port) for each host to define its 'normal' outbound profile. Classify new connections in real-time and alert on any connection identified as an outlier."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]