[
  {
    "information_requirement": "Is the adversary conducting reconnaissance against the organization's public code repositories?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1593.003",
        "name": "Code Repositories",
        "evidence": [
          {
            "description": "Alerts from an external secret scanning service indicating the presence of specific, known-format secrets (e.g., API keys, passwords, private keys) in public code commits.",
            "data_sources": [
              "Secret scanning service logs (e.g.",
              "GitGuardian",
              "GitHub Advanced Security alerts). Note: This data is external to standard network/host logs and is critical for direct detection."
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Deploy and configure a real-time secret scanning service across all public organizational code repositories. Create high-priority alerts for commits matching predefined patterns for secrets (e.g., AWS keys, GCP keys, passwords). Action involves immediate triage: validate the finding, revoke the secret, remove it from commit history, and investigate the commit author and timeline. This is a selector-based detection for specific leaked credentials."
          },
          {
            "description": "Anomalous patterns of interaction with organizational public repositories, such as cloning or forking by suspicious or newly created user accounts.",
            "data_sources": [
              "GitHub/GitLab Audit Logs. Note: This data is external to standard network/host logs."
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Git platform audit logs for repository interaction patterns. Correlate clone/fork events with user account age and reputation; flag activity from accounts created within the last 24-48 hours, which is a common pattern for reconnaissance accounts. Use time series analysis to detect anomalous spikes in clone/fork activity for sensitive repositories. Use descriptive statistics to identify unusual source IP geolocations for this activity and investigate accounts associated with clusters of anomalous behavior."
          },
          {
            "description": "Observed search activity or cloning behavior indicative of 'impossible knowledge', where an external entity interacts with non-public or obscure internal project repositories that have been accidentally exposed.",
            "data_sources": [
              "GitHub/GitLab Audit Logs",
              "Zeek conn.log. Note: Git platform data is external to standard logs."
            ],
            "data_platforms": [
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor access logs for all organizational repositories, including those intended to be private. Investigate any external cloning, forking, or access to repositories that are not meant for public consumption. This behavioral detection assumes that any interaction with a supposedly private repo is suspicious. Correlate access times with any anomalous outbound connections from internal systems (via Zeek conn.log) to Git platforms, which could indicate an automated tool running internally to exfiltrate or misconfigure repositories."
          },
          {
            "description": "An authentication attempt to an internal or cloud service using an exact API key, password, or credential that was recently identified as exposed in a public code repository.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain an up-to-date list of all known leaked secrets sourced from a secret scanning service. Create a high-fidelity detection rule that cross-references this list of specific selectors against credentials observed in authentication logs (Windows Event IDs 4624, 4625) and API requests (Zeek http.log headers, URI, or body). Any match is a strong indicator of compromise originating from the leak and should be investigated immediately."
          },
          {
            "description": "A password spraying attack pattern where failed login attempts target a list of usernames matching the organization's developers known to contribute to public code repositories.",
            "data_sources": [
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Aggregate failed login events (Windows Event ID 4625) across all external-facing services (e.g., VPN, OWA, M365). Identify password spraying patterns where one or more source IPs attempt to authenticate against multiple accounts with a small set of passwords. Correlate the list of targeted usernames with a known list of developers who contribute to public repositories. Analyze the time delta and frequency of attempts (e.g., >20 accounts targeted from one IP in <10 minutes) to confirm the pattern."
          },
          {
            "description": "Anomalous network traffic from an external source to internal, non-public services or APIs whose endpoints or architecture details could only have been discovered from information within a code repository.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal external traffic patterns to internal services. Monitor Zeek conn.log and dns.log for connection attempts or DNS queries from external IPs to internal-only hostnames, obscure ports, or specific API endpoints that are not publicly documented. Such 'impossible knowledge' attempts are a behavioral indicator that the adversary is using information gleaned from a private source like a code repository. Use frequency analysis to identify low-frequency, high-value connection attempts to rare services and investigate the source."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]