[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by placing artifacts in excluded file paths? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.012",
        "name": "File-Path Exclusions",
        "evidence": [
          {
            "description": "A file written to or executed from a known security software exclusion path has a hash that matches a known-bad IOC, or its name matches a regular expression pattern associated with malicious tools.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of all Windows endpoints and servers, particularly directories configured as exclusions in endpoint security solutions.",
            "action": "First, compile and maintain a centralized, up-to-date list of all security software exclusion paths from endpoint security configurations. 1. (Symbolic) Ingest file creation (Windows Event ID 4663) and process creation (Windows Event ID 4688) events occurring within these paths. For each event, calculate the file hash and compare it against a high-fidelity threat intelligence feed of known malicious file hashes; alert on any match. Concurrently, apply a list of regular expressions designed to detect names of common hacking tools or randomly generated strings. 2. (Statistical) For each exclusion path, establish a baseline for the frequency of file writes per host over a 30-day period. Calculate the 99th percentile for this frequency. Trigger an alert for any host that exceeds this percentile in a 24-hour window, indicating an anomalous volume of file creation activity. 3. (Machine Learning) Train a decision tree classifier on file metadata (e.g., file extension, entropy, signer status, name length) and process context (parent process name, user context) for files created in exclusion paths. Use the model to classify new file write events as 'benign' or 'suspicious' and alert on 'suspicious' classifications."
          },
          {
            "description": "A process is created with command-line arguments that query security software exclusion settings or use built-in utilities to write or move files into those paths.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Command-line interface and PowerShell execution logs on all Windows endpoints and servers; Network gateways for observing download commands.",
            "action": "Continuously monitor process creation events (Windows Event ID 4688) for command-line arguments. 1. (Symbolic) Maintain a list of command-line patterns indicative of exclusion discovery (e.g., 'reg query HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Exclusions', 'Get-MpPreference') or file manipulation into excluded paths (e.g., 'copy *.exe C:\\\\AV_Exclusion\\\\', 'powershell -c \"Invoke-WebRequest ... -OutFile C:\\\\Vendor\\\\Exclude\\\\\"'). Alert on any exact or partial matches. 2. (Statistical) For common processes like 'powershell.exe' and 'cmd.exe', establish a baseline of command-line argument length and entropy. Flag any execution where the command-line entropy is a statistical outlier (e.g., > 3 standard deviations from the mean for that parent process), which can indicate obfuscated commands. 3. (Machine Learning) Use a clustering algorithm like DBSCAN on TF-IDF vectorized command-line arguments from processes interacting with exclusion paths. Investigate new clusters that do not correspond to known administrative or benign activity, as they may represent novel adversary techniques."
          },
          {
            "description": "A file created or executed within a security software exclusion path is unsigned, has abnormally high entropy, or has a file type inconsistent with the established baseline for that specific directory.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of endpoints and servers; Application directories commonly added to exclusion lists (e.g., database folders, development toolchains).",
            "action": "For all file writes (Windows Event ID 4663) and executions (Windows Event ID 4688) in exclusion paths, enrich the event data with file properties. 1. (Symbolic) Create a rule to alert on any executable file (.exe, .dll, .ps1, .bat) created in an exclusion path that is not digitally signed by a publisher on an approved allow-list. 2. (Statistical) For each specific exclusion path, profile the normal distribution of file extensions, Shannon entropy scores, and parent process names. Generate an alert when a new file's properties fall outside the 98th percentile of the established baseline (e.g., a file with an entropy score of >7.5 in a path where the average is 4.5, or a '.bat' file in a path that normally only contains '.dat' files). 3. (Machine Learning) Develop a one-class SVM (Support Vector Machine) model trained on the features (e.g., entropy, file size, extension, parent process) of legitimate files typically found in these exclusion paths. Use the model to identify new files that are anomalous and likely do not belong to the legitimate distribution, flagging them for review."
          },
          {
            "description": "A process initiates a network download of an executable or script from an external source, and within a short time window, the same process or its child writes a file to a security exclusion path.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies); DNS servers; File systems on endpoints and servers.",
            "action": "Correlate network and endpoint logs based on Process ID (PID) and time. 1. (Symbolic) Create a SIEM rule that triggers when a process (PID from Windows Event ID 4688) associated with a network download of an executable MIME type (from Zeek files.log) from a low-reputation IP address writes a file (Windows Event ID 4663) to a known exclusion path within a 5-minute window. 2. (Statistical) For all downloads that result in a file write to an exclusion path, analyze the source IP's Autonomous System Number (ASN) and country of origin from Zeek conn.log. Calculate the historical frequency of downloads from each ASN to your environment. Assign a high risk score to events originating from ASNs in the bottom 5th percentile of frequency. 3. (Machine Learning) Use a time-series anomaly detection model (e.g., ARIMA or LSTM) on the volume of correlated 'download-then-write-to-exclusion' events per hour. An alert is generated when the observed volume significantly deviates from the forecasted volume, indicating a potential mass deployment of malicious tools."
          },
          {
            "description": "A user session or process lineage exhibits exclusion discovery behavior, such as querying registry keys, followed by file write or execution activity within one of the discovered or default exclusion paths.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry on endpoints and servers (specifically HKLM\\SOFTWARE\\*\\Exclusions); Command-line interface on all endpoints; File systems on endpoints and servers.",
            "action": "Monitor for sequential behaviors on a per-host and per-user basis. 1. (Symbolic) Implement a stateful rule that tracks hosts. If a process executes a known discovery command (e.g., `reg query` on an exclusion path, detected via Windows Event ID 4688), the rule places the host in a 'Discovery' state for 60 minutes. If, while in this state, a file is written to an exclusion path (Windows Event ID 4663) by the same user, trigger a high-severity alert. 2. (Statistical) On a per-host basis, calculate the conditional probability of a file write to an exclusion path given a recent discovery event, P(Write|Discovery). Compare this to the baseline probability P(Write) using a chi-squared test. A statistically significant increase in this conditional probability for a given host indicates suspicious chained activity. 3. (Machine Learning) Model endpoint activity as a process-file-registry graph. Use a graph neural network (GNN) trained to identify malicious subgraphs. A subgraph showing a process node that reads an exclusion registry key node and subsequently creates an edge to a new file node within that exclusion path would be classified as a high-confidence T1564.012 indicator."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]