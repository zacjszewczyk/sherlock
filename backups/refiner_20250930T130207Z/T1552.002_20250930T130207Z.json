[
  {
    "information_requirement": "Is an adversary attempting to harvest credentials by querying the Windows Registry?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1552.002",
        "name": "Credentials in Registry",
        "evidence": [
          {
            "description": "A process creation event is observed where the process's file hash matches a known credential dumping utility (e.g., Lazagne, Mimikatz) or a registry access event is logged for a hardcoded path known to be targeted by specific malware families (e.g., WinSCP, PuTTY session keys).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Tier 0/1/2 Servers, Developer Workstations, Privileged Access Workstations",
            "action": "Symbolic: Continuously compare file hashes from process creation events (Windows Event ID 4688) against a threat intelligence feed of known credential dumping tools. If registry access auditing is enabled, monitor Windows Event ID 4663 for access to specific, hardcoded registry keys known to be targeted by malware for credentials (e.g., `HKCU\\Software\\Martin Prikryl\\WinSCP 2\\Sessions`, `HKCU\\Software\\SimonTatham\\PuTTY\\Sessions`). Alert on any confirmed matches. Statistical: For registry keys known to store credentials, establish a baseline of access frequency per host. Using Windows Event ID 4663, calculate the 95th percentile for daily access counts to these keys. An alert is triggered if the daily access count for any host exceeds this threshold. Machine Learning: Train a decision tree classifier using features from Windows Event ID 4688 and 4663, such as process name, parent process, user context, and target registry key. Label historical data with known good (e.g., PuTTY.exe accessing its own keys) and bad (known incidents) activity. Deploy the model to classify new registry access events in real-time as either benign or suspicious."
          },
          {
            "description": "A command line execution (e.g., `reg.exe`) or PowerShell script block is recorded containing keywords associated with credential searching (e.g., 'password', 'pwd', 'api_key') or targeting registry paths for applications known to store credentials (e.g., VNC, FileZilla).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": "Symbolic: Monitor process command lines (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104) for patterns indicative of credential hunting. Use regular expressions to search for: 1) `reg.exe query` or PowerShell cmdlets (`Get-ItemProperty`, `Get-ChildItem -Recurse`) combined with keywords like 'password', 'pwd', 'privatekey', 'credentials', 'api_key'. 2) Queries targeting known software registry paths for stored credentials (e.g., `VNC`, `PuTTY`, `FileZilla`, `WinSCP`, `mRemoteNG`). Statistical: For each command line execution, calculate the Shannon entropy of the command string. Establish a baseline entropy score for common `reg.exe` and PowerShell commands. Flag commands with entropy scores exceeding 3 standard deviations from the mean, as this can indicate obfuscated or complex search strings. Machine Learning: Use a Natural Language Processing (NLP) model to classify command line strings from Event ID 4688 and 4104 into 'credential hunting' or 'benign'. Fine-tune the model on a labeled dataset of commands specific to the organization's environment to identify novel or obfuscated search patterns that regex might miss."
          },
          {
            "description": "A process (e.g., `WINWORD.EXE`) or user account (e.g., a standard user account) accesses a registry key known to store credentials, where this combination of process/user and registry key has not been observed in historical baseline data.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Servers, User Workstations, Remote Access Servers",
            "action": "Symbolic: Create a static watchlist of non-standard processes (e.g., `WINWORD.EXE`, `CHROME.EXE`, `cscript.exe`) and alert whenever any of these processes access known credential-related registry keys (e.g., PuTTY, WinSCP sessions) via Windows Event ID 4663. Statistical: Establish a baseline of normal process-key and user-key interactions over a 30-day period. For each new registry access event (Event ID 4663), check if the (process name, registry key path) tuple is a rare event (e.g., occurring less than 5 times in the baseline period across the enterprise). Generate a low-priority alert for rare events for analyst review. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features extracted from registry access events (Event ID 4663), such as the user account, process name, and target key. Identify clusters of normal behavior (e.g., PuTTY.exe accessing its own keys). Flag any event that does not belong to a known 'normal' cluster as an anomaly for investigation."
          },
          {
            "description": "A suspicious registry query event (as defined in other evidence) is observed on a host, and within a 15-minute window, is followed by either a successful interactive/remote logon (Type 2, 3, 10) on the same or another host, or an outbound network connection to a sensitive internal asset.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Network Egress/Ingress Points, Internal Network Segments",
            "action": "Symbolic: Create a SIEM correlation rule that triggers when: 1) An alert for a suspicious registry query (from Evidence 1, 2, or 3) fires for a specific source host. AND 2) Within 15 minutes, a successful logon (Windows Event ID 4624, Logon Type 2, 3, or 10) is observed originating from that same source host's IP address to another system. Escalate the alert priority if the logon account is different from the account that performed the registry query. Statistical: For each host that triggers a suspicious registry query alert, monitor its subsequent network activity (Zeek conn.log). Calculate a baseline for the number and type of outbound connections per hour for that host. If, after a registry query alert, the number of new service connections (e.g., RDP, SSH, SMB) from that host exceeds the 99th percentile of its normal baseline, generate a high-priority alert. Machine Learning: Develop a Hidden Markov Model (HMM) where the hidden states are 'Benign Activity' and 'Post-Credential-Harvesting'. The observable events are sequences of system events (registry query, process creation, network connection, logon). Train the model on known attack chains. In production, feed the event stream from each host into the model. An alert is triggered when the model transitions to the 'Post-Credential-Harvesting' state with a high probability."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]