[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by spoofing security alerts?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1562.011",
        "name": "Spoof Security Alerting",
        "evidence": [
          {
            "description": "Execution of a process whose file hash or associated network indicators match known tools or malware that perform security alert spoofing.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Continuously monitor process creation events (Windows Event ID 4688) and correlate process hashes against a threat intelligence feed of known malware that uses T1562.011. Concurrently, inner join network connection logs (Zeek conn.log) with a list of known malicious command and control (C2) IPs/domains associated with these tools. Alert on any matches."
          },
          {
            "description": "Use of specific command-line arguments or process names known to be used by tools that generate spoofed security messages.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze command-line arguments from process creation events (Windows Event ID 4688). Use regular expression matching to search for patterns or specific strings used by tools known to generate fake security messages, such as commands that write to specific log files or use system utilities like 'msg.exe' with security-related text. Maintain and update a library of these patterns based on malware analysis reports."
          },
          {
            "description": "Anomalous process ancestry where a legitimate security tool process spawns an unexpected child process, such as a script interpreter, which may be used to generate spoofed alerts.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "From process creation logs (Windows Event ID 4688), build and analyze process lineage trees. Establish a baseline of normal child processes for legitimate security tools (e.g., MsMpEng.exe, SavService.exe). Alert on any deviations, such as a security tool spawning cmd.exe, powershell.exe, cscript.exe, or other unsigned or unusual binaries. Correlate this anomalous process creation with subsequent log entries that appear to be security alerts."
          },
          {
            "description": "A logical contradiction where security software logs a 'healthy' status while other telemetry simultaneously indicates a security control is disabled or a compromise is active.",
            "data_sources": [
              "Windows Event ID 7036",
              "Windows Application Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a correlated search that triggers when a 'healthy' status event from a security tool (found in Windows Application Logs) occurs within a short time window (e.g., 1-5 minutes) of an event indicating a security service was stopped (Windows Event ID 7036), or when a high-confidence network indicator of compromise is detected (e.g., a connection from Zeek conn.log to a known malicious IP). This identifies a direct conflict between the reported status and the actual system state."
          },
          {
            "description": "Execution of a process that impersonates a legitimate security tool via file name or path and generates security-related log entries or network traffic.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a baseline of legitimate security tool process names, file paths, and parent processes. Monitor process creation events (Windows Event ID 4688) for executables with names that are typos or variations of real security tools or that run from non-standard directories (e.g., %TEMP%, C:\\Users\\Public). Correlate the activity of these suspicious processes with network connection events (Windows Event ID 5156 or Zeek conn.log) to unusual destinations or with security log writes. Use entropy measures on file paths to find unusually deep or random-looking paths."
          },
          {
            "description": "A statistical anomaly in the volume, timing, or content of security status reports, such as a sudden flood of generic 'healthy' messages or an abnormal cessation of reports.",
            "data_sources": [
              "Windows Event Logs (Application",
              "System)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Collect all security-related events from known security software sources (e.g., specific Windows Event Log providers). For each tool, establish a baseline for the frequency and timing of 'healthy' status reports using time series analysis. Alert on significant deviations using statistical methods like Inter-Quartile Range (IQR) or z-scores, flagging both unusual floods of 'healthy' reports and abnormal cessations of reporting. If message content is available, analyze the entropy of alert text to detect a shift towards overly generic or repetitive content."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]