[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by modifying the cloud resource hierarchy?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1666",
        "name": "Modify Cloud Resource Hierarchy",
        "evidence": [
          {
            "description": "A process execution event (Windows Event ID 4688) containing a known malicious hash or a command line matching a signature for a cloud attack tool, occurring on a host that also exhibits network connections (Zeek conn.log) to known command-and-control infrastructure within a 10-minute window.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint event logs (Domain Controllers, member servers, administrative workstations), Network egress points (Internet gateway, VPN concentrators)",
            "action": "First, implement symbolic logic by continuously matching the ProcessHash and CommandLine fields from Windows Event ID 4688 against a threat intelligence feed of known malicious cloud attack tool signatures. Concurrently, match the id.resp_h field in Zeek conn.log against a C2 IP/domain feed and alert on any co-occurrence within a 10-minute window on the same host. Second, apply a statistical method by calculating the baseline rate of connections to non-corporate, high-entropy domains for any host that executes cloud CLI/SDK commands; alert if a host executing a cloud command also shows a connection rate to such domains that is more than 3 standard deviations above its own 30-day baseline. Third, leverage machine learning by using a trained classification model (e.g., Random Forest) that takes features like process_name, command_line_entropy, parent_process_name (from EID 4688), and a boolean is_c2_connection (from Zeek conn.log correlation) as input to predict a 'Malicious Cloud Activity' probability score; alert on scores above a 0.9 threshold."
          },
          {
            "description": "A process creation event (Windows Event ID 4688) containing an exact command-line match for a sensitive cloud hierarchy modification API call (e.g., `aws organizations leave-organization`, `az account subscription transfer`) executed by an unauthorized user or system.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrative workstations, CI/CD pipeline servers, Cloud-integrated identity providers (e.g., ADFS servers)",
            "action": "First, apply symbolic logic by creating a high-severity, zero-tolerance rule that triggers an immediate alert upon observing a CommandLine in Windows Event ID 4688 that exactly matches a watchlist of sensitive commands, such as `aws organizations leave-organization`, `aws organizations create-account`, or `az account subscription transfer`. Second, use a statistical method by establishing a baseline of authorized users and hosts for these commands; alert if a command from the watchlist is executed by a user not on this 'power user' list, or if an authorized user's execution frequency for these commands exceeds the 99th percentile of their historical rate. Third, for machine learning, implement a sequence analysis model to detect anomalous command chains; an alert is triggered if a sensitive hierarchy modification command is preceded by an anomalous sequence of reconnaissance commands (e.g., `aws iam list-users`, `az role assignment list`) not typical for that user's workflow."
          },
          {
            "description": "Invocation of a cloud administrative tool (e.g., `aws.exe`, `az.exe`) from a source IP address, user account, or at a time of day that deviates significantly from the established historical baseline for that specific user or host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints and servers with cloud SDKs/CLIs installed, VPN access logs, Network flow data from core switches",
            "action": "First, for a symbolic approach, create a watchlist of non-administrative user groups (e.g., 'Marketing', 'Sales') and trigger an alert if any user from these groups executes processes like `aws.exe` or `az.exe` as seen in Windows Event ID 4688. Second, apply a statistical method by building a historical profile for each user's cloud CLI usage including typical source IP subnets and normal login hours; alert if a user executes a cloud command from an IP outside their typical subnets or at a time that is more than 3 standard deviations from their mean usage time. Third, use a machine learning approach by applying time-series analysis on the volume of network connections to cloud management endpoints (e.g., `management.azure.com`) from Zeek conn.log, aggregated per hour; an anomaly detection model (e.g., SARIMA) should alert when the observed traffic volume exceeds the predicted upper confidence interval."
          },
          {
            "description": "A sequence of events on a single host within a 60-minute window, beginning with process-level access to local cloud credential files (e.g., `type ~/.aws/credentials`), followed by the execution of a scripting engine (e.g., `powershell.exe`) that makes a direct network connection to a cloud management API endpoint.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations, Administrator workstations, Servers hosting automation scripts",
            "action": "First, use symbolic logic with a correlation rule that triggers if a process creation event (EID 4688) with command-line arguments accessing cloud credential files is followed within 15 minutes on the same host by a scripting process making a network connection (from Zeek conn.log) to a cloud management API endpoint. Second, apply a statistical method by calculating the entropy of command-line arguments for scripting engines making cloud API connections; alert if a command's entropy score is in the 95th percentile or higher, suggesting obfuscation. Third, implement a machine learning approach using a Hidden Markov Model (HMM) trained on benign administrative activity sequences (process creations and network connections); alert if an observed sequence of events has a very low probability of being generated by the trained 'benign' model, indicating a malicious workflow."
          },
          {
            "description": "The execution of a cloud hierarchy modification command (e.g., `aws organizations leave-organization`) on a host, co-occurring within a 5-minute window with commands intended to disable security services (e.g., `sc config WinDefend start=disabled`) or clear event logs (`wevtutil.exe cl Security`).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1102"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint event logs on administrative workstations and servers, Domain Controller security logs",
            "action": "First, use symbolic logic by creating a high-priority correlation rule that alerts if a process creation event (EID 4688) for a sensitive cloud command occurs on the same host and within 5 minutes of another process creation for a defense evasion command (e.g., `wevtutil.exe cl`, `net stop WinDefend`, `sc.exe config <service> start= disabled`), or a log-clearing event (EID 1102). Second, for a statistical method, profile the frequency of defense evasion commands per host; alert if such a command is executed on a host and the same host executes a cloud hierarchy modification command within a short timeframe, as this combination is statistically rare. Third, apply machine learning by training a classifier to identify a 'Host Pre-Attack State' based on features like recent process executions of `wevtutil` or `sc`; if the classifier flags a host, automatically escalate the priority of any subsequent cloud administrative commands from that host for the next hour."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]