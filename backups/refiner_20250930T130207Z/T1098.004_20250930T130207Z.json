[
  {
    "information_requirement": "Is the adversary maintaining persistence using modified SSH authorized_keys?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1098.004",
        "name": "SSH Authorized Keys",
        "evidence": [
          {
            "description": "Successful SSH login using a public key originating from an IP address known to be malicious or not associated with legitimate administrative activity.",
            "data_sources": [
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Continuously correlate source IP addresses from successful public key authentication events in Zeek ssh.log against a cyber threat intelligence (CTI) feed of known malicious IPs (e.g., C2 servers, TOR exit nodes, known adversary infrastructure). Additionally, compare source IPs against a baseline list of legitimate administrative IP ranges. Alert on any matches from high-confidence malicious sources or any key-based logins from outside the established legitimate ranges."
          },
          {
            "description": "Execution of specific command-line patterns known to add or modify SSH authorized_keys files, particularly using redirection or in-place editing tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Using Windows Event ID 4688, monitor for process command lines containing regular expression patterns matching `echo .* >> .*authorized_keys`, `cat .* >> .*authorized_keys`, `tee -a .*authorized_keys`, or `sed -i .*authorized_keys`. The file path pattern should cover various user directories (e.g., `/home/*/.ssh/`, `/root/.ssh/`). Flag executions by unusual parent processes (e.g., web server processes), from suspicious file paths (e.g., /tmp), or as part of a decoded command string."
          },
          {
            "description": "An anomalous process, such as a web shell or a remotely executed script, modifies a user's authorized_keys file.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze the parent-child process relationships for any command that modifies an `authorized_keys` file (identified via Windows Event ID 4688). Establish a baseline of legitimate parent processes that might perform this action (e.g., `sshd`, `bash` initiated by a known admin). Use frequency analysis on parent process names and paths to flag modifications where the parent is anomalous, such as a web server process (`httpd`, `nginx`), a process running from `/tmp` or `/dev/shm`, or a known remote access tool. This focuses on the unusual origin of the modification."
          },
          {
            "description": "First-time use of a new public key for SSH authentication, especially when correlated with recent modification of the corresponding authorized_keys file.",
            "data_sources": [
              "Zeek ssh.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "From Zeek ssh.log, extract and maintain a baseline of all known public keys used for authentication per user account and per host. Alert on the first successful use of any previously unseen public key. For higher fidelity, use correlation analysis to link the timestamp of the first login with the new key against a recent file modification event (Windows Event ID 4688) targeting the user's `authorized_keys` file within a defined time window (e.g., the previous 24 hours). This sequence of modification followed by first use is a strong indicator of newly established persistence."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary gained elevated privileges using modified SSH authorized_keys?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege-Escalation",
    "indicators": [
      {
        "technique_id": "T1098.004",
        "name": "SSH Authorized Keys",
        "evidence": [
          {
            "description": "A successful SSH login to a high-privilege account (e.g., root, service accounts with sudo rights) originates from an IP address on a threat intelligence feed.",
            "data_sources": [
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Filter Zeek ssh.log for successful public key authentications targeting high-privilege user accounts (e.g., root, admin, or accounts in the wheel/sudo group). Correlate the source IP address of these specific connections with a high-confidence, continuously updated CTI feed of malicious IPs. Any match represents a high-priority alert indicating a potential adversary has gained privileged access."
          },
          {
            "description": "Modification of the SSH daemon configuration (`sshd_config`) to permit root login or weaken authentication rules, followed by a successful privileged login.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for any modifications to `/etc/ssh/sshd_config`. Specifically, pattern match for command-line arguments or script contents that enable or modify directives like `PermitRootLogin yes`, `PubkeyAuthentication yes`, or `PasswordAuthentication yes`. Correlate any such modification event with subsequent successful SSH logins to privileged accounts (especially root) from Zeek ssh.log that occur within a short time window (e.g., 1 hour) and may leverage the newly enabled method."
          },
          {
            "description": "Modification of a privileged account's authorized_keys file is immediately followed by the first-ever successful SSH login using a new key to that account.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a high-fidelity alert by using correlation analysis to detect a specific sequence of events: 1. A process creation event (Windows Event ID 4688) that modifies the `authorized_keys` file for a known privileged user (e.g., in `/root/.ssh/`). 2. A successful SSH login (from Zeek ssh.log) to that same privileged account using a previously unseen public key. Use time series analysis or rule-based correlation to detect this sequence occurring within a narrow timeframe (e.g., less than 5 minutes) and investigate immediately as a likely successful privilege escalation event."
          },
          {
            "description": "Execution of a cloud provider CLI command to inject an SSH key into a compute instance's user metadata is followed by a privileged SSH login using that key.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for command-line execution of cloud CLI tools known to manage SSH keys (e.g., `gcloud compute instances add-metadata`, `az vm user update`, `aws ec2-instance-connect send-ssh-public-key`). Extract the public key and target user/instance if possible. Correlate these command executions with subsequent successful SSH logins (from Zeek ssh.log) to the targeted instance's privileged accounts. A tight correlation between the CLI execution and a login with a new key is a strong behavioral indicator of privilege escalation in a cloud environment."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]