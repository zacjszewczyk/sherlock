[
  {
    "information_requirement": "Is an adversary performing external network reconnaissance to map our organization's network topology?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1590.004",
        "name": "Network Topology",
        "evidence": [
          {
            "description": "A statistically significant volume of connection attempts originating from a single external IP address that is present on one or more threat intelligence feeds (e.g., known scanners, TOR exit nodes, malicious IPs).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, Firewall logs, Cloud provider network flow logs",
            "action": "1. (Symbolic) Ingest multiple CTI feeds (e.g., known malicious IPs, vulnerability scanners, TOR exit nodes) into a SIEM. Create a rule that generates a high-priority alert for any connection attempt in Zeek conn.log where the originator's IP ('id.orig_h') matches an IP in the CTI lists. Maintain an allowlist of trusted partner IPs to reduce false positives. 2. (Statistical) For IPs on watchlists (not yet high-confidence blocklists), establish a baseline of connection attempts per hour. Alert if an IP's connection count exceeds 3 standard deviations above the mean for its watchlist category. 3. (Machine Learning) Use a classification model (e.g., Logistic Regression) trained on features like IP reputation score, ASN, country of origin, and historical connection frequency to assign a 'malicious scanner' probability score to each source IP. Anomaly detection alerts are triggered when this probability score surpasses a dynamic threshold."
          },
          {
            "description": "Observed network traffic from an external source containing signatures of reconnaissance tools, such as specific User-Agent strings in HTTP headers or TCP flag combinations (e.g., NULL, FIN, Xmas scans) used for OS fingerprinting.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing web servers, Application load balancers, DMZ",
            "action": "1. (Symbolic) Use regular expression matching on the 'user_agent' field in Zeek http.log to detect strings associated with common scanners (e.g., 'Nmap', 'ZMap', 'Masscan'). Create a detection rule for TCP packets in Zeek conn.log where the control flags are set to unusual combinations, such as FIN/PSH/URG ('Xmas scan') or no flags set ('NULL scan'). 2. (Statistical) Calculate the Shannon entropy of all User-Agent strings. Establish a baseline entropy range for legitimate browser traffic. Flag User-Agents with entropy scores falling in the bottom or top 5th percentile as potentially automated. 3. (Machine Learning) Train a time-series model (e.g., ARIMA) on the frequency of specific scan-related TCP flag combinations. An anomaly detection system built on this model would flag unexpected spikes in these scan types that deviate from the forecasted normal, indicating a possible coordinated scan."
          },
          {
            "description": "An external source IP initiates connections to a statistically anomalous number of distinct destination hosts (horizontal scan) or distinct destination ports (vertical scan) within a defined time window.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DMZ subnets, Public IP address ranges, Edge routers",
            "action": "1. (Symbolic) Implement a threshold-based rule, e.g., 'ALERT if a single id.orig_h connects to > 100 unique id.resp_h in 1 minute (horizontal scan)' or '> 50 unique id.resp_p on a single id.resp_h in 1 minute (vertical scan)'. 2. (Statistical) Over a 5-minute window, calculate for each source IP the fan-out ratio of unique destination IPs or ports to total connections. Use percentile analysis to flag sources in the 99th percentile as significant outliers indicative of scanning. 3. (Machine Learning) Apply a clustering algorithm (e.g., DBSCAN) to source IPs using features like `count(distinct destination_ip)`, `count(distinct destination_port)`, and `time_window_duration`. The model can automatically group IPs into clusters representing 'normal traffic', 'horizontal scanner', and 'vertical scanner' without pre-defined thresholds, identifying novel scanning patterns."
          },
          {
            "description": "A pattern of low-frequency, long-duration connection attempts from a rare or previously unseen external source targeting sensitive or non-standard ports (e.g., RDP, SSH, custom application ports).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Remote access gateways, Servers hosting sensitive applications",
            "action": "1. (Symbolic) Create a watchlist of sensitive but externally firewalled or rarely used ports (e.g., 3389, 22, 161). Generate an immediate alert if any external IP attempts a connection to a port on this list. 2. (Statistical) For each source IP, calculate the inter-arrival time between connection attempts to your network. A high mean and high variance in these times can indicate 'low and slow' scanning. Flag sources whose average inter-arrival time exceeds the 95th percentile of normal traffic patterns. 3. (Machine Learning) Apply a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) to the hourly count of connection attempts for high-value ports. This can detect subtle, long-term increases in probe activity that would be missed by short-window, volume-based detection methods."
          },
          {
            "description": "An external source sends packets sequentially across a contiguous IP range (e.g., x.x.x.1, x.x.x.2, x.x.x.3) to enumerate live hosts and infer firewall rules from the responses.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Organization's allocated CIDR blocks, Edge router logs, Network Address Translation (NAT) logs",
            "action": "1. (Symbolic) Create a rule that triggers if a single source IP ('id.orig_h') connects to more than 20 sequential IP addresses within a /24 subnet in under 5 minutes. 2. (Statistical) For each source IP, analyze the distribution of connection states ('conn_state' in Zeek conn.log). A high ratio of 'REJ' (connection rejected) or 'RSTO' (reset from responder) responses compared to established connections ('SF') is indicative of a host discovery sweep. Flag IPs where this ratio exceeds 90%. 3. (Machine Learning) Use a Markov Chain model to analyze the sequence of destination IPs contacted by a source. Model the probability of transitioning from one IP to another. A high probability of transitioning to an adjacent IP (e.g., from x.y.z.5 to x.y.z.6) is anomalous for normal traffic and strongly indicates a sequential network sweep."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]