[
  {
    "information_requirement": "Is the adversary attempting to manipulate stored data to impact operations or hide activity?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1565.001",
        "name": "Stored Data Manipulation",
        "evidence": [
          {
            "description": "A process executes that matches a file hash or name from a threat intelligence list of known data wiper or manipulation tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Database Servers, Critical Application Servers, Enterprise File Shares",
            "action": "1. Symbolic: Continuously match the ProcessName and ProcessHash from Windows Event ID 4688 against a threat intelligence feed of known data wiper tools (e.g., WhisperGate, NotPetya). Trigger a high-severity alert on any match. 2. Statistical: For any process, calculate the rate of subsequent file modification events (Windows Event ID 4663) per minute. Alert if this rate exceeds a dynamic threshold, such as a rate greater than the mean plus four standard deviations ($$ \\text{rate} > \\mu + 4\\sigma $$) of the host's normal process activity. 3. ML: Use a pre-trained classification model that takes process metadata (parent process, user, command line entropy) and short-term file I/O statistics as input to classify the process as benign, suspicious, or malicious wiper. A 'malicious wiper' classification should trigger an automated containment workflow."
          },
          {
            "description": "A legitimate system utility is executed with command-line arguments and parameters known to be used for data destruction or overwriting.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially those hosting sensitive data or system configurations.",
            "action": "1. Symbolic: Use regular expressions on the command line field in Windows Event ID 4688 to detect known destructive patterns, such as `cipher.exe /w:`, `format.com /p:`, or `sdelete.exe -p`. 2. Statistical: For each detected command, calculate its rarity score based on historical usage by the specific user and on the specific host. A score in the 99th percentile for rarity (i.e., very infrequent) should be flagged. Additionally, calculate the Shannon entropy of the command line arguments; commands with anomalously low entropy may indicate scripted destruction. 3. ML: Employ a multivariate anomaly detection model that clusters user, host, parent process, and command. A process execution that falls into a new or sparsely populated cluster, especially one involving a destructive command, should be alerted as a high-confidence anomaly."
          },
          {
            "description": "The cryptographic hash of a critical file or configuration does not match its established known-good baseline hash after a modification event.",
            "data_sources": [
              "Windows Event ID 4663",
              "File Integrity Monitoring (FIM) tool logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Configuration-sensitive systems like Domain Controllers, PKI Servers, Web Servers, and hosts with critical applications.",
            "action": "1. Symbolic: Periodically, and upon detection of a write event (Windows Event ID 4663), compute the hash of critical files and compare against a stored baseline of known-good hashes. An immediate alert is generated on any mismatch. 2. Statistical: Analyze the time series of file modification events on critical assets. A sudden spike in modifications outside of a scheduled maintenance window, where the volume exceeds a 98th percentile threshold compared to a 30-day rolling average, should be flagged for review. 3. ML: Train a classifier (e.g., Random Forest) to score the legitimacy of a file modification. Features would include: process name, parent process, user account privileges, time of day, and a binary flag for 'in maintenance window'. A low legitimacy score from the model triggers an alert."
          },
          {
            "description": "The volume of file modification or deletion events on a host or file share exceeds a statistically established baseline by a significant margin over a short time period.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4659",
              "Windows Event ID 4660"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "High-value file shares, document management systems, source code repositories, and database servers.",
            "action": "1. Symbolic: Create a rule to alert if the count of delete events (Windows Event ID 4660) from a single user exceeds a hard threshold (e.g., 500 events in 5 minutes) in a critical NAI. 2. Statistical: For each host, calculate a rolling baseline (mean and standard deviation) of file write and delete operations per minute. Flag any minute where the operation count exceeds $$ \\mu + 3\\sigma $$ of the baseline. 3. ML: Implement a time-series anomaly detection model (e.g., ARIMA) on the stream of file modification/deletion events for critical servers. The model will learn the normal rhythm of file activity (including daily/weekly cycles) and alert on deviations that do not fit the learned pattern."
          },
          {
            "description": "A high volume of file rename operations occurs in a short period, where the new filenames share a common, often unusual, extension.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, file servers, and network egress points.",
            "action": "1. Symbolic: Search file modification events (Windows Event ID 4663, indicating a rename) for file names that now include extensions from a known ransomware blocklist. Correlate this with network connections from Zeek conn.log to known malicious IPs within the 5 minutes prior. 2. Statistical: Calculate the Shannon entropy of file extensions within monitored directories. A sudden drop in entropy below a dynamic threshold (e.g., 20% of the moving average) indicates a loss of randomness characteristic of mass-renaming. 3. ML: Use a clustering algorithm (e.g., DBSCAN) on features of file system events (event type, file extension, process name, inter-event timing). A dense cluster of 'rename' events to a novel extension by a non-system process should be classified as a high-confidence ransomware indicator."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]