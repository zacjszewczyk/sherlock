[
  {
    "information_requirement": "Has the adversary gained initial access to the network via compromised cloud accounts?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1078.004",
        "name": "Cloud Accounts",
        "evidence": [
          {
            "description": "Cloud account login from an IP address present on a threat intelligence feed or known to be part of a malicious infrastructure (e.g., TOR exit node, known proxy).",
            "data_sources": [
              "Cloud Access/Audit Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Continuously correlate source IP addresses from cloud authentication logs against a high-confidence, up-to-date Cyber Threat Intelligence (CTI) feed of malicious IPs. Inner join cloud log IPs with CTI data and alert on any matches, prioritizing investigation of associated successful logins."
          },
          {
            "description": "Cloud API interaction using User-Agent strings or sequences of API calls characteristic of known cloud hacking or enumeration tools (e.g., PowerZure, MicroBurst, Pacu).",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Scan the User-Agent field in cloud audit logs for signatures of known malicious or reconnaissance tools. Maintain a watchlist of these strings. Additionally, define and monitor for specific sequences of API calls (e.g., ListUsers -> ListGroupsForUser -> ListAttachedUserPolicies) that match the typical enumeration patterns of these tools."
          },
          {
            "description": "A high rate of failed login attempts against one or more cloud accounts from a single or distributed set of source IPs, indicating brute-force or password spraying attacks.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Aggregate cloud authentication logs by source IP, target user account, and time window. Use descriptive statistics to identify and alert on high counts of failed login events (e.g., >10 failures from one IP in 5 minutes, or >50 failures targeting one account from multiple IPs in an hour). Use box-plots of failure counts per IP to identify statistical outliers and correlate with any subsequent successful logins from the same sources."
          },
          {
            "description": "Successful cloud account login from a geographically anomalous location or a login event that constitutes 'impossible travel' when correlated with previous user activity.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal login geolocations and times for each user. Geolocate the source IP of every login event. Use correlation analysis to compare the timestamp and location of a login with the user's previous login event. Flag any login pair where the travel time required between the two locations is physically impossible. Use frequency analysis (percentiles, low-frequency counts) to identify logins from statistically rare countries or cities for a given user or organization."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary maintaining persistence using compromised cloud accounts or credentials?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1078.004",
        "name": "Cloud Accounts",
        "evidence": [
          {
            "description": "Usage of cloud API keys or other credentials that have been previously identified as compromised or are associated with a user account flagged for suspicious activity.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a watchlist of compromised or suspicious credentials (API keys, OAuth tokens, service principal secrets). Ingest all cloud audit logs and alert on any API call authenticated with a credential from this watchlist. Ensure the watchlist is updated as part of incident response procedures."
          },
          {
            "description": "Creation of new cloud credentials (e.g., API keys, service principals, OAuth applications) with overly permissive roles, no expiration date, or naming conventions indicative of backdoor accounts.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor cloud audit logs for credential creation events (e.g., 'CreateAccessKey', 'CreateServicePrincipal'). Analyze the assigned permissions for high-privilege roles (e.g., 'Contributor', 'Owner', 'AdministratorAccess'). Use regular expressions to flag suspicious names (e.g., 'backup', 'temp_admin', 'svc_acc'). Alert on any non-expiring credentials created outside of an approved change management process."
          },
          {
            "description": "A long-dormant cloud account or API key suddenly becomes active, especially at unusual times or from an unfamiliar IP address.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "For all cloud identities (users and service principals), maintain a baseline of the last-used timestamp for authentication. Use time series analysis or simple time-delta calculations to flag any authentication event from an identity that has been dormant for a significant period (e.g., >90 days). Assign a higher risk score to such events if they also originate from an unusual IP or occur outside normal business hours."
          },
          {
            "description": "Modification of cloud federation settings or trust relationships to add a new, unauthorized Identity Provider (IdP), allowing persistent access via a threat actor-controlled domain.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a high-severity alert for any modification to cloud identity federation settings (e.g., Azure AD `Set-MsolDomainFederationSettings`, AWS IAM SAML provider changes). Maintain an allow-list of approved Identity Providers. Any event adding or modifying a trust relationship with an IdP not on this list should be considered a critical incident and investigated immediately for a sophisticated persistence attempt."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has the adversary escalated privileges using compromised cloud accounts or misconfigurations?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1078.004",
        "name": "Cloud Accounts",
        "evidence": [
          {
            "description": "An API call associated with privilege escalation (e.g., adding a user to a group, attaching a policy) is made with a User-Agent string of a known cloud exploit tool.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate cloud audit log events that modify permissions (e.g., Azure AD `Add-MgGroupMember`, AWS `iam:AttachUserPolicy`) with the User-Agent field in the same log entry. Maintain a list of User-Agents for known pentesting or exploitation tools and alert on any match associated with a privilege-modifying action."
          },
          {
            "description": "A sequence of specific API calls matching a known privilege escalation vulnerability chain in a cloud service is observed (e.g., exploiting a misconfigured IAM policy).",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Define and monitor for specific, ordered sequences of cloud API calls known to be used for privilege escalation (e.g., `iam:ListAttachedRolePolicies` -> `iam:ListPolicyVersions` -> `iam:CreatePolicyVersion` -> `iam:SetDefaultPolicyVersion` to exploit modifiable policies). Correlate these events by user identity and source IP within a short time window (e.g., 15 minutes) to detect a step-by-step attack pattern."
          },
          {
            "description": "A compromised identity modifies an existing permission policy or resource-based policy to grant itself elevated privileges, such as by adding wildcards ('*') to actions or resources.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for policy modification events (e.g., `iam:CreatePolicyVersion`, `s3:PutBucketPolicy`, `Set-AzureADPolicy`). For each modification, analyze the JSON diff of the policy change. Alert on changes that add wildcards to 'Action' or 'Resource' fields, introduce high-privilege actions (e.g., 'iam:PassRole'), or significantly broaden the scope of access. Use regression analysis to find which users making policy changes are most correlated with risky configurations."
          },
          {
            "description": "A cloud identity successfully assumes a role or gains permissions it has never used before, followed immediately by actions leveraging those new privileges, especially to access sensitive data or further escalate.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal role assumption and permissions usage for each identity. Alert on the first-time assumption of a new role by an identity or the first use of a sensitive permission. Use correlation analysis to link this 'first-time' event with subsequent API calls made by the same identity within a short time window (e.g., 5 minutes). Prioritize alerts for first-time access to high-privilege roles or sensitive services like Key Vaults or Secrets Managers."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using compromised cloud accounts?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1078.004",
        "name": "Cloud Accounts",
        "evidence": [
          {
            "description": "An API call to disable or delete a specific security service (e.g., CloudTrail, Azure Defender, GuardDuty) is executed from a compromised cloud account.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a high-severity alert for any API calls that match an explicit list of security service disabling functions (e.g., `cloudtrail:StopLogging`, `cloudtrail:DeleteTrail`, `Delete-AzSecurityTask`, `guardduty:DeleteDetector`). These actions are atomic, high-impact indicators of defense evasion and should be investigated immediately."
          },
          {
            "description": "Modification of cloud network security rules to allow broad inbound or outbound traffic, using patterns common for C2 or exfiltration (e.g., '0.0.0.0/0' on all ports).",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor cloud audit logs for events that modify network security configurations (e.g., AWS Security Groups, Azure Network Security Groups). Analyze the content of the change to detect the creation of overly permissive rules. Use regular expressions to pattern-match for rules allowing traffic to or from '0.0.0.0/0' or '::/0' or opening up wide port ranges (e.g., '1-65535')."
          },
          {
            "description": "A compromised cloud account deletes or modifies logs, or changes logging configurations to stop collecting evidence of its own activity after performing other suspicious actions.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Use correlation analysis to link log tampering events (e.g., deleting a log bucket, stopping a log stream) with other suspicious activities performed by the same user or from the same source IP in the preceding timeframe (e.g., 1 hour). A sequence of 'suspicious login -> sensitive data access -> delete logs' is a strong behavioral indicator of intentional defense evasion."
          },
          {
            "description": "A user successfully authenticates without Multi-Factor Authentication (MFA) from a new device or location, when the account policy is configured to enforce MFA, indicating potential session token theft or consent grant abuse.",
            "data_sources": [
              "Cloud Access/Audit Logs"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze cloud authentication logs for the 'mfaAuthenticated' (or equivalent) claim. Alert on any successful login where this claim is 'false' or missing, especially if the login originates from an IP address or device not previously seen for that user. Use time series analysis on the frequency of non-MFA logins to detect anomalous spikes."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]