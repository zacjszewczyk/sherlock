[
  {
    "information_requirement": "Is the adversary attempting to evade defenses by weakening encryption?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1600",
        "name": "Weaken Encryption",
        "evidence": [
          {
            "description": "A TLS/SSL connection is established with an external IP address or domain that is present on a threat intelligence feed of known adversary C2 infrastructure. This is particularly relevant if observed originating from a network infrastructure device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points of the network, such as firewalls and web proxies, and management interfaces of network devices.",
            "action": "1. (Symbolic Logic): Ingest a threat intelligence feed of known adversary C2 IP addresses and domains. Create a rule to generate an immediate alert when a destination IP in `Zeek conn.log` or a `server_name` in `Zeek ssl.log` matches an entry on this feed. 2. (Statistical Method): For connections not matching known IOCs, analyze the JA3/JA3S hash from `Zeek ssl.log`. Calculate the rarity of each hash within the enterprise over a 30-day rolling window. Flag connections using JA3/JA3S hashes that fall below the 1st percentile of frequency, as this may indicate non-standard or malicious client software. 3. (Machine Learning): Train a time-series forecasting model (e.g., ARIMA) on the volume of outbound TLS connections per internal host. Use the model to detect anomalies that represent sudden, unexplained spikes in new TLS sessions, which could be indicative of C2 beaconing activity."
          },
          {
            "description": "A TLS/SSL session is observed using a protocol version (e.g., SSLv3, TLS 1.0), cipher suite (e.g., containing RC4, 3DES, EXPORT), or certificate key length (e.g., RSA < 2048 bits) that is explicitly forbidden by security policy.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All network segments, with a focus on traffic to and from critical servers (e.g., authentication, database, application servers) and egress points.",
            "action": "1. (Symbolic Logic): Create and maintain a watchlist of deprecated protocol versions (e.g., 'SSLv3', 'TLSv10') and weak cipher suite identifiers (e.g., containing 'RC4', 'DES', 'NULL'). Query `Zeek ssl.log` records where the `version` or `cipher` field matches an entry on this watchlist and generate a high-severity alert. 2. (Statistical Method): For all TLS sessions, calculate the entropy of the `server_name` field. A sudden decrease in entropy for traffic associated with a specific server could indicate a downgrade attack. Also, monitor the 95th percentile of session duration for connections using weak ciphers; unusually long sessions may warrant investigation. 3. (Machine Learning): Use a classification model (e.g., a decision tree) trained on features from `Zeek ssl.log` (`version`, `cipher`, `resumed`, `established`, certificate details) to classify sessions as 'compliant' or 'non-compliant'. Use this model to score all new sessions, flagging those with a high probability of being non-compliant or malicious."
          },
          {
            "description": "Cleartext protocol traffic (e.g., HTTP, FTP, Telnet) is observed traversing a network path to or from a designated critical asset (e.g., domain controller, database server, administrative portal) where encrypted communication is mandated by policy.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ftp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments containing designated critical assets, such as data center networks, management VLANs, and segments hosting authentication servers.",
            "action": "1. (Symbolic Logic): Define an asset list of critical server IP addresses and a watchlist of cleartext protocol ports (e.g., 21, 23, 80). Create a rule that triggers an alert when a record in `Zeek conn.log` shows a connection to a critical asset IP on a cleartext port. 2. (Statistical Method): Establish a baseline of protocol usage per network segment. Calculate the daily ratio of encrypted traffic (e.g., port 443) to unencrypted traffic (e.g., 80). Generate an alert if this ratio drops by a statistically significant amount (e.g., more than 3 standard deviations from the 30-day rolling average). 3. (Machine Learning): Use clustering (e.g., K-Means) on `Zeek conn.log` data, using features like source/destination IP, destination port, and protocol. Identify clusters representing normal cleartext traffic. Monitor for critical assets appearing in a cleartext cluster, which would represent anomalous and potentially malicious activity."
          },
          {
            "description": "An unauthorized modification is detected on a file or registry key that controls system-wide or application-specific cryptographic settings (e.g., HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL registry keys).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4657",
              "Windows Event ID 4670"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers, domain controllers, and administrator workstations where system-wide cryptographic policies are managed.",
            "action": "1. (Symbolic Logic): Enable SACL auditing on critical registry keys (e.g., `SCHANNEL`, `CipherSuites`). Create a rule to alert on any modification event (Windows Event ID 4657) to these objects from a process or user not on an explicit allowlist. 2. (Statistical Method): Profile the normal frequency and timing of modifications to these settings, which typically align with patch cycles. Use a percentile-based approach to flag modifications that occur at unusual times (e.g., after 10 PM) or by accounts that rarely perform such changes. 3. (Machine Learning): Train a one-class SVM model on event log data (Event IDs 4657, 4663, 4688) representing normal administrative activity on these cryptographic objects. Any new activity that falls outside the learned boundary is flagged as a high-confidence anomaly."
          },
          {
            "description": "A connection to a management interface (e.g., SSH, HTTPS) of a network device responsible for encryption (e.g., VPN concentrator, firewall) originates from an IP address not on the authorized administrators list or occurs outside of standard business hours.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Management VLANs, administrator jump boxes, and the network interfaces of core network infrastructure like firewalls, routers, and VPN concentrators.",
            "action": "1. (Symbolic Logic): Maintain a list of authorized IP addresses for administrative jump boxes. Create a rule to alert on any connection in `Zeek conn.log` to a network device management IP from a source IP not on this list. 2. (Statistical Method): For each administrator, baseline the distribution of login times to management interfaces. Generate an alert if a login occurs that is a statistical outlier (e.g., > 3 standard deviations from the user's mean login hour). Also, monitor the data volume (`orig_bytes`, `resp_bytes`) of these sessions; flag sessions with volumes significantly higher than the 95th percentile. 3. (Machine Learning): Use time-series analysis on the count of login failures to these management interfaces. An anomaly detection model can identify brute-force or password-spraying attacks that often precede a successful compromise."
          },
          {
            "description": "A file is transferred using a protocol like FTP, SCP, or TFTP from a network encryption device to an unauthorized destination, or a file transfer of a sensitive type (e.g., firmware image) occurs outside of a scheduled maintenance window.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network infrastructure devices, configuration backup servers, and network egress points.",
            "action": "1. (Symbolic Logic): Create a rule that alerts on any file transfer (`Zeek files.log` or `conn.log` on ports 21, 22, 69) where the source IP is a network device and the destination IP is not on an allowlist of backup servers. 2. (Statistical Method): For each network device, baseline the size of file transfers. Calculate the 99th percentile for file size. Alert on any file transfer that exceeds this size threshold. Also, analyze the entropy of filenames in `Zeek files.log`; a high-entropy name could indicate an obfuscated malicious file. 3. (Machine Learning): Train a classification model based on features from `Zeek files.log` and `conn.log` (source/destination IP, protocol, file MIME type, file size, time of day) to distinguish between 'legitimate backup' and 'anomalous transfer'. This can identify subtle deviations from normal backup patterns."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]