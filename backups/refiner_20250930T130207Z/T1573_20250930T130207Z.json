[
  {
    "information_requirement": "Is the adversary using encrypted channels for command and control?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1573",
        "name": "Encrypted Channel",
        "evidence": [
          {
            "description": "Encrypted connections to external IP addresses, domains, or involving SSL certificate fingerprints known to be associated with active command and control (C2) infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Continuously inner join destination IPs from Zeek conn.log, server names (SNI) from Zeek ssl.log, and certificate SHA1 fingerprints from Zeek ssl.log against a high-confidence, frequently updated CTI feed of known malicious C2 IPs, domains, and certificate hashes. Generate an immediate alert for any matches and investigate the source host."
          },
          {
            "description": "Encrypted communications using TLS client signatures (JA3) or server signatures (JA3S) known to be associated with specific malware families or malicious tools.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Extract JA3 (client) and JA3S (server) hashes from all Zeek ssl.log records. Correlate these hashes against open-source or commercial feeds of JA3/JA3S hashes associated with known malware (e.g., Cobalt Strike, Metasploit, TrickBot). Additionally, use frequency analysis to identify JA3 hashes that are rare within the environment, as this can indicate a new or uncommon malicious tool. Investigate hosts exhibiting known-bad or rare JA3 signatures."
          },
          {
            "description": "Use of suspicious SSL/TLS certificate attributes, such as self-signed certificates, certificates with very short validity periods, or those using generic, non-descriptive subject information.",
            "data_sources": [
              "Zeek x509.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek x509.log for certificates where the issuer and subject are identical (self-signed). Filter for certificates with a validity period of less than 90 days or an unusual duration. Scan certificate subject fields for generic or default entries (e.g., 'localhost', 'admin', empty fields). Correlate these findings via the certificate UID with connection details in Zeek ssl.log to identify hosts communicating with these suspicious endpoints. Use descriptive statistics to baseline normal certificate attributes and flag outliers."
          },
          {
            "description": "Periodic, low-volume, long-running encrypted connections to a single external destination, characteristic of C2 beaconing or heartbeat activity.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "For each internal source IP, group external SSL/TLS connections from Zeek conn.log by destination IP. Analyze the time delta between consecutive connections to the same destination. Use time series analysis or calculate the standard deviation of these deltas; a very low standard deviation suggests periodic beaconing. Also, analyze connection duration and bytes transferred. Create a composite score based on periodicity, low data volume, and long connection duration to identify likely C2 channels. Box-plots of inter-connection times per destination can reveal highly regular behavior."
          },
          {
            "description": "Encrypted network traffic initiated by processes not typically associated with network communication, or by processes running from unusual file paths (e.g., temp directories, user profile folders).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate process creation events (Event ID 4688) with their subsequent network connections (Event ID 5156 or by joining host IP/port/timestamp with Zeek conn.log). Establish a baseline of standard processes that initiate external encrypted connections (e.g., chrome.exe, firefox.exe, outlook.exe). Flag encrypted connections from anomalous processes (e.g., powershell.exe, rundll32.exe, unsigned binaries, or processes running from non-standard paths like %APPDATA% or C:\\Users\\Public\\). Use entropy measures on process paths to identify randomness often used by malware."
          },
          {
            "description": "Sustained encrypted communication over non-standard ports or encrypted traffic that violates expected protocol behavior, suggesting evasion of port-based filtering.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Filter Zeek conn.log for connections where Zeek has identified the service as 'ssl' but the destination port is not a common encrypted port (e.g., 443, 993, 995, 8443, 587, 465). Use frequency analysis on destination ports for all SSL traffic to identify low-frequency ports ('long tail analysis') that warrant investigation. Correlate findings with Zeek weird.log to identify connections on any port that exhibit protocol anomalies (e.g., 'ssl_weird_version', 'bad_client_hello'), as this can indicate a non-standard or malicious TLS implementation."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]