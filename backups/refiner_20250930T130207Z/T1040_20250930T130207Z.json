[
  {
    "information_requirement": "Is the adversary attempting to capture credentials via network sniffing?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1040",
        "name": "Network Sniffing",
        "evidence": [
          {
            "description": "A process creation event is observed where the executable's file hash matches a known malicious packet sniffing tool cataloged by threat intelligence.",
            "data_sources": [
              "Windows Event ID 4688",
              "Endpoint security agent logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, User Workstations, Privileged Access Workstations",
            "action": "Symbolic: Continuously monitor process creation events (Windows Event ID 4688) and their associated file hashes. Correlate these hashes against a threat intelligence feed of known malicious sniffing tools (e.g., Cain & Abel). Generate a high-priority alert on any match. Statistical: For processes not matching a known malicious hash, calculate the prevalence of each process hash across the environment. Flag processes whose hash is observed on fewer than the 1st percentile of endpoints, as this indicates rare and potentially unauthorized software. Machine Learning: Train a classification model (e.g., Random Forest) using features from process execution events (parent process, user context, command-line arguments, hash prevalence). Use the model to classify each new process as benign or potentially malicious. A high-confidence 'malicious' classification should trigger an alert for immediate investigation."
          },
          {
            "description": "A process creation event is observed for a legitimate network utility (e.g., tcpdump, Wireshark) with command-line arguments specifying capture of unencrypted credential protocols or writing traffic to an output file on a non-administrative host.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, IT Administrator Workstations, Servers hosting diagnostic tools",
            "action": "Symbolic: Monitor process creation events (Windows Event ID 4688) with full command-line logging. Maintain a watchlist of legitimate sniffing tools (`tcpdump.exe`, `tshark.exe`, `windump.exe`). Use regular expressions to alert on execution combined with suspicious arguments like '-w <file>' or filter expressions for cleartext protocols (e.g., 'port 21', 'port 23'). Correlate with a list of authorized users and alert if the user is unauthorized. Statistical: For each user, establish a baseline of normal command-line argument patterns for diagnostic tools. Calculate the entropy of command-line arguments for each execution. A sudden spike in entropy or the use of statistically rare arguments (e.g., a capture filter for a port never before analyzed by that user) should increase a user's risk score. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on command-line arguments for sniffing tools to identify clusters of 'normal' administrative activity. Treat any command-line execution that falls outside these established clusters as an anomaly and flag for review."
          },
          {
            "description": "A single host's network traffic exhibits characteristics of a man-in-the-middle attack, such as issuing a high volume of gratuitous ARP packets for multiple IP addresses or responding to LLMNR/NBT-NS queries for which it is not authoritative.",
            "data_sources": [
              "Zeek arp.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments with high-value assets, VLANs containing user workstations, Core network switch mirror ports",
            "action": "Symbolic: In Zeek arp.log, create a rule to alert when a single MAC address is associated with multiple, different IP addresses within a short time window. In Zeek dns.log, alert when a host that is not a designated DNS server responds to a high number of unique DNS or LLMNR/NBT-NS queries. Statistical: For each host, track the rate of gratuitous ARP packets sent per minute. Establish a baseline for all hosts on the network. Alert if a host's rate exceeds a dynamic threshold, such as the 99th percentile of all host ARP rates, for a sustained period. Machine Learning: Develop a time-series anomaly detection model (e.g., ARIMA) on the volume of LLMNR/NBT-NS responses per host. A significant, unpredicted spike in response volume from a single host indicates anomalous behavior consistent with poisoning and should trigger an alert."
          },
          {
            "description": "A system log event indicates a host's network interface card (NIC) has entered promiscuous mode, and that host is not on a pre-approved list of systems authorized for this behavior.",
            "data_sources": [
              "Windows System Event Log",
              "Endpoint detection and response (EDR) agent logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoint and server hosts, Virtualization hosts (Hyper-V/ESXi), Container orchestration nodes",
            "action": "Symbolic: Monitor EDR agent logs or specific Windows Event IDs from NIC drivers for messages stating a network interface has entered promiscuous mode. Maintain a strict whitelist of hostnames authorized for this activity (e.g., network sensors). Alert on any host enabling this mode that is not on the whitelist. Statistical: Periodically query hosts for the status of their network interfaces. Track the count of interfaces in promiscuous mode across the enterprise over time. A sudden increase in this count, or the appearance of promiscuous mode on a host for the first time, is a statistical anomaly worth investigating. Machine Learning: Use a one-class SVM classifier trained on features of authorized hosts (e.g., hostname convention, installed software, role). When a promiscuous mode event is detected, use the classifier to determine if the host's profile matches that of an authorized monitoring system. If it does not classify as 'authorized', escalate the alert."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary gathering network information via network sniffing?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1040",
        "name": "Network Sniffing",
        "evidence": [
          {
            "description": "Network traffic from a host matches a known IDS/IPS signature associated with passive OS or service fingerprinting tools (e.g., p0f).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Core network switches, Server farm segments, Inter-VLAN routing points",
            "action": "Symbolic: Deploy and monitor network IDS signatures specific to passive discovery tools (e.g., p0f, Satori) within a signature-matching engine like Zeek. Generate an alert in Zeek's notice.log when a signature match occurs, logging the source and destination IPs. Statistical: Analyze Zeek conn.log to calculate the ratio of connection attempts (SYN packets) to established connections (SYN-ACK) for each host. A host with a statistically high ratio, particularly across many different ports on many different destinations, may be performing passive scanning. Alert when this ratio exceeds a baseline by 3 standard deviations. Machine Learning: Train a time-series anomaly detection model on the diversity of services (destination ports) contacted by each internal host per hour. A sudden, sharp increase in the variety of ports contacted by a single host, which is uncharacteristic of its history, indicates discovery activity and should be flagged."
          },
          {
            "description": "A process creation event is observed for a network utility with command-line arguments specifying a capture filter for layer 2 discovery protocols like CDP or LLDP.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Non-network-administrator servers, Critical application servers",
            "action": "Symbolic: Monitor process creation events (Windows Event ID 4688) with full command-line logging. Use regular expressions to alert on the execution of `tcpdump` or `tshark` with BPF filters for discovery protocols like 'ether proto 0x2000' (CDP) or 'ether proto 0x88cc' (LLDP) on any host not on a pre-approved list of network administration workstations. Statistical: For each host, create a baseline of protocols captured via sniffing tools by parsing command-line arguments. If a host suddenly starts capturing a statistically rare protocol (like CDP) that it has never captured before, generate a low-priority alert for analyst review. Machine Learning: Use a topic modeling algorithm like Latent Dirichlet Allocation (LDA) on the command-line arguments of all executed sniffing tool commands. This can identify 'topics' of usage, such as 'HTTP debugging'. A command that does not fit well into any established topic, or forms a new, small topic around discovery protocols, is anomalous and should be investigated."
          },
          {
            "description": "A non-network-device host (e.g., a user workstation) is observed receiving a high volume of layer 2 or layer 3 infrastructure protocol traffic (e.g., CDP, LLDP, OSPF) normally only processed by routers and switches.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Access layer switch SPAN/mirror ports, VLANs containing standard endpoints",
            "action": "Symbolic: In Zeek conn.log, create a rule to alert when a host from a 'user workstation' IP range receives traffic on ports/protocols associated with network management (e.g., OSPF, EIGRP, HSRP, VRRP). Maintain a whitelist of authorized network monitoring systems. Statistical: For each host, calculate the daily volume in bytes of traffic received from known infrastructure protocol multicast groups. Establish a baseline for all workstations (which should be near zero). Alert if a workstation's received volume for these protocols exceeds the 99th percentile for its peer group. Machine Learning: Use a clustering algorithm (e.g., K-Means) to group hosts based on the types and volumes of broadcast/multicast traffic they receive. This should naturally create clusters for 'workstations' and 'network devices'. Any host that is classified as a 'workstation' but suddenly migrates to a cluster with characteristics of a 'network device' is a strong anomaly."
          },
          {
            "description": "Cloud audit logs show the creation or modification of a network traffic mirroring session, which is temporally correlated with a large data egress event from the monitoring target to an untrusted external account or IP address.",
            "data_sources": [
              "AWS CloudTrail",
              "Azure Activity Logs",
              "GCP Audit Logs",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider management consoles and APIs (AWS, Azure, GCP), Virtual Private Cloud (VPC) flow logs, Cloud storage services (S3, Blob Storage)",
            "action": "Symbolic: Monitor cloud audit logs (e.g., CloudTrail) for traffic mirroring API calls (`CreateTrafficMirrorSession`). Correlate the timestamp of this event with network flow logs (Zeek conn.log or VPC flow logs). Alert if a large data transfer to a non-corporate IP or cloud account occurs within one hour of the mirroring configuration change. Statistical: Establish a baseline for the volume of data transferred out of the cloud environment per hour. Use time-series analysis to forecast expected egress volumes. Alert if the actual egress volume exceeds the forecasted amount by more than 3 standard deviations following a traffic mirror creation event. Machine Learning: Train a classifier on sequences of cloud API calls to identify malicious patterns. A sequence like `CreateTrafficMirrorSession` -> `CreateS3Bucket` -> large `PutObject` to an external bucket would be a high-confidence malicious sequence. The model would learn normal administrative sequences and flag this as a rare and suspicious outlier."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]