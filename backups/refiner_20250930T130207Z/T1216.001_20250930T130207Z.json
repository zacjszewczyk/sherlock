[
  {
    "information_requirement": "Is the adversary bypassing security controls using PubPrn?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1216.001",
        "name": "PubPrn",
        "evidence": [
          {
            "description": "Execution of `pubprn.vbs` with the `script:` moniker where the associated URL, domain, or IP address is present in threat intelligence, is newly registered, or exhibits lexical characteristics of an algorithmically generated domain (DGA).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, Network egress points (e.g., firewalls, proxies), DNS resolvers",
            "action": "1. Symbolic: From Windows Event ID 4688, parse command lines for `cscript.exe` or `wscript.exe` executing `pubprn.vbs`. Extract any URL specified after the `script:` moniker. Match the domain and IP address against a threat intelligence feed of known malicious indicators. Alert on any match. 2. Statistical: For each extracted domain, query DNS logs (Zeek dns.log) or use WHOIS data to determine its registration date. Flag domains registered within the last 30-60 days. Additionally, calculate the Shannon entropy of the domain name; a score significantly higher than a baseline of common legitimate domains (e.g., > 3.5) indicates potential DGA and should be flagged. 3. Machine Learning: Feed the extracted URL and its features (domain length, TLD, presence of special characters, character n-grams) into a pre-trained classification model (e.g., a Gradient Boosting Classifier) that outputs a probability score of the URL being malicious. Alert on URLs with a score above a defined confidence threshold (e.g., > 0.85)."
          },
          {
            "description": "Execution of `pubprn.vbs` where the command-line arguments contain the `script:` moniker followed by a protocol specifier other than `LDAP://`, such as `http:`, `https:`, `ftp:`, or `file:`.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, Domain Controllers",
            "action": "1. Symbolic: Create a detection rule that triggers on Windows Event ID 4688 process creation events where the process name is `cscript.exe` or `wscript.exe` and the command line contains both `pubprn.vbs` and `script:` and also contains `http:`, `https:`, `ftp:`, or `file:`. This is a high-fidelity indicator of abuse. 2. Statistical: Aggregate all `pubprn.vbs` executions containing the `script:` moniker over a 30-day period. Generate frequency counts for each protocol scheme used (e.g., `ldap:`, `http:`, `https:`, etc.). Any non-zero count for a protocol other than `ldap:` is a statistically significant anomaly representing a 100% deviation from expected behavior. 3. Machine Learning: Train a simple decision tree classifier on `pubprn.vbs` command lines. Use the presence or absence of keywords (`script:`, `ldap:`, `http:`) as binary features. The model will learn to classify executions as malicious if `script:` is true and `ldap:` is false. Apply this model in real-time to command-line logs to flag suspicious executions."
          },
          {
            "description": "The `cscript.exe` process, after executing `pubprn.vbs`, spawns a child process that is anomalous for this context, such as a command shell, a scripting engine, or a known Living-Off-the-Land Binary (LOLBin).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers",
            "action": "1. Symbolic: Monitor Windows Event ID 4688 for parent-child process relationships. Trigger an alert if a `cscript.exe` process (whose command line includes `pubprn.vbs`) spawns a child process from a predefined list of suspicious binaries, including `powershell.exe`, `cmd.exe`, `rundll32.exe`, `regsvr32.exe`, `certutil.exe`, or `mshta.exe`. 2. Statistical: Establish a baseline of all parent-child process relationships across the enterprise. For each `cscript.exe` -> `pubprn.vbs` execution, identify the child process and calculate the enterprise-wide rarity of that specific parent-child pair. Alert if the pair's frequency falls below a rarity threshold (e.g., observed less than 5 times or on fewer than 0.1% of endpoints in the last 90 days). 3. Machine Learning: Model normal process execution sequences using a Hidden Markov Model (HMM) or n-gram analysis. Feed real-time process creation events (Event ID 4688) into the model. If the sequence `cscript.exe` (with `pubprn.vbs`) -> `powershell.exe` has a very low probability under the learned model, flag it as an anomalous and potentially malicious sequence."
          },
          {
            "description": "An outbound network connection from `cscript.exe` immediately following a `pubprn.vbs` execution, where the connection destination, port, or data volume deviates significantly from the established baseline for the host or user.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, Network egress points (e.g., firewalls, proxies)",
            "action": "1. Symbolic: Correlate Windows Event ID 4688 showing `cscript.exe` executing `pubprn.vbs` with Zeek conn.log records from the same source IP within a 2-minute window. Alert if the destination IP or domain in the conn.log record matches an entry in a threat intelligence feed. 2. Statistical: For each host, create a baseline of typical destination ports and countries for network connections made by `cscript.exe`. After a `pubprn.vbs` execution, if `cscript.exe` makes a connection to a port it has never used before or to a country with a low historical connection frequency (e.g., outside the top 95% of destination countries), flag the event. Also, monitor the size of the downloaded file (from Zeek http.log) and alert if it exceeds the 99th percentile of file sizes typically downloaded by `cscript.exe`. 3. Machine Learning: Apply a time-series anomaly detection algorithm (e.g., Isolation Forest) to the host's outbound byte count per minute (from Zeek conn.log). Correlate process execution events (Event ID 4688) with the time series. An anomalous spike in outbound traffic that occurs within 1-2 minutes after a `pubprn.vbs` execution is a strong indicator of a malicious payload download or C2 communication and should be alerted on."
          },
          {
            "description": "Execution of `pubprn.vbs` by a user account or on a host that does not typically perform printer administration, or at a time of day or with a frequency that is statistically unusual for the environment.",
            "data_sources": [
              "Windows Event ID 4688",
              "Active Directory security logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, Domain Controllers, Identity and Access Management systems",
            "action": "1. Symbolic: Define an Active Directory group for 'Printer Administrators'. Create a rule to alert on any execution of `pubprn.vbs` by a user who is not a member of this group. Also, create a static list of designated print servers and alert if `pubprn.vbs` is executed on any other host type (e.g., developer workstation, database server). 2. Statistical: For every user and host, maintain a 90-day rolling baseline of `pubprn.vbs` execution counts per day. Use the interquartile range (IQR) method to detect outliers. Alert if a user or host's daily execution count exceeds Q3 + 1.5 * IQR. Also, flag any execution by a user who has a historical execution count of zero. 3. Machine Learning: Use an unsupervised clustering model (e.g., DBSCAN) on process execution events, using features such as user role (from AD), host name/role, time of day (binned into hour), and parent process. Legitimate executions by print admins on print servers during business hours will form a dense cluster. Any execution that is marked as noise by the DBSCAN algorithm is a high-confidence anomaly that warrants investigation."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]