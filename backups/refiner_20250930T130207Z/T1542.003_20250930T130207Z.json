[
  {
    "information_requirement": "Is the adversary maintaining persistence using bootkit techniques?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1542.003",
        "name": "Bootkit",
        "evidence": [
          {
            "description": "A file hash matching a known bootkit component is observed in network file transfers or as a newly created executable on a host.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Email Gateway, Endpoint File Systems, Server File Systems",
            "action": "Symbolic: Continuously match file hashes from network transfers (Zeek files.log) and process creation events (Windows Event ID 4688) against a threat intelligence feed of known bootkit installer and component hashes. Statistical: Calculate the file entropy for all new executables transferred or created. Flag files with an entropy score in the 99th percentile of historical values for executables, as high entropy can indicate packing or encryption common in malware. Machine Learning: Train a classification model (e.g., Random Forest) using file metadata (size, entropy, PE header details) and context (source IP reputation, parent process) to predict if a newly observed file is malicious. An alert is triggered if the model classifies a file as a likely bootkit component."
          },
          {
            "description": "Command-line execution of utilities such as `bootsect.exe`, `bcdedit.exe`, `dd`, or `debug.exe` with arguments indicative of MBR, VBR, or UEFI modification.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Standard User Endpoints",
            "action": "Symbolic: Create a watchlist of exact command-line strings known to be malicious (e.g., `bcdedit.exe /set {current} nointegritychecks Yes`, `bootsect.exe /nt60 SYS /mbr`). Alert on any exact match from Windows Event ID 4688. Statistical: For `bcdedit.exe` and `bootsect.exe`, establish a baseline of normal command-line argument usage and parent processes. Use a rarity model to flag invocations with statistically unlikely argument combinations or parent processes (e.g., executed by `powershell.exe` instead of a trusted installer). Machine Learning: Use NLP techniques (e.g., TF-IDF) on command-line text to train a classifier that distinguishes benign administrative commands from malicious bootkit-related commands, allowing detection of novel malicious patterns."
          },
          {
            "description": "A process obtains raw write access to a physical disk, followed shortly by a system shutdown or restart command.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4688",
              "Windows Event ID 1074"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Devices, Physical Servers, Virtualization Hosts",
            "action": "Symbolic: Create a correlation rule that triggers if Event A (Event ID 4656 for an object like `\\\\.\\PhysicalDrive0` with `WRITE_DATA` access) is followed within 5 minutes by Event B (Event ID 1074 or Event ID 4688 for `shutdown.exe`) initiated by the same process. Statistical: Track the frequency of processes requesting raw disk write access. Since this is extremely rare in normal operations, any process not on a pre-defined allowlist (e.g., disk imaging software) that requests this access is a high-confidence statistical anomaly that should be alerted on. Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model) trained on sequences of security events. The model would identify the state transition from 'raw disk access' to 'system restart' by a non-system process as a low-probability, high-risk sequence indicative of a bootkit installation."
          },
          {
            "description": "Anomalous file creation or modification events within the EFI System Partition (ESP) by an unauthorized or non-standard process.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "UEFI-based Endpoints, UEFI-based Servers",
            "action": "Symbolic: Maintain an allowlist of process names and hashes (e.g., `Bcdboot.exe`, OS updaters) authorized to write to the ESP directory (`\\EFI\\`). Alert on any file modification (Event ID 4663) in the ESP where the initiating process (from correlated Event ID 4688) is not on this allowlist. Statistical: For each host, baseline the number of modifications to the ESP per day. A sudden spike in modification events, especially outside a patching window, is a statistical anomaly. Alert if the daily count exceeds a dynamic threshold (e.g., mean + 3 standard deviations). Machine Learning: Train a one-class SVM model on the attributes of legitimate ESP modification events (process name, parent process, time of day). The model learns the boundary of normal behavior, and any new event that falls outside this boundary is flagged as an anomaly."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using bootkit techniques?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1542.003",
        "name": "Bootkit",
        "evidence": [
          {
            "description": "Outbound network connections from a host to IP addresses, domains, or URLs, or using TLS fingerprints (JA3/JA3S) associated with known bootkit C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DNS Resolvers, Network Traffic Taps",
            "action": "Symbolic: Continuously join network logs (Zeek conn.log, dns.log, ssl.log) with threat intelligence feeds of known bootkit C2 indicators (IPs, domains, JA3/JA3S hashes) and alert on any match. Statistical: Calculate the prevalence of all requested domains and destination IPs. A connection to a domain or IP that is in the bottom 1st percentile of prevalence (i.e., requested by very few hosts) and is newly observed is a statistical anomaly requiring investigation. Machine Learning: Use a time-series analysis model (e.g., LSTM) on connection metadata (bytes transferred, duration) to detect periodic, 'heartbeat' patterns characteristic of C2 beaconing, even to unknown destinations."
          },
          {
            "description": "System security features, such as Secure Boot or driver signature enforcement, being disabled via command line.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4673"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Administrator Workstations, Endpoint Devices",
            "action": "Symbolic: Create a high-priority alert for the exact command-line execution of `bcdedit.exe /set {current} nointegritychecks Yes` or `bcdedit.exe /set testsigning on` found in Windows Event ID 4688 logs. Statistical: Baseline the execution frequency of `bcdedit.exe` by user and host. Any execution by a non-administrator account, or a sudden spike in usage by an administrator outside of maintenance, is a statistical anomaly. Machine Learning: Employ a User Behavior Analytics (UBA) model that profiles the typical commands run by each user. If a user who never performs system configuration suddenly executes `bcdedit.exe`, the model would flag this as a major deviation from their established baseline."
          },
          {
            "description": "Outbound network connections observed within the first few minutes of a system boot event and prior to the first interactive user logon, where the destination or protocol is not on an established allowlist of legitimate boot-time services.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 1 (System log)",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Traffic Taps, Endpoint System Logs, Endpoint Security Logs",
            "action": "Symbolic: Correlate system boot events (System Log ID 1) with network connection logs (Zeek conn.log). Alert on any connection made before the first interactive logon (Event ID 4624, LogonType 2 or 10) that does not match an allowlist of legitimate boot-time destinations/protocols (DHCP, NTP, AD, etc.). Statistical: For each host, profile the normal volume and diversity (unique IPs, ports) of network traffic during the 'boot-to-logon' window. Alert if a boot sequence shows metrics that exceed 3 standard deviations from the host's historical baseline. Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on boot-time connection features (port, protocol, JA3 hash). The algorithm groups normal activity (e.g., 'AD cluster'). Any connection that is classified as a noise point or outlier represents a potential bootkit C2 channel."
          },
          {
            "description": "A discrepancy where network logs show an active outbound connection from a host, but host-level telemetry fails to attribute that connection to any running process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Suspect Endpoint Devices, Network Egress Points",
            "action": "Symbolic: This is a hunting action. On a suspect host, remotely execute a command to list all processes with active network connections (e.g., `netstat -ano`). Simultaneously, query the SIEM for all active connections from the host's IP in Zeek conn.log. A logical diff of the two lists that reveals a network-observed connection with no corresponding host process is a strong indicator of a rootkit. Statistical: Periodically sample hosts and calculate the percentage of network connections that cannot be mapped to a host-level process. A host with a discrepancy percentage greater than zero is a significant statistical outlier compared to the population. Machine Learning: Train a classifier on feature vectors from hosts, where features include `[network_connection_count, host_reported_connection_count, discrepancy_count]`. The model can learn to classify a host's telemetry as 'healthy' or 'discrepant', automating the detection of this evasion technique."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]