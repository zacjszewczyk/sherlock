[
  {
    "information_requirement": "Has the adversary escalated privileges using PE injection?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.002",
        "name": "Portable Executable Injection",
        "evidence": [
          {
            "description": "Execution of a process from a file whose hash is a known PE injection tool or malware component used for privilege escalation.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for new process creation. If file hash logging is enabled, compare the hash of the new process executable against a CTI feed of known malicious file hashes associated with injectors or droppers. If no hash is available, compare the process name and path against a list of known malicious tool names and common staging directories (e.g., C:\\Users\\Public\\, C:\\Temp\\, C:\\ProgramData\\). Alert on any matches and correlate with attempts to access high-privilege processes."
          },
          {
            "description": "Process execution using command-line arguments or parent-child relationships that match known patterns of PE injection tools.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze command lines from Windows Event ID 4688 events for patterns indicative of injection. This includes tools that take a target Process ID (PID) as an argument, or the use of `rundll32.exe` to execute a function from a non-system DLL. Monitor for unusual parent-child relationships, such as `powershell.exe` or `wscript.exe` spawning a short-lived process immediately before a privileged system process exhibits anomalous behavior. Use regular expression matching on command lines and frequency analysis on parent-child pairings to detect these patterns."
          },
          {
            "description": "A high-privilege process (e.g., lsass.exe, services.exe, winlogon.exe) unexpectedly initiates outbound network connections or creates suspicious child processes, contrary to its established baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a strict baseline of normal behavior for critical, high-privilege system processes. For networking, use Zeek conn.log to baseline connections from servers hosting these processes (which should be rare or highly predictable). For child processes, use Windows Event ID 4688 to baseline legitimate child processes (e.g., `services.exe` spawning `svchost.exe`). Use time series analysis and correlation to alert on any deviation, such as `lsass.exe` initiating an outbound connection (a major red flag) or `winlogon.exe` spawning `cmd.exe`. Investigate any such event as a potential sign of successful code injection."
          },
          {
            "description": "Anomalous sequence of events where a low-privilege process creates a file (potential PE), followed by a high-privilege process accessing or loading that same file before exhibiting abnormal behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Hunt for sequences that infer injection by correlating events across different logs. For example: 1) A low-privilege process (e.g., spawned from a document) creates a new file (e.g., a DLL in a temporary directory), detected via Windows Event ID 4688. 2) A high-privilege process subsequently accesses that file path (detected via Event ID 4663, if SACLs are configured for object access). 3) The high-privilege process then exhibits anomalous behavior (e.g., suspicious network connection in Zeek conn.log or child process in Event ID 4688). Use correlation analysis to link these events by hostname and timestamp within a short time window (e.g., < 1 minute)."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using PE injection to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.002",
        "name": "Portable Executable Injection",
        "evidence": [
          {
            "description": "A legitimate, commonly used process (e.g., explorer.exe, svchost.exe, browser) initiates a network connection to a known malicious IP address, domain, or URL.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate network logs with host process information if available. Inner join destination IPs and domains from Zeek logs (conn.log, http.log `host` field, ssl.log `server_name` field) with a high-confidence CTI feed of malicious indicators. While any match is an alert, significantly increase the priority if the source process is identified as a common trusted binary (e.g., explorer.exe, svchost.exe, notepad.exe), as this strongly suggests its behavior has been co-opted via injection."
          },
          {
            "description": "A legitimate, trusted process spawns an unusual child process, such as a command-line interpreter or a tool not associated with its normal function, indicating injected code execution.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create and maintain a baseline of legitimate parent-child process relationships for common, trusted processes (e.g., `explorer.exe`, `svchost.exe`, `winword.exe`, `chrome.exe`). Monitor Windows Event ID 4688 for significant deviations from this baseline. For example, flag instances where `explorer.exe` spawns `powershell.exe` with a non-interactive or encoded command, `svchost.exe` spawns `whoami.exe`, or a browser process spawns `cmd.exe`. Use frequency analysis and entropy measures on command-line arguments for these spawned processes to detect rare and potentially malicious activity."
          },
          {
            "description": "A legitimate process exhibits anomalous network behavior, such as C2-like beaconing, large data transfers, or connections to unusual geolocations, that is inconsistent with its normal function.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Baseline the typical network behavior of common applications and services across the enterprise. Using Zeek conn.log, analyze connection patterns (frequency, duration, data volume, destination ports/geolocations) associated with trusted processes. Use time series analysis to detect periodic, fixed-interval connections (beaconing). Use descriptive statistics (e.g., IQR, box-plots) on session data volume to flag unusually large uploads that could be exfiltration. A legitimate process like `notepad.exe` making any network connection, or `svchost.exe` connecting to a non-Microsoft domain, is a high-confidence indicator of injection."
          },
          {
            "description": "A sequence of events where a dropper process executes and terminates, immediately followed by a long-running, legitimate process exhibiting new, anomalous behavior.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Hunt for suspicious sequences on a single host. For example: 1) A user opens a document, spawning a temporary process (e.g., `EQNEDT32.EXE`) which makes a network connection to download a file (Zeek http.log), and then this process terminates (Windows Event ID 4688). 2) Immediately after, a legitimate process like `explorer.exe` begins exhibiting new, anomalous network activity (e.g., beaconing to a suspicious domain in Zeek conn.log) or spawns `cmd.exe` (Windows Event ID 4688). Use correlation analysis to link these events by hostname within a tight time window (e.g., < 2 minutes) to build a compelling narrative of injection for defense evasion."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]