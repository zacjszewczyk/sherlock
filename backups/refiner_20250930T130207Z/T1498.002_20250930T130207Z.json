[
  {
    "information_requirement": "Is the adversary attempting to impact network availability or functionality using reflection amplification?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1498.002",
        "name": "Reflection Amplification",
        "evidence": [
          {
            "description": "A sustained flow of inbound UDP traffic on ports 53, 123, or 11211 where the source IP address is present on a threat intelligence list of known open reflectors.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, Public-facing DNS/NTP/Memcached Servers",
            "action": "Symbolic: Create a watch list from a Cyber Threat Intelligence (CTI) feed of known open reflectors. Generate a high-severity alert for any inbound connection in Zeek conn.log where the source IP (`id.orig_h`) matches the watch list and the destination port (`id.resp_p`) is a known amplification port (e.g., 53, 123, 11211). Statistical: For traffic matching the watch list, calculate the rate of connections (events/minute) from these sources. Alert if this rate exceeds a dynamic threshold, such as the 99th percentile of all inbound connection rates, to prioritize actively used reflectors. ML: Train a classification model (e.g., Logistic Regression) using features like source IP reputation, port, protocol, and connection duration. Use the model to predict the likelihood that an inbound connection is part of a reflection attack, flagging those with a high probability score for analyst review."
          },
          {
            "description": "Detection of inbound DNS 'ANY' queries, NTP 'monlist' commands, or Memcached 'stats' requests from external, non-trusted sources, which are known to generate disproportionately large responses.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek ntp.log",
              "Zeek datagram.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, Public-facing DNS/NTP/Memcached Servers",
            "action": "Symbolic: Create detection rules that inspect protocol-specific logs. In Zeek dns.log, alert if `qtype_name` is 'ANY'. In Zeek ntp.log or packet captures, search for 'monlist' or other diagnostic commands. For Memcached, use a signature to match 'stats' commands in traffic to UDP port 11211. Statistical: For each service (DNS, NTP), calculate the frequency of high-amplification query types versus normal queries over a 5-minute window. Alert if the ratio of high-amplification queries to normal queries exceeds a statistically significant baseline (e.g., > 3 standard deviations from the mean ratio). ML: Use an anomaly detection algorithm (like Isolation Forest) on features extracted from protocol logs, such as query type, request size, and source ASN. The model will learn the profile of normal protocol interactions and flag sessions that are strong outliers, which are likely to be reconnaissance or attack attempts."
          },
          {
            "description": "A greater than 4-sigma deviation from the established 30-day rolling average baseline for inbound traffic volume (bytes and packets per second) on UDP ports 53, 123, or 11211.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, Public-facing DNS/NTP/Memcached Servers",
            "action": "Symbolic: Define a static threshold for maximum tolerated traffic volume (e.g., 1 Gbps) on critical services. Generate a critical alert if this threshold is breached. This serves as a fail-safe for when statistical models fail or are too slow. Statistical: Using Zeek conn.log, aggregate total bytes (`orig_ip_bytes` + `resp_ip_bytes`) and packets (`orig_pkts` + `resp_pkts`) into 1-minute time bins for key services. Establish a dynamic baseline using a 30-day moving average and standard deviation. Alert when traffic volume exceeds 4 standard deviations above the baseline for more than two consecutive intervals. ML: Implement a time series forecasting model (e.g., ARIMA or Prophet) to predict the expected traffic volume for the next 5-15 minutes. Generate an alert if the observed traffic significantly deviates from the forecasted confidence interval. This method can detect attacks earlier than simple thresholding by accounting for seasonality (e.g., time of day, day of week)."
          },
          {
            "description": "An observed amplification factor (response bytes / request bytes) for a UDP session that exceeds the 99th percentile of historically observed amplification factors for that specific service port.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, Public-facing DNS/NTP/Memcached Servers",
            "action": "Symbolic: For services with predictable response sizes, create a rule that flags any connection where the amplification factor (`resp_bytes` / `orig_bytes`) exceeds a known malicious threshold (e.g., > 500 for DNS, > 10,000 for Memcached). Statistical: From Zeek conn.log, calculate the amplification factor for each connection on relevant ports (53, 123, 11211). Maintain a historical distribution of these factors. Alert on any new connection where the factor is an extreme outlier, for instance, exceeding the 99.9th percentile or 1.5 * IQR above the third quartile. ML: Train a clustering algorithm (e.g., K-Means or DBSCAN) on connection features including amplification factor, duration, and packet count. The model will group connections into clusters representing 'normal,' 'large download,' and 'potential reflection attack.' New connections assigned to the 'potential reflection attack' cluster should be automatically investigated."
          },
          {
            "description": "A sudden spike in the Shannon entropy of source IP addresses connecting to a single destination port, coinciding with a volumetric increase in traffic to that same port.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, DMZ Firewalls, Public-facing DNS/NTP/Memcached Servers",
            "action": "Symbolic: Create a rule that triggers if the number of unique source IP addresses connecting to a single destination port from a single /16 CIDR block exceeds a fixed limit (e.g., > 500 unique IPs from one /16 in 1 minute). This can catch naive distributed attacks from a single cloud provider or botnet. Statistical: In 1-minute windows, calculate the Shannon entropy of the set of source IP addresses (`id.orig_h` in Zeek conn.log) targeting a specific service. Establish a baseline for normal entropy levels. Alert when the entropy score spikes concurrently with a spike in traffic volume, as this combination strongly indicates a Distributed Reflection DoS (DRDoS) attack. ML: Develop an ensemble model that combines multiple weak indicators (high traffic volume, high source IP entropy, high amplification factor) into a single, high-confidence alert. Use a Gradient Boosting Machine (e.g., XGBoost) to weigh the features and generate a risk score for each 1-minute interval. A score exceeding a tuned threshold indicates a high probability of a DRDoS event."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]