[
  {
    "information_requirement": "Is an adversary attempting to discover the communication patterns and device roles within the ICS network? (PIR)",
    "tactic_id": "TA0102",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T0840",
        "name": "Network Connection Enumeration",
        "evidence": [
          {
            "description": "Presence of process creation events (Windows Event ID 4688) showing execution of `netstat.exe`, `arp.exe`, `nbtstat.exe`, or similar network enumeration utilities on critical ICS assets (e.g., Engineering Workstations, HMIs, Historian Servers), especially when initiated by non-standard parent processes or outside of defined maintenance windows.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices of critical ICS assets (Engineering Workstations, HMIs, Historian Servers, Data Gateways)",
            "action": "1. **Symbolic Logic**: Query Windows Event ID 4688 logs from critical ICS assets (EWs, HMIs) for process creation events where `NewProcessName` contains 'netstat.exe', 'arp.exe', 'nbtstat.exe', 'ipconfig.exe' or similar, AND `ParentProcessName` is 'cmd.exe', 'powershell.exe', or 'wscript.exe'. 2. **Statistical Method**: For each unique `LogonGuid` (user session) and `Computer` (host), establish a historical baseline (e.g., 30 days) of typical execution times and frequencies for these utilities. Calculate the Z-score for current execution times relative to the baseline. Alert if a Z-score exceeds 2.5 or if execution occurs outside of a pre-defined maintenance window for that host. 3. **Machine Learning (Time Series Anomaly Detection)**: Apply a time series anomaly detection model (e.g., Isolation Forest or Exponentially Weighted Moving Average) to the daily count of these command executions per host. Flag significant spikes or deviations from the learned normal pattern for investigation."
          },
          {
            "description": "Observation of an ICS host (e.g., PLC, RTU, HMI, Engineering Workstation) initiating an unusually high volume of new connections to a diverse set of internal destination IPs or ports within a short time window (e.g., 5 minutes), as captured in network flow logs (Zeek conn.log).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS network segments (Process Control Network - PCN), Network choke points between IT and OT networks (DMZ)",
            "action": "1. **Symbolic Logic**: Filter Zeek conn.log to exclude known legitimate network scanning tools or asset management systems. 2. **Statistical Method**: For each source IP, calculate the number of unique destination IPs and unique destination ports within a 5-minute sliding window. Establish a 30-day baseline for these metrics per source IP. Flag any source IP where the current count of unique destination IPs or ports exceeds the 99th percentile or 3 standard deviations of its historical baseline. 3. **Machine Learning (Clustering/Outlier Detection)**: Apply a clustering algorithm (e.g., K-Means or DBSCAN) to group hosts based on their connection patterns (e.g., average unique destination IPs/ports per hour, total bytes sent/received). Identify and alert on hosts that are classified as outliers or do not fit into established clusters, particularly those showing high fan-out characteristics typical of scanning. Calculate the entropy of destination IPs per source; a low entropy (many connections to few IPs) is normal, but a high entropy (many connections to many IPs) indicates enumeration."
          },
          {
            "description": "Identification of connection attempts from an unapproved or anomalous source IP to multiple unique destination IPs on known ICS protocol ports (e.g., Modbus TCP 502, DNP3 20000, S7comm 102) within the Process Control Network, as recorded in Zeek conn.log.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) subnets containing PLCs, RTUs, and other field controllers",
            "action": "1. **Symbolic Logic**: Filter Zeek conn.log for connections where `dest_port` is one of the common ICS protocol ports (e.g., 502, 102, 20000, 44818, 2404). Exclude source IPs that are officially designated as HMIs, SCADA servers, or Engineering Workstations. 2. **Statistical Method**: For each remaining source IP, count the number of unique destination IPs it attempts to connect to on these ICS ports within a 10-minute sliding window. Alert if a source IP connects to more than 5 unique destination IPs. Additionally, calculate the Shannon entropy of `dest_port` for each source IP over the same window; a high entropy (indicating attempts to connect to a wide range of ICS ports) combined with multiple unique destination IPs is a strong statistical indicator of enumeration. 3. **Machine Learning (Behavioral Anomaly Detection)**: Train a supervised or unsupervised model on historical Zeek conn.log data to learn normal connection patterns for non-ICS client hosts within the PCN. Features could include `unique_dest_ips_ics_ports`, `unique_dest_ports_ics_ports`, `connection_frequency`, and `entropy_of_dest_ports`. Classify new connection patterns, flagging those that deviate significantly from learned 'normal' non-ICS client behavior as potential enumeration attempts."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]