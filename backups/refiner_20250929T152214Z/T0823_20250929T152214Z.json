[
  {
    "information_requirement": "Is an adversary using GUI-based remote access for execution on ICS hosts? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0823",
        "name": "Graphical User Interface",
        "evidence": [
          {
            "description": "A successful remote interactive logon (Logon Type 10) to a critical ICS host (e.g., HMI, EWS, OWS) where the source IP address is not on an approved whitelist, the user account is not authorized for remote access, or the logon occurs outside of established operational hours (e.g., during non-maintenance windows).",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Operator Workstations (OWS), ICS Domain Controllers, Jump Servers, Remote Access Gateways",
            "action": "1. **Symbolic Logic:** Filter Windows Security logs for Event ID 4624 where `Logon Type` is 10 (RemoteInteractive). Maintain an allow-list of authorized user accounts, source IP ranges, and specific target ICS hosts for RDP access. Generate a high-priority alert immediately on any logon event where the `Source Network Address` or `Account Name` is not on the allow-list, or if the `Logon Time` falls outside of pre-defined operational windows (e.g., maintenance schedules). 2. **Statistical Method:** Calculate the frequency of RDP sessions per user and per source IP over a 7-day rolling window. Flag any user or source IP exhibiting a session frequency increase exceeding the 95th percentile of their historical activity, or where the average session duration exceeds 2 standard deviations from the user's historical mean. 3. **Machine Learning:** Employ a supervised machine learning model (e.g., Random Forest or SVM) trained on historical RDP logon data (features: user, source IP, destination host, time of day, day of week, session duration) to classify new logon events as 'normal' or 'anomalous'. Prioritize alerts for events classified as 'anomalous', especially those with low confidence scores for normalcy."
          },
          {
            "description": "Zeek `conn.log` entries showing RDP (TCP/3389) or VNC (TCP/5900-5906) connections to ICS assets where the source IP is not authorized, the connection duration significantly exceeds a baseline, or the bytes transferred are unusually high for an interactive session.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Network Segments, Demilitarized Zone (DMZ) Firewalls, Connections between IT and OT networks, Remote Access Gateways/VPN Concentrators, Perimeter Firewalls (IT/OT boundary)",
            "action": "1. **Symbolic Logic:** Continuously monitor Zeek `conn.log` for connections to destination ports TCP/3389 (RDP) and TCP/5900-5906 (VNC) targeting ICS network segments. Establish and maintain an allow-list of authorized source-destination IP pairs. Generate a high-priority alert for any connection that does not match the allow-list criteria. 2. **Statistical Method:** For authorized connections, establish a rolling baseline (e.g., 30 days) for session duration (`duration` field) and total bytes transferred (`orig_bytes` + `resp_bytes`). Use descriptive statistics to identify connections where duration or total bytes transferred exceed the 99th percentile or are more than 3 standard deviations from the historical mean for that specific source-destination pair, indicating potentially extended or data-intensive interactive adversary activity. 3. **Machine Learning:** Implement a time-series anomaly detection model (e.g., ARIMA or Isolation Forest) on the aggregated count of RDP/VNC connections per hour, per source IP. Alert when the current connection count significantly deviates from the predicted range, indicating a sudden surge or unusual pattern of remote access attempts. Additionally, use clustering (e.g., k-means) on connection metadata (duration, bytes, protocol) to identify groups of 'normal' connections and flag new connections that do not fit into these established clusters."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]