[
  {
    "information_requirement": "Is an adversary attempting to achieve persistence by modifying ICS project files?",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0873",
        "name": "Project File Infection",
        "evidence": [
          {
            "description": "Unauthorized modification (write access) or deletion of specific ICS engineering project file types (e.g., .ACD, .S7P, .L5K) on designated ICS file shares or engineering workstations, lacking a corresponding entry in the change management system.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Project File Shares (e.g., dedicated SMB shares for engineering files) and Engineering Workstations within the DMZ or PCN.",
            "action": "1. **Symbolic Logic:** Alert on Windows Event ID 4663 (Access to an object was granted) where the `ObjectType` is 'File' and the `AccessMask` indicates write or delete operations (e.g., `0x2` for WriteData or `0x10000` for Delete) for files with extensions like `.ACD`, `.S7P`, `.L5K`, or `.RSS` located in predefined ICS project file paths. Trigger an alert if the `SubjectUserName` is not part of an authorized engineering group or the `SourceAddress` is not from an authorized engineering workstation subnet. 2. **Statistical Method:** Establish a daily baseline of typical file modification counts (Windows Event ID 4663) for ICS project files per user and per engineering workstation over a 30-day period. Alert when the count of modifications for a specific user or host exceeds the 99th percentile of their historical activity for that day of the week, or when modifications occur outside of typical engineering work hours (e.g., 2 standard deviations from the mean login time). 3. **Machine Learning Application:** Employ a time-series anomaly detection model (e.g., Isolation Forest) on the total byte count of `Zeek smb_files.log` transfers for ICS project file types, aggregated hourly. Train the model on historical legitimate transfers between engineering workstations and file servers to identify unusual spikes or sustained transfers inconsistent with learned patterns, which could indicate unauthorized project file movement or exfiltration."
          },
          {
            "description": "Network connections to PLCs on engineering programming ports (e.g., TCP/44818, TCP/102) originating from an unapproved host or user, or occurring outside of documented operational or maintenance windows, potentially accompanied by engineering software process execution.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS DMZ (Level 3.5), Process Control Network (Level 2/1), and Engineering Workstations.",
            "action": "1. **Symbolic Logic:** Alert when `Zeek conn.log` shows connections (`id.resp_p` is 44818 for EtherNet/IP or 102 for S7COMM) to known PLC IP addresses where the `id.orig_h` (source IP) is not present in an authorized list of engineering workstations, AND/OR when the connection's `ts` (timestamp) falls outside of a pre-defined operational window for PLC programming. Correlate this with Windows Event ID 4688 (A new process has been created) on the originating host, looking for `NewProcessName` containing `Studio5000.exe`, `TIA Portal.exe`, or other known engineering software executables. 2. **Statistical Method:** For each PLC, establish a baseline of typical connection frequency (e.g., connections per hour) and average connection duration from authorized engineering workstations on programming ports. Alert when the number of connections or the average connection duration to a PLC on a programming port from a specific source IP exceeds the 99th percentile of historical activity over a 24-hour period. 3. **Machine Learning Application:** Apply a classification model (e.g., Random Forest or Support Vector Machine) to `Zeek conn.log` entries. Train the model on features such as `duration`, `orig_bytes`, `resp_bytes`, `id.orig_h` (encoded), and `id.resp_p` for known legitimate PLC programming sessions versus known anomalous or unauthorized connections. The model should classify new sessions as benign or potentially malicious, flagging high-confidence malicious classifications."
          },
          {
            "description": "Observation of a PLC mode change command (e.g., RUN to PROGRAM/REMOTE) via network traffic, immediately followed by a significant increase in data transfer volume to the same PLC on programming ports, indicative of a project download.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (Level 2/1) segments where PLCs reside.",
            "action": "1. **Symbolic Logic:** Identify `Zeek conn.log` entries where `id.resp_p` is a known PLC programming port (e.g., 44818, 102) AND the combined `orig_bytes` and `resp_bytes` for a single connection event are greater than a predefined threshold (e.g., 50KB), indicating a substantial data transfer. Prioritize alerts if this activity originates from an unauthorized host or occurs outside of scheduled maintenance windows. 2. **Statistical Method:** For each PLC IP address, calculate the 99th percentile for `orig_bytes` and `resp_bytes` in `Zeek conn.log` on programming ports over a 30-day rolling window. Alert when a single connection event's `orig_bytes` or `resp_bytes` exceeds both of these thresholds. Additionally, use a rolling average to track the connection duration to PLCs on programming ports and alert if the current duration for a connection deviates by more than 3 standard deviations from the mean. 3. **Machine Learning Application:** Implement a time-series anomaly detection model (e.g., LSTM Autoencoder or Prophet) on the aggregated `orig_bytes` and `resp_bytes` for each PLC on programming ports, sampled at 5-minute intervals. Train the model on historical data to learn normal data transfer patterns. Flag significant, sudden, and sustained deviations from the predicted normal volume as potential project downloads, especially when they occur outside of expected operational windows."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]