[
  {
    "information_requirement": "Is the adversary attempting to disable or manipulate the Safety Instrumented System (SIS)? (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0880",
        "name": "Loss of Safety",
        "evidence": [
          {
            "description": "Observed transfer of a PLC logic file (e.g., .L5X, .PRO, .SGF) from an Engineering Workstation (EWS) to a Safety Instrumented System (SIS) PLC, detected via network file transfer logs. This activity is considered anomalous if it occurs outside of documented maintenance windows, involves an unauthorized source IP or user account, or utilizes an unexpected network protocol for logic downloads.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4672",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek smb.log",
              "Zeek ftp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) within the Process Control Network (PCN), SIS network segment, OT/IT Demilitarized Zone (DMZ) gateways, SIS PLCs.",
            "action": "1. **Symbolic Logic:** Create a watchlist of known SIS programming software executable names (e.g., `Studio5000.exe`, `TriStation.exe`, `UnityPro.exe`). Monitor Engineering Workstations (EWS) for process creation events (Windows Event ID 4688) matching these executables. Correlate with successful login events (Windows Event ID 4624) and privileged operations (Windows Event ID 4672) by the user. Alert on any detected launch outside of scheduled maintenance windows or by an unauthorized user account as per an established whitelist.\n2. **Statistical Method:** For each detected SIS programming software launch, search Zeek `conn.log` for corresponding outbound connections from the EWS to known Safety PLC IP addresses. Establish a baseline of typical `orig_bytes` and `resp_bytes` for legitimate logic downloads. Alert if the observed data transfer size (sum of `orig_bytes` + `resp_bytes`) to a PLC exceeds the 99th percentile of the established baseline for logic downloads, or if the connection duration significantly deviates (e.g., >3 standard deviations) from the norm for programming sessions.\n3. **Machine Learning/Anomaly Detection:** Develop a time-series anomaly detection model on Zeek `files.log` for transfers of known PLC logic file extensions (e.g., `.L5X`, `.PRO`, `.SGF`, `.APL`) from EWS to SIS PLCs. Train the model on historical data to learn normal file transfer patterns (sender, receiver, time, file size, protocol). Flag any transfer that significantly deviates from the learned pattern (e.g., transfer of a logic file outside of scheduled maintenance windows, from an unknown EWS, or via an unusual protocol like FTP) with a high anomaly score."
          },
          {
            "description": "Detection of specific ICS protocol function codes or commands (e.g., Modbus 'Write Single Coil' to a safety bypass register, S7comm 'Write Variable' to a safety interlock disable bit) that are known to inhibit, bypass, or override safety functions. This is considered anomalous if the command originates from an unauthorized host (not a designated HMI or EWS), an unauthorized user, or occurs outside of a predefined operational context (e.g., during normal operations when maintenance is not scheduled).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Safety Instrumented System (SIS) network segment, Process Control Network (PCN), SIS PLCs, Industrial Demilitarized Zones (IDMZ).",
            "action": "1. **Symbolic Logic:** Implement Zeek custom scripts to parse ICS protocols (e.g., Modbus, S7comm). Create a watchlist of specific critical function codes or commands (e.g., Modbus function code 0x05 'Write Single Coil' to a known safety bypass register address, S7comm 'Write Var' to a safety interlock disable tag) that can directly impact safety functions. Generate an immediate alert for any occurrence of these watchlist commands originating from an IP address not explicitly whitelisted as an authorized HMI or EWS, or without a corresponding authorized user (Windows Event ID 4624) on the source host.\n2. **Statistical Method:** For whitelisted hosts, establish a baseline for the frequency and timing of critical ICS commands that can alter safety states, utilizing Zeek ICS protocol logs (e.g., `modbus.log`, `s7comm.log`). Calculate a rolling average and standard deviation for the daily count of such commands. Generate an alert if the observed count of critical commands from an authorized host exceeds the 99th percentile or 3 standard deviations above its established baseline over a 15-minute window. Also, monitor for commands with unusual parameter values (e.g., a Modbus register write with an out-of-range value) using statistical outliers such as IQR (Interquartile Range) analysis.\n3. **Machine Learning/Anomaly Detection:** Develop a behavioral model for each critical SIS PLC or device based on the sequence and frequency of ICS commands it receives from authorized sources over time. Use Zeek ICS protocol logs as input. Train a sequence anomaly detection model (e.g., using Hidden Markov Models or recurrent neural networks) to identify deviations from normal operational command sequences. Flag any sudden, unexpected command sequences or a high entropy score of unique commands received by a safety PLC as a potential attempt to manipulate safety functions."
          },
          {
            "description": "A sudden and sustained surge in network traffic directed at a Safety Instrumented System (SIS) PLC or its associated I/O modules, characterized by an abnormally high rate of connection attempts, fragmented packets, or malformed protocol requests, leading to degraded performance or unresponsiveness of the target device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek dce_rpc.log",
              "Zeek packet_filter.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIS network segment, SIS PLCs, Industrial Demilitarized Zones (IDMZ), Network firewalls and routers separating process control zones, Core Process Control Network (PCN) switches.",
            "action": "1. **Symbolic Logic:** Monitor Zeek `conn.log` for specific `conn_state` values indicative of DoS attempts, such as a high volume of `S0` (SYN_SENT without reply), `S1` (SYN_RECV without reply), or `REJ` (connection rejected) states directed at critical SIS PLCs. Implement a threshold-based alert if the number of `S0` or `REJ` connections to any SIS PLC exceeds 500 in a 30-second window from a single source IP. Additionally, analyze `Zeek notice.log` for alerts related to excessive connections, port scanning, or service enumeration targeting SIS devices.\n2. **Statistical Method:** For each critical SIS PLC, establish a baseline for key network metrics from Zeek `conn.log`, including: connections per minute, unique source IPs per minute, total inbound bytes per minute, and the entropy of destination ports. Continuously calculate a rolling average and standard deviation for these metrics. Generate an alert if any metric deviates by more than 3 standard deviations from its established baseline for a sustained period (e.g., over 2 consecutive 1-minute intervals). Additionally, calculate the ratio of inbound to outbound traffic; a sudden, significant increase in inbound traffic without a corresponding increase in outbound traffic can indicate a DoS.\n3. **Machine Learning/Time Series Analysis:** Develop a time series anomaly detection model (e.g., using ARIMA or LSTM networks) for the inbound connection rate and total byte volume to each critical SIS PLC, using Zeek `conn.log` data. Train the model on historical network traffic data to learn normal diurnal and weekly patterns. Continuously feed real-time data into the model, generating an alert when the predicted traffic volume or connection rate significantly deviates (e.g., exceeding the 99th percentile of residual errors) from the observed values for a sustained period, indicating a potential DoS attack."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]