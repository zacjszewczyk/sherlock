[
  {
    "information_requirement": "Are unauthorized tools or files being transferred to critical ICS assets like HMIs, Engineering Workstations, or Historians? (PIR)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0867",
        "name": "Lateral Tool Transfer",
        "evidence": [
          {
            "description": "Detection of a file transfer event over SMB (or other common network protocols like FTP/SFTP) to a critical ICS asset, where the transferred file's extension or internal signature indicates an executable, script, archive, or known malicious file type.",
            "data_sources": [
              "Zeek smb_files.log",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments where critical ICS assets (e.g., HMIs, Engineering Workstations, Historians, PLC programming terminals) communicate, particularly at IT/OT zone boundaries and within the industrial control network (e.g., Level 2/3 networks).",
            "action": "1. **Symbolic Logic:** Identify all file transfer events in `Zeek smb_files.log` and `Zeek files.log` where the `filename` field contains common executable or script extensions (`.exe`, `.dll`, `.ps1`, `.bat`, `.vbs`, `.jar`, `.hta`, `.zip`, `.rar`, `.7z`) and the `dst_ip` is an IP address of a critical ICS asset. Additionally, filter for transfers to administrative shares (e.g., `path` containing `C$`, `ADMIN$`). Trigger a high-priority alert for any such transfer from an unapproved source or to an unapproved destination. 2. **Statistical Method:** For all identified file transfers, calculate the Shannon entropy of the `filename` for each transferred file. Establish a rolling 30-day baseline for filename entropy across all ICS assets. Generate an alert for any file transfer where the filename entropy value exceeds the 95th percentile of the established baseline for that ICS asset, indicating potentially obfuscated or randomly generated names. 3. **Machine Learning Application:** Develop a time-series anomaly detection model (e.g., using Isolation Forest or Prophet) based on the volume and frequency of `smb_files.log` and `files.log` transfers, specifically focusing on transfers to critical ICS assets. Train the model on historical data (e.g., 90 days) to learn normal patterns. Alert on significant deviations (e.g., a sudden spike in the number of executable transfers or transfers from unusual sources) that fall outside the model's learned normal behavior, which could indicate a lateral tool transfer event."
          },
          {
            "description": "A successful network share write operation (Windows Event ID 5145) to a critical ICS host, specifically targeting administrative shares or directories typically associated with system utilities and applications, from a source user or system not authorized for such writes.",
            "data_sources": [
              "Windows Event ID 5145"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices configured as critical ICS assets (e.g., HMIs, Engineering Workstations, Historians, OPC Servers, Domain Controllers within the OT network) where Windows security auditing is enabled for file share access.",
            "action": "1. **Symbolic Logic:** Filter `Windows Event ID 5145` on critical ICS hosts for events where `Accesses` field contains `WriteData` and the `ShareName` ends with `$` (indicating an administrative share) or `RelativeTargetName` points to sensitive system directories (e.g., `Windows\\System32`, `Program Files`). Immediately alert if the `SourceAddress` or `AccountName` is not part of an approved whitelist for writing to these shares/directories. 2. **Statistical Method:** For each critical ICS host, establish a 30-day baseline of `Windows Event ID 5145` write events, tracking the `SourceAddress`, `AccountName`, and `ShareName`. Calculate the frequency and volume of write operations for each unique `SourceAddress`-`AccountName`-`ShareName` tuple. Generate an alert when the current write activity (count of events or data volume) for a specific tuple exceeds the 99th percentile or two standard deviations from its historical baseline, or when a new `SourceAddress`-`AccountName` pair is observed writing to an administrative share for the first time. 3. **Machine Learning Application:** Implement a user behavior analytics (UBA) model (e.g., unsupervised anomaly detection like Isolation Forest or One-Class SVM) on `Windows Event ID 5145` data. Train the model to profile normal write access patterns (source IP, user, share, time of day, file size) for each critical ICS host. Alert when the model identifies a significant anomaly score for a write event, indicating behavior that deviates substantially from established normal user/system interaction patterns with network shares on ICS assets."
          },
          {
            "description": "Detection of a new process creation (Windows Event ID 4688) on a critical ICS host, where the executable file (NewProcessName) matches a file recently written to the system via a network share (Windows Event ID 5145) within a defined short time window.",
            "data_sources": [
              "Windows Event ID 5145",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical ICS hosts (e.g., HMIs, Engineering Workstations, Historians, application servers, OPC Servers) with robust Windows security event logging and potentially endpoint detection and response (EDR) agents for process monitoring.",
            "action": "1. **Symbolic Logic:** For critical ICS hosts, join `Windows Event ID 5145` (Detailed File Share) events with `Windows Event ID 4688` (Process Creation) events. Specifically, correlate where `Event ID 5145.RelativeTargetName` (the path of the file written) exactly matches `Event ID 4688.NewProcessName` (the full path of the executable) within a 300-second (5-minute) time window. Trigger a high-priority alert for any successful correlation, as this indicates immediate execution of a recently transferred file. 2. **Statistical Method:** Establish a baseline of legitimate process creations from network shares on critical ICS hosts by analyzing historical `Windows Event ID 5145` and `4688` correlations over 90 days. Calculate the average time delta between file transfer and process creation for known legitimate applications. Flag correlations where the time delta is significantly shorter (e.g., below the 5th percentile) than the established baseline for legitimate applications, or where the `NewProcessName` is entirely new or has a low frequency count (e.g., less than 5 occurrences in 90 days) for that specific host. 3. **Machine Learning Application:** Develop a sequence-based anomaly detection model (e.g., Hidden Markov Model or recurrent neural network) that learns typical sequences of file transfer (`Windows Event ID 5145`) followed by process creation (`Windows Event ID 4688`) on critical ICS hosts. Train the model on historical event sequences to understand normal operational workflows. Alert when an observed sequence deviates significantly from learned normal patterns, such as an unexpected executable being run shortly after a network transfer, or a sequence occurring outside of normal maintenance windows, indicating potential malicious lateral tool transfer and execution."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]