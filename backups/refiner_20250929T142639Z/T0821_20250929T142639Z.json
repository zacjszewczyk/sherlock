[
  {
    "information_requirement": "Has an adversary modified the execution flow or tasking of an ICS controller? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0821",
        "name": "Modify Controller Tasking",
        "evidence": [
          {
            "description": "Observation of specific ICS protocol function codes (e.g., S7comm 'Download block', 'Start/Stop program', 'Write variable') within network traffic, indicating a program download, modification, or control command sent to an ICS controller. This evidence is particularly strong when originating from an unapproved source IP or occurring outside of documented operational schedules.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the Process Control Network (PCN) where Engineering Workstations communicate directly with Programmable Logic Controllers (PLCs) and Distributed Control Systems (DCS).",
            "action": "1. **Symbolic Logic:** Configure SIEM rules to parse Zeek s7comm.log (and other relevant ICS protocol logs) for specific function codes indicative of program modification or control (e.g., S7comm 'Download block', 'Start/Stop program', 'Write variable to data block'). Create a whitelist of authorized Engineering Workstation (EWS) IP addresses and network segments allowed to issue these commands. Trigger an alert if these function codes are observed originating from any IP not on the whitelist, or if the destination is a critical controller not typically involved in programming activity. 2. **Statistical Method:** Establish a historical baseline (e.g., 90 days) of s7comm program modification activity, including source IPs, destination controllers, and timestamps. Calculate the mean and standard deviation for the frequency of these commands during specific operational shifts or maintenance windows. Use a statistical process control chart (e.g., 3-sigma rule) to identify program modification commands whose frequency or timing falls outside of three standard deviations from the established baseline, indicating a statistically significant anomaly. 3. **Machine Learning:** Implement a time-series anomaly detection model (e.g., ARIMA or Isolation Forest) on the volume and type of s7comm program modification commands observed per controller over time. Train the model on historical data representing normal operational and maintenance periods. Anomaly scores exceeding a predefined threshold (e.g., 95th percentile) will trigger an alert, indicating a potential deviation from expected controller tasking behavior. 4. **Correlation:** For any triggered alert, enrich with Zeek conn.log data to verify source and destination ports, protocols, and connection durations. Correlate with any active maintenance schedules or change management tickets."
          },
          {
            "description": "Detection of specific ICS engineering software process executions (e.g., TIA Portal.exe, Studio 5000.exe, Unity Pro.exe) on an Engineering Workstation (EWS), particularly when initiated by an unauthorized user account, outside of established operational hours, or from an unusual parent process. This is further strengthened by co-occurrence with network connections to ICS controllers.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Dedicated Engineering Workstations (EWS) within the ICS network.",
            "action": "1. **Symbolic Logic:** Configure SIEM rules to monitor Windows Event ID 4688 (Process Creation) on Engineering Workstations for specific ICS engineering software executable names (e.g., `TIA Portal.exe`, `Studio 5000.exe`, `Unity Pro.exe`). Create a whitelist of authorized user accounts (from Windows Event ID 4624) permitted to execute these programs. Trigger an alert if these processes are executed by any user not on the whitelist, or if the parent process is suspicious (e.g., `cmd.exe`, `powershell.exe` instead of `explorer.exe`). 2. **Statistical Method:** Establish a historical baseline (e.g., 60 days) of user login times (Windows Event ID 4624) and ICS engineering software execution times (Windows Event ID 4688) for each authorized user on each EWS. Calculate the 95th percentile for typical start and end times of these activities. Flag any software execution or login event occurring outside these 95th percentile windows (e.g., late night, early morning) as anomalous. Correlate these anomalous events with Zeek conn.log for outbound connections to ICS controller IP addresses within a 10-minute window. 3. **Machine Learning:** Deploy a user behavior analytics (UBA) model that profiles normal EWS user activity, including common login times, frequently executed applications, and typical network connections. Train the model on historical Windows Event IDs (4624, 4688) and Zeek conn.log data. The model should identify deviations from an individual user's established baseline (e.g., user 'Alice' suddenly executing TIA Portal at 2 AM, when she normally works 9-5) and assign a risk score. Alerts are generated for high-risk scores, indicating a potential compromised account or insider threat."
          },
          {
            "description": "Observation of discrepancies between the current operational configuration of an ICS controller (e.g., task list, program associations, task priorities) and its established baseline configuration, as identified through periodic polling via ICS protocols or received configuration change notifications. This includes the addition of new tasks, modification of existing task properties (interval, frequency, priority), or altered program associations.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Controller internal logs (if available via remote access/Syslog)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Directly on Programmable Logic Controllers (PLCs) and Distributed Control Systems (DCS) themselves, or the network segments facilitating their communication for configuration polling.",
            "action": "1. **Symbolic Logic:** Implement a configuration management system or script to periodically (e.g., hourly) retrieve the active task list and program associations from critical ICS controllers via their native protocols (e.g., S7comm, Modbus, EtherNet/IP). For each controller, maintain a known good cryptographic hash (e.g., SHA-256) of its baseline task configuration. Generate an alert immediately if the newly retrieved configuration's hash does not match the baseline hash, indicating an unauthorized or unexpected configuration change. 2. **Statistical Method:** For controllers that report configuration changes via network messages (parsed by Zeek s7comm.log or similar), establish a baseline of the typical frequency and timing of configuration modification messages (e.g., task additions, priority changes). Calculate the moving average and standard deviation of these events over a 7-day period. Generate an alert if the count of configuration modification messages for a specific controller exceeds two standard deviations from its established moving average within a defined time window (e.g., 1 hour), indicating an unusually high rate of changes. 3. **Machine Learning:** Develop a classification model (e.g., Random Forest or SVM) trained on historical controller configuration change events (parsed from Zeek logs or controller polling data). The model should classify observed configuration changes (e.g., adding a task, changing priority, modifying program association) as 'normal maintenance' or 'anomalous'. Features for the model could include the type of change, affected controller, time of day, day of week, and originating IP address. Alerts are generated for any 'anomalous' classifications, providing a higher fidelity detection of malicious tasking modifications. 4. **Correlation:** In the event of an alert, correlate the configuration change with corresponding EWS activity (Windows Event IDs 4688, 4624) and network connections (Zeek conn.log) to identify the source and context of the change."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]