[
  {
    "information_requirement": "Is an adversary manipulating physical control processes to cause an impact? (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0831",
        "name": "Manipulation of Control",
        "evidence": [
          {
            "description": "A 'write' command targeting an ICS process setpoint (e.g., Modbus function code 0x06 'Write Single Register', DNP3 function code 0x03 'Write Data') is observed where the source user account is not authorized for that specific setpoint, the source IP address is not from an authorized HMI/EWS, or the event occurs outside of predefined operational windows (e.g., maintenance shift, normal production hours).",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek s7comm.log",
              "Data Historian Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) on the PCN, Human-Machine Interfaces (HMIs) on the PCN, Level 1 & 2 Network Segments (e.g., containing PLCs, RTUs, IEDs), Data Historian Servers",
            "action": "1. **Symbolic Logic**: Identify all 'write' commands in `Zeek modbus.log`, `dnp3.log`, `enip.log`, or `s7comm.log` that target known critical setpoint registers/tags. For each identified write, cross-reference the source IP with an authorized asset inventory list (CMDB) of HMIs/EWS. Flag any write command originating from an IP not on this list or from an unauthorized user account (e.g., not in the 'ICS_Engineers' AD group, identified via `Windows Event ID 4624` on the source host). 2. **Statistical Method**: For each critical setpoint, establish a baseline of typical modification frequency and value ranges over the last 90 days from Historian data or ICS protocol logs. Calculate the interquartile range (IQR) for the rate of change and the magnitude of change in setpoint values. Alert when the rate of change or magnitude of change for a setpoint exceeds the 95th percentile of its historical distribution, or when multiple modifications occur within a compressed timeframe (e.g., 5 changes in 1 minute when the 99th percentile is 1 change per hour). 3. **Machine Learning**: Employ a time series anomaly detection model (e.g., Isolation Forest or ARIMA) on the historical values of critical setpoints as recorded by the Historian or observed in ICS protocol logs. Train the model on normal operational data. Alert when the model identifies a significant deviation in a setpoint's value or its rate of change that falls outside the learned normal patterns, indicating potential manipulation."
          },
          {
            "description": "ICS protocol 'write' or 'control' commands (e.g., Modbus function codes 0x05, 0x06, 0x0F, 0x10; DNP3 function codes 0x03, 0x04) are observed originating from a source IP address or MAC address that is not present in the authorized asset inventory for that specific Process Control Network (PCN) segment, or from a device explicitly tagged as 'non-control' in the inventory.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek s7comm.log",
              "Network Device Logs (e.g., switch MAC tables)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network switches and routers within Level 1 (Basic Control) and Level 2 (Supervisory Control) of the Purdue Model, Industrial DMZ (IDMZ) gateways, Firewalls between IT and OT networks, SCADA Servers",
            "action": "1. **Symbolic Logic**: Ingest and maintain a dynamic asset inventory mapping of authorized IP/MAC addresses to specific PCN segments and their designated roles (e.g., HMI, PLC). Monitor `Zeek conn.log` for connections to known ICS ports (e.g., Modbus TCP 502, DNP3 20000) or `Zeek modbus.log`, `dnp3.log`, `enip.log`, `s7comm.log` for any 'write' or 'control' commands. Cross-reference the source IP/MAC of these commands against the authorized inventory. Generate an alert for any command originating from an unknown or unauthorized device on that segment. 2. **Statistical Method**: For each ICS device (PLC, RTU), establish a baseline of unique source IP addresses that communicate with it and the frequency of 'write' commands from each source over a 30-day period. Calculate the entropy score of source IP addresses observed communicating with critical ICS devices over rolling 1-hour windows. An entropy score significantly higher than the 99th percentile of the historical baseline indicates a sudden increase in diverse or new communicating sources, suggesting potential unauthorized activity. 3. **Machine Learning**: Apply a clustering algorithm (e.g., K-means or DBSCAN) to `Zeek conn.log` data, using features such as source IP, destination IP, port, and protocol over 24-hour windows. Train the model on historical network flow data. Identify clusters that represent normal communication patterns within the PCN. Flag any new or significantly deviating clusters that contain ICS protocol traffic as anomalous, potentially indicating an unauthorized device attempting to interact with control systems."
          },
          {
            "description": "A new process known to interact with ICS devices (e.g., `Modscan.exe`, `DNP3Master.exe`, vendor-specific SCADA software executables, or command-line tools like `netcat` used for ICS protocols) is observed via `Windows Event ID 4688` on an HMI or EWS. This process either lacks a valid digital signature, is launched by an unusual parent process (e.g., `cmd.exe` from a web browser), or is not immediately preceded by an interactive logon (`Windows Event ID 4624` Logon Type 2 or 10) by an authorized user account.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4648"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs) on the PCN, Engineering Workstations (EWS) on the PCN, SCADA Servers, Remote Access Servers (RAS) to OT networks",
            "action": "1. **Symbolic Logic**: Create a whitelist of authorized executables and their expected parent processes for critical HMI/EWS (e.g., `scadahmi.exe` launched by `explorer.exe`). Monitor `Windows Event ID 4688` for any process creation on HMI/EWS. Immediately flag any process creation where the executable is not on the whitelist, the parent process is unexpected, or the process lacks a valid digital signature. Additionally, correlate any process creation of known ICS control utilities with a preceding `Windows Event ID 4624` (Logon Type 2 or 10) for the same user within 5 minutes; alert if no such interactive logon is found. 2. **Statistical Method**: Establish a baseline of typical process creation rates and unique process names on HMI/EWS over a 30-day period. Calculate the frequency of process creations per user and per host. Use descriptive statistics to identify outliers: alert if a user or host exhibits a process creation rate (e.g., number of new unique processes per hour) exceeding the 99th percentile of its historical baseline, or if a process known to interact with ICS devices is launched from an executable path that deviates from the 95th percentile of observed paths. 3. **Machine Learning**: Employ a supervised machine learning model (e.g., Random Forest or SVM) trained on historical `Windows Event ID 4688` and `4624` data from HMI/EWS. Features for the model could include process name, parent process, user, logon type, time of day, and digital signature status. Label known legitimate and malicious process creations. The model should classify new process creations as 'normal' or 'anomalous', triggering an alert for high-confidence anomalous classifications, especially for processes interacting with ICS."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]