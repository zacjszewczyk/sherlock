[
  {
    "information_requirement": "Is an adversary attempting to inhibit response functions by blocking serial COM ports in the ICS environment?",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0805",
        "name": "Block Serial COM",
        "evidence": [
          {
            "description": "A TCP connection to a specific serial-to-Ethernet converter port (e.g., TCP/20001) persists for a duration exceeding the 99th percentile of established baselines (e.g., > 1200 seconds) while demonstrating minimal data transfer (e.g., less than 50 bytes total), indicating a potential port reservation without legitimate communication.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Industrial Demilitarized Zone (IDMZ) network segments, Process Control Network (PCN) segments hosting serial-to-Ethernet converters, and network ingress/egress points to control system devices.",
            "action": "1. **Symbolic Logic**: Establish an inventory of all serial-to-Ethernet converter IP addresses and their corresponding listening TCP ports (e.g., 10.0.0.1:20001). Query Zeek conn.log for all established TCP connections (`conn_state` = 'ESTABLISHED' or 'RSTO') where `id.resp_h` and `id.resp_p` match any known converter. Filter for connections where `duration` is greater than a predefined threshold (e.g., 1200 seconds) AND `orig_bytes + resp_bytes` is less than a predefined threshold (e.g., 50 bytes). Generate an alert for any matching connections.\n2. **Statistical Method**: For each identified serial-to-Ethernet converter port, establish a rolling baseline over 30 days of the average connection duration and total bytes transferred for legitimate connections. Calculate the 99th percentile for connection duration and the 1st percentile for total bytes transferred. Monitor incoming connections in Zeek conn.log. Flag any connection where the `duration` exceeds the 99th percentile of its historical baseline AND the `orig_bytes + resp_bytes` falls below the 1st percentile of its historical baseline. Use a z-score anomaly detection method, alerting if both duration and byte transfer z-scores for a connection are outside 3 standard deviations from the mean in the respective anomalous directions.\n3. **Machine Learning Application**: Develop a time-series anomaly detection model (e.g., Isolation Forest or LSTM Autoencoder) that monitors the `duration` and `orig_bytes + resp_bytes` features for connections to serial-to-Ethernet converter ports over time. Train the model on historical benign connection data. Continuously feed new Zeek conn.log data into the model and alert when a connection exhibits an anomaly score exceeding a predefined threshold, indicating a deviation from normal patterns consistent with a blocked port."
          },
          {
            "description": "A TCP connection to a serial-to-Ethernet converter port originates from a source IP address not present in the established allowlist of authorized engineering workstations, HMIs, or other control system components, or from a source IP address with no prior connection history to that specific converter.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IT/OT DMZ network boundary, Industrial Control System (ICS) network segments, engineering workstations, Human Machine Interfaces (HMIs), and serial-to-Ethernet converter network segments.",
            "action": "1. **Symbolic Logic**: Create and regularly update a comprehensive allowlist mapping authorized source IP addresses (e.g., 192.168.10.x for engineering workstations) to specific serial-to-Ethernet converter IP addresses and ports. Query Zeek conn.log for all established TCP connections (`conn_state` = 'ESTABLISHED' or 'RSTO') where `id.resp_h` and `id.resp_p` match a known converter. Compare the `id.orig_h` of each connection against the allowlist. If `id.orig_h` is not found in the allowlist for the given `id.resp_h` and `id.resp_p`, generate an alert. Additionally, for alerts originating from Windows hosts, correlate the connection timestamp with Windows Event ID 4688 (`Process Creation`) logs to identify the `New Process Name` (e.g., `telnet.exe`, `nc.exe`) responsible for initiating the connection.\n2. **Statistical Method**: For each serial-to-Ethernet converter, establish a historical baseline of `id.orig_h` connections over a 90-day period. Calculate the entropy score for source IP addresses connecting to each converter. A sudden, significant decrease in entropy (e.g., a single new IP connecting frequently) or an increase in the number of unique, previously unseen `id.orig_h` values connecting to a converter (e.g., exceeding the 99th percentile of unique source IPs per hour) should trigger an alert, especially if these IPs are not on a known allowlist. Use descriptive statistics (e.g., count of unique source IPs) to identify sudden spikes.\n3. **Machine Learning Application**: Implement a supervised machine learning classification model (e.g., Random Forest, XGBoost) trained on historical Zeek conn.log data, labeled as 'authorized' or 'unauthorized' connections based on the allowlist. Features for the model should include `id.orig_h`, `id.resp_h`, `id.resp_p`, `duration`, `orig_bytes`, `resp_bytes`, and time-of-day/day-of-week. Continuously feed new connection data into the trained model. Alert when the model predicts an 'unauthorized' classification with high confidence (e.g., >0.9 probability score), indicating a connection from an anomalous or unapproved source."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]