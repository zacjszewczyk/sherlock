[
  {
    "information_requirement": "Is an adversary attempting to impair our process control by manipulating I/O points? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0806",
        "name": "Brute Force I-O",
        "evidence": [
          {
            "description": "An abnormally high frequency of write commands are sent to a single I/O point from an unauthorized or unexpected source within a short time frame.",
            "data_sources": [
              "Zeek modbus.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs) and Engineering Workstations (EWS)",
            "action": "Analyze Zeek modbus.log (or other relevant ICS protocol logs like dnp3.log, s7comm.log) to establish a baseline of write command frequency (e.g., 'write_single_register', 'write_multiple_coils') per source host, destination PLC, and I/O address. Group write commands by source/destination/address over 1-minute time windows. Use descriptive statistics to identify outliers where the write count for a specific I/O point exceeds the 99th percentile or 3+ standard deviations from its established baseline. Correlate the source IP of any identified outlier with process creation events (Windows Event ID 4688) on HMIs/EWS to detect the execution of unauthorized scripts or applications initiating the commands."
          },
          {
            "description": "A rapid succession of write commands targeting a sequential or patterned range of I/O point addresses, inconsistent with normal process operations.",
            "data_sources": [
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Programmable Logic Controllers (PLCs) and associated network segments",
            "action": "For each source IP in Zeek modbus.log, extract the sequence of I/O addresses ('addr' field) targeted by write functions within a 30-second sliding window. Analyze the sequence for linear progression (e.g., 1001, 1002, 1003...). Calculate the entropy of unique I/O addresses targeted by a single source IP; a sudden spike in entropy followed by a focus on a single point may indicate a scanning and targeting pattern. Compare the set of targeted addresses against a known-good list of operational I/O points for the device; a high percentage of writes to unassigned or invalid addresses is a strong indicator of brute-forcing."
          },
          {
            "description": "A single I/O point is repeatedly set and reset (toggled) at a rate that is physically impossible or damaging for the associated equipment, originating from a single source.",
            "data_sources": [
              "Zeek modbus.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Final control elements (e.g., actuators, valves) and the PLCs controlling them",
            "action": "Filter Zeek modbus.log for write commands (e.g., Modbus function 'write_single_coil'). For each source-destination-address combination, analyze the sequence of values being written. Identify patterns of rapid state changes (e.g., 0 -> 1 -> 0 -> 1) and calculate the frequency of these toggles. Establish a baseline for the maximum expected state-change frequency for critical I/O points based on operational parameters. Trigger an alert if the observed toggle frequency exceeds the baseline by a significant margin (e.g., >200%). Correlate the source IP of the activity with successful logon events (Windows Event ID 4624) on HMIs to determine if the session originated from an anomalous user, location, or outside of normal hours."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]