[
  {
    "information_requirement": "Has a user's mobile device been compromised via a drive-by attack?",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1456",
        "name": "Drive-By Compromise",
        "evidence": [
          {
            "description": "A mobile device's HTTP session, recorded in network logs, shows a 'Referer' header from a trusted domain followed by a request to a destination host domain that is present on a threat intelligence feed, has a registration age of less than 30 days, or has an unusually high DGA score.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, VPN concentrators, and other internet egress points used by mobile devices.",
            "action": "1. (Symbolic) For each HTTP transaction in Zeek http.log, cross-reference the requested `host` against a threat intelligence feed of known malicious domains. 2. (Statistical) For each transaction, enrich the destination domain with its registration age. Use a percentile-based rule to flag requests to domains in the bottom 5th percentile of age, particularly when the `referer` is a high-reputation site. Also, monitor the rate of HTTP 3xx redirects per client IP and flag clients exceeding 3 standard deviations of the 24-hour moving average. 3. (Machine Learning) Employ a pre-trained classification model (e.g., logistic regression) that scores the likelihood of a malicious redirect based on features like domain age, `referer` reputation, ASN information, and URL structure. A high probability score triggers an alert for analyst review."
          },
          {
            "description": "A JavaScript file transferred over HTTP, as seen in Zeek files.log, exhibits a file size greater than the 95th percentile for the source website's baseline and a Shannon entropy score greater than 4.5, indicating probable obfuscation or packing.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile devices with EDR/MDM agents; network egress points with full packet capture or Zeek sensors.",
            "action": "1. (Symbolic) In Zeek files.log, for files with MIME type `application/javascript`, scan file contents for signatures of known obfuscators or exploit kit frameworks. 2. (Statistical) Calculate the Shannon entropy and file size for every downloaded JavaScript file. Compare these values against a dynamically generated baseline for the source domain; flag any file where either metric exceeds the 95th percentile. 3. (Machine Learning) Use a clustering model (e.g., DBSCAN) on a feature set including entropy, file size, and the ratio of function declarations to variable assignments. Review outliers and small clusters as potentially malicious. An alert from this model, followed by anomalous network beaconing from the same client IP detected by a time-series model, should be escalated."
          },
          {
            "description": "A chain of HTTP requests from a single mobile client IP shows a 'Referer' from a known advertising network domain, followed by one or more HTTP 3xx redirects, culminating in a request to a host that is uncategorized by web filters or has a low reputation score.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS servers, network egress points, and web proxies serving mobile device traffic.",
            "action": "1. (Symbolic) Create a watch list of ad network domains. Search Zeek http.log for transactions where the `referer` is on this list and the destination `host` is on a threat intelligence feed of malicious domains. 2. (Statistical) For each client IP, count the length of redirect chains (consecutive 3xx responses) originating from ad networks. Alert if a chain length exceeds 4 redirects or if the total number of ad-related redirects for a user in 5 minutes exceeds 3 standard deviations above their personal baseline. 3. (Machine Learning) Implement a sequence-based anomaly detection model (e.g., an LSTM autoencoder) to learn normal redirect patterns. Feed real-time redirect chains (represented by features like domain category, TLD, and time deltas) into the model. A high reconstruction error indicates an anomalous, potentially malicious, redirect chain that requires investigation."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]