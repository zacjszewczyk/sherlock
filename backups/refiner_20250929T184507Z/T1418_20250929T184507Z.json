[
  {
    "information_requirement": "Is an adversary attempting to discover installed applications on our managed mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1418",
        "name": "Software Discovery",
        "evidence": [
          {
            "description": "Execution of a command-line process on a host computer, specifically `adb.exe`, with command-line arguments such as `shell pm list packages` used to enumerate installed applications on a connected Android device.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer workstations, IT support machines with mobile device management tools, and endpoint devices of privileged users.",
            "action": "1. (Symbolic) Query for process creation events (Windows Event ID 4688) where the parent process is `cmd.exe` or `powershell.exe`, the process name is `adb.exe`, and the command line contains `shell pm list packages` or `shell cmd package list packages`. Alert on any match from a host not on a pre-approved list of developer or IT support machines. 2. (Statistical) For approved hosts, establish a per-user, per-host baseline of `adb.exe` execution frequency. Calculate the daily execution count for each user. Generate an alert if the daily count for a user exceeds the 99th percentile of their historical 30-day activity, or if the command-line parameters have a Jaccard distance significantly different from their typical usage. 3. (Machine Learning) Develop a logistic regression model trained on labeled historical data. Use features such as user role, time of day (business hours vs. off-hours), host system, command-line length, and presence of enumeration keywords. Use the model to classify each new `adb.exe` execution event with a probability score of being malicious and escalate events with a score above a defined threshold (e.g., 0.85)."
          },
          {
            "description": "Network traffic originating from a mobile device IP address characterized by an outbound data transfer via HTTP/S or DNS to an anomalous destination, where the payload size (e.g., 1KB-50KB) is consistent with a list of application names.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Wi-Fi network segments for mobile devices, VPN concentrators, and corporate DNS resolvers.",
            "action": "1. (Symbolic) Scan `Zeek http.log` for HTTP POST requests from the mobile device network segment where the destination domain is present on a threat intelligence feed or has been registered within the last 30 days. Alert on any match. 2. (Statistical) From `Zeek conn.log`, for each connection from the mobile segment, calculate a data exfiltration score as a weighted sum of: a) the outbound to inbound byte ratio (`orig_bytes` / (`resp_bytes` + 1)), b) the rarity of the destination domain (e.g., in the bottom 5% of destinations contacted), and c) a long connection duration with low data volume (`duration` > 60s and `orig_bytes` < 1KB). Alert on scores exceeding 3 standard deviations above the mean. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) on the volume of outbound data per mobile device. Alert when the model detects a significant, unexplained spike in outbound data volume. Enrich this alert by using a classifier to check if the destination domain's features (entropy, length, n-gram frequency) match known Domain Generation Algorithms (DGAs)."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]