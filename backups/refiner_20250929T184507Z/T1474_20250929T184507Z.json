[
  {
    "information_requirement": "Has a corporate mobile application been compromised through its supply chain? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1474",
        "name": "Supply Chain Compromise",
        "evidence": [
          {
            "description": "A managed mobile application, within 24 hours of an enterprise-wide update, generates DNS requests (Zeek dns.log) for domains not present in the preceding 90-day baseline for that application, or initiates TLS connections (Zeek ssl.log) with anomalous characteristics (e.g., rare JA3 hash, self-signed certificate).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and DNS resolvers capturing traffic from corporate Wi-Fi segments dedicated to managed mobile devices.",
            "action": "Symbolic Logic: Continuously compare destination domains from Zeek dns.log and destination IPs from Zeek conn.log against a threat intelligence feed of known malicious C2 infrastructure associated with mobile malware. Generate a high-priority alert upon any match originating from a managed mobile device. Statistical Analysis: For each managed app, create a 90-day rolling baseline of all requested domains. After an update, alert on any DNS request for a domain not in this baseline. For such new domains, calculate their public suffix + 1 (e.g., 'example.co.uk') and check its registration age; domains registered within the last 30 days are highly suspicious. Additionally, baseline the JA3/JA3S hashes seen in Zeek ssl.log for each app; alert if a post-update connection uses a hash that is present on less than 1% of devices running that app. Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA) on the volume of DNS requests per application per hour. An alert is triggered if the post-update traffic volume significantly deviates from the forecasted model beyond a 99% confidence interval, which can detect sudden increases in C2 communication."
          },
          {
            "description": "A developer workstation involved in the mobile app build pipeline executes a process (Windows Event ID 4688) with a suspicious parent-child relationship or command-line arguments, followed by a network connection (Zeek conn.log) to a destination not associated with known software repositories or corporate infrastructure.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint logs from developer workstations and continuous integration/continuous delivery (CI/CD) build servers.",
            "action": "Symbolic Logic: Monitor Windows Event ID 4688 for process creations where the parent process is a development tool (e.g., `devenv.exe`, `MSBuild.exe`) and the child process is a networking utility (`curl.exe`, `powershell.exe`). Correlate the timestamp with network logs (Zeek conn.log) from the same host to an IP address on a known C2 threat intelligence feed. Statistical Analysis: Establish a baseline of normal parent-child process relationships on developer workstations. Calculate the frequency of each relationship and alert on statistically rare pairs (e.g., a pair seen less than 5 times in the last 30 days across all developer hosts). Additionally, calculate the Shannon entropy of command-line arguments for `powershell.exe`; a score greater than 3.5 suggests obfuscation and should be investigated. Machine Learning: Train a classification model (e.g., Random Forest) using features from Event ID 4688 (process name, parent process name, command-line length) and correlated Zeek conn.log data (destination port, bytes out). The model should classify each process chain as 'benign build activity' or 'suspicious'. A 'suspicious' classification warrants investigation."
          },
          {
            "description": "A mobile application's post-update aggregate network traffic exhibits a statistically significant deviation (e.g., >3 standard deviations) in byte count, connection frequency, or count of unique destination domains compared to its pre-update 30-day baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform logs and network flow collectors (e.g., Zeek sensors) at the internet gateway.",
            "action": "Symbolic Logic: Using application deployment times from an MDM system as a trigger, scan all subsequent network traffic (Zeek conn.log, dns.log) from devices with the new application version against an IOC list of domains and IPs associated with known mobile supply chain attacks. Statistical Analysis: For each managed application, create a 30-day pre-update baseline profile of its network behavior, including the 95th percentile for total bytes transferred and number of unique destination IPs per hour. After an update, compare the hourly metrics for the new version against these pre-update percentile thresholds. An alert is generated if the new version's traffic exceeds the 95th percentile baseline for more than two consecutive hours. Machine Learning: Employ a time-series decomposition model on aggregate traffic volume (total bytes out) for each application. After an update, monitor the residual component of the time series (the part not explained by trend or seasonality). A significant spike in the residual indicates anomalous behavior that deviates from the established norm, suggesting unexpected functionality like data exfiltration."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]