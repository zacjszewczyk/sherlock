[
  {
    "information_requirement": "Is an adversary using non-standard or suspicious asymmetric cryptography for command and control on mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1521.002",
        "name": "Asymmetric Cryptography",
        "evidence": [
          {
            "description": "A TLS session from a mobile device utilizes a self-signed certificate, a certificate with a validity period below a statistical baseline (e.g., < 30 days), or a certificate whose subject/issuer matches a known-bad indicator.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate Wi-Fi access points, VPN concentrators, MDM (Mobile Device Management) proxy servers, Cloud Access Security Brokers (CASB)",
            "action": "For traffic from mobile device IP ranges, perform a three-tiered analysis. 1) Symbolic: Continuously match the 'issuer' and 'subject' fields in Zeek ssl.log against a threat intelligence feed of malicious certificate authorities and C2 domains. 2) Statistical: In Zeek ssl.log, calculate the certificate age (current_time - 'not_valid_before'). Flag any certificate with 'validation_status' as 'self-signed certificate' or an age in the bottom 5th percentile of all observed certificate ages. Correlate with Zeek conn.log to prioritize long-duration or high-volume connections associated with these flagged certificates. 3) Machine Learning: Develop a classification model (e.g., Random Forest) trained on labeled data. Use features from Zeek ssl.log and conn.log such as certificate age, validation status, selected cipher suite, JA3 hash, connection duration, and total bytes transferred. The model will output a probability score indicating if a TLS session is likely malicious C2 communication."
          },
          {
            "description": "Encrypted network connections from a mobile device show highly periodic 'heartbeat' behavior, defined by a low standard deviation in inter-arrival times and connection sizes, or are directed to known C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, MDM (Mobile Device Management) proxy servers, Corporate Wi-Fi gateways",
            "action": "Group network flows from Zeek conn.log by source IP (mobile device), destination IP, and destination port. 1) Symbolic: Compare the destination IP of all connections against a threat intelligence feed of known C2 servers and flag any matches for immediate review. 2) Statistical: For each group, calculate the time deltas between consecutive connection start times and the bytes transferred ('orig_bytes'). Compute the standard deviation for both time deltas and byte counts over a 24-hour window. A standard deviation near zero for both metrics indicates highly programmatic, non-human beaconing. 3) Machine Learning: For each source-destination pair, generate a time series of connection events. Use a trained LSTM autoencoder to model normal traffic patterns. A high reconstruction error for a given connection sequence indicates a significant deviation from the norm, flagging it as a potential C2 beacon that the model has not seen in benign traffic."
          },
          {
            "description": "High-entropy data, inconsistent with normal protocol usage, is embedded within non-payload fields of DNS or HTTP traffic, such as subdomains or User-Agent strings.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Forward web proxies, Reverse proxies, Cloud Access Security Brokers (CASB)",
            "action": "Analyze DNS and HTTP logs originating from mobile devices. 1) Symbolic: Match DNS queries in Zeek dns.log against a list of known DGA patterns and malicious domains. Match 'user_agent' strings from Zeek http.log against a list of user agents associated with malware. 2) Statistical: For each DNS query subdomain and HTTP User-Agent string, calculate the Shannon entropy. Establish a baseline and flag any value exceeding the 99th percentile. Additionally, perform a Chi-squared test on the character frequency distribution of these fields against the baseline distribution of normal traffic; a high chi-squared value suggests a non-textual, likely encrypted, payload. 3) Machine Learning: Use a density-based clustering algorithm like DBSCAN on features extracted from logs (e.g., query length, entropy, numeric character ratio for DNS; header length, entropy for HTTP). Points classified as noise by the algorithm represent rare and anomalous events that do not fit into common traffic patterns and are strong candidates for tunneled C2."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]