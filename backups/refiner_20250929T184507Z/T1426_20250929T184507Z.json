[
  {
    "information_requirement": "Is an adversary attempting to gather detailed system and hardware information from our mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1426",
        "name": "System Information Discovery",
        "evidence": [
          {
            "description": "A mobile application sends a device profile to a remote server, characterized by a combination of network artifacts: 1) The connection is made to a domain that is newly registered (e.g., < 30 days old) or has a low reputation score. 2) The outbound data transfer is minimal (e.g., < 10 KB), consistent with sending configuration data. 3) The URI in the HTTP request contains a high-entropy string (Shannon entropy > 3.5), suggesting encoded system information. 4) The TLS handshake (JA3/JA3S fingerprint) is anomalous or matches known malicious profiles.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek dns.log",
              "Zeek ja3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, VPN concentrators, Internal DNS resolvers, Mobile Device Management (MDM) platforms",
            "action": "As an analyst, execute the following steps using SIEM queries on Zeek logs from the specified NAIs:\n1. Symbolic Detection (IOC Matching): Continuously filter `dns.log` and `http.log` for connections where the destination domain or IP matches a threat intelligence feed of known malicious C2 infrastructure or is identified as a Newly Registered Domain (NRD). Generate a high-severity alert upon a match.\n2. Statistical Anomaly Detection: For each outbound connection from a mobile device IP:\n   a. From `conn.log`, identify sessions where total `orig_bytes` is unusually small (e.g., > 0 and < 10KB), which falls outside the normal range for the device's typical traffic patterns (e.g., below the 5th percentile of session sizes).\n   b. From `http.log`, calculate the Shannon entropy of the URI path and query string. Flag requests where the entropy score exceeds a dynamic threshold (e.g., 2.5 standard deviations above the mean entropy for that user-agent or source IP).\n   c. From `ssl.log`, establish a baseline of common `server_name` (SNI) values for each device. Alert when a device connects to a server name that is statistically rare for that device (e.g., seen for the first time).\n   Correlate these statistical flags; a single device triggering multiple flags within a short timeframe (e.g., 5 minutes) indicates potential fingerprinting.\n3. Machine Learning-Based Detection:\n   a. Utilize a time-series anomaly detection model on `conn.log` data, grouped by device IP, to identify deviations in the frequency and size of outbound connections. An anomalous cluster of small, outbound connections should be flagged.\n   b. Employ a pre-trained classification model to analyze TLS negotiation parameters from `ja3.log` and `ssl.log`. Classify each TLS handshake's JA3/JA3S fingerprint as benign or malicious based on known adversary TTPs. A connection flagged by the time-series model that also presents a malicious JA3/JA3S classification is a strong indicator of compromise requiring immediate investigation."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]