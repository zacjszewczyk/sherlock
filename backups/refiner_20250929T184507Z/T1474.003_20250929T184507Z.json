[
  {
    "information_requirement": "Has an adversary compromised our mobile software supply chain to gain initial access? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1474.003",
        "name": "Compromise Software Supply Chain",
        "evidence": [
          {
            "description": "An updated mobile application's digital signature hash does not match the vendor's published hash or the previously baselined signature. Alternatively, the application's manifest shows a request for one or more new high-risk permissions (e.g., Accessibility Services, Device Admin, Read SMS) not present in the previous version.",
            "data_sources": [
              "Mobile Device Management (MDM) Application Inventory Logs",
              "Mobile Threat Defense (MTD) Signature Analysis Reports",
              "Vendor-published application hashes"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM servers hosting application inventories, Corporate-owned mobile devices, Public/Private application stores",
            "action": "Using MDM logs, create and maintain a baseline for every managed application, storing its package name, version, digital signature hash, and a list of all requested permissions. Upon an application update event: 1. (Symbolic) Compare the new signature hash against a deny-list of known-malicious hashes and an allow-list of vendor-published hashes. Generate a high-severity alert on a deny-list match. 2. (Statistical) For each application, calculate a 'permission risk score' by assigning weights to permissions based on abuse potential. If an update causes the score to exceed the 99th percentile of all historical score changes for that app, flag for review. This detects unusual escalations even if individual permissions are not on a static high-risk list. 3. (Machine Learning) Train a classification model (e.g., Random Forest) on application manifest features (permission count, presence of risky permissions, intent filters) to predict if an update is 'suspicious'. An update classified as 'suspicious' with high confidence, especially when correlated with an unknown signature, triggers an automated quarantine action via the MDM."
          },
          {
            "description": "Within 24 hours of a mobile application update, the device initiates network connections to domains or IPs that are newly observed across the enterprise, have a low reputation score, or exhibit characteristics of algorithmic generation (DGA). The volume of data egress from the updated application is more than three standard deviations above its historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Mobile Threat Defense (MTD) Network Alert Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, WiFi access points servicing mobile devices, VPN concentrators",
            "action": "Correlate MDM application update events with network logs from the device's IP for the following 24 hours. 1. (Symbolic) Check all destination IPs (Zeek conn.log) and requested domains (Zeek dns.log) against threat intelligence feeds. Alert on any match to a known command-and-control or malware category. 2. (Statistical) For each application, maintain a 30-day rolling baseline of its average daily data egress volume (orig_bytes + resp_bytes in Zeek conn.log). If post-update daily egress exceeds three standard deviations from the mean, generate an alert. Additionally, calculate the Shannon entropy of newly contacted second-level domains; a score > 3.5 suggests potential DGA and warrants investigation. 3. (Machine Learning) Use a time-series anomaly detection model (e.g., SARIMA) to forecast expected network traffic volume for each device based on its historical patterns. If actual traffic post-update significantly deviates from the forecast, use this as a feature, along with threat intel hits and statistical alerts, in a parent risk-scoring model to determine the final likelihood of compromise."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]