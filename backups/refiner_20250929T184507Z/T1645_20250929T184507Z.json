[
  {
    "information_requirement": "Has an adversary achieved persistence by modifying a client software binary on a mobile device? (PIR)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1645",
        "name": "Compromise Client Software Binary",
        "evidence": [
          {
            "description": "A mobile device returns a failed status for a key integrity check (e.g., Google SafetyNet 'ctsProfileMatch: false' or 'basicIntegrity: false', Samsung Knox 'device_integrity: fail') during a remote attestation query, indicating the device's software or hardware configuration no longer meets the certified profile.",
            "data_sources": [
              "Mobile Device Management (MDM) logs",
              "Google SafetyNet Attestation API logs",
              "Samsung Knox Attestation logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet, Mobile Device Management (MDM) Platform, and Cloud-based attestation service endpoints",
            "action": "1. (Symbolic) Ingest all remote attestation logs from the MDM. Create a rule to generate a high-severity alert for any log entry where the device integrity status is explicitly 'false' or 'failed' (e.g., `ctsProfileMatch: false`). 2. (Statistical) Calculate the rolling 24-hour failure rate for attestation checks, segmented by device model, OS version, and geographic region. Generate a medium-severity alert if the failure rate for any segment exceeds the 99th percentile of its historical 30-day baseline, which could indicate a targeted campaign. 3. (Machine Learning) For any device that fails attestation, extract its network activity (Zeek conn.log) from the 24 hours prior. Use a pre-trained classification model to label each destination IP/domain as 'benign' or 'suspicious' based on features like domain age, SSL certificate details, and threat intelligence reputation. Escalate the alert priority if a failed attestation is preceded by communication with a high-confidence 'suspicious' destination."
          },
          {
            "description": "A core mobile OS process (e.g., 'adbd', 'installd' on Android) that does not normally initiate external network traffic is observed making outbound connections, or any mobile device process is observed communicating with a destination IP/domain that is a known indicator of compromise or is statistically anomalous.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, VPN terminators, and Cloud Access Security Brokers (CASB)",
            "action": "1. (Symbolic) Continuously monitor all outbound connections from the mobile device IP address space (Zeek conn.log). Generate a high-severity alert if a destination IP or domain (resolved from Zeek dns.log) matches a threat intelligence feed of known malicious C2 servers. 2. (Statistical) For each external DNS query (Zeek dns.log), calculate the Shannon entropy of the queried domain name. Establish a baseline entropy score for legitimate domains requested by mobile devices. Flag any domain with an entropy score exceeding the 95th percentile of the baseline, as this often indicates the use of a Domain Generation Algorithm (DGA). 3. (Machine Learning) Implement a time-series forecasting model (e.g., ARIMA) for each mobile device's daily outbound data volume (sum of `orig_bytes` in Zeek conn.log). Generate an alert when the actual data volume exceeds the forecasted upper confidence interval by more than 50%, which may indicate data exfiltration by a compromised binary."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]