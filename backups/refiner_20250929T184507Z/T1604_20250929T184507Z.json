[
  {
    "information_requirement": "Is an adversary using our managed mobile devices to proxy their malicious traffic, evading our network defenses? (PIR) [1]",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1604",
        "name": "Proxy Through Victim",
        "evidence": [
          {
            "description": "A managed mobile device's total outbound data volume (bytes) over a defined time window (e.g., 1 hour, 24 hours) is a statistical outlier compared to its own historical baseline or the baseline of its peer group, suggesting its use as a data relay.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, VPN termination points for mobile devices, and network egress firewalls.",
            "action": "1. (Symbolic) Monitor for traffic from mobile devices to known proxy service IP addresses or domains from a threat intelligence feed. Alert if a connection is made. 2. (Statistical) For each mobile device, aggregate total outbound bytes (orig_bytes) from Zeek conn.log over 1-hour and 24-hour windows. Establish a per-device baseline using a 30-day moving average and standard deviation. Alert when a device's outbound traffic exceeds 3 standard deviations from its own mean, or exceeds the 99th percentile of its assigned user group. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., ARIMA) for each device's outbound data volume. Train the model on the last 90 days of data to predict expected traffic volume. Generate an alert when the actual observed volume significantly deviates from the predicted volume's confidence interval."
          },
          {
            "description": "A single mobile device resolves or connects to a number of unique destination domains or IP addresses that is statistically anomalous within a short time frame, and the set of destinations exhibits high entropy, which is uncharacteristic of normal user browsing.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "DNS resolvers used by mobile devices, network egress points, and Cloud Access Security Broker (CASB) logs.",
            "action": "1. (Symbolic) Maintain an allowlist of domains known for benign, high-volume mobile activity (e.g., *.apple.com, *.google.com, *.cdn.whatsapp.net). Alert on devices that query a high number of unique domains (e.g., >50) not on this list within a 5-minute window. 2. (Statistical) For each mobile device, count unique second-level domains (SLDs) from Zeek dns.log over a 1-hour window and calculate the Shannon entropy of the set of SLDs. Alert if a device's unique domain count exceeds the 98th percentile of its peer group and its entropy score is also anomalously high (>2 standard deviations from its baseline). 3. (Machine Learning) Use an Isolation Forest model trained on features from DNS and connection logs (e.g., unique domain count, domain entropy, ratio of successful to failed connections). The model learns the 'normal' connection profile for mobile devices; flag any device classified as an outlier for investigation."
          },
          {
            "description": "A mobile device initiates network connections using destination ports or protocols that are inconsistent with the known network behavior of the applications installed on it, as reported by a Mobile Device Management (MDM) or Enterprise Mobility Management (EMM) solution.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/EMM Application Inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/EMM management platform, network egress points, and network flow collectors.",
            "action": "1. (Symbolic) Create a rule to immediately alert on any traffic from the mobile device subnet to common proxy ports such as 1080 (SOCKS), 3128, or 8080, unless an approved application from the MDM inventory is explicitly known to use that port. 2. (Statistical) For each device, correlate Zeek conn.log with its MDM application list to build a profile of 'allowed' destination ports. In a 1-hour window, calculate the ratio of connections to 'disallowed' ports versus 'allowed' ports. Alert when this ratio exceeds the 95th percentile for the device's peer group. 3. (Machine Learning) Train a Random Forest classification model with features like destination port, protocol, and data volume, using the MDM inventory to label connections as 'approved' or 'unapproved'. Apply the model to live traffic; a high count of 'unapproved' classifications for one device indicates a potential rogue process."
          },
          {
            "description": "A mobile device establishes an abnormally high number of concurrent outbound TCP connections, and/or the average duration of these connections is a statistical outlier compared to normal behavior, suggesting the device is maintaining persistent channels for relaying traffic.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network core switches and firewalls monitoring mobile device subnets.",
            "action": "1. (Symbolic) Alert on any single TCP connection from a mobile device that remains active for longer than 24 hours, especially if the destination is not an established corporate service and the connection state in Zeek shows it is established (e.g., 'SF'). 2. (Statistical) In 5-minute intervals, calculate each device's count of concurrent outbound connections and the average duration of those connections. Use a multivariate outlier detection method, like Mahalanobis distance, to find devices that are anomalous in both metrics simultaneously (high count and long duration) compared to their own 30-day history. 3. (Machine Learning) Apply a DBSCAN clustering algorithm to all mobile devices using features like '24-hour average concurrent connections' and '24-hour average connection duration'. Devices that are identified as noise points are strong candidates for investigation, as their connection patterns differ significantly from the dense clusters of normal devices."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]