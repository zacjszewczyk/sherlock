[
  {
    "information_requirement": "Is an adversary manipulating SMS messages on our mobile devices? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1582",
        "name": "SMS Control",
        "evidence": [
          {
            "description": "An application not approved by the organization is set as the default SMS handler on a managed device, or an application with a very low prevalence (<1%) across the fleet is set as the default handler. Adversaries may set a malicious app as the default handler to intercept, modify, or delete messages by registering the SMS_DELIVER broadcast intent and writing to the SMS content provider [1][2].",
            "data_sources": [
              "MDM Device Configuration Report",
              "MDM Application Inventory Report"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MTD Management Console, Device Configuration Profiles",
            "action": "1. (Symbolic) Query the MDM platform for the package name of the default SMS handler on all devices. Compare this against a centrally managed allowlist of approved messaging applications. Generate an alert for any device whose default SMS handler is not on the allowlist. 2. (Statistical) Ingest the default SMS handler data into a SIEM. Calculate the prevalence of each handler package name across the entire device fleet. Flag any handler whose prevalence is below a dynamic threshold (e.g., in the 1st percentile) for investigation as a potentially malicious or unauthorized application. 3. (Machine Learning) Develop a binary classification model (e.g., Random Forest) trained on application metadata (developer, app store category, user ratings, requested permissions) to predict `is_legitimate_sms_handler`. Periodically score all default SMS handlers across the fleet and alert on any app classified as not legitimate with high confidence."
          },
          {
            "description": "A non-messaging application is granted `SEND_SMS` or `RECEIVE_SMS` permissions, especially if the app's primary function (e.g., calculator, game) does not justify it, or its permission set is a statistical outlier compared to legitimate communication apps. This allows the application to read incoming messages or send outgoing messages without user interaction [1].",
            "data_sources": [
              "MDM Application Permission Report",
              "MTD Application Analysis Report"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MTD Management Console, Application Risk Database",
            "action": "1. (Symbolic) Create a SIEM rule to alert when an application has `SEND_SMS` or `RECEIVE_SMS` permissions AND its category from the MDM inventory is not in ['Communication', 'Messaging', 'Social']. 2. (Statistical) For each app with SMS permissions, create a feature vector from its full permission set. Calculate the Jaccard similarity index between this vector and a composite vector of all permissions held by approved messaging apps. Alert on applications with a similarity score below a defined threshold (e.g., 0.4), indicating an anomalous permission set. 3. (Machine Learning) Use an unsupervised clustering algorithm (e.g., DBSCAN) on the permission set vectors of all applications across the fleet. Investigate applications that are classified as noise or belong to small, isolated clusters, as they represent unusual permission combinations that may be malicious."
          },
          {
            "description": "A device sends outgoing SMS messages that match known C2 patterns, exhibit a statistically significant deviation from the user's baseline behavior (e.g., volume spike >98th percentile), or are directed to unusual destinations (e.g., premium-rate numbers, new international country codes). This could indicate the device is being used for C2, data exfiltration, or to spread malware.",
            "data_sources": [
              "Carrier SMS Detail Records",
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Mobile VPN Concentrators, Carrier Billing and Usage Portal, SIEM Log Storage",
            "action": "1. (Symbolic) Ingest a threat intelligence feed of known malicious phone numbers (for C2, phishing, etc.). Create a SIEM rule to match the destination number from carrier SMS detail records or network logs against this feed. 2. (Statistical) For each user, establish a 90-day rolling baseline and standard deviation for daily SMS volume and unique countries contacted. Generate an alert if the daily volume exceeds the baseline by more than three standard deviations, or if an SMS is sent to a country code not present in the user's history. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) on per-user, per-hour SMS counts. Train the model on historical data to learn each user's normal communication patterns. An alert is triggered when the model flags a specific time window's activity as a statistically improbable anomaly, which can then be correlated with other device events like a recent app installation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]