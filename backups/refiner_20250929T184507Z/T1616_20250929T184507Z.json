[
  {
    "information_requirement": "Is an adversary disrupting our communications by blocking or redirecting legitimate phone calls?",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1616",
        "name": "Call Control",
        "evidence": [
          {
            "description": "An application, not categorized as a standard communication tool, is granted high-risk permissions such as `ANSWER_PHONE_CALLS` or `PROCESS_OUTGOING_CALLS`, indicating a potential for unauthorized call manipulation.",
            "data_sources": [
              "MDM application inventory logs",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM Platform Database",
            "action": "1. (Symbolic) Implement a rule to generate a high-priority alert for any application that requests `PROCESS_OUTGOING_CALLS` or `ANSWER_PHONE_CALLS` and is not on a pre-defined allow-list of approved communication applications (e.g., default dialer, Microsoft Teams). 2. (Statistical) For each application, calculate a permission risk score based on its manifest. Compare this score to the average score for its App Store category. Flag applications with a Z-score greater than 3, indicating an anomalously high-risk permission set compared to its peers. 3. (Machine Learning) Train a classification model (e.g., Random Forest) using features from application manifests (permissions, services, broadcast receivers) to predict if an application is Potentially Unwanted Program (PUP). Use this model to proactively scan new applications and flag those with a high probability of being malicious."
          },
          {
            "description": "Device logs show evidence of programmatic call termination or redirection, such as an Android `ACTION_NEW_OUTGOING_CALL` intent followed by an `abortBroadcast()` event from a non-system application, or a high volume of `TelecomManager.endCall()` events.",
            "data_sources": [
              "Android Logcat",
              "iOS CallKit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Aggregated Mobile Device Logs in SIEM",
            "action": "1. (Symbolic) Create a detection rule that triggers when an `abortBroadcast()` event for an outgoing call is initiated by a third-party application package name. 2. (Statistical) For each device, calculate the ratio of aborted/blocked calls to total calls over a 24-hour period. Alert on devices where this ratio exceeds the 95th percentile for the entire fleet. 3. (Machine Learning) Employ a time-series anomaly detection model (e.g., ARIMA) on the fleet-wide count of call abort events per hour. A sudden spike that deviates significantly from the forecasted normal behavior would trigger an investigation."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary performing audio surveillance by programmatically answering or initiating calls?",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1616",
        "name": "Call Control",
        "evidence": [
          {
            "description": "An application possesses a combination of permissions indicative of spyware: call control (`CALL_PHONE`, `ANSWER_PHONE_CALLS`), microphone access (`RECORD_AUDIO`), and call log manipulation (`WRITE_CALL_LOG`).",
            "data_sources": [
              "MDM application inventory logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM Platform Database",
            "action": "1. (Symbolic) Define and apply a critical-severity rule that alerts on any application manifest containing the permission combination: (`CALL_PHONE` OR `ANSWER_PHONE_CALLS`) AND `RECORD_AUDIO` AND `WRITE_CALL_LOG`, while excluding an allow-list of approved unified communication apps. 2. (Statistical) Calculate a 'Surveillance Risk Score' for each app based on a weighted sum of risky permissions. Identify apps whose score is a statistical outlier (e.g., > 3 standard deviations above the mean) for their given application category. 3. (Machine Learning) Use unsupervised learning (e.g., k-means clustering) on the permission sets of all installed applications. Analyze the resulting clusters to identify small, anomalous groups characterized by rare and dangerous permission combinations indicative of spyware."
          },
          {
            "description": "A discrepancy exists between carrier-level Call Detail Records (CDRs) and MDM-retrieved device call logs, indicating programmatic deletion of call history using the `WRITE_CALL_LOG` permission.",
            "data_sources": [
              "Carrier Call Detail Records (CDRs)",
              "MDM-retrieved device call logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Telecom provider data feeds",
            "action": "1. (Symbolic) In a data analytics platform, perform a `LEFT JOIN` from the carrier CDRs table to the device call logs table on `timestamp`, `phone_number`, and `device_id`. Generate an alert for any record that exists in the CDRs but is `NULL` in the device logs. 2. (Statistical) For each device, calculate the Jaccard similarity coefficient between the set of called numbers in the CDRs and the set in the device log over a rolling 24-hour window. A consistently low similarity score (<0.9) indicates potential log tampering. 3. (Machine Learning) Train a time-series model (e.g., Prophet) on each user's normal calling patterns (call times, frequency) from historical CDR data. Flag calls that the model identifies as significant anomalies, such as a call at 3 AM when the user's forecasted activity is zero, as these may be calls the adversary attempts to hide."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary using phone calls as a C2 channel?",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1616",
        "name": "Call Control",
        "evidence": [
          {
            "description": "Carrier Call Detail Records (CDRs) show a pattern of periodic, short-duration (e.g., under 5 seconds) outgoing calls from a device to a single number or small set of numbers, indicative of a C2 heartbeat.",
            "data_sources": [
              "Carrier Call Detail Records (CDRs)",
              "MDM application inventory logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Telecom provider data feeds",
            "action": "1. (Symbolic) Create a rule to alert on any device making more than 5 calls with a duration of less than 5 seconds to the same destination number within a 24-hour period. 2. (Statistical) For each device, analyze the distribution of call durations from CDRs. Flag devices where the 5th percentile of outgoing call duration is less than 3 seconds and the call frequency to a single number is in the 99th percentile fleet-wide. 3. (Machine Learning) Use a clustering algorithm like DBSCAN on call data, with features such as call duration and inter-arrival time. C2 heartbeats will form a dense cluster with low duration and regular time intervals, which can be automatically identified as an anomalous cluster."
          },
          {
            "description": "Network traffic from a mobile device's IP, such as DNS requests or TCP connections, occurs within seconds after a short-duration outgoing phone call, suggesting the call acts as a C2 trigger mechanism.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Carrier Call Detail Records (CDRs)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Core Routers, Firewalls)",
            "action": "1. (Symbolic) Create a SIEM correlation rule that triggers on a CDR entry with a call duration < 5 seconds. The rule then searches for any `Zeek dns.log` or `Zeek conn.log` entry from the device's IP within 10 seconds of the call end time. Alert if the destination IP or domain is on a threat intelligence feed. 2. (Statistical) For each device, calculate the temporal cross-correlation between the timestamp vector of short calls (from CDRs) and the timestamp vector of initial network beacons (from `Zeek conn.log`). A high, statistically significant correlation coefficient suggests a causal link. 3. (Machine Learning) Use a sequence mining algorithm to identify recurring patterns of `[Short_Call_Event -> DNS_Query_Event -> TCP_Connection_Event]` within a 15-second window. Flag devices that repeatedly exhibit this sequence, especially if the destination is rare across the organization."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]