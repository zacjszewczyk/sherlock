[
  {
    "information_requirement": "Has an adversary exploited a software vulnerability to gain initial access to a mobile device? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1664",
        "name": "Exploitation for Initial Access",
        "evidence": [
          {
            "description": "A mobile device initiates a network connection to a destination IP/domain with a known malicious reputation, OR exhibits a statistically significant deviation in its network traffic profile (e.g., data volume, destination port, JA3/JA3S hash) compared to its historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, Guest Wi-Fi network, VPN concentrators, and Internet gateway proxy/firewall logs.",
            "action": "Symbolic: Query network logs (Zeek conn.log, dns.log) for connections from mobile device IP ranges to destination IPs, domains, or SSL certificate subjects/issuers present in mobile-specific threat intelligence feeds. Alert on any match. Statistical: For each mobile device, create a 30-day rolling baseline of network activity. Calculate the 95th percentile for daily data sent/received (orig_bytes/resp_bytes in conn.log) and the entropy of destination ports. Generate an alert if a device's daily activity exceeds the 95th percentile for data transfer or if the port entropy score drops significantly, indicating potential tunneling over a single port. Machine Learning: Train a time-series anomaly detection model (e.g., LSTM Autoencoder) on historical Zeek conn.log data for each mobile device, using features like connection duration, bytes transferred, protocol, and destination port. Flag any connection with a reconstruction error score that exceeds a dynamically calculated threshold, indicating a pattern inconsistent with learned normal behavior."
          },
          {
            "description": "A mobile device is observed downloading a file with a known malicious hash, OR an application package (e.g., .apk, .ipa) from a URL not on an approved list of app stores, OR a file whose type is inconsistent with its MIME type or file extension.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, Web Proxy, Guest Wi-Fi network, and Corporate Wi-Fi network segments.",
            "action": "Symbolic: In Zeek files.log, compare the 'md5' and 'sha1' hashes of all files downloaded by mobile devices against a threat intelligence database of known mobile malware hashes. Alert on any match. Additionally, in http.log, alert on any download of .apk or .ipa files where the 'host' or 'referrer' field does not match an official app store domain (e.g., play.google.com, apps.apple.com). Statistical: For files downloaded by mobile devices, analyze the mismatch frequency between the file's reported MIME type ('mime_type' in files.log) and its magic number from file content analysis. Calculate a baseline mismatch rate for the mobile device fleet. Alert on devices exhibiting a mismatch rate greater than three standard deviations from the fleet's baseline. Machine Learning: Use a trained classification model (e.g., Random Forest) to predict if a URL is malicious based on lexical features (length, special characters, entropy, domain age, TLD). Apply this model to all URLs visited by mobile devices as seen in dns.log and http.log. Flag URLs classified as malicious with a high confidence score, especially those associated with file downloads."
          },
          {
            "description": "A mobile device exhibits network patterns consistent with a known zero-click exploit, such as receiving an unsolicited, malformed message followed by anomalous outbound network connections without any corresponding user-initiated action.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network, Guest Wi-Fi network, Internet Gateway, and VPN termination points.",
            "action": "Symbolic: Hunt for network traffic signatures matching publicly disclosed indicators of compromise for mobile zero-click exploits (e.g., connections to specific IPs/domains associated with NSO Group's Pegasus infrastructure). Maintain and query against an up-to-date list of these IOCs. Statistical: Analyze the timing relationship between inbound connections from common messaging service IP ranges (e.g., Apple Push Notification service) and subsequent, unrelated outbound connections from the same mobile device. Establish a baseline for the typical time delta between receiving a notification and user-initiated browsing. Flag instances where a high-entropy/low-reputation domain connection occurs within seconds of an inbound push notification. Machine Learning: Develop a sequence analysis model (e.g., using Hidden Markov Models) to identify anomalous state transitions in a device's network activity. Define states like 'Idle', 'Receiving Push Notification', 'User Browsing', and 'Outbound C2-like Beacon'. Trigger an alert when the model observes a low-probability transition, such as 'Receiving Push Notification' directly to 'Outbound C2-like Beacon' without an intermediate 'User Browsing' state."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]