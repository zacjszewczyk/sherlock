[
  {
    "information_requirement": "Is the adversary actively concealing a compromised (rooted/jailbroken) mobile device state from our detection mechanisms? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1630.003",
        "name": "Disguise Root/Jailbreak Indicators",
        "evidence": [
          {
            "description": "A specific mobile device, identified by its unique device ID, returns a 'fail' result from a remote attestation service (e.g., Google Play Integrity API, Apple DeviceCheck) while simultaneously, the on-device Mobile Threat Defense (MTD) agent reports a 'not-compromised' status for the same device within a 5-minute time window.",
            "data_sources": [
              "MDM/MTD Platform Logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Cloud provider access logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) / Mobile Threat Defense (MTD) management console, Cloud Identity Provider (IdP) logging services, Network egress points and VPN concentrators",
            "action": "Symbolic Logic: Create a SIEM rule to alert when a device ID logs a failed remote attestation result in MDM logs and a 'passed' compliance check within a 5-minute window. Enrich this by checking if the device's traffic (Zeek conn.log) is directed towards IP addresses or domains on a threat intelligence blocklist. Statistical Method: For devices failing attestation, calculate the 95th percentile for the number of distinct destination ports and destination autonomous systems (ASNs) connected to by the device over a 1-hour period. Generate an alert if the device's activity exceeds its own 30-day baseline for these metrics by more than three standard deviations. Machine Learning: Develop a time-series anomaly detection model on the volume of DNS queries (from Zeek dns.log) per device. A significant, unexplained spike in DNS query volume from a device that has recently failed an attestation check indicates potential command-and-control (C2) activity."
          },
          {
            "description": "An MTD agent on a mobile device reports a process executing with elevated (root/administrator) privileges, where the process's binary name and file hash do not match the allowlist of known-good system binaries or the blocklist of known rooting tools for that specific OS version.",
            "data_sources": [
              "MTD/Mobile EDR agent process execution logs",
              "Zeek conn.log",
              "Zeek software.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile endpoints with MTD/EDR agents installed, Network traffic inspection points (e.g., VPN, proxy servers)",
            "action": "Symbolic Logic: Create a SIEM rule that alerts when a process is reported with root privileges AND its file hash is not found in the organization's allowlist of legitimate system hashes or a threat intelligence feed of known malware hashes. Statistical Method: From MTD logs, profile parent-child process relationships. Calculate the rarity of each relationship (e.g., a browser spawning a shell). Generate an alert when a new, statistically rare parent-child process relationship is observed, especially if the child process initiates network connections to unusual destinations (identified via Zeek conn.log). Machine Learning: Use a classification model (e.g., Random Forest) trained on features from MTD process logs (e.g., process name, privileges, file path) and associated network logs (e.g., destination port, data volume from Zeek conn.log) to classify each process execution as 'benign' or 'suspicious'."
          },
          {
            "description": "An MTD agent reports an application process attempting to execute privileged file system operations, such as invoking `chmod` on files outside its sandboxed directory or attempting to execute a `mount -o rw,remount /system` command.",
            "data_sources": [
              "MTD/Mobile EDR agent file system integrity monitoring logs",
              "MTD/Mobile EDR agent process command-line logs",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile endpoints with MTD/EDR agents, Network file transfer analysis points (e.g., Zeek sensors), Application sandboxing analysis platforms",
            "action": "Symbolic Logic: Create a SIEM rule to alert when MTD logs show an application attempting a file system remount (`mount -o rw,remount`) or a permission change (`chmod 777`) on a critical system directory. Correlate this with Zeek files.log to see if the application was recently downloaded from an untrusted source. Statistical Method: Establish a baseline of file system modifications for each application using MTD logs. Calculate the entropy of file paths modified by each application; a sudden increase in entropy indicates it is touching a wider, more unusual set of files and should be alerted on if it exceeds 3 standard deviations from its baseline. Machine Learning: Implement a sequence analysis model (e.g., an LSTM) to analyze the sequence of actions by an application. The model should flag anomalous sequences, such as 'download from untrusted URL (Zeek conn.log) -> execute file modification on system directory (MTD logs) -> initiate C2 beaconing (Zeek conn.log)', as highly indicative of a disguised rooting attempt."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]