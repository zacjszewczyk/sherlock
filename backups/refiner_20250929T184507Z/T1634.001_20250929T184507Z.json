[
  {
    "information_requirement": "Is an adversary attempting to steal credentials from mobile device keychains? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1634.001",
        "name": "Keychain",
        "evidence": [
          {
            "description": "A corporate-connected mobile device generates network traffic to known jailbreaking repositories or exhibits TLS communication anomalies consistent with a modified root certificate store, a common prerequisite for unauthorized keychain access.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, VPN termination points, DNS resolvers, and web proxies handling mobile device traffic.",
            "action": "1. (Symbolic) Continuously monitor Zeek dns.log for queries originating from mobile device IP ranges against a threat intelligence feed of domains and subdomains associated with jailbreaking tools and repositories (e.g., Cydia, Sileo, unc0ver). An immediate alert should be generated upon a match. 2. (Statistical) In Zeek ssl.log, establish a per-device baseline for the ratio of successful TLS handshakes to failures (e.g., validation_status of 'self-signed certificate in certificate chain'). Calculate the Shannon entropy of the `issuer` field for all certificates observed from a single device over a 24-hour window. Alert when the validation failure rate exceeds a statistical threshold (e.g., 3 standard deviations above the mean) or when the issuer entropy drops significantly, indicating pinning to a single self-signed root CA. 3. (Machine Learning) Develop a time-series anomaly detection model (e.g., using Prophet or an LSTM) on the frequency of TLS validation failures and connections to rare Server Name Indications (SNIs) for each mobile device. A sudden, sustained spike detected by the model, especially when correlated with DNS lookups for jailbreak-related domains, indicates a high probability of a compromised device."
          },
          {
            "description": "A mobile device initiates an outbound network connection with unusually large data volume to an uncommonly seen destination, potentially indicating the exfiltration of the keychain database.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, firewalls, and cloud access security brokers (CASBs) monitoring traffic from mobile device subnets.",
            "action": "1. (Symbolic) Monitor Zeek conn.log for connections from mobile devices to destination IP addresses or domains listed on threat intelligence feeds for known malicious C2 servers or data exfiltration drop zones. 2. (Statistical) For each mobile device, establish a baseline of typical daily outbound data volume (`orig_bytes`) and connection count using a 30-day rolling window, calculating the 95th and 99th percentiles. Generate an alert when a single connection's data volume exceeds the 99th percentile, or the total daily volume exceeds the 95th percentile, especially if the destination IP address has not been seen from that device in the last 30 days. 3. (Machine Learning) Use a one-class SVM (Support Vector Machine) or an autoencoder trained on legitimate connection features (e.g., destination port, protocol, data volume, time of day, connection duration) for each device or user group. Classify new connections in real-time; connections flagged as anomalous by the model, particularly those occurring after a potential jailbreak detection event, should be escalated for investigation as likely keychain data exfiltration."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]