[
  {
    "information_requirement": "Has an adversary modified device security policies to evade defenses? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1632.001",
        "name": "Code Signing Policy Modification",
        "evidence": [
          {
            "description": "An Android device has the 'Install unknown apps' setting enabled for an application that is not a standard app store or an organizationally approved application.",
            "data_sources": [
              "MDM ApplicationPermissionState",
              "MDM ApplicationInventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android device fleet; MDM Management Server; Organizational App Store Servers",
            "action": "1. (Symbolic) Define and maintain an explicit allowlist of applications authorized to have the 'Install unknown apps' permission (e.g., 'Google Play Store', 'Internal App Hub'). Create a SIEM rule to trigger an alert for any application outside this list that is granted the permission. 2. (Statistical) For each application granted this permission, calculate its prevalence (percentage of devices where it is installed) across the entire device fleet. Flag any application with a prevalence below a dynamic threshold (e.g., the 5th percentile) as suspicious, as this indicates it is not a common, widely-deployed app. 3. (Machine Learning) Train a logistic regression model using features such as application prevalence, application category (e.g., 'Game', 'Productivity'), installation source, and device user role. Use the model to classify each permission grant event as 'benign' or 'suspicious', generating a risk score. Events with a high-risk score (>0.8) require immediate analyst review."
          },
          {
            "description": "An Android device has an unexpected or non-standard Certificate Authority (CA) certificate installed in its trusted store.",
            "data_sources": [
              "MDM DeviceCertificateInventory",
              "MDM SecurityComplianceReport"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android device fleet; MDM Management Server; Public Key Infrastructure (PKI) Servers",
            "action": "1. (Symbolic) Maintain a 'golden image' allowlist of SHA-256 hashes for all approved CA certificates. Ingest MDM certificate inventories and generate a high-severity alert for any installed certificate whose hash is not on the allowlist. 2. (Statistical) For each non-allowlisted certificate, calculate the Shannon entropy of its Subject and Issuer fields. Also, calculate the prevalence of the certificate's thumbprint across the device fleet. A certificate with high entropy and low prevalence (<0.5% of devices) should be considered highly anomalous. 3. (Machine Learning) Use an unsupervised anomaly detection model, such as an Isolation Forest, on certificate attributes (e.g., validity period length, key size, subject/issuer string length, number of Subject Alternative Names). Train the model on the population of known-good, allowlisted certificates. The model will then score new, unknown certificates, flagging those that are structurally dissimilar to the established baseline of legitimate CAs."
          },
          {
            "description": "An iOS device has a new, non-standard, or unapproved Configuration Profile installed.",
            "data_sources": [
              "MDM DeviceProfileInventory",
              "MDM DeviceComplianceReport"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed iOS device fleet; MDM Management Server; Apple Push Notification service (APNs) infrastructure",
            "action": "1. (Symbolic) For each user group or device role, define a set of approved Configuration Profile identifiers. Create a SIEM rule to perform a set-difference operation between the device's reported installed profiles and its assigned approved set. Any profile in the device's list but not in the approved set triggers an alert. 2. (Statistical) Analyze the installation timestamps for all configuration profiles across the fleet. Establish a baseline of normal installation times (e.g., during device enrollment, within business hours for IT support pushes). A profile installed at a statistically anomalous time (e.g., 3 AM on a Sunday, >3 standard deviations from the mean installation hour) should have its priority increased. 3. (Machine Learning) Develop a time-series anomaly detection model (e.g., ARIMA) for the count of new profile installations per hour across the fleet. A sudden, unexpected spike in installations that does not correlate with a known IT deployment action could indicate a widespread campaign and should trigger a fleet-wide investigation."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]