[
  {
    "information_requirement": "Is an adversary intercepting sensitive information, such as one-time passwords, from mobile device notifications? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1517",
        "name": "Access Notifications",
        "evidence": [
          {
            "description": "An application with `BIND_NOTIFICATION_LISTENER_SERVICE` permission is present on a device, and its package name or signing certificate hash does not match an entry on the corporate application allowlist.",
            "data_sources": [
              "MDM/MTD Application Permission Logs",
              "MDM/MTD Application Inventory Logs",
              "Corporate Application Allowlist"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM Management Console; Corporate Application Store/Repository",
            "action": "1. (Symbolic) Periodically query the MDM/UEM platform for a list of all applications with the `BIND_NOTIFICATION_LISTENER_SERVICE` permission. Compare this list against a maintained allowlist of approved applications (e.g., OS components, wearable managers). Flag any application present in the query result but not on the allowlist. 2. (Statistical) For any unlisted application with this permission, calculate its installation prevalence across the fleet. Flag any application that is a statistical outlier, e.g., installed on fewer than 1% of devices or falling below the 5th percentile of installation frequency for all apps. 3. (Machine Learning) Utilize a pre-trained classification model that scores an application's potential for maliciousness based on its metadata (e.g., requested permissions, developer reputation, age in app store, store category). An application with notification access and a high maliciousness score should be prioritized for immediate investigation."
          },
          {
            "description": "An application possessing `BIND_NOTIFICATION_LISTENER_SERVICE` permission initiates a network connection to a destination IP/domain that is present on a threat intelligence feed, has a low reputation score, or exhibits characteristics of domain generation algorithms (DGA).",
            "data_sources": [
              "MDM/MTD Application Permission Logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators; Corporate WiFi Access Points; Cloud Access Security Broker (CASB)",
            "action": "1. (Symbolic) Ingest MDM logs to identify devices with applications that have notification access. Correlate this device list with network logs. Match all destination IPs (from Zeek conn.log) and DNS queries (from Zeek dns.log) originating from these devices against threat intelligence feeds of known malicious C2 servers. Alert on any match. 2. (Statistical) For each application with notification access, establish a baseline of its DNS query patterns. Calculate the Shannon entropy of the queried subdomains within a 5-minute window. A sudden spike in entropy exceeding the 95th percentile of the app's historical baseline suggests DGA and should be flagged. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., LSTM autoencoder) on the volume of outbound data (`orig_bytes` in Zeek conn.log) per application. An anomaly score that spikes significantly, especially when the app is in the background, indicates potential exfiltration of collected notification data and should trigger an alert."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting and exfiltrating data from mobile device notifications? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1517",
        "name": "Access Notifications",
        "evidence": [
          {
            "description": "A user-reported incident of a missing sensitive notification (e.g., MFA token) correlates in time with anomalous application behavior or network activity on the user's device, where no legitimate app can account for the dismissal.",
            "data_sources": [
              "User-reported incidents (Help Desk tickets)",
              "MDM/MTD Device Process Logs",
              "Zeek conn.log",
              "MDM/MTD Application Installation Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Help Desk Ticketing System; SIEM Platform; MDM/UEM Console",
            "action": "1. (Symbolic) Upon a user report of a missing notification, trigger an automated search in MDM logs for any new application installations or permissions grants (`BIND_NOTIFICATION_LISTENER_SERVICE`) within a +/- 30-minute window of the incident. Alert if a new, unvetted app appears. 2. (Statistical) Analyze the timeline of application background/foreground events from MDM logs around the incident time. Compare the frequency of background activity for each app to its 30-day baseline. A deviation greater than three standard deviations for a non-system app is suspicious. 3. (Machine Learning) Use a Natural Language Processing (NLP) classification model to parse help desk ticket subject lines and bodies to automatically identify and tag tickets related to 'missing MFA,' 'missing notification,' or 'login problem.' Automatically assign high priority and trigger the symbolic and statistical analysis workflows."
          },
          {
            "description": "An application with `BIND_NOTIFICATION_LISTENER_SERVICE` permission exhibits an outbound data transfer volume that is a statistical outlier compared to its own historical baseline or the baseline of its application category, particularly when the application is operating in the background.",
            "data_sources": [
              "Zeek conn.log",
              "MDM/MTD Application Permission Logs",
              "MDM/MTD Application Usage Logs (foreground/background status)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN Concentrators; Corporate WiFi Access Points; Cloud Access Security Broker (CASB)",
            "action": "1. (Symbolic) For applications with notification access, create a rule to alert on any outbound connection (from Zeek conn.log) to a destination port that is not on a pre-defined list of expected ports for that application (e.g., TCP/80, TCP/443). 2. (Statistical) For each app with notification access, profile its hourly outbound data volume (`orig_bytes`) to create a historical baseline. Alert when the hourly volume exceeds the 99th percentile of its own history, and increase the alert's priority if MDM logs show the app was in a background state during the transfer. 3. (Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on network flow features (total bytes, packet count, flow duration, destination port) for all apps with notification access. This will create clusters of 'normal' behavior. Any new flow from an app that is classified as a noise point or falls into a small, anomalous cluster should be flagged for investigation as a potential exfiltration channel."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]