[
  {
    "information_requirement": "Is an adversary using web protocols for command and control on corporate mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1437.001",
        "name": "Web Protocols",
        "evidence": [
          {
            "description": "A mobile device's network traffic exhibits one or more of the following measurable characteristics: (1) Highly periodic 'heartbeat' connections to a single destination IP/domain over HTTP/S. (2) HTTP/S requests to domains with low reputation scores or registered within the last 90 days. (3) HTTP requests containing User-Agent strings that are rare or do not match a baseline of approved corporate mobile applications. (4) URI paths or query parameters containing data with Shannon entropy scores exceeding the 95th percentile for the user or destination.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network egress points, VPN concentrators, forward and reverse proxies, and central DNS resolvers that process traffic from managed mobile device subnets or enrolled devices.",
            "action": "1. (Symbolic) Query `Zeek dns.log` and `http.log` for connections to destination domains and hosts that match external threat intelligence feeds for known C2 infrastructure. Generate an alert for any match. 2. (Statistical) For each source mobile IP, analyze `Zeek conn.log` to calculate the standard deviation of time deltas between connections to the same destination over a rolling 1-hour window. A standard deviation below a low threshold (e.g., < 1.0 seconds) indicates periodic beaconing. In parallel, analyze `Zeek http.log` to calculate the Shannon entropy of URI paths; flag requests where the entropy is in the 98th percentile for that specific user or device, suggesting obfuscated data. 3. (Machine Learning) Develop a time-series forecasting model (e.g., ARIMA) for each mobile device's total outbound data volume and request count per hour, based on historical `Zeek conn.log` data. Generate an alert if the observed traffic significantly deviates from the forecasted model's confidence interval. Additionally, use an unsupervised learning model like Isolation Forest on features from `http.log` and `conn.log` (e.g., request size, response size, connection duration, URI entropy, user agent rarity) to detect anomalous HTTP sessions that do not conform to established patterns."
          },
          {
            "description": "A TLS session initiated by a mobile device presents a JA3 hash that either (1) matches a known-malicious signature from threat intelligence or (2) does not match any entry in a pre-compiled allowlist of JA3 hashes for approved corporate applications and standard mobile operating system services.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network egress points, VPN concentrators, and SSL/TLS inspection appliances (e.g., forward proxies) that decrypt and log traffic from managed mobile device subnets.",
            "action": "1. (Symbolic) From `Zeek ssl.log`, extract the `ja3` hash for all client hellos originating from the mobile device IP space. Compare each hash against a threat intelligence feed of known malicious JA3 hashes. A direct match generates a high-confidence alert. 2. (Statistical) Create and maintain an allowlist of known-good JA3 hashes for sanctioned corporate applications. For each user, calculate the frequency of observed JA3 hashes over a 30-day baseline. Alert on any JA3 hash that is not on the allowlist and is statistically rare (e.g., observed less than 5 times across the enterprise or falls in the bottom 1st percentile of frequency for that user), as this may indicate an unauthorized application. 3. (Machine Learning) Use a classification model (e.g., Random Forest) trained on labeled JA3 hashes (known good vs. known bad). Features can include the individual components of the TLS handshake that form the JA3 hash. Use this model to assign a 'maliciousness score' to previously unseen JA3 hashes. A score above a predetermined threshold (e.g., > 0.85) triggers an alert for analyst investigation."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]