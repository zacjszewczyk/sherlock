[
  {
    "information_requirement": "Is an adversary using web protocols for command and control on corporate mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1437.001",
        "name": "Web Protocols",
        "evidence": [
          {
            "description": "A mobile device's network traffic exhibits one or more of the following measurable characteristics: (1) Highly periodic 'heartbeat' connections to a single destination IP/domain over HTTP/S. (2) HTTP/S requests to domains with low reputation scores or registered within the last 90 days. (3) HTTP requests containing User-Agent strings that are rare or do not match a baseline of approved corporate mobile applications. (4) URI paths or query parameters containing data with Shannon entropy scores exceeding the 98th percentile for the user or destination. (5) A highly asymmetric ratio of bytes sent vs. bytes received, inconsistent with normal browsing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network egress points, VPN concentrators, forward and reverse proxies, and central DNS resolvers that process traffic from managed mobile device subnets or enrolled devices.",
            "action": "1. (Symbolic) From Zeek dns.log and http.log, query for destination domains, hosts, and IPs that match threat intelligence feeds of known C2 infrastructure. Generate a high-priority alert for any match. 2. (Statistical) For each mobile device IP, analyze Zeek conn.log over a rolling 24-hour window to identify potential C2 beaconing. First, calculate the standard deviation of time deltas between connections to the same destination; a value less than 1.0 second suggests periodic activity. Second, calculate the ratio of bytes sent to bytes received (orig_bytes / resp_bytes); a ratio significantly deviating from a baseline of 1.0 (e.g., > 10.0 or < 0.1) suggests asymmetric data transfer. Concurrently, analyze Zeek http.log to calculate the Shannon entropy of URI paths and query parameters; flag any request where the entropy exceeds the 98th percentile for that user or destination, indicating potential data encoding. 3. (Machine Learning) Deploy an unsupervised learning model, such as an Isolation Forest, to detect anomalous HTTP/S sessions. Use features from Zeek conn.log, http.log, and ssl.log, including connection duration, sent/received bytes, URI length, URI entropy, user agent string rarity, and JA3 hash prevalence. Train the model on a baseline of normal mobile traffic and use it to score new sessions for anomaly. Additionally, develop a per-device time-series forecasting model (e.g., Prophet or LSTM) for total hourly outbound data volume. An alert is triggered if observed volume exceeds the model's predicted confidence interval for a sustained period, indicating potential data exfiltration."
          },
          {
            "description": "A TLS session from a mobile device exhibits a client fingerprint (JA3 hash) or server fingerprint (JA3S hash) that: (1) matches a known-malicious signature from threat intelligence; (2) is statistically rare across the enterprise; or (3) does not match an established allowlist of fingerprints for approved corporate applications and standard mobile OS services.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at key chokepoints with visibility into traffic from managed mobile devices, including corporate Wi-Fi egress points, VPN concentrators, and forward proxies capable of inspecting TLS handshakes (not necessarily decrypting payload) to generate Zeek ssl.log data.",
            "action": "1. (Symbolic) From Zeek ssl.log, extract the `ja3` (client) and `ja3s` (server) hashes for all connections originating from the mobile device IP space. Compare these hashes against threat intelligence feeds of known malicious client and server fingerprints. A direct match on either hash generates a high-confidence alert. 2. (Statistical) Establish and maintain an enterprise-wide baseline of all observed JA3 and JA3S hashes from Zeek ssl.log over a 30-day period, creating a frequency distribution. For each new TLS connection from a mobile device, check if its JA3 hash is on a pre-approved allowlist for sanctioned applications. If not on the allowlist, generate an alert if the hash's frequency falls below the 1st percentile for the entire enterprise, indicating a rare client application. Correlate with the associated JA3S hash rarity for additional context. 3. (Machine Learning) Train a supervised classification model (e.g., XGBoost or Random Forest) using labeled datasets of known-good and known-malicious TLS handshakes. Extract features from the components that form the JA3 hash (TLS version, accepted ciphers, list of extensions, elliptic curves, and elliptic curve formats) in addition to the hash itself. Use the trained model to classify new, unseen JA3 hashes and assign a probability score of maliciousness. A score exceeding a tuned threshold (e.g., 0.90) triggers an alert for analyst review."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]