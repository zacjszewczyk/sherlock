[
  {
    "information_requirement": "Is an adversary performing discovery on compromised mobile devices to identify network connectivity? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1422.001",
        "name": "Internet Connection Discovery",
        "evidence": [
          {
            "description": "A network diagnostic command (e.g., 'netstat', 'ping', 'ifconfig') is executed on a mobile device from a non-standard parent process, via a remote shell (e.g., ADB), or by an application that does not typically perform network diagnostics. The execution is not associated with legitimate administrative or troubleshooting activity.",
            "data_sources": [
              "Mobile EDR process execution logs",
              "Android Debug Bridge (ADB) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices (Android, iOS), Mobile Device Management (MDM) servers, Endpoint Detection and Response (EDR) platform consoles",
            "action": "1. Symbolic Logic: Create a SIEM rule to trigger an alert when a process creation event on a mobile endpoint matches a list of network discovery commands ('netstat', 'ping', 'ifconfig', 'getprop net.dns1') AND the parent process is not a known system utility or IT administration tool. Immediately enrich alerts with device owner and role information from the MDM. 2. Statistical Method: For each device, establish a baseline of command-line executions over a 30-day period. Calculate the daily execution frequency for each unique command. Generate a high-risk alert if the execution count for a discovery-related command on a given day exceeds the 99th percentile for that device's baseline or for the entire mobile fleet. 3. Machine Learning: Develop a logistic regression or decision tree classifier trained on labeled process execution data. Features should include: parent process name, command-line arguments, execution time of day, user context (if available), and whether the process was initiated via a remote shell. The model will output a probability score indicating the likelihood that the command execution is malicious. A score above a predefined threshold (e.g., 0.85) flags the event for analyst review."
          },
          {
            "description": "A mobile device generates an unusually high volume of DNS queries or TCP/UDP connection attempts to common, high-availability domains (e.g., google.com, apple.com, akamai.net) within a short time window (e.g., under 60 seconds), where connections are very brief ($$< 1$$ second) and involve minimal to no data transfer ($$< 1$$ KB). This pattern is distinct from normal application keep-alives or user browsing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, corporate Wi-Fi controllers, VPN concentrators, Internal DNS resolvers",
            "action": "1. Symbolic Logic: Continuously monitor Zeek conn.log for connections originating from the mobile device IP space. Enrich destination IPs against a threat intelligence feed of known C2 servers or suspicious proxies. Generate a critical alert on any match. 2. Statistical Method: For each mobile device IP, aggregate Zeek dns.log and conn.log data into 1-minute windows. Calculate the count of unique destination domains queried and the entropy of destination IP addresses contacted. Establish a baseline for these metrics for each device. Alert when the number of unique domains or the IP entropy for a given window exceeds 3 standard deviations from the device's 30-day rolling average. A high ratio of DNS queries to subsequent TCP connections ($$> 5:1$$) should increase the alert's severity. 3. Machine Learning: Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) on the rate of new outbound connections per device per minute. Train the model on historical Zeek conn.log data to learn the normal 'rhythm' of a device's network activity, accounting for time-of-day and day-of-week seasonality. An observation that falls outside the model's 99% prediction interval constitutes a significant anomaly warranting investigation for discovery behavior."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]