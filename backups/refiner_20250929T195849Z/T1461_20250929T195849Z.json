[
  {
    "information_requirement": "Has an adversary gained initial access to the corporate network via a compromised mobile device?",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1461",
        "name": "Lockscreen Bypass",
        "evidence": [
          {
            "description": "A high-velocity series of at least 5 failed corporate authentication events (Windows Event ID 4625) from a single mobile-associated IP address within a 10-minute window, immediately followed by a successful authentication (Windows Event ID 4624) from the same IP. The successful login's attributes (e.g., time, geolocation, ASN) are statistically anomalous compared to the user's established baseline, suggesting a credential brute-force attack enabled by a compromised mobile device.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624",
              "Zeek conn.log",
              "MDM/UEM logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers (e.g., Active Directory Domain Controllers), VPN Concentrators, Cloud Identity Providers (e.g., Azure AD, Okta), Internet Gateway, MDM/UEM solution logs.",
            "action": "1. (Symbolic Logic) Create a rule to detect a specific event sequence: search for 5 or more failed logins (Windows Event ID 4625, Failure Reason: '%%2313' for 'Unknown user name or bad password') for a single user from a single source IP within a 10-minute window, followed by a successful login (Windows Event ID 4624) for the same user from the same IP within the subsequent 5 minutes. Use MDM/UEM logs to confirm the source IP was allocated to a mobile device at the time of the event. 2. (Statistical) For every successful login flagged by the symbolic rule, enrich the source IP with geolocation and ASN data using the Zeek conn.log. Calculate if the login time deviates more than 3 standard deviations from the user's mean login hour. Determine if the source country or ASN is historically rare for the user (e.g., present in <1% of their previous 90 days of logins). Generate a high-severity alert if the event sequence is met and either the time, location, or ASN is statistically anomalous. 3. (Machine Learning) Train and apply a user-specific Isolation Forest model on historical login features (e.g., hour of day, day of week, source ASN, country, device type from MDM). When the symbolic rule triggers, feed the features of the successful login into the model. If the model classifies the login with a high anomaly score (e.g., in the top 1% of scores), escalate the alert for immediate investigation."
          },
          {
            "description": "A mobile device, identified by its IP on the corporate network, initiates anomalous network connections. Anomalies include: connections to high-value internal hosts not previously accessed by the user or peer group; DNS queries for domains with high entropy or known C2 characteristics; or HTTP traffic with rare user-agents or data exfiltration patterns like large POST requests to unknown external domains.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments (especially those housing sensitive data like developer environments or financial systems), Corporate Wi-Fi access points, VPN termination points, DNS resolvers, Egress points to the internet.",
            "action": "1. (Symbolic Logic) Maintain and monitor a watchlist of sensitive internal hostnames and IP addresses (e.g., 'payroll-db.internal', 'source-code.git.internal'). Generate an alert if a connection is observed in Zeek conn.log from a mobile device's IP to any asset on this watchlist, and the user associated with that device is not in a pre-approved access group. 2. (Statistical) For each mobile device IP, establish a baseline for its 99th percentile of outbound data transfer size ('orig_bytes' in Zeek conn.log) over a 30-day period. Also, calculate the baseline entropy of its DNS queries (from Zeek dns.log) in a 5-minute window and the historical set of User-Agents from Zeek http.log. Trigger an alert if an outbound connection's data size exceeds 5x its established 99th percentile, if the DNS query entropy deviates by more than 3 standard deviations from its baseline, or if a new, never-before-seen User-Agent is used. 3. (Machine Learning) Employ a graph-based anomaly detection model where nodes represent devices and internal servers, learning normal traffic patterns. Generate an alert when a mobile device establishes a connection that is highly improbable under the learned model (e.g., a device from the 'Sales' peer group connecting to an 'R&D' server). Concurrently, use a time series forecasting model (e.g., ARIMA) on the volume of data uploaded from the device; an alert is raised if the actual volume significantly exceeds the forecasted upper confidence bound."
          },
          {
            "description": "A corporate-managed mobile device reports a critical compliance failure to the MDM/UEM platform, such as a jailbreak/root detection, OS integrity failure, or the disabling of mandatory security controls. This event is followed by successful authentication to corporate services from the device's IP address within a short time window (e.g., 1 hour), suggesting the compliance failure was part of a malicious action to bypass device security.",
            "data_sources": [
              "MDM/UEM logs",
              "Windows Event ID 4624",
              "Zeek conn.log",
              "VPN logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM Management Servers, Authentication Servers, VPN Concentrators, Cloud Identity Providers.",
            "action": "1. (Symbolic Logic) Create a rule that triggers when an MDM log shows a high-severity compliance event (e.g., isJailbroken = true, osIntegrityCheck = 'Failed') for a device. Correlate the device ID with an IP address from VPN or MDM logs. Alert if a successful login event (Windows Event ID 4624 or IdP success log) is seen from that IP within the subsequent hour. 2. (Statistical) For all devices, calculate the 95th percentile for time-to-remediate critical compliance alerts. Flag any device that remains non-compliant for a period exceeding this percentile while also showing active network usage (e.g., bytes_in/out > 0 in Zeek conn.log) associated with its IP. 3. (Machine Learning) Train a logistic regression classifier to predict the likelihood of a compliance alert being malicious. Features can include: type of compliance failure, user's department, time of day, and whether the device authenticated successfully post-alert. A high probability score from the model (e.g., >0.85) escalates the alert for SOC review."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]