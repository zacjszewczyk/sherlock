[
  {
    "information_requirement": "Are adversaries accessing credentials stored on corporate mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1634",
        "name": "Credentials from Password Store",
        "evidence": [
          {
            "description": "A device's compliance status, as recorded in MDM/UEM logs, changes to 'non-compliant' with a specific reason code matching 'jailbreak' or 'root', followed by anomalous outbound network traffic patterns from the device's assigned IP address.",
            "data_sources": [
              "MDM/UEM device compliance logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate MDM/UEM management server; Network egress points instrumented with Zeek sensors; VPN concentrators.",
            "action": "1. Symbolic Match: Continuously query MDM/UEM logs for devices where `compliance_status` changes to 'non-compliant' and `reason` is 'jailbreak_detected' or 'root_detected'. For each flagged device, correlate its assigned IP address with Zeek conn.log and check for connections to IPs/domains on a threat intelligence blocklist associated with jailbreaking tools or malware repositories. 2. Statistical Analysis: For each flagged device, establish a 30-day rolling baseline of its daily outbound data volume (`orig_bytes` in Zeek conn.log). Generate an alert if the daily volume exceeds 3 standard deviations from its own mean or the 95th percentile of all mobile devices. Additionally, calculate the daily count of distinct destination ports; a sudden increase may indicate scanning or non-standard protocol usage. 3. Machine Learning Application: Implement a time-series anomaly detection model (e.g., ARIMA) on the per-device outbound byte count. A significant, unexplained spike in traffic following a jailbreak event should be flagged as high-risk. A pre-trained classification model can also score the device's activity based on features like `is_jailbroken`, `outbound_bytes_24h`, `destination_country_rarity_score`, and `connection_count_vs_peer_group` to classify the activity as potential credential exfiltration."
          },
          {
            "description": "An application installed on a device, identified via MDM/UEM inventory logs, is not on the approved corporate application allowlist and is observed making DNS requests for high-entropy domains or establishing direct-to-IP connections indicative of C2 communication or data exfiltration.",
            "data_sources": [
              "MDM/UEM application inventory logs",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate MDM/UEM management server; Corporate DNS resolvers logging to Zeek; Network egress points instrumented with Zeek sensors.",
            "action": "1. Symbolic Match: Ingest MDM/UEM application inventory lists. For each new or updated application, compare its package name and signing certificate against a corporate allowlist and a threat intelligence feed of known malicious applications. Concurrently, monitor Zeek dns.log for requests from mobile device IP ranges to domains on a known C2 blocklist. 2. Statistical Analysis: For any application not on the allowlist, analyze its associated DNS queries from Zeek dns.log. Calculate the Shannon entropy for all queried subdomains; an entropy score greater than 3.5 suggests probable DGA activity. Also, for each device, calculate the ratio of successful DNS queries (`rcode = 'NOERROR'`) to failed queries (`rcode != 'NOERROR'`); a high failure rate can indicate C2 beaconing attempts. 3. Machine Learning Application: Use a clustering algorithm (e.g., DBSCAN) on features extracted from Zeek conn.log for traffic originating from unauthorized apps. Features can include `protocol`, `destination_port`, `connection_duration`, and `total_bytes_sent`. Clusters that separate from the main body of 'normal' application traffic represent anomalous behavior requiring investigation. A supervised classifier can also be trained to identify beaconing behavior by analyzing the periodicity and size of connections over time."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]