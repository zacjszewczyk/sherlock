[
  {
    "information_requirement": "Is an adversary using custom symmetric encryption for command and control on our managed mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1521.001",
        "name": "Symmetric Cryptography",
        "evidence": [
          {
            "description": "A mobile application on a managed device establishes periodic network connections to a single destination IP/domain where the inter-arrival time has a standard deviation below a defined threshold (e.g., < 5 seconds). The payload of these connections has a calculated Shannon entropy score greater than 7.5, and the destination port/protocol combination does not match a known application profile.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Mobile EDR/MDM network flow logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, Corporate Wi-Fi network sensors, VPN concentrators, Internet Gateway / Egress Firewall",
            "action": "1. (Symbolic) From network flow data (Zeek conn.log, MDM logs), enrich destination IPs/domains with threat intelligence feeds. Immediately alert on any connection from a mobile device to a known malicious C2 destination. 2. (Statistical) For each source-destination pair, calculate the standard deviation of inter-arrival times over a rolling 1-hour window. Flag pairs where the standard deviation is below the 5th percentile of all observed device traffic patterns. For flagged flows, calculate the Shannon entropy of the payload if available from Zeek's file extraction. An entropy score > 7.5 combined with low timing deviation significantly increases the risk score. Alert when a device's risk score exceeds 3 standard deviations from its own baseline. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., ARIMA) for each device's outbound connection count and data volume. Alert on spikes that cannot be explained by the model. Additionally, use a classification model (e.g., Random Forest) trained on labeled data, with features such as inter-arrival time standard deviation, payload entropy, connection duration, bytes sent/received, and destination IP reputation, to classify flows as 'C2 Beaconing' or 'Benign'."
          },
          {
            "description": "Network traffic from a mobile device IP address is observed on a common service port (e.g., TCP/443, UDP/53) but lacks the corresponding application-layer handshake or valid protocol structure. Specifically, this is evidenced by a TCP connection on port 443 with no matching 'ssl.log' entry, or a UDP connection on port 53 with no matching 'dns.log' entry.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Internal DNS resolvers, Cloud Access Security Broker (CASB) logs, Core network switches",
            "action": "1. (Symbolic) Correlate destination IPs of mismatched protocol traffic against a deny list of known malicious hosts, TOR exit nodes, or non-standard cloud service provider IP ranges. Generate a high-severity alert for any matches. 2. (Statistical) For each mobile device, calculate the ratio of mismatched connections (e.g., non-TLS on 443) to total connections on that port over a 24-hour period. Establish a baseline for each device. Alert when a device's daily mismatch ratio exceeds its 95th percentile or is an outlier (e.g., > 3 Median Absolute Deviations) compared to the population of all mobile devices. 3. (Machine Learning) Deploy an unsupervised machine learning model, such as an Isolation Forest or Autoencoder, trained on features from Zeek logs (conn.log, ssl.log, dns.log) for normal traffic. Features should include port, protocol, duration, service field value, bytes sent/received, and a boolean for 'has_ssl_log' or 'has_dns_log'. The model will identify anomalous connections that deviate from learned normal patterns, which are strong candidates for tunneled C2 traffic, and flag them for analyst review."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]