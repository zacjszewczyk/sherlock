[
  {
    "information_requirement": "Is an adversary attempting to elevate privileges on mobile devices via process injection? (PIR)",
    "tactic_id": "TA0029",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1631",
        "name": "Process Injection",
        "evidence": [
          {
            "description": "An application process on a mobile device, monitored via endpoint security logs, loads a dynamic library (.so on Android, .dylib on iOS) that is not declared in its manifest or part of its original installation package. Alternatively, the process makes system calls associated with memory modification (e.g., ptrace, mach_vm_write) that are anomalous compared to a pre-established baseline of its normal behavior.",
            "data_sources": [
              "Android logcat",
              "iOS Unified Logs",
              "MDM/EDR Process Activity Logs",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform, Endpoint Detection and Response (EDR) agents on managed mobile devices, Network sensors monitoring corporate Wi-Fi and VPN traffic, DNS resolvers serving mobile clients.",
            "action": "1. (Symbolic Logic) From MDM/EDR logs, continuously monitor for mobile application processes that call functions associated with process injection, such as `dlopen`, `dlsym`, `ptrace` (on Android), or `mach_vm_write` (on iOS). Create a watchlist of applications not expected to use these functions. Correlate any hits with a threat intelligence feed of known malicious library names or C2 domains/IPs observed in concurrent network traffic (Zeek conn.log, Zeek dns.log). An alert is triggered on a direct match. 2. (Statistical) For each managed application, establish a baseline profile of all legitimate dynamic libraries loaded during normal operation. Using EDR logs, monitor for any deviation from this baseline. Calculate a risk score based on the rarity of the loaded library across the enterprise fleet. Concurrently, analyze DNS queries (Zeek dns.log) from the device and calculate the Shannon entropy of the queried subdomain labels. A query with an entropy score exceeding a threshold (e.g., > 3.5, indicating randomness typical of DGA) that occurs within 5 minutes of an anomalous library load significantly increases the risk score. 3. (Machine Learning) Train a time-series anomaly detection model (e.g., an LSTM Autoencoder) on sequences of system calls made by high-risk applications. The model learns the normal sequence and patterns of calls. During inference, feed real-time system call sequences from MDM/EDR logs into the model. An unusually high reconstruction error from the model indicates a significant deviation from normal behavior, such as the execution of injected code, triggering an alert for analyst review."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary using process injection to hide malicious code within legitimate mobile application processes? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1631",
        "name": "Process Injection",
        "evidence": [
          {
            "description": "A trusted application process (e.g., web browser, social media app) on a mobile device shows a statistically significant increase in CPU or memory usage (e.g., >3 standard deviations above its 30-day rolling average) for a sustained period (e.g., >10 minutes), while simultaneously initiating network connections to IP addresses or domains that are not on an established allowlist of known-good destinations for that application.",
            "data_sources": [
              "MDM Performance Logs (CPU/Memory)",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM console providing performance telemetry, Network egress points capturing traffic from corporate Wi-Fi and VPNs, Devices assigned to users with access to sensitive corporate data (e.g., executives, system administrators, R&D personnel).",
            "action": "1. (Symbolic Logic) From network logs, correlate the source IP of a mobile device with process information from an MDM/EDR. Create a rule that alerts when a trusted process (e.g., `com.android.chrome`) communicates with a destination IP, domain, or SSL certificate subject/issuer on a threat intelligence blocklist (Zeek conn.log, dns.log, ssl.log). Enrich the alert with HTTP user-agent strings (Zeek http.log) to check for anomalies against the expected user-agent for that application. 2. (Statistical) For each trusted application, ingest CPU and memory usage from MDM logs to create a per-device/per-app baseline using a 30-day rolling median and Median Absolute Deviation (MAD), which is robust to outliers. An alert is generated if resource usage exceeds a dynamic threshold (e.g., median + 5 * MAD) for more than 15 minutes. Concurrently, use Zeek conn.log to calculate the ratio of outbound to inbound bytes for the process's connections. A significant increase in this ratio, particularly when combined with high resource usage, may indicate data exfiltration by injected code. 3. (Machine Learning) Use network traffic data (Zeek conn.log) to create feature vectors for each connection from a trusted application (e.g., destination port, protocol, duration, bytes sent/received). Use a clustering algorithm (e.g., DBSCAN) to group connections into 'normal' behavior clusters. Any new connection that does not fall into an existing cluster and is classified as noise/an outlier is flagged for investigation. This can identify novel C2 channels or exfiltration paths that do not match known IOCs."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]