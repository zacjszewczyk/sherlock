[
  {
    "information_requirement": "Is an adversary using scheduled tasks for persistence on mobile devices? (PIR)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1603",
        "name": "Scheduled Task/Job",
        "evidence": [
          {
            "description": "A mobile device establishes network connections to a single destination IP address at highly regular intervals, characterized by a standard deviation of inter-arrival times (jitter) below a defined threshold (e.g., < 5 seconds) and low entropy of destination ports.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi access points, VPN gateways, Network egress points, Mobile Device Management (MDM) / Unified Endpoint Management (UEM) platforms.",
            "action": "1. (IOC Match) For all outbound connections from mobile device IP ranges in `Zeek conn.log`, correlate destination IPs with domains from `Zeek dns.log` and TLS SNIs from `Zeek ssl.log`. Compare domains and IPs against threat intelligence feeds of known C2 servers. Additionally, compare the JA3/JA3S hashes from `ssl.log` against lists of known malicious client fingerprints. Alert on any match. 2. (Statistical Analysis) For each source mobile IP, group outbound connections by destination IP. Calculate the inter-arrival times between consecutive connections for each group. Identify groups where the standard deviation of these times (jitter) is in the bottom 5th percentile of all observed jitters, or below an absolute threshold of 5 seconds. Also calculate the Shannon entropy of connection durations and bytes transferred; low entropy suggests automated, non-interactive behavior. Flag devices exhibiting both low jitter and low entropy metrics. 3. (Time-Series Analysis) For connection patterns identified as periodic by the statistical analysis, apply a Seasonal-ARIMA (SARIMA) model to the connection timestamp series. A model with low AIC/BIC scores that accurately predicts future connection timestamps within a narrow confidence interval (e.g., +/- 10 seconds) provides strong confirmation of an automated, scheduled task. An accurate prediction for a connection to a low-reputation destination is a high-fidelity alert."
          },
          {
            "description": "A mobile device's network traffic profile shows a statistically significant deviation from its established baseline or that of its peer group, such as communication over non-standard ports or protocol tunneling (e.g., DNS queries with abnormally large payloads or non-standard record types).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi access points, VPN gateways, Network egress points, Internal DNS resolvers.",
            "action": "1. (Rule Match) In `Zeek conn.log`, flag traffic from mobile devices to destination ports not associated with common applications or known to be used by malware. In `Zeek weird.log`, generate alerts for notices like `dns_unmatched_reply` or `possible_split_routing` that originate from mobile device IP ranges. 2. (Statistical Analysis) For each device, create a feature set including the ratio of traffic on non-standard ports (ports not in IANA service name list for common protocols) and the average size of DNS TXT record queries. Compare these features against a baseline constructed from the device's peer group (e.g., same OS, same department). Flag devices exceeding the 98th percentile for either metric as outliers. 3. (Clustering Analysis) Construct a feature vector for each mobile device using normalized values for: protocol distribution (TCP/UDP/ICMP), port entropy, average connection duration, total bytes transferred, and DNS query characteristics (query length entropy, A/AAAA vs TXT/CNAME ratio). Apply a density-based clustering algorithm like DBSCAN. Devices classified as outliers (noise points) represent anomalous network behavior and are primary candidates for investigation for covert C2 channels established by a scheduled task."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary using a scheduled task to execute malicious code on mobile devices? (PIR)",
    "tactic_id": "TA0041",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1603",
        "name": "Scheduled Task/Job",
        "evidence": [
          {
            "description": "A mobile device downloads a file with an executable MIME type for mobile platforms (e.g., 'application/vnd.android.package-archive' for APKs) from a low-reputation domain, where the download events occur at a statistically periodic interval (e.g., daily at 02:00 UTC).",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Zeek conn.log",
              "Zeek intel.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate Wi-Fi access points, Web Proxies.",
            "action": "1. (IOC Match) In `Zeek files.log`, compare file hashes (MD5, SHA1) of downloads against malware databases. In `Zeek http.log`, check the `host`, `uri`, and `user_agent` fields against threat intelligence feeds. Alert on any match found in `Zeek intel.log`. 2. (Statistical Analysis) Isolate download events for mobile-specific executable MIME types. For each source device, apply an autocorrelation function (ACF) to the time series of these download events; a significant spike at a non-zero lag indicates periodicity. Separately, calculate the Shannon entropy of the `filename` from `files.log` and flag filenames with entropy scores in the top 5th percentile of their peer group. 3. (Classification Model) Train a gradient boosting classifier (e.g., XGBoost) to produce a 'malicious download' score. Use features including: domain age and reputation of the host (`http.log`), filename entropy (`files.log`), User-Agent string prevalence, file MIME type (`files.log`), presence of `seen.indicator` in `intel.log`, and a binary feature for 'outside business hours'. A high score, especially when correlated with periodic behavior from the statistical analysis, constitutes a high-confidence alert."
          },
          {
            "description": "A mobile device, at regular time intervals, generates DNS queries for a domain that has a high DGA probability score based on lexical features, is not on an organizational allowlist, and was registered within the last 30 days.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek intel.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Network egress points.",
            "action": "1. (IOC Match) Continuously check all domains in `Zeek dns.log` from mobile device subnets against threat intelligence feeds (C2, DGA) and a list of Newly Registered Domains (NRDs), flagging domains < 72 hours old. Create a rule to detect when a mobile device's DNS query (`id.resp_h`) is not one of the designated corporate DNS servers. 2. (Statistical Analysis) For each queried domain not on an enterprise allowlist, calculate its lexical features: Shannon entropy, length, and n-gram score (by comparing its 2-gram profile to a baseline from the Tranco Top 1M list). Create a composite anomaly score from these features. Flag domains in the 99th percentile of this composite score as potential DGAs requiring further analysis. 3. (DGA Classification) Deploy a pre-trained DGA detection model (e.g., an LSTM or CNN) into the analysis pipeline. Feed all non-allowlisted domains queried by mobile devices into the model. For domains that receive a high DGA probability score (e.g., >0.90), correlate the query timestamp with other device activities. A high-scoring DGA query that occurs at regular intervals is a strong indicator of malicious execution via a scheduled job."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]