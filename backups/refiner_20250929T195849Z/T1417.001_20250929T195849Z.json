[
  {
    "information_requirement": "Is an adversary capturing user credentials via keylogging on mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1417.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "A third-party keyboard application is installed on a mobile device that is not on the corporate-approved allowlist, or an approved keyboard's binary hash has changed unexpectedly from the established baseline.",
            "data_sources": [
              "Mobile Device Management (MDM) Application Inventory Logs",
              "Mobile EDR Process Logs",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, BYOD devices with corporate profiles",
            "action": "1. (Symbolic) Maintain an allowlist of approved keyboard applications, including their package names, versions, and developer signatures. Continuously scan MDM application inventories. Generate a high-severity alert for any keyboard application not on the allowlist or whose developer signature does not match the approved record. 2. (Statistical) For all installed keyboard applications, calculate the prevalence across the device fleet. Any keyboard with a prevalence below a dynamic threshold (e.g., installed on fewer than 2% of devices or 5 absolute devices) should be flagged for review. Track the installation date and calculate the time-to-install delta for new keyboards; a sudden burst of installs for a rare keyboard is anomalous. 3. (ML) Develop a classification model (e.g., Random Forest) trained on application metadata (permissions requested, developer reputation, app store category, install source). The model should predict the likelihood of an application being malicious. A keyboard application with a high maliciousness score, especially when combined with low prevalence, triggers a critical alert for immediate investigation."
          },
          {
            "description": "An Android application is granted the 'android.permission.BIND_ACCESSIBILITY_SERVICE' permission, and the application's category is not 'Accessibility' or 'Security', or the application is not on a pre-approved allowlist for this permission.",
            "data_sources": [
              "Mobile Device Management (MDM) Permissions Logs",
              "Mobile EDR API Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android devices, BYOD Android devices with corporate profiles",
            "action": "1. (Symbolic) From MDM permission logs, continuously monitor for the granting of 'BIND_ACCESSIBILITY_SERVICE'. Maintain an explicit allowlist of applications (e.g., approved password managers, corporate support tools) authorized to use this service. Alert immediately on any application not on the allowlist that is granted this permission. 2. (Statistical) For applications requesting 'BIND_ACCESSIBILITY_SERVICE', calculate the Shannon entropy of the requested permissions set. Applications with an unusually high entropy score (requesting a wide, diverse range of permissions unrelated to their stated function) should be flagged. Compare the set of permissions to the baseline of other apps in the same category. 3. (ML) Use an anomaly detection model (e.g., Isolation Forest) on the sequence of API calls made by an application after being granted accessibility services. Train the model on legitimate accessibility applications. Deviations from the learned normal behavior, such as file system access or network connections immediately following text input events ('TYPE_VIEW_TEXT_CHANGED'), should be scored as highly anomalous and generate an alert."
          },
          {
            "description": "A mobile device exhibits a pattern of small (e.g., < 1 KB), regular, time-intervaled outbound network connections to a destination IP/domain that has a low reputation score, is newly registered, or is not associated with any legitimate installed application.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "Domain registration (WHOIS) data",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., corporate WiFi, VPN gateway), Mobile device network interfaces",
            "action": "1. (Symbolic) Correlate network flow logs from mobile devices with threat intelligence feeds. Generate a high-severity alert for any connection from a mobile device to a known malicious IP address or domain, especially if the connection originates from an unrecognized application process. 2. (Statistical) From Zeek conn.log, for each mobile device IP, analyze outbound connections. Flag connections that are consistently below the 5th percentile for outbound data volume ('orig_bytes') and have a low standard deviation of inter-connection time intervals (heartbeating). Correlate with Zeek dns.log; if the destination domain is newly registered (< 30 days old based on WHOIS data), escalate the alert priority. 3. (ML) Implement a time-series analysis model (e.g., LSTM) for each device's outbound traffic volume and connection frequency. An alert is generated when the model detects a significant anomaly, such as the emergence of a new, low-volume, periodic signal that deviates from the established baseline, which could indicate a C2 channel."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary collecting sensitive information (PII, proprietary data) via keylogging on mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1417.001",
        "name": "Keylogging",
        "evidence": [
          {
            "description": "A third-party keyboard application is installed on a mobile device that is not on the corporate-approved allowlist, or an approved keyboard's binary hash has changed unexpectedly from the established baseline.",
            "data_sources": [
              "Mobile Device Management (MDM) Application Inventory Logs",
              "Mobile EDR Process Logs",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, BYOD devices with corporate profiles",
            "action": "1. (Symbolic) Maintain an allowlist of approved keyboard applications, including their package names, versions, and developer signatures. Continuously scan MDM application inventories. Generate a high-severity alert for any keyboard application not on the allowlist or whose developer signature does not match the approved record. 2. (Statistical) For all installed keyboard applications, calculate the prevalence across the device fleet. Any keyboard with a prevalence below a dynamic threshold (e.g., installed on fewer than 2% of devices or 5 absolute devices) should be flagged for review. Track the installation date and calculate the time-to-install delta for new keyboards; a sudden burst of installs for a rare keyboard is anomalous. 3. (ML) Develop a classification model (e.g., Random Forest) trained on application metadata (permissions requested, developer reputation, app store category, install source). The model should predict the likelihood of an application being malicious. A keyboard application with a high maliciousness score, especially when combined with low prevalence, triggers a critical alert for immediate investigation."
          },
          {
            "description": "An Android application is granted the 'android.permission.BIND_ACCESSIBILITY_SERVICE' permission, and the application's category is not 'Accessibility' or 'Security', or the application is not on a pre-approved allowlist for this permission.",
            "data_sources": [
              "Mobile Device Management (MDM) Permissions Logs",
              "Mobile EDR API Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed Android devices, BYOD Android devices with corporate profiles",
            "action": "1. (Symbolic) From MDM permission logs, continuously monitor for the granting of 'BIND_ACCESSIBILITY_SERVICE'. Maintain an explicit allowlist of applications (e.g., approved password managers, corporate support tools) authorized to use this service. Alert immediately on any application not on the allowlist that is granted this permission. 2. (Statistical) For applications requesting 'BIND_ACCESSIBILITY_SERVICE', calculate the Shannon entropy of the requested permissions set. Applications with an unusually high entropy score (requesting a wide, diverse range of permissions unrelated to their stated function) should be flagged. Compare the set of permissions to the baseline of other apps in the same category. 3. (ML) Use an anomaly detection model (e.g., Isolation Forest) on the sequence of API calls made by an application after being granted accessibility services. Train the model on legitimate accessibility applications. Deviations from the learned normal behavior, such as file system access or network connections immediately following text input events ('TYPE_VIEW_TEXT_CHANGED'), should be scored as highly anomalous and generate an alert."
          },
          {
            "description": "A mobile device exhibits a pattern of small (e.g., < 1 KB), regular, time-intervaled outbound network connections to a destination IP/domain that has a low reputation score, is newly registered, or is not associated with any legitimate installed application.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "Domain registration (WHOIS) data",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., corporate WiFi, VPN gateway), Mobile device network interfaces",
            "action": "1. (Symbolic) Correlate network flow logs from mobile devices with threat intelligence feeds. Generate a high-severity alert for any connection from a mobile device to a known malicious IP address or domain, especially if the connection originates from an unrecognized application process. 2. (Statistical) From Zeek conn.log, for each mobile device IP, analyze outbound connections. Flag connections that are consistently below the 5th percentile for outbound data volume ('orig_bytes') and have a low standard deviation of inter-connection time intervals (heartbeating). Correlate with Zeek dns.log; if the destination domain is newly registered (< 30 days old based on WHOIS data), escalate the alert priority. 3. (ML) Implement a time-series analysis model (e.g., LSTM) for each device's outbound traffic volume and connection frequency. An alert is generated when the model detects a significant anomaly, such as the emergence of a new, low-volume, periodic signal that deviates from the established baseline, which could indicate a C2 channel."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.1",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]