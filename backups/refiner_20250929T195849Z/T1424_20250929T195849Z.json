[
  {
    "information_requirement": "Is an adversary attempting to discover running processes on our managed mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1424",
        "name": "Process Discovery",
        "evidence": [
          {
            "description": "A mobile device exfiltrates a process list over the network, observable as an HTTP POST request with a high-entropy body (e.g., > 4.5 Shannon entropy for ASCII) or a DNS query with an unusually long subdomain label (> 99th percentile) and high character variance, indicating encoded data.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi access points, network egress points, DNS servers, VPN concentrators.",
            "action": "1. (Symbolic) Create a SIEM alert that triggers when a connection from the mobile device VLAN (identified in Zeek conn.log) is made to a destination IP or domain present in a threat intelligence feed categorized as malicious C2 infrastructure. Correlate with Zeek http.log for POST requests or dns.log for specific queries to the malicious destination. 2. (Statistical) For each outbound HTTP POST from a mobile device (Zeek http.log), calculate the Shannon entropy of the POST body. For each DNS query (Zeek dns.log), calculate the length and character entropy of the subdomain. Establish a per-user, 30-day rolling baseline for these metrics. Generate an alert when a user's activity exceeds the 99th percentile for any of these metrics, especially to a newly observed or low-reputation domain. 3. (Machine Learning) Implement a classification model (e.g., Random Forest) using features from Zeek logs such as request size, URL/subdomain length, domain age, destination ASN, and entropy scores. Train the model on labeled benign and known-malicious exfiltration traffic. Separately, use a time-series anomaly detection model (e.g., LSTM) on the volume of outbound data per device to detect uncharacteristic spikes in traffic that correlate with high-entropy alerts from the statistical model."
          },
          {
            "description": "On a host computer connected to a mobile device via USB, a mobile debugging process (e.g., adb.exe) spawns a child process for host process enumeration (e.g., 'tasklist.exe', 'ps.exe', or 'powershell.exe' with 'Get-Process'). This is identified by a Windows Event ID 4688 where ParentProcessName is 'adb.exe' and NewProcessName is a known enumeration tool.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Employee workstations, developer machines where mobile devices are frequently connected, privileged user workstations.",
            "action": "1. (Symbolic) Deploy a SIEM rule to generate a high-severity alert for any process creation event (Windows Event ID 4688) where the ParentProcessName is 'adb.exe' and the NewProcessName is 'tasklist.exe', 'ps.exe', 'wmic.exe' (with 'process list' arguments), or 'powershell.exe'. For PowerShell, the rule must inspect command-line arguments for 'Get-Process' or its alias 'ps'. 2. (Statistical) For all hosts with 'adb.exe' process creations, create a baseline of all child processes spawned by 'adb.exe'. Calculate the environmental prevalence (rarity score) of each parent-child process pair. Generate an alert when a pair with a low prevalence score (e.g., seen on <1% of developer machines or any non-developer machine) is observed, such as 'adb.exe' -> 'tasklist.exe'. 3. (Machine Learning) Use an unsupervised clustering algorithm (e.g., DBSCAN or Isolation Forest) on process event logs (Windows Event ID 4688), using features like ParentProcessName, NewProcessName, user context, and host role (e.g., developer, sales). An event like 'adb.exe' spawning 'tasklist.exe' on a non-developer machine will be flagged as a high-scoring anomaly or outlier by the model."
          },
          {
            "description": "A mobile device establishes network connections to domains, IPs, or URLs associated with mobile device rooting (Android) or jailbreaking (iOS) toolkits. This is observed in network logs as DNS queries for known malicious domains or direct IP connections to infrastructure hosting these tools, a common prerequisite for process discovery on modern OS versions.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network egress points, guest Wi-Fi networks, Mobile Device Management (MDM) platforms, DNS resolvers.",
            "action": "1. (Symbolic) Ingest a threat intelligence feed of domains and IPs known to host mobile rooting/jailbreaking tools and their C2 infrastructure. Create a real-time SIEM rule to match DNS queries (Zeek dns.log), HTTP host headers (Zeek http.log), and destination IPs (Zeek conn.log) from the mobile device IP range against this feed. Any match should trigger an immediate alert. 2. (Statistical) For each mobile device, monitor for a sudden spike in DNS queries to newly observed domains (NODs). Generate a medium-severity alert if a device queries >10 NODs within a 5-minute window. Raise the severity if these NODs have a low reputation score or were registered within the last 30 days. Also, alert on a high count of unique, non-standard port connections in Zeek conn.log. 3. (Machine Learning) Develop a domain reputation scoring model using features like domain age, TLS certificate details (e.g., self-signed, issuer), DNS query patterns, and threat intelligence hits. Continuously score all domains visited by mobile devices. Use a time-series anomaly detection model to flag any device whose average destination reputation score drops precipitously. Correlate these network-based flags with 'non-compliant' or 'rooted' status alerts from an integrated Mobile Device Management (MDM) platform to confirm the device state and increase alert fidelity."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]