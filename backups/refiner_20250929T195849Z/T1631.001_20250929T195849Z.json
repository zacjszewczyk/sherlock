[
  {
    "information_requirement": "Is an adversary attempting to elevate privileges by injecting code into a higher-privileged process on a mobile device? (PIR)",
    "tactic_id": "TA0029",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1631.001",
        "name": "Ptrace System Calls",
        "evidence": [
          {
            "description": "An Android audit log event shows a `ptrace` system call where the source application package is not on a pre-defined allow-list of known debuggers or system utilities, and the target process is running with a privileged user ID (UID), such as 0 (root) or 1000 (system).",
            "data_sources": [
              "Android audit.log",
              "MDM application inventory log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Android auditd log streams forwarded from managed mobile endpoints via an MDM agent to a central SIEM; Application inventory data from a Mobile Device Management (MDM) platform.",
            "action": "1. (Symbolic) Maintain a threat intelligence feed of known malicious mobile application hashes and package names. Ingest Android audit.log events into the SIEM. Create a rule that triggers an alert when a `ptrace` event is observed where the source process hash or package name matches the threat intelligence feed and the target process UID is 0 or 1000. 2. (Statistical) Using MDM application inventory logs, create and maintain an allow-list of package names authorized to use `ptrace` (e.g., legitimate debugging tools, security agents). For each mobile device, establish a 30-day baseline of `ptrace` call frequency per source application package. Create a rule that triggers an alert if: (a) a `ptrace` system call is initiated by a package name not on the authorized allow-list and targets a privileged UID (0 or 1000), OR (b) an authorized application initiates `ptrace` calls at a frequency exceeding 3 standard deviations above its established baseline. 3. (ML) Train a classification model (e.g., Random Forest) on labeled `ptrace` events from Android audit logs. Use features such as: source package name, source UID, target process name, target UID, parent process of source, and time of day. Deploy the model to score all new `ptrace` events in real-time. Generate a high-severity alert for any `ptrace` event classified as 'malicious' with a confidence score above 0.9, particularly when the target process UID is 0 or 1000."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary attempting to evade defenses by executing malicious code within the context of a legitimate mobile application process? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1631.001",
        "name": "Ptrace System Calls",
        "evidence": [
          {
            "description": "A mobile device process, identified by its source IP and timestamp, initiates anomalous network activity within a 5-minute window immediately following its being the target of a `ptrace` system call (from Android audit.log). Anomalous activity includes connecting to a known malicious destination (from Zeek conn.log) or resolving a suspicious domain (from Zeek dns.log) that deviates from its established behavioral baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Android audit.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at corporate Wi-Fi egress points, VPN concentrators, and DNS resolvers used by mobile devices.",
            "action": "1. (Symbolic) Ingest `ptrace` events from Android audit.log, Zeek conn.log, and Zeek dns.log into the SIEM. Maintain a threat intelligence feed of known C2 domains and IP addresses. Create a correlation rule that triggers when a `ptrace` event is logged for a target process on a device (identified by source IP). If, within 5 minutes after the `ptrace` event, the same source IP initiates a connection (in Zeek conn.log) or a DNS query (in Zeek dns.log) to a destination matching the C2 threat intelligence feed, generate a high-priority alert. 2. (Statistical) For each managed mobile device IP, establish a 30-day baseline of network behavior using Zeek logs, including: (a) a set of common destination FQDNs and ports, (b) the Shannon entropy of requested DNS names per hour, and (c) the 95th percentile of data volume (orig_bytes + resp_bytes) per connection. Create a rule that triggers when a `ptrace` event is observed for a process on a device. If, within the next hour, the device's network traffic exhibits behavior that is more than 3 standard deviations from its baseline (e.g., DNS entropy spikes, connection to a rare port, data volume exceeds 95th percentile), generate a medium-severity alert. 3. (ML) For each mobile device, train a time-series anomaly detection model (e.g., LSTM Autoencoder) using 1-minute aggregations of network metrics from Zeek logs (e.g., connection count, unique destination IPs, total bytes). If a `ptrace` event is detected on a device, monitor its reconstruction error score for the next 15 minutes. An error score that spikes above a dynamically adjusted threshold (e.g., 99th percentile of historical errors) indicates a significant behavioral deviation and should trigger a high-severity alert."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]