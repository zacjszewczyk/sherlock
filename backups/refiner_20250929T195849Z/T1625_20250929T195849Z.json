[
  {
    "information_requirement": "Has an adversary established persistence on a mobile device by hijacking its execution flow? (TA0028 - Persistence)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1625",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "An MDM/MTD log entry for a specific device shows a field value such as `attestation_status = 'failed'`, `integrity_check = 'mismatch'`, or a calculated hash value that does not match the expected baseline hash for the device's OS and model. This indicates a potential compromise of the bootloader, OS kernel, or system applications.",
            "data_sources": [
              "Mobile Device Management (MDM) attestation logs",
              "Mobile Threat Defense (MTD) integrity scan logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MTD management console, managed mobile endpoints (iOS, Android), and cloud infrastructure hosting the MDM/MTD services.",
            "action": "1. (Symbolic) Define a SIEM detection rule to generate a high-severity alert when an MDM/MTD log contains a field indicating attestation failure (e.g., `attestation_status = 'failed'`). The alert should include the device ID, user, OS version, and the specific integrity check that failed. 2. (Statistical) For each device profile (e.g., model and OS version), establish a 30-day baseline of attestation failure rates. Create a scheduled query that calculates the failure rate over a rolling 24-hour window. Trigger an alert if the current failure rate for any profile exceeds the 99th percentile of its historical baseline. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., ARIMA) on the aggregate count of attestation failures across the entire mobile fleet, aggregated per hour. An alert is triggered if the observed failure count significantly deviates from the forecasted range, indicating a potential widespread campaign."
          },
          {
            "description": "A core system process on an iOS device (e.g., `trustd`, `apsd`) or Android device (e.g., `netd`, `system_server`) initiates an outbound network connection where the destination is on a threat intelligence blocklist, or the connection properties are statistically anomalous compared to a historical baseline for that specific process.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateway, VPN concentrators for mobile devices, and DNS resolvers serving mobile clients.",
            "action": "1. (Symbolic) Continuously join network logs (Zeek `conn.log`, `ssl.log`, `dns.log`) with a threat intelligence feed of known malicious IPs, domains, and SSL certificate hashes. Generate an immediate, high-priority alert if a connection from a mobile device's IP matches a known malicious indicator. 2. (Statistical) For each core system process, profile its typical network behavior using Zeek logs over a 30-day period to baseline metrics like destination ports, protocol usage (`proto` in `conn.log`), total bytes sent (`orig_bytes`), and DNS query entropy (`query` in `dns.log`). Create a scheduled query to identify and alert on connections where a process communicates over a port not in its baseline, data sent exceeds the 98th percentile, or DNS query entropy is above 3.5. 3. (Machine Learning) Develop a supervised machine learning classifier (e.g., Gradient Boosting) to score the maliciousness of each network connection from a mobile device. Use features from Zeek logs such as connection duration, `orig_bytes`, `resp_bytes`, protocol, destination port, and DNS query length. An alert is triggered when a connection's score surpasses a predetermined threshold."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]