[
  {
    "information_requirement": "Is an adversary using foreground services to establish persistence on a corporate mobile device? (TA0028 - Persistence)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1541",
        "name": "Foreground Persistence",
        "evidence": [
          {
            "description": "The presence of the 'android.permission.FOREGROUND_SERVICE' permission in an application's manifest, combined with runtime logs showing invocations of the startForeground() method, from an application not expected to have persistent foreground activity (e.g., a calculator or simple game).",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices (Android); Corporate App Store/Vetting Environment",
            "action": "1. (Symbolic) Using MDM data, continuously scan for new application installations. Generate a high-priority alert if an installed application possesses the 'android.permission.FOREGROUND_SERVICE' permission AND is not from an approved source (e.g., Google Play Store) or is not on the corporate approved application list. 2. (Statistical) From Android Logcat data ingested into a SIEM, aggregate foreground service runtimes by application name and category over a 30-day period. Establish a baseline by calculating the 95th and 99th percentile for runtime duration per category (e.g., Navigation, Media, Communication). Generate a medium-priority alert for any application whose service runtime exceeds the 99th percentile for its category. 3. (Machine Learning) Develop and deploy a logistic regression model trained on application metadata (permissions requested, source repository, user ratings, number of installs, category). The model should output a probability score from 0 to 1 indicating the likelihood that the application's use of a foreground service is malicious. An application scoring above a pre-determined threshold (e.g., 0.9) should automatically quarantine the device and create a critical incident for analyst review."
          },
          {
            "description": "A TCP connection from a corporate mobile device to a single external IP address that persists for a duration greater than 8 hours, particularly when the connection occurs outside of the user's typical working hours (e.g., 10 PM to 6 AM local time).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM device inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments for mobile devices; DNS resolvers; Network egress points",
            "action": "1. (Symbolic) Execute a scheduled query against Zeek conn.log for connections where the source IP is within the corporate mobile device range, `duration` > 28800, and the destination IP (`id.resp_h`) is present in a threat intelligence feed of known C2 servers. For any matches, enrich with the associated DNS query from dns.log for the destination IP to identify the domain name. 2. (Statistical) For each device IP, aggregate connection data from Zeek conn.log over a 30-day rolling window. Calculate the 95th percentile for connection `duration`. Create a rule that triggers an alert if a new connection's duration exceeds this percentile AND the total bytes transferred (`orig_bytes` + `resp_bytes`) is also in the top 5% of all connections for that device. 3. (Machine Learning) Ingest the count of long-running (>1 hour) connections per device per hour into a time-series database. Apply a Seasonal-Hybrid ESD (Extreme Studentized Deviate) test to the time-series data for each device. An anomaly flagged by the model, indicating a sudden and statistically significant increase in the number of persistent connections, should generate an alert for investigation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary evading background process restrictions on mobile devices to access sensors? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1541",
        "name": "Foreground Persistence",
        "evidence": [
          {
            "description": "A series of connections from a mobile device to a single external destination IP exhibits a near-zero standard deviation in inter-arrival times, resulting in a Shannon entropy score below a defined threshold (e.g., < 1.5), indicative of automated, non-human beaconing activity.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points; Corporate Wi-Fi network segments for mobile devices",
            "action": "1. (Symbolic) Scan Zeek http.log for traffic from the mobile IP range where the `user_agent` string is known to be associated with malicious tools, is a generic Android client (e.g., 'Dalvik/2.1.0'), or is absent. Cross-reference the destination IP with Zeek dns.log to check if the domain was registered within the last 30 days or is a dynamic DNS domain. 2. (Statistical) For each source-destination IP pair in Zeek conn.log, collect the timestamps of all connections within a rolling 1-hour window. Calculate the time difference (delta) between each consecutive connection. Compute the Shannon entropy of this set of deltas. Alert on any source-destination pair where the entropy is less than 1.5, indicating highly periodic (non-random) beaconing. 3. (Machine Learning) On an hourly basis, extract features for all connections from mobile devices: (duration, `orig_bytes`, `resp_bytes`, `id.resp_p`, standard deviation of inter-arrival times). Feed these features into a pre-trained DBSCAN clustering model. Any connection that is classified as a noise point (i.e., does not belong to any cluster of normal behavior) should be flagged for analyst review as a potential C2 beacon."
          },
          {
            "description": "An application, confirmed via MDM logs to be using a foreground service, exhibits a ratio of total bytes sent (`orig_bytes`) to connection count that is more than three standard deviations above the established baseline for that application, suggesting anomalous bulk data transfer indicative of exfiltration.",
            "data_sources": [
              "MDM Application Inventory Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices (Android); Corporate Wi-Fi network segments for mobile devices",
            "action": "1. (Symbolic) Join MDM application inventory data (by device ID/IP) with Zeek conn.log data. Create a high-priority alert if an application with the 'android.permission.FOREGROUND_SERVICE' permission is observed communicating with a destination IP address present in a threat intelligence feed categorized as 'Data Exfiltration' or 'Drop Zone'. 2. (Statistical) For each unique application name identified via MDM, establish a 30-day rolling baseline of its average bytes sent per connection (`sum(orig_bytes) / count(connections)`) across all devices. Run a daily job to calculate this same metric for each application. Generate an alert if the daily average for any application exceeds three standard deviations from its historical baseline. 3. (Machine Learning) Train a regression model (e.g., Gradient Boosting) to predict the expected daily data upload volume (`sum(orig_bytes)`) for each device based on features like user role, device type, day of the week, and historical usage patterns. Monitor the model's residuals (the difference between predicted and actual volume) in real-time. A large, sustained positive residual for a device indicates an anomalous data transfer event that should be investigated."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]