[
  {
    "information_requirement": "Is an adversary hiding artifacts on managed mobile devices to evade detection?",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1628",
        "name": "Hide Artifacts",
        "evidence": [
          {
            "description": "An application package is present in a device's complete application inventory but lacks a corresponding launcher icon in the user interface, and this package is not on an approved whitelist of known-good iconless applications.",
            "data_sources": [
              "MDM Log: Full Application Inventory (Package Names)",
              "MDM Log: Application UI Details (Launcher Presence)",
              "Threat Intelligence Feed: Malicious Mobile App Hashes/Package Names"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform servers, Unified Endpoint Management (UEM) consoles, Corporate-owned mobile devices (iOS, Android), Employee-owned devices enrolled in BYOD program",
            "action": "1. (Symbolic Logic) On a scheduled basis, perform the following: a) For each managed device, query the MDM/UEM platform to generate a list of all installed application package names ('all_apps'). b) Concurrently, generate a list of all applications possessing a launcher icon ('launcher_apps'). c) Compute the set difference to identify iconless packages: 'hidden_apps' = 'all_apps' - 'launcher_apps'. d) Filter the 'hidden_apps' list against a curated whitelist of known-good iconless system applications and services. e) Correlate the remaining package names against a threat intelligence feed of known malicious mobile applications. A confirmed match generates a high-severity alert for immediate investigation.\n2. (Statistical Analysis) For all non-whitelisted, iconless applications identified in step 1: a) Calculate the fleet-wide prevalence for each application, defined as (number of devices with the app) / (total number of managed devices). Flag applications with a prevalence below a statistically determined low threshold (e.g., < 1st percentile of all app prevalences) for review as potentially targeted malware. b) For each device, count the number of non-whitelisted iconless applications. Establish a baseline for this count across the fleet and alert when a device's count exceeds a high-percentile threshold (e.g., 99th percentile), indicating an anomalous accumulation of hidden software. c) For each hidden app, calculate the Shannon entropy of its list of requested permissions. A high entropy score relative to the average for whitelisted system apps suggests an unusually broad and potentially suspicious set of requested capabilities, warranting further analysis.\n3. (Machine Learning) To proactively identify novel threats: a) Feature Engineering: For each new, non-whitelisted iconless application, create a feature vector including its prevalence score, permission count, permission entropy score, binary flags for high-risk permissions (e.g., ACCESS_FINE_LOCATION, READ_SMS), details from its signing certificate (e.g., self-signed, age), and installation source. b) Model Training: Train a classification model (e.g., Random Forest) using a labeled historical dataset of benign and malicious hidden applications to predict the probability of maliciousness. c) Inference: Deploy the model to score all new hidden applications in near-real-time. An application with a maliciousness probability score exceeding a defined confidence threshold (e.g., $$ > 0.90 $$) automatically triggers a medium-severity alert for analyst review."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]