[
  {
    "information_requirement": "Is an adversary capturing sensitive information from user screens on corporate mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1513",
        "name": "Screen Capture",
        "evidence": [
          {
            "description": "A non-allowlisted application is granted screen recording permissions via an API like Android's MediaProjectionManager [1], and subsequently initiates network connections to destinations with low reputation scores or exhibits anomalous data transfer patterns indicative of exfiltration.",
            "data_sources": [
              "MDM/EMM application inventory logs",
              "MDM/EMM permission grant logs",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, network egress points, VPN concentrators, corporate DNS resolvers, threat intelligence platforms",
            "action": "1. (Symbolic) Using your SIEM, join MDM/EMM permission grant logs with a maintained allowlist of applications approved for screen recording (e.g., remote support tools). Create a rule to alert when an application not on the allowlist is granted `android.permission.RECORD_AUDIO` or uses the `MediaProjection` API and also possesses the `android.permission.INTERNET` permission. 2. (Statistical) For each mobile device, query Zeek conn.log to establish a 30-day baseline of outbound data volume (`orig_bytes`) per application UID. Trigger an alert when a recording-capable app's daily outbound data transfer exceeds the 98th percentile of its historical baseline. Concurrently, analyze Zeek dns.log to calculate the Shannon entropy of requested subdomains for a given parent domain using the formula $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$. A sharp increase in entropy correlated with a data volume alert can indicate use of a Domain Generation Algorithm (DGA) for C2 communication [2]. 3. (Machine Learning) Apply a pre-trained multi-feature anomaly detection model (e.g., Isolation Forest) to real-time Zeek log data. Features for the model should include: connection duration, `orig_bytes`, `resp_bytes`, periodicity, destination port, and a categorical feature for destination IP reputation score. An application's network flow being classified as an outlier with a high anomaly score, especially within minutes of receiving screen recording permissions, should be escalated for immediate investigation."
          },
          {
            "description": "An application not on a pre-approved allowlist is granted Android Accessibility Service privileges [3], and its subsequent network activity deviates significantly from established device or application baselines.",
            "data_sources": [
              "MDM/EMM application inventory logs",
              "MDM/EMM security policy compliance logs",
              "Android logcat",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, MDM/EMM management console/server, SIEM/Data Lake containing correlated MDM and network logs",
            "action": "1. (Symbolic) Within the MDM/EMM platform, define a security policy with an explicit allowlist of applications that require accessibility services (e.g., known password managers, corporate-approved screen readers). Configure a compliance rule to generate a high-severity alert for any device where an unlisted application has accessibility services enabled. 2. (Statistical) For any device triggering the symbolic alert, query Zeek conn.log to analyze its network traffic. Compare the total outbound data volume (`orig_bytes`) in the 24-hour period following the alert to the device's 30-day rolling average. An increase greater than three standard deviations from the mean should be flagged. Additionally, calculate the ratio of outbound to inbound bytes; a significantly high ratio may indicate data exfiltration. 3. (Machine Learning) Implement a time-series forecasting model (e.g., Prophet or ARIMA) for each device's total hourly outbound data volume. An actual data volume that significantly exceeds the model's predicted upper confidence bound (e.g., 95% confidence interval) constitutes a temporal anomaly. Correlate this network anomaly in the SIEM with an MDM alert for a newly enabled, non-allowlisted accessibility service on the same device within a 1-hour window to increase detection confidence."
          },
          {
            "description": "The execution of 'screencap' or 'screenrecord' command-line utilities is detected via endpoint logging, or network traffic on TCP port 5555 consistent with a remote Android Debug Bridge (adb) session is observed [4, 5].",
            "data_sources": [
              "Mobile EDR logs",
              "Android logcat",
              "Zeek conn.log",
              "Firewall logs",
              "MDM/EMM developer mode/USB debugging logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices, Endpoint devices (for process execution logs), network segments allowing adb traffic (TCP port 5555), network infrastructure (firewalls, IDS/IPS)",
            "action": "1. (Symbolic) Deploy an IDS/firewall rule to block and generate a critical alert for all inbound and outbound traffic on TCP port 5555 (adb) at the network perimeter, with exceptions only for designated and monitored developer subnets. On Mobile EDR, create a detection rule that specifically alerts on the process execution of `screencap` or `screenrecord` binaries. 2. (Statistical) From Zeek conn.log, analyze any allowed connections on TCP port 5555. Establish a baseline for normal developer adb sessions. Flag sessions where the total data volume (`orig_bytes` + `resp_bytes`) is in the top 5% of all observed TCP sessions for that device, or where the session duration is more than two standard deviations above the mean for developer sessions. Also monitor for beaconing behavior by calculating the time delta between consecutive connections from the same source/destination pair; low variance in time deltas suggests automated activity. 3. (Machine Learning) Train and apply a supervised classification model (e.g., Gradient Boosting) to distinguish between benign (developer) and potentially malicious adb sessions. Use features from Zeek conn.log such as `duration`, `orig_bytes`, `resp_bytes`, `history`, and `conn_state`. A session classified as 'malicious', especially one originating from an external IP address not associated with a known developer, indicates a high-probability compromise."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]