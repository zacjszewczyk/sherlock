[
  {
    "information_requirement": "Is an adversary using a non-standard or custom encrypted channel for command and control on our managed mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1521",
        "name": "Encrypted Channel",
        "evidence": [
          {
            "description": "A TLS session from a managed mobile device to a low-reputation or newly registered domain utilizes a self-signed certificate or a certificate from an unapproved Certificate Authority (CA).",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at internet egress points (e.g., corporate Wi-Fi gateways, VPN concentrators), Cloud Access Security Broker (CASB) logs, and Mobile Device Management (MDM) platform for device context and asset information.",
            "action": "1. (Symbolic) For each TLS session captured in Zeek, join `ssl.log` with `x509.log` on the UID. Check if the `x509.issuer` field corresponds to a self-signed certificate or is not on a pre-defined allowlist of trusted Certificate Authorities. For any match, correlate with `dns.log` via the destination IP to check if the requested domain is on a threat intelligence feed or was registered within the last 30 days. Alert on any connection that meets both certificate and domain criteria. 2. (Statistical) For all connections using non-allowlisted CAs, extract the destination IP from `conn.log`. Enrich this IP with a reputation score from an integrated threat intelligence platform. Calculate the distribution of these scores and alert on any connection whose destination IP reputation falls within the bottom 5th percentile (i.e., extremely poor reputation). 3. (Machine Learning) Train a Random Forest or Gradient Boosting classifier using labeled historical data from `ssl.log` and `x509.log`. Use features such as certificate validity duration, entropy of the subject and issuer strings, public key algorithm, and flags for self-signed status and newly registered domain. Use the trained model to assign a 'suspicion score' to new TLS sessions in near real-time, alerting on scores above a tuned threshold."
          },
          {
            "description": "A TLS client hello from a managed mobile device produces a JA3 or JA3S hash that is either not on an established allowlist of sanctioned applications, or has an extremely low prevalence (e.g., <1st percentile) across the entire managed device fleet.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at internet egress points, virtual tap points in the cloud environment, and the Mobile Device Management (MDM) platform for application inventory.",
            "action": "1. (Symbolic) Curate and maintain an allowlist of known-good JA3 and JA3S hashes by baselining traffic from sanctioned mobile applications. Create a SIEM rule to generate an alert whenever a `ja3` or `ja3s` hash from a managed mobile device's IP, observed in `ssl.log`, does not appear on this allowlist. 2. (Statistical) On a daily basis, compute the frequency of every unique JA3 hash observed across the mobile device fleet from the past 30 days of `ssl.log` data. Calculate the population prevalence for each hash. Generate an alert for any device emitting a JA3 hash whose prevalence is below the 1st percentile, indicating a rare client application. 3. (Machine Learning) Use a clustering algorithm like DBSCAN to group mobile devices based on the set of JA3 hashes they generate. A small cluster of devices all using the same rare JA3 hash is highly suspicious. Periodically run the clustering model and investigate any small, dense clusters that are not associated with known, legitimate applications as potential indicators of a malware campaign."
          },
          {
            "description": "An encrypted connection from a mobile device shows beaconing behavior, characterized by an unusually long duration, low data transfer volume, and highly regular, periodic traffic patterns (heartbeats) that are inconsistent with interactive user browsing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches, VPN concentrators, and network taps monitoring traffic from split-tunneling configurations on mobile devices.",
            "action": "1. (Symbolic) For connections already flagged by other analytics (e.g., anomalous certificate or JA3 hash), inspect the corresponding `conn.log` entry. Specifically examine the `history` field for repeating patterns of single characters (e.g., 'Dd' for data and acknowledgements) with long gaps, which can indicate simple keepalives. Alert if a long-lived connection (> 12 hours) exhibits such a pattern. 2. (Statistical) From `conn.log`, calculate the 99th percentile for connection `duration` and the entropy of packet inter-arrival times for all mobile device connections over a 24-hour window. Alert on connections that exceed the 99th percentile for duration and also have an inter-arrival time entropy in the lowest 5th percentile, indicating highly predictable, non-human timing. 3. (Machine Learning) For long-lived TCP sessions, extract the time series of packet inter-arrival times. After cleaning the data, apply a Fast Fourier Transform (FFT) to convert the time series into the frequency domain. A prominent, sharp peak in the frequency spectrum indicates a strong periodic signal. Alert on connections exhibiting a dominant frequency, as this is a classic characteristic of automated C2 beaconing."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]