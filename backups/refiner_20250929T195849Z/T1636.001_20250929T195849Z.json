[
  {
    "information_requirement": "Is an adversary collecting calendar entries from managed mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1636.001",
        "name": "Calendar Entries",
        "evidence": [
          {
            "description": "An application with calendar access permissions communicates with a destination on a threat intelligence blocklist, or a statistically rare domain, and exfiltrates a volume of data exceeding an established baseline for the application or device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile Device Management (MDM) Application Inventory",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network gateways, VPN concentrators, DNS resolvers, and MDM/UEM platforms monitoring mobile device traffic and application installations.",
            "action": "1. (Context) Continuously ingest MDM application inventory to identify all applications with calendar access permissions (`android.permission.READ_CALENDAR` or `NSCalendarsUsageDescription`). Correlate devices with their network traffic using IP ranges from VPN or wireless access point logs. 2. (Symbolic) For all network connections from these devices, match destination FQDNs and IPs from Zeek conn.log against a threat intelligence feed of known malicious C2 servers or exfiltration points. Generate a high-severity alert on any match. 3. (Statistical) For each unique application-device pair, establish a baseline for total bytes transferred (`orig_bytes` + `resp_bytes`) per connection. Alert when a new connection's data volume exceeds the 99th percentile of this historical baseline. Concurrently, calculate the Shannon entropy of requested subdomains in Zeek dns.log; an entropy score greater than 3.5 combined with a high-volume data transfer to that domain should be flagged as suspicious DGA-based exfiltration. 4. (Machine Learning) Develop and deploy a time-series anomaly detection model (e.g., LSTM) for each device's total outbound data volume per hour. An alert is triggered if the model flags a significant, unexplained spike in traffic that deviates from the learned pattern of normal user activity, indicating potential bulk data exfiltration."
          },
          {
            "description": "An application's manifest requests calendar access permissions, but its App Store category (e.g., 'Games') is functionally unrelated to calendar use, and its installation base is statistically small across the organization.",
            "data_sources": [
              "Mobile Device Management (MDM) Application Inventory",
              "Mobile Threat Defense (MTD) Scan Results",
              "Public App Store Metadata"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform, Mobile Threat Defense (MTD) platform, and public application stores (e.g., Google Play, Apple App Store).",
            "action": "1. (Context) Continuously ingest application inventory data (including bundle IDs and permissions) from the MDM/MTD platform for all managed devices. 2. (Symbolic) Compare the bundle ID or package name of each newly installed application requesting calendar access against a static deny list of known malware or Potentially Unwanted Programs (PUPs). Generate a high-severity alert for immediate investigation upon a match. 3. (Statistical) For each application, retrieve its public App Store category. Assign a high-risk score to apps in 'unexpected' categories (e.g., Games, Utilities) that request calendar access. Calculate the installation prevalence of each risky app across the device fleet. Prioritize apps for manual review that have both a high-risk score and a low prevalence (e.g., installed on <2% of devices). 4. (Machine Learning) Train a classification model (e.g., Random Forest) to predict if an app's calendar permission request is 'suspicious'. Features for the model should include app category, developer reputation, total number of permissions requested, user ratings, and install base size. The model's output probability score can be used to rank and prioritize applications for security vetting."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]