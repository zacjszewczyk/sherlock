[
  {
    "information_requirement": "Has a corporate mobile application been compromised through its supply chain? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1474",
        "name": "Supply Chain Compromise",
        "evidence": [
          {
            "description": "A managed mobile application, within 24 hours of an enterprise-wide update propagated by the MDM, generates DNS requests (Zeek dns.log) for domains not present in the preceding 90-day baseline for that application, and/or initiates TLS connections (Zeek ssl.log) with anomalous characteristics such as a self-signed certificate, a rare JA3 hash, or a certificate issuer not on a pre-approved list for that application.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "MDM Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and DNS resolvers capturing traffic from corporate Wi-Fi segments dedicated to managed mobile devices.",
            "action": "ACTION: Using MDM deployment logs to identify app update times, query network logs for traffic from updated devices. Compare destination domains (from Zeek dns.log) and IPs (from Zeek conn.log) against a threat intelligence feed of mobile malware C2 infrastructure and generate a high-priority alert upon any match. STATISTICAL ANALYSIS: For each managed app, build a 90-day rolling baseline of unique domains from Zeek dns.log. Post-update, alert on any DNS request for a domain not in this baseline. For new domains, calculate the public suffix + 1 and query WHOIS data; flag domains registered within the last 60 days. Separately, baseline JA3/JA3S hashes from Zeek ssl.log for each app; alert if a post-update connection uses a hash seen on less than 1% of devices, indicating a non-standard client. MACHINE LEARNING: Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) on the volume of DNS requests per application per hour. A post-update volume that deviates from the forecast beyond a 99% confidence interval triggers an alert, detecting unusual C2 beaconing activity."
          },
          {
            "description": "A developer workstation or CI/CD build server, during a mobile app build cycle, executes a process (Windows Event ID 4688) with a statistically rare parent-child process relationship (e.g., `csc.exe` spawning `powershell.exe`) or high-entropy command-line arguments, immediately preceding a network connection (Zeek conn.log) to a destination IP not on an established allowlist of software repositories or internal services.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4689",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint logs from developer workstations and continuous integration/continuous delivery (CI/CD) build servers.",
            "action": "ACTION: Monitor Windows Event ID 4688 on build servers for process creations where a compiler or build tool (e.g., `MSBuild.exe`, `xcodebuild`) is the parent and a networking utility (`curl.exe`, `powershell.exe`, `wget.exe`) is the child. Correlate the timestamp with Zeek conn.log records from the same host; if the destination IP is on a C2 threat feed, alert immediately. STATISTICAL ANALYSIS: Establish a 30-day baseline of all parent-child process pairs from Event ID 4688 on developer systems. Calculate the frequency of each pair and alert on any pair that falls below a 0.1% occurrence threshold. Additionally, for all `powershell.exe` executions, calculate the Shannon entropy of the command-line arguments; a score greater than 4.0 suggests obfuscation and warrants investigation. MACHINE LEARNING: Train a Random Forest classification model using features from Event ID 4688 (process name, parent process name, command-line length/entropy) and correlated Zeek conn.log data (destination port, bytes out, connection duration). The model classifies each process chain as 'benign-build' or 'suspicious-activity'. A 'suspicious-activity' classification triggers an analyst review."
          },
          {
            "description": "Following an MDM-pushed update, the aggregate network traffic from a mobile application version exhibits a statistically significant increase in one or more key metrics: total data egress (bytes_out in Zeek conn.log) exceeding the 99th percentile of its 30-day pre-update baseline; connection frequency to new, unique destination IPs; or a shift in protocol distribution (e.g., increase in UDP traffic).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform logs and network flow collectors (e.g., Zeek sensors) at the internet gateway and internal network segments.",
            "action": "ACTION: Use MDM logs to identify application update timestamps and the set of affected devices. For this device set, query Zeek conn.log and dns.log for all traffic within 24 hours post-update. Compare destination IPs/domains against an IOC list for known mobile malware or APT infrastructure. Alert on any match. STATISTICAL ANALYSIS: For each managed app, create a 30-day pre-update baseline profile of its hourly network behavior, including the 95th percentile for total bytes transferred (bytes_out) and number of unique destination IPs. Post-update, generate an alert if the new version's hourly metrics exceed these thresholds for three consecutive hours. Also, profile the protocol distribution (TCP/UDP/ICMP); a post-update deviation of more than 20% in any protocol's share should be flagged. MACHINE LEARNING: Employ a multivariate time-series decomposition model on aggregate traffic metrics (e.g., total bytes, unique IPs, DNS query count) for each application. After an update, monitor the residual components of the time series. A coordinated spike across multiple residuals indicates a complex anomaly not explained by normal trends or seasonality, suggesting unexpected functionality like data exfiltration or C2 communication."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]