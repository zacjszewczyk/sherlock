[
  {
    "information_requirement": "Is an adversary attempting to evade defenses by locking users out of their mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629.002",
        "name": "Device Lockout",
        "evidence": [
          {
            "description": "A mobile application on a managed device receives device administrator privileges and exhibits suspicious characteristics, such as: the application's package name or signing certificate is not on an organizational allowlist; the application was installed from an 'unknown source' or sideloaded; and the application has a prevalence across the device fleet that falls within the bottom 5th percentile.",
            "data_sources": [
              "Mobile Device Management (MDM) Logs",
              "Android Logcat",
              "Mobile Endpoint Detection and Response (EDR) Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices; Mobile Device Management (MDM) servers; Application Vetting and Sandboxing Environments; Enterprise Application Stores",
            "action": "1. (Symbolic) Create a SIEM rule to alert on any 'add-device-admin' event from MDM or EDR logs where the application's package name or signing certificate hash matches a known-malicious list from threat intelligence. 2. (Statistical) For all 'add-device-admin' events, calculate a risk score. Increment the score for: installation from an 'unknown source', package name not on the corporate allowlist, and application prevalence below the 5th percentile of all managed apps. Alert on any application exceeding a predefined risk score threshold. 3. (Machine Learning) Train and apply a logistic regression classification model to predict the likelihood of a newly-admin-privileged app being malicious. Use features such as: installation source (store, sideloaded), number and type of other permissions requested, time between install and admin grant, and developer reputation score. Flag apps with a predicted probability greater than 0.85 for immediate analyst review."
          },
          {
            "description": "A mobile application, which has been granted device administrator or overlay permissions (`SYSTEM_ALERT_WINDOW`), initiates network connections (e.g., DNS queries or TCP/UDP flows) to a destination that is either a known malicious C2 server, a domain with a Shannon entropy score above the 98th percentile for the environment, or exhibits a data transfer volume that is a significant outlier for the device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR Network Flow Logs",
              "MDM Application Inventory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Our organization's internet gateway; Corporate DNS resolvers; Network proxies; VPN Concentrators",
            "action": "1. (Symbolic) Ingest Zeek conn.log and dns.log into your SIEM. Create a rule to correlate network traffic from mobile device IP ranges with MDM logs. Alert if an application with device admin or overlay permissions communicates with a destination IP or domain on a threat intelligence blocklist. 2. (Statistical) For all DNS queries from the mobile subnet in Zeek dns.log, calculate the Shannon entropy of the query name. Establish a baseline of normal entropy scores and alert on any query from a device admin-enabled app that exceeds the 98th percentile. 3. (Machine Learning) For each device, develop a time-series anomaly detection model (e.g., Seasonal-ARIMA) on outbound data volume (sum of `orig_bytes` in Zeek conn.log aggregated per minute). Alert on any sudden spike in traffic that the model flags as anomalous and that originates from an app with elevated privileges."
          },
          {
            "description": "A mobile application possessing the `SYSTEM_ALERT_WINDOW` (draw over other apps) permission is identified as the foreground process for a duration that is more than three standard deviations above its established baseline, or it is granted this permission through a non-standard installation process (e.g., sideloading).",
            "data_sources": [
              "Mobile Application Vetting Scans",
              "Mobile EDR Process and Activity Logs",
              "Android Logcat",
              "MDM Application Installation Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application sandboxing environments; Corporate-managed mobile devices; Enterprise app stores and repositories; Mobile Endpoint Detection and Response (EDR) platform",
            "action": "1. (Symbolic) During pre-deployment application vetting, create a rule to automatically flag any application package (APK) that requests the `SYSTEM_ALERT_WINDOW` permission and whose installation source is identified as 'sideloaded' or 'unknown source' in MDM logs. 2. (Statistical) Using Mobile EDR logs, establish a baseline for the normal foreground duration of every application with overlay permissions. Alert when an application's continuous foreground time, without user input events, exceeds three standard deviations above its historical mean for that user. 3. (Machine Learning) Implement an unsupervised learning model, such as an Isolation Forest, using features from Mobile EDR logs. Key features should include: `SYSTEM_ALERT_WINDOW` permission status, CPU usage percentage, memory consumption, foreground duration, and rate of user input events. Use the model to identify outlier application behaviors indicative of a malicious overlay lock screen."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]