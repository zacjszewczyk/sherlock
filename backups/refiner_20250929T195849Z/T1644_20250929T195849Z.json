[
  {
    "information_requirement": "Is an adversary using out-of-band channels for command and control on mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1644",
        "name": "Out of Band Data",
        "evidence": [
          {
            "description": "An Android application with 'Notification Access' enabled, which is not on an approved whitelist, is observed communicating with a newly observed domain or an IP address with a low reputation score.",
            "data_sources": [
              "MDM application inventory logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Android OS logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed and BYOD Android devices, Mobile Device Management (MDM) servers, Network egress points, DNS resolvers, VPN concentrators",
            "action": "1. (Symbolic) Join MDM application permission logs with an internal whitelist of applications approved for 'Notification Access'. Alert on any application that has this permission and is not on the whitelist or is found on a threat intelligence feed of known malicious applications. 2. (Statistical) For all applications with 'Notification Access', analyze their network traffic from Zeek conn.log. For each application, calculate the 95th percentile of daily data egress volume and connection count over a 30-day baseline. Alert if an application's daily activity exceeds this threshold by a significant margin (e.g., 50%). Additionally, calculate the Shannon entropy of destination domains requested (from Zeek dns.log); a high entropy score can indicate domain generation algorithms (DGA). 3. (Machine Learning) Train a time-series forecasting model (e.g., ARIMA) on the historical network traffic volume (bytes_out) and connection frequency for each application with 'Notification Access'. Use the model to predict the expected traffic for the next 24 hours. Generate a high-priority alert if the actual observed traffic significantly deviates from the predicted range (e.g., falls outside the 99% confidence interval)."
          },
          {
            "description": "An SMS/MMS message received by a corporate mobile device contains a URL with a low-reputation domain or exhibits a character-level entropy score greater than 4.5, indicating potential encoding or obfuscation.",
            "data_sources": [
              "Carrier SMS/MMS detail records",
              "MDM security event logs",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Telecommunication provider gateways for corporate mobile accounts, Corporate mobile devices, SIEM/Log aggregator",
            "action": "1. (Symbolic) From carrier SMS/MMS logs, create a rule to alert on any message that contains a URL whose domain matches a threat intelligence feed of malicious domains or is newly registered (e.g., less than 30 days old). Correlate this alert with subsequent outbound connections from the recipient's device to that domain using Zeek dns.log and Zeek conn.log. 2. (Statistical) For each incoming SMS/MMS message, calculate the character-level Shannon entropy of the message body. Establish a baseline entropy score for typical text communication (e.g., mean of 3.5). Alert on any message with an entropy score greater than 2 standard deviations above the mean (e.g., > 4.5). Additionally, track the frequency of sender phone numbers per user and flag messages from numbers not seen in the last 90 days. 3. (Machine Learning) Develop a classification model (e.g., Logistic Regression or an NLP-based classifier) trained on a labeled dataset of benign and malicious SMS messages. Use features such as message length, presence of URLs, sender reputation, special character count, and the entropy score. Deploy the model to score all incoming SMS messages in real-time, alerting on those classified as malicious with a high confidence score (e.g., > 0.90)."
          },
          {
            "description": "A corporate mobile device establishes a Bluetooth or NFC connection with an un-paired or unknown device, followed by a data transfer exceeding a baseline size threshold, especially within a geofenced sensitive area.",
            "data_sources": [
              "MDM security logs",
              "Mobile OS-level Bluetooth/NFC logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Physically controlled spaces (e.g., executive suites, R&D labs), Corporate-managed mobile devices with Bluetooth/NFC enabled",
            "action": "1. (Symbolic) Using MDM logs, create a rule to alert on any Bluetooth/NFC pairing event that occurs within a geofenced sensitive area (e.g., data center, executive floor) where the paired device is not on a pre-approved list of corporate peripherals. 2. (Statistical) For each user, establish a 30-day baseline of their Bluetooth/NFC activity, including the number of new pairings per day and the average data transfer size. Alert if a user's daily new pairings exceed the 99th percentile of their baseline, or if a single file transfer size is more than 3 standard deviations above their average. 3. (Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on device proximity and pairing data collected from MDM. Use features including device ID, paired device ID, location, and time of day. The model can identify anomalous clusters of activity, such as a single device briefly pairing with multiple other devices in a short time span, which could represent an adversary using a device to hop between targets."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]