[
  {
    "information_requirement": "Is an adversary manipulating SMS messages on our mobile devices? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1582",
        "name": "SMS Control",
        "evidence": [
          {
            "description": "An application not on the corporate allowlist is configured as the default SMS handler in the device's settings, or an application with a statistical prevalence below the 1st percentile across the fleet is set as the default handler. Adversaries may set a malicious app as the default handler to intercept, modify, or delete messages by registering the SMS_DELIVER broadcast intent and writing to the SMS content provider [1][2].",
            "data_sources": [
              "MDM device_settings.log (field: default_sms_handler)",
              "MDM app_inventory.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MTD Management Console, Device Configuration Profiles, SIEM Log Repository",
            "action": "1. (Symbolic) Ingest MDM device setting logs into the SIEM. Create a rule that compares the `default_sms_handler` package name for each device against a centrally managed allowlist of approved messaging applications. Generate an alert for any device where the handler is not on the allowlist. 2. (Statistical) Using ingested MDM data, calculate the prevalence of each `default_sms_handler` package name across the entire device fleet. Flag for investigation any handler whose prevalence falls below a dynamic threshold (e.g., 1st percentile), indicating a rare and potentially unauthorized application. 3. (Machine Learning) Periodically, train a binary classification model (e.g., Random Forest) using features from the MDM application inventory (e.g., developer reputation, app store category, user ratings, requested permissions) to predict a `is_legitimate_sms_handler` label. Score all default SMS handlers observed in the fleet and alert on any app classified as 'not legitimate' with high confidence (>0.9)."
          },
          {
            "description": "An application is granted `android.permission.SEND_SMS` or `android.permission.RECEIVE_SMS` permissions, and its function or category (e.g., 'Games', 'Productivity') does not logically require this capability, or its overall permission set is a statistical outlier compared to legitimate communication apps [1].",
            "data_sources": [
              "MDM app_permissions.log",
              "MDM app_inventory.log (field: app_category)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/MTD Management Console, Application Risk Database, SIEM Log Repository",
            "action": "1. (Symbolic) Create a SIEM rule to alert when an entry in `app_permissions.log` shows `android.permission.SEND_SMS` or `android.permission.RECEIVE_SMS` AND the corresponding application's category in `app_inventory.log` is not in an allowlist of ['Communication', 'Messaging', 'Social']. 2. (Statistical) For each application granted SMS permissions, create a feature vector of all its requested permissions. Calculate the Jaccard similarity index between this vector and a composite 'golden' vector representing typical permissions for approved messaging apps. Alert on applications with a similarity score below a defined threshold (e.g., < 0.4), indicating an anomalous permission set. 3. (Machine Learning) Vectorize the full permission set for every application in the fleet. Apply an unsupervised clustering algorithm (e.g., DBSCAN) to these vectors. Manually investigate applications that are classified as noise points or belong to very small, isolated clusters, as they represent unusual permission combinations that are statistically rare and potentially malicious."
          },
          {
            "description": "A device sends outgoing SMS messages that match known malicious C2 phone numbers, exhibit a statistically significant deviation from the user's baseline behavior (e.g., volume spike >98th percentile), or are directed to unusual destinations (e.g., premium-rate numbers, new international country codes). This could indicate the device is being used for C2, data exfiltration, or to spread malware.",
            "data_sources": [
              "Carrier SMS Detail Records",
              "Zeek conn.log",
              "Zeek notice.log",
              "MDM Network Activity Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Mobile VPN Concentrators, Carrier Billing and Usage Portal, SIEM Log Storage",
            "action": "1. (Symbolic) Continuously ingest a threat intelligence feed of known malicious phone numbers (for C2, smishing, etc.). Create a SIEM correlation rule that matches the `destination_number` field from ingested Carrier SMS Detail Records against this feed. Generate a high-severity alert on any match. 2. (Statistical) For each user, ingest Carrier SMS Detail Records into a time-series database. Establish a 90-day rolling baseline and standard deviation for daily SMS volume and the count of unique destination countries. Generate an alert if the daily SMS volume exceeds the baseline by more than 3 standard deviations, OR if an SMS is sent to a country code not present in the user's 90-day history. 3. (Machine Learning) For each user, train a time-series anomaly detection model (e.g., ARIMA or an LSTM autoencoder) on per-hour SMS counts from Carrier Detail Records. The model learns the user's normal communication rhythm (e.g., diurnal patterns, weekday vs. weekend). Trigger an alert when the model flags a specific time window's activity as a statistically improbable anomaly. Correlate this alert with other device events, such as a recent app installation from MDM logs, to increase confidence."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]