[
  {
    "information_requirement": "Is the adversary actively concealing a compromised (rooted/jailbroken) mobile device state from our detection mechanisms? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1630.003",
        "name": "Disguise Root/Jailbreak Indicators",
        "evidence": [
          {
            "description": "A mobile device fails a remote attestation check (e.g., via Google Play Integrity API or Apple DeviceCheck) while its on-device Mobile Threat Defense (MTD) agent simultaneously reports a compliant, 'not-compromised' status within the same 5-minute interval.",
            "data_sources": [
              "MDM Remote Attestation Logs",
              "MTD Compliance Status Logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) / Mobile Threat Defense (MTD) management console, Cloud Identity Provider (IdP) logging services, Network egress points and VPN concentrators",
            "action": "Symbolic Logic: Construct a SIEM rule to trigger an alert when a unique device ID appears in 'MDM Remote Attestation Logs' with a 'fail' status and also appears in 'MTD Compliance Status Logs' with a 'pass' or 'compliant' status within a 5-minute window. As an enrichment step, query 'Zeek conn.log' and 'Zeek dns.log' for the device's IP address to check for connections to domains or IPs on threat intelligence blocklists. Statistical Method: For all devices that fail remote attestation, establish a 30-day baseline of network behavior using 'Zeek conn.log'. Calculate the 95th percentile for the number of distinct destination ports and unique destination Autonomous System Numbers (ASNs) per hour. Trigger an alert if a device's current hourly activity for these metrics exceeds its baseline by more than three standard deviations. Machine Learning: Develop and apply a time-series anomaly detection model (e.g., Prophet or an LSTM) to the volume of DNS queries per device per hour, using data from 'Zeek dns.log'. An alert should be generated if the model flags a significant, unexplained spike in DNS query volume from a device that has recently failed a remote attestation check."
          },
          {
            "description": "An MTD agent reports a process running with root or administrator privileges on a mobile device, where the process's file hash does not match any entry in the curated allowlist of known-good system binaries or the blocklist of known rooting tool hashes for that OS.",
            "data_sources": [
              "MTD Process Execution Logs (including command line arguments and file hashes)",
              "Zeek conn.log",
              "Zeek software.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile endpoints with MTD/EDR agents installed, Network traffic inspection points (e.g., VPN, proxy servers)",
            "action": "Symbolic Logic: Create a SIEM rule that alerts when an event from 'MTD Process Execution Logs' shows a process with root/administrator privileges AND its associated file hash is not present in the internal allowlist of legitimate system hashes or a subscribed threat intelligence feed of known malicious/rooting tool hashes. Statistical Method: Using 'MTD Process Execution Logs', build a frequency table of all observed parent-child process relationships across the mobile fleet to establish a rarity score for each. Trigger an alert when a relationship is observed that falls below a rarity threshold (e.g., seen less than 5 times in 30 days), especially if the child process initiates external network connections to a high port, as observed in 'Zeek conn.log'. Machine Learning: Train a classification model (e.g., Random Forest, Gradient Boosting) using features extracted from 'MTD Process Execution Logs' (e.g., process name string entropy, parent process, privileges) and corresponding 'Zeek conn.log' data (e.g., destination port, data volume). Use the trained model to classify each new privileged process execution as 'benign' or 'suspicious'."
          },
          {
            "description": "An MTD agent log indicates an application process attempted a privileged file system operation, such as executing 'mount -o rw,remount /system' to make the system partition writable, or invoking 'chmod' on files outside its designated sandboxed directory.",
            "data_sources": [
              "MTD File System Integrity Logs",
              "MTD Process Command-line Logs",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile endpoints with MTD/EDR agents, Network file transfer analysis points (e.g., Zeek sensors), Application sandboxing analysis platforms",
            "action": "Symbolic Logic: Implement a SIEM rule to alert when 'MTD Process Command-line Logs' contain command-line arguments matching patterns like 'mount -o rw,remount' or 'chmod 777 /system/'. Correlate alerts with 'Zeek files.log' and 'Zeek conn.log' to determine if the associated application was recently downloaded from an untrusted source or is communicating with a non-standard port. Statistical Method: For each application, establish a baseline of file system activity using 'MTD File System Integrity Logs'. Calculate the Shannon entropy of the directory paths it modifies over a 24-hour window. Trigger an alert if an application's path entropy score increases by more than three standard deviations from its 30-day rolling average, indicating it is accessing an unusually diverse and potentially unauthorized set of file locations. Machine Learning: Implement a sequence analysis model, such as a Long Short-Term Memory (LSTM) network, to learn normal sequences of application behavior. Feed the model sequences of events for each application (e.g., 'network connection from conn.log -> file download from files.log -> process execution from MTD logs -> file modification from MTD logs'). The model should flag sequences with low probability under the learned normal model, which represent anomalous chains of actions indicative of a disguised compromise."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]