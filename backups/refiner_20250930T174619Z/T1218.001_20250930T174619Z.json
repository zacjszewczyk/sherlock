[
  {
    "information_requirement": "Is the adversary evading defenses using compiled HTML files?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.001",
        "name": "Compiled HTML File",
        "evidence": [
          {
            "description": "A CHM file with a known malicious hash is transferred over the network or accessed on a host, and a child process of the corresponding hh.exe execution communicates with a known malicious C2 domain or IP address.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Email gateway, Web proxy/gateway, DNS servers",
            "action": [
              "Symbolic: Correlate file analysis data (Zeek files.log) and endpoint file access events (Windows Event ID 4663) for CHM files. Calculate the file hash and match against a threat intelligence feed of known malicious file hashes. Separately, correlate process creation events (Windows Event ID 4688) where the parent is hh.exe with network connection logs (Zeek conn.log, Zeek dns.log) and match destination IPs/domains against a threat intelligence feed of known C2 infrastructure. Alert on any match.",
              "Statistical: For network connections originating from child processes of hh.exe, calculate the rarity of the destination IP, domain, and ASN. A connection to a domain younger than 30 days or an IP with a reputation score in the bottom 5th percentile of global reputation scores should be flagged. Calculate the entropy of requested domain names; a high entropy score (e.g., > 3.5) suggests DGA activity.",
              "Machine Learning: Develop a supervised classification model (e.g., Gradient Boosting Classifier) trained on features from process and network logs. Features should include: process lineage (is parent hh.exe?), child process name, network connection port, destination IP reputation, domain age, domain entropy, and data volume transferred. The model should classify the process chain and its associated network traffic as 'benign' or 'malicious CHM activity'."
            ]
          },
          {
            "description": "Execution of hh.exe with command-line arguments containing patterns used to execute embedded scripts, commands, or remote resources.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations and servers), Active Directory domain controllers (for centralized logging)",
            "action": [
              "Symbolic: Using process creation logs (Windows Event ID 4688), create a detection rule that searches for 'hh.exe' as the process name. Apply a regular expression to the command-line arguments to find suspicious patterns, such as 'ms-its:', 'mk:@MSITStore:', calls to scripting objects (e.g., 'javascript:', 'vbscript:'), or URLs pointing to external resources. Alert on any match.",
              "Statistical: For all hh.exe executions, calculate the Shannon entropy of the entire command-line argument string. Establish a baseline entropy score for legitimate help file calls in the environment. Flag any execution where the command-line entropy exceeds the 95th percentile of the established baseline, indicating potential obfuscation.",
              "Machine Learning: Use an Isolation Forest model trained on features extracted from benign hh.exe command-line arguments. Features should include command-line length, argument count, and the frequency of special characters. The model will identify command-line structures that are statistical outliers, flagging them as anomalous and potentially malicious."
            ]
          },
          {
            "description": "The HTML Help process (hh.exe) spawns an unexpected child process, such as a command shell (cmd.exe, powershell.exe), a scripting engine (wscript.exe, cscript.exe), or another living-off-the-land binary (LOLBAS).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Critical servers, Log aggregation platform (SIEM)",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 4688), create a detection rule to find events where ParentProcessName is 'hh.exe'. Match the NewProcessName against a static list of suspicious child processes, including 'cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'rundll32.exe', and 'mshta.exe'. Alert on any match.",
              "Statistical: Build a frequency table of all child processes spawned by 'hh.exe' across the enterprise over a 30-day period. Any child process that is not on an approved allowlist and occurs with a frequency below a certain threshold (e.g., seen on fewer than 5 unique hosts) should be considered rare and flagged for investigation.",
              "Machine Learning: Model the parent-child process relationships as a directed graph. Apply a community detection algorithm to the graph of all process relationships in the environment to find normal clusters of activity. A process chain of 'User Process -> hh.exe -> PowerShell.exe' that does not belong to a common, well-established community in the graph is a strong anomaly and likely malicious."
            ]
          },
          {
            "description": "The execution of hh.exe is immediately followed by the creation of a new executable or script file in a temporary or user-writable location, which is then executed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Application servers hosting user-writable directories",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a process creation event for 'hh.exe' (Windows Event ID 4688) is followed within 60 seconds by a file write event (Windows Event ID 4663) for a file with a suspicious extension (.exe, .dll, .ps1, .vbs, .js) in a user-writable directory (e.g., %APPDATA%, %TEMP%, Downloads). If this is then followed by a process creation event for that new file, generate a high-severity alert.",
              "Statistical: For each process, define a 'file drop score' as the number of executable or script files it creates in temporary directories within the first 5 minutes of its life. Establish a baseline 'file drop score' for 'hh.exe' across the environment, which should be close to zero. Any instance of hh.exe with a score greater than 0 is a statistical anomaly and should be investigated.",
              "Machine Learning: Use a time-series analysis model (e.g., ARIMA) on event logs, treating process creations and file creations as event types. Train the model on normal sequences of user and system activity. A sequence of 'hh.exe execution -> file write (.exe) -> new process execution' within a short temporal window will present as a significant anomaly or a spike in the prediction error from the model, indicating a deviation from normal behavior patterns."
            ]
          },
          {
            "description": "A Compiled HTML file (.chm) is executed from an unusual or high-risk directory, such as an email client's attachment cache, a web browser's download folder, or a temporary folder for unzipped archives.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations (specifically profile directories), Email client cache directories, Web browser download directories",
            "action": [
              "Symbolic: From process creation logs (Windows Event ID 4688), identify all 'hh.exe' executions. Use a regular expression on the command line to extract the file path of the .chm file. Match the path against a denylist of high-risk directories, including '\\Downloads\\', '\\AppData\\Local\\Temp\\', '\\Temporary Internet Files\\', and '\\Outlook\\' cache paths. Alert on any match.",
              "Statistical: Aggregate all .chm execution paths from 'hh.exe' command lines over a 30-day period. For each unique path, calculate its execution frequency across the enterprise. Paths that fall below a rarity threshold (e.g., seen on less than 1% of hosts where .chm files are used) and are not in a standard help directory (e.g., C:\\Windows\\Help) should be flagged as suspicious.",
              "Machine Learning: Train a Naive Bayes classification model on file paths of known benign .chm files. Features can be derived from the path string, such as path depth, presence of keywords like 'Temp' or 'Downloads', and whether the path is within a user profile. The model can then classify new .chm execution paths as 'benign-like' or 'suspicious-like', flagging the latter for analyst review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]