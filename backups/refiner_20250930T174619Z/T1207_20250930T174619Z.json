[
  {
    "information_requirement": "Is the adversary manipulating Active Directory data via a rogue domain controller? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1207",
        "name": "Rogue Domain Controller",
        "evidence": [
          {
            "description": "Observed network traffic containing DCE/RPC calls specific to the DRSUAPI interface (e.g., GetNCChanges, ReplicaAdd) that match byte-level signatures of known DCShadow or DCSync tools like Mimikatz or Impacket.",
            "data_sources": [
              "Zeek dce_rpc.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments connecting domain controllers and member servers",
            "action": [
              "Symbolic: Deploy and monitor NIDS signatures (e.g., Suricata/Snort) that target the network patterns of Mimikatz DCShadow and Impacket secretsdump. Create a high-severity alert for any signature match on traffic involving the DRSUAPI service UUID (E3514235-4B06-11D1-AB04-00C04FC2DCD2).",
              "Statistical: From Zeek dce_rpc.log, calculate the entropy of DCE/RPC request payloads for all DRSUAPI operations. Establish a baseline entropy score for legitimate replication traffic between known DCs. Flag any DRSUAPI transaction whose payload entropy exceeds the 99th percentile of the established baseline.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) on labeled network sessions of legitimate vs. malicious (Mimikatz-based) replication. Use features like packet size distribution, inter-arrival times, and DCE/RPC operation sequences. Deploy the model to classify new replication sessions and alert on those classified as malicious."
            ]
          },
          {
            "description": "Command-line execution on a host containing strings, arguments, or process names uniquely associated with DCShadow or DCSync tools and techniques (e.g., 'lsadump::dcshadow', 'impacket-secretsdump', 'Invoke-DCShadow').",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All domain-joined endpoints, member servers, and administrator workstations",
            "action": [
              "Symbolic: Create a SIEM rule to alert on any process creation event (Windows Event ID 4688, Sysmon Event ID 1) where the command line contains high-fidelity keywords such as 'dcshadow', 'drsgetncchanges', 'secretsdump.py', or references 'ntdsapi.dll' from an unexpected parent process.",
              "Statistical: For each host, calculate the historical frequency of command-line arguments related to Active Directory administration. Alert when a rare or first-seen argument related to replication or DC management is observed on a non-DC host, based on a historical rarity score (e.g., seen on <1% of similar hosts).",
              "Machine Learning: Use a one-class SVM or isolation forest model trained on legitimate process execution command lines from domain controllers and administrator workstations. Apply this model to command-line logs from all servers to flag any command-line execution that the model identifies as a significant anomaly."
            ]
          },
          {
            "description": "Observed Active Directory replication traffic, identified by DCE/RPC calls to the DRSUAPI interface, where either the source or destination IP address is not a member of the pre-defined set of authorized Domain Controller IP addresses.",
            "data_sources": [
              "Zeek dce_rpc.log",
              "Zeek conn.log",
              "Windows Event ID 4928",
              "Windows Event ID 4929"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, core network switches, and server network segments",
            "action": [
              "Symbolic: Maintain an up-to-date asset list of all authorized Domain Controller IP addresses. Create a SIEM correlation rule that joins Zeek dce_rpc.log (filtering for operation 'DRSGetNCChanges') with this list. Trigger a critical alert if an event shows a source or destination IP that is NOT on the authorized DC list.",
              "Statistical: Profile the volume (bytes) and frequency (requests per hour) of DRSUAPI traffic between all known DC pairs to establish a baseline. Monitor for any host not on the DC list that generates any DRSUAPI traffic. Alert if the volume of replication traffic from a known DC to a partner exceeds 3 standard deviations from its hourly baseline.",
              "Machine Learning: Use unsupervised clustering (e.g., DBSCAN) on network flow data (Zeek conn.log) enriched with a 'is_DRSUAPI' flag from dce_rpc.log. Legitimate replication should form a tight cluster between known DC IPs. Any host exhibiting DRSUAPI traffic that falls outside this primary cluster is a high-confidence anomaly."
            ]
          },
          {
            "description": "A Kerberos Ticket-Granting Service (TGS) request (Event ID 4769) is logged for a DC-specific Service Principal Name (SPN), such as the Directory Replication Service GUID, where the requesting client's network address does not belong to an authorized Domain Controller.",
            "data_sources": [
              "Windows Event ID 4769",
              "Zeek krb_tgs_req.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, specifically their Security event logs and network traffic",
            "action": [
              "Symbolic: Create a SIEM rule to monitor for Windows Event ID 4769 where the Service Name field matches the DRS GUID 'E3514235-4B06-11D1-AB04-00C04FC2DCD2'. The rule must trigger an alert if the Client Address field in the event is not on the authorized list of Domain Controller IP addresses.",
              "Statistical: For all Kerberos TGS requests, calculate the frequency of each unique SPN requested per client host over a 30-day rolling window. Identify the set of SPNs that are almost exclusively requested by DCs (e.g., requested by non-DCs <0.01% of the time). Alert if a non-DC host requests any SPN from this statistically-derived 'DC-only' set.",
              "Machine Learning: Use a peer group analysis model on Kerberos logs, grouping hosts by their AD roles. The model learns the typical set of SPNs requested by each peer group. Alert when a host requests an SPN that is a significant outlier compared to the behavior of its peers (e.g., a workstation requesting a DRS SPN)."
            ]
          },
          {
            "description": "A statistically significant spike in the volume of Active Directory object modifications (Event ID 5136), particularly changes to high-value objects like the 'krbtgt' account or Domain Admins group membership, originating from a single source DC.",
            "data_sources": [
              "Windows Event ID 5136",
              "Windows Event ID 4738",
              "Windows Event ID 4732"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Security logs on all Domain Controllers and the Active Directory Configuration partition",
            "action": [
              "Symbolic: Create a SIEM alert that triggers when a specific, high-value AD object is modified (e.g., Event ID 5136 where Object DN is 'CN=krbtgt,CN=Users,...'), and the modification attributes indicate a password or key change. Correlate with change management records to filter known activity.",
              "Statistical: For each Domain Controller, establish a time-series baseline of the hourly count of AD modification events (e.g., 5136, 4738). Use a moving average and standard deviation to model normal activity. Trigger an alert if the count of modifications from a single DC exceeds 4 standard deviations above its baseline.",
              "Machine Learning: Use time-series forecasting (e.g., ARIMA) to predict the expected volume of AD object modifications for the domain. Generate an alert when the observed modification count significantly exceeds the model's prediction interval, signaling an anomalous burst of activity potentially caused by rogue-injected changes."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]