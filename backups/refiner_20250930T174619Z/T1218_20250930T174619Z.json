[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using trusted system binaries?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218",
        "name": "System Binary Proxy Execution",
        "evidence": [
          {
            "description": "A system binary proxy (e.g., rundll32.exe, msiexec.exe) is executed with a command-line argument or loads a module whose file hash (SHA256) matches a known-bad entry in a threat intelligence feed.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers",
            "action": [
              "Symbolic (IOC Matching): Monitor for process creation events (Windows Event ID 4688) for proxy binaries (rundll32.exe, regsvr32.exe, msiexec.exe). Extract command-line arguments and any referenced file paths. For each file path, retrieve its hash (via live lookup or from file creation/access logs like Windows Event ID 4663) and query against a threat intelligence platform API or a local IOC database. Alert on any match.",
              "Statistical (Frequency Analysis): For each proxy binary, calculate the daily frequency of command-line arguments that contain URLs or UNC paths. Establish a baseline (e.g., 95th percentile) for this frequency across the enterprise. An observation exceeding this statistical threshold indicates a potential widespread campaign and should be investigated.",
              "Machine Learning (Classification): Train a classification model (e.g., Random Forest) on labeled command-line arguments for system binary proxies. Features can include argument length, character entropy, presence of URLs, specific flags (/s, /i), and file extensions. Use the trained model to classify new, unseen command-line executions as 'benign' or 'malicious' with a confidence score."
            ]
          },
          {
            "description": "A system binary proxy executes with a command-line argument that loads a file from a low-prevalence or non-standard directory (e.g., C:\\Users\\Public\\, C:\\PerfLogs\\, C:\\$Recycle.Bin\\).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of all Windows Endpoints and Servers",
            "action": [
              "Symbolic (Rule-based Filtering): Using process creation logs (Windows Event ID 4688), create a rule that flags executions of proxy binaries where the command line contains a file path pointing to user-writable directories like \\AppData\\Local\\Temp\\, \\Users\\Public\\, or network shares that are not standard software distribution points.",
              "Statistical (Prevalence Analysis): For each system binary proxy, build a historical model of all directories it has loaded files from. Calculate the prevalence (frequency) of each directory path across the enterprise. Flag any execution that loads a file from a directory in the bottom 5th percentile of prevalence (a 'rare' directory) for that specific binary.",
              "Machine Learning (Clustering): Use a clustering algorithm (e.g., DBSCAN) on command-line features (directory path, flags, file extension) to group similar proxy execution patterns. Analyze clusters with low membership counts as they represent anomalous activity. New executions that fall into these sparse clusters or are classified as noise by the algorithm should be flagged for review."
            ]
          },
          {
            "description": "A system binary proxy is spawned by a parent process that is not its typical, established parent (e.g., spawned by winword.exe instead of svchost.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, particularly those with Microsoft Office Suite or web browsers installed.",
            "action": [
              "Symbolic (Parent-Child Whitelisting): Create a detection rule that triggers when a known system proxy process (e.g., rundll32.exe, mshta.exe) is created with a parent process of winword.exe, excel.exe, powerpnt.exe, outlook.exe, or a common browser process (chrome.exe, firefox.exe, msedge.exe).",
              "Statistical (Frequency Analysis): For each proxy binary, generate a frequency distribution of its parent processes over a 30-day baseline period. Alert when a new parent-child relationship is observed or when an existing, rare relationship (e.g., one that occurs less than 0.1% of the time for that child process) is detected.",
              "Machine Learning (Graph Analysis): Model parent-child process relationships as a graph. Apply a community detection algorithm to find clusters of normal behavior. A process creation event that connects two previously unconnected or weakly connected communities (e.g., a link from the 'Office Apps' community to the 'System Binaries' community) can be scored as anomalous and flagged for investigation."
            ]
          },
          {
            "description": "A system binary proxy, which does not normally initiate network connections, makes an outbound connection to an external IP address or creates/modifies a file with an executable extension (.exe, .dll, .ps1).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Windows Event ID 4663",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies) and All Windows Endpoints and Servers",
            "action": [
              "Symbolic (Behavioral Rule): Join process creation events (Windows Event ID 4688) with network connection events (Zeek conn.log or Windows Event ID 5156) on the process ID and timestamp. Create a rule to alert when a proxy binary like regsvr32.exe or cmstp.exe initiates an outbound network connection to a non-private IP address (not RFC1918).",
              "Statistical (Entropy & Deviation): For each proxy binary, establish a baseline of its network activity, including average bytes sent/received and connection duration using Zeek conn.log. Calculate the entropy of destination ports. Alert when an execution of a proxy binary is associated with a network connection whose data volume or destination port entropy exceeds 3 standard deviations from its established baseline.",
              "Machine Learning (Time-Series Anomaly Detection): Use a time-series model (e.g., ARIMA or LSTM) on network traffic volume (bytes_out) generated by each known proxy binary across the enterprise, aggregated per minute. Generate an alert when the model detects a statistically significant anomaly or a spike in traffic that deviates from the predicted forecast, especially if correlated with a recent process creation event for that binary."
            ]
          },
          {
            "description": "A multi-stage execution chain is observed within a short time window, where an Office application spawns a script interpreter, which in turn spawns a system binary proxy.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints, especially those used by front-office personnel or executives.",
            "action": [
              "Symbolic (Sequence Correlation): Using a SIEM, create a correlation rule that looks for a sequence of process creation events (Windows Event ID 4688) linked by parent-child process IDs within a 60-second window. The sequence must match the pattern: Parent (e.g., WINWORD.EXE) -> Child (e.g., cmd.exe, powershell.exe, wscript.exe) -> Grandchild (e.g., rundll32.exe, msiexec.exe).",
              "Statistical (Process Chain Rarity): Analyze process lineage trees of depth 3 or more. Calculate the frequency of specific 3-process chains across the enterprise. Flag any chain that is statistically rare (e.g., occurs less than 5 times in the last 90 days) and matches the generic pattern of 'User App -> Scripting Host -> System Binary'.",
              "Machine Learning (Sequence Modeling): Represent process execution chains as sequences of process names. Train a sequence-based anomaly detection model (e.g., an autoencoder using LSTMs) on benign process chains observed over a 30-day period. A high reconstruction error on a new process chain indicates a deviation from learned benign patterns and should be flagged as anomalous."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]