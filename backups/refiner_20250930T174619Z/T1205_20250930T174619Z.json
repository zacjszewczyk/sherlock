[
  {
    "information_requirement": "Is the adversary using traffic signaling for persistence?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1205",
        "name": "Traffic Signaling",
        "evidence": [
          {
            "description": "Detection of a specific byte sequence (magic value) within the payload of a network connection, where the sequence is known to activate a dormant malware implant.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls, proxies), internal network segments monitoring critical servers, and hosts with known vulnerabilities.",
            "action": [
              "Query network traffic logs for connections containing specific, known magic values in their payload. This can be done by creating signatures for tools like Zeek or Suricata that match on byte sequences associated with malware families known to use traffic signaling.",
              "For hosts receiving traffic that matches a generic 'potential magic packet' signature (e.g., a small UDP packet with high payload entropy), calculate the rarity of the source IP address in the environment. A connection from a source IP in the bottom 5th percentile of observed IPs over the last 30 days, combined with the generic signature, increases the likelihood of malicious signaling.",
              "Train a classification model (e.g., Random Forest) on labeled network sessions (benign vs. malicious signaling). Features could include payload entropy, packet size, protocol, source/destination port rarity, and time-of-day. Use the model to score new connections for their likelihood of being a signaling attempt to activate a persistent implant."
            ]
          },
          {
            "description": "An unauthorized process executes with command-line arguments indicative of packet sniffing, or a process loads libraries associated with capturing network traffic (e.g., libpcap, Npcap).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, application servers, and administrator workstations where sniffing tools would be most impactful or unusual.",
            "action": [
              "Create a detection rule that alerts on the execution of processes with names matching known packet sniffers (e.g., 'tcpdump.exe', 'windump.exe', 'wireshark.exe') where the executing user account is not part of a predefined 'Network Administrators' group. The rule should also check for command-line arguments like '-i' or '-D'.",
              "Establish a baseline of parent-child process relationships for all hosts. Monitor for anomalous process chains, such as 'winword.exe' or 'outlook.exe' spawning a process that loads the 'wpcap.dll' or 'npcap.dll' library. Calculate the rarity of this parent-child-DLL combination; a score below a 1st percentile threshold indicates a high probability of malicious activity.",
              "Use an anomaly detection model (e.g., Isolation Forest) on process execution events. Features should include process name hash, parent process name hash, command-line argument entropy and length, and user account. The model can identify outlier processes that deviate from established normal behavior, potentially indicating a hidden sniffer implant."
            ]
          },
          {
            "description": "A single source IP address makes a sequence of connection attempts to a predefined series of closed ports on a target host within a short time window, immediately followed by a successful connection from the source IP to a newly opened port on the same target.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5157",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally facing servers (e.g., web servers, VPN concentrators), and critical internal servers that should have a very restricted set of open ports.",
            "action": [
              "Create a stateful detection rule that triggers when a single source IP generates more than 3 connection failures (Zeek conn.log history 'S0' or 'REJ', or Windows Event ID 5157) to distinct ports on a single destination within 10 seconds, and is then followed by a successful connection (Zeek conn.log history 'SF', or Windows Event ID 5156) from the same source to the same destination.",
              "For each host, calculate the entropy of destination ports for inbound connection attempts from a single source over a 1-minute window. A sudden spike in port entropy from a single source, followed by a sustained connection, is anomalous. Alert when the entropy score for a source-destination pair exceeds the 99th percentile of its historical values.",
              "Use a time-series forecasting model (e.g., ARIMA) to predict the expected volume of failed connections for each critical host. A sudden, sharp deviation from the forecast, particularly if clustered from a single source IP, can indicate the start of a port knocking sequence. Correlate this anomaly with a subsequent successful connection to confirm the attack."
            ]
          },
          {
            "description": "A host, identified as being powered off or inactive for an extended period, suddenly starts transmitting network traffic, with the startup event occurring outside of normal business hours or scheduled maintenance windows.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 6005",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoint subnets, especially those containing workstations that are regularly powered down overnight.",
            "action": [
              "Create a rule that joins network traffic logs with system event logs. Alert when a host begins sending traffic (first seen in Zeek conn.log) within minutes of a system startup event (Windows Event ID 6005) that occurs between 10 PM and 6 AM local time, and no corresponding Wake-on-LAN notice was generated by a legitimate management server.",
              "For each host, profile its typical 'online' hours based on historical network traffic. Calculate the probability of a host being active at any given hour of the day. An alert should be generated if a host initiates network traffic during a time slot where its historical probability of being active is less than 5%.",
              "Develop a time-series anomaly detection model for the network traffic volume of each host. The model should identify when a host transitions from a zero-traffic state to an active state. A separate classifier can then be used to determine if the context of this state transition (e.g., time of day, day of week, preceding inbound packets) is malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using traffic signaling for defense evasion?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1205",
        "name": "Traffic Signaling",
        "evidence": [
          {
            "description": "A network packet is detected containing the specific Wake-on-LAN byte sequence (6 bytes of 0xFF followed by 16 repetitions of a MAC address) or another known 'magic value' sequence used to trigger a change in a firewall or host security policy.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls, core network switches, and host-based firewalls on critical assets.",
            "action": [
              "Deploy a network signature, such as the `detect-wol.zeek` script, that specifically matches the Wake-on-LAN magic packet structure. Alert on any `WakeOnLan::Found` notice, especially if the source is an external IP address or an unauthorized internal management host.",
              "Profile the protocols used for broadcast traffic on each network segment. A sudden increase in UDP broadcast packets on ports 7 or 9 from a single source is anomalous. Alert if the volume of such traffic from one host exceeds 3 standard deviations above the segment's 30-day baseline.",
              "Train a binary classifier to distinguish between legitimate administrative WoL packets and malicious ones. Features could include the source IP's role (known admin server vs. standard endpoint), time of day, and whether the target MAC address corresponds to a device that should be managed via WoL."
            ]
          },
          {
            "description": "Network traffic from a single source exhibits a high rate of packets with unusual TCP flag combinations (e.g., FIN/SYN, NULL, XMAS) or other protocol anomalies, consistent with scanning or firewall rule discovery tools.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network firewalls, intrusion detection systems, and externally facing hosts.",
            "action": [
              "Create a detection rule to alert on connections logged in Zeek conn.log with a `history` field containing 'S2' (SYN-ACK sent, no reply), 'S3' (SYN-ACK sent, RST received), or a `conn_state` of 'OTH', which are indicative of scanning.",
              "For each source-destination IP pair, calculate the ratio of anomalous connections (e.g., `conn_state` is not 'SF', 'S1', 'REJ') to successful connections ('SF') within a 5-minute window. If this ratio exceeds a dynamic threshold (e.g., 95th percentile of all pairs), it indicates a likely scanning or evasion attempt.",
              "Use a clustering algorithm (e.g., DBSCAN) on connection log data. Group connections by source IP, using features like destination port, TCP flags, `conn_state`, and inter-packet timing. Clusters that are small, dense, and exhibit high variability in destination ports or flags are likely scanners attempting to evade defenses."
            ]
          },
          {
            "description": "A host-based firewall log shows a new 'allow' rule being created or a port being opened, immediately preceded by a series of blocked connection attempts from a single source IP to that host.",
            "data_sources": [
              "Windows Event ID 5157",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host-based firewalls on critical servers (e.g., Domain Controllers, database servers) and administrator workstations.",
            "action": [
              "Correlate firewall logs in time. Create a rule that triggers if a series of 'block' events (Windows Event ID 5157) from a source IP is followed within 60 seconds by a 'permit' event (Windows Event ID 5156) for a new connection from the same source IP.",
              "Establish a baseline of denied port connections for each critical host. Monitor for a specific port that has a historically high block rate (e.g., in the top 10% of blocked ports) suddenly appearing in the allow logs (Windows Event ID 5156). This change in the statistical distribution is a strong indicator.",
              "Implement a time-series anomaly detection model on the count of 'block' events (Windows Event ID 5157) per port, per host. A sudden, sharp drop to zero for a previously frequently-blocked port indicates a state change. Use this anomaly to trigger a detailed forensic analysis of the host's activity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using traffic signaling for command and control?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1205",
        "name": "Traffic Signaling",
        "evidence": [
          {
            "description": "Network traffic exhibiting signaling characteristics (e.g., port knocking sequence, packets with high payload entropy) is observed where the source or destination IP address is present on a threat intelligence feed of known command and control servers.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5157"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, and proxy servers where outbound connections are logged.",
            "action": [
              "Perform a direct join/correlation between logs of potential signaling activity (e.g., port knock sequences identified via stateful rules) and a list of known malicious IP addresses from a CTI feed. Any match is a high-confidence alert for C2.",
              "Enrich all outbound connections with CTI data, including IP reputation scores. Calculate a risk score for each connection based on the CTI score, port rarity, and data volume. A connection to an IP with a poor reputation score that was preceded by inbound signaling activity would receive a significantly higher risk score, triggering an alert if it exceeds a percentile-based threshold (e.g., 99.5th percentile).",
              "Train a classification model to predict if a connection is C2-related. Use features like: IP reputation score, ASN reputation, JA3/JA3S hash, and whether the connection was preceded by a known signaling pattern. The model can provide a probability score for each connection being malicious C2."
            ]
          },
          {
            "description": "A specific, multi-stage network sequence is observed that matches the known C2 activation TTP for a malware family, such as a UDP packet with a magic value followed by a TCP connection from the target to the UDP source.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points and internal network segments monitoring traffic between endpoints and servers.",
            "action": [
              "Implement a stateful signature that detects a sequence of events: (1) Inbound UDP packet to host A from source B with a specific payload signature. (2) Within 30 seconds, an outbound TCP connection from host A to source B on a non-standard port. Alert on this specific sequence.",
              "Analyze the temporal relationship between different connection protocols. For a given host, calculate the conditional probability P(TCP_outbound | UDP_inbound) for a given external IP. If this probability for a specific external IP is anomalously high (e.g., > 98th percentile) compared to other external IPs, it may indicate a UDP-triggered C2 channel.",
              "Use a sequence-aware model like a Long Short-Term Memory (LSTM) network to learn normal sequences of network connections for a host, represented as sequences of (protocol, direction, port) tuples. The model can flag a sequence like (UDP-in, TCP-out) to a new external entity as a high-scoring anomaly."
            ]
          },
          {
            "description": "A host with no network activity for a statistically significant period (e.g., > 24 hours) initiates an outbound connection immediately following the receipt of an inbound packet, especially if the inbound packet has signaling characteristics.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint subnets, especially for user workstations and servers that have predictable on/off cycles.",
            "action": [
              "Maintain a state table of active hosts based on recent traffic. If a host is marked 'inactive' for > 24 hours, create a high-priority alert if it sends any outbound traffic within 5 minutes of receiving an unsolicited inbound packet from an external source.",
              "For each host, calculate the average and standard deviation of its 'silent time' (time between last outbound connection and next one). An alert is triggered if a new silent period ends and the duration was more than 4 standard deviations above the mean, suggesting it was 'awakened' rather than operating normally.",
              "Use a time-series anomaly detection model (e.g., Prophet, LSTM) on the traffic volume of each host. A sudden transition from a forecasted zero-traffic period to a non-zero traffic period is an anomaly. The model's output (anomaly score) can be combined with features of the first new connection (e.g., destination reputation, port) to classify the event as suspicious C2."
            ]
          },
          {
            "description": "Following a suspected signaling event (e.g., port knock), a new, periodic, low-volume connection is established from the target host to an external destination, exhibiting consistent time intervals and/or data sizes characteristic of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls, proxies) where outbound C2 traffic would be visible.",
            "action": [
              "First, flag any destination IP/port that was successfully connected to immediately after a signaling event. Then, monitor all subsequent connections to that flagged destination. If more than 10 connections occur from the same source with nearly identical time intervals (+/- 10%) and payload sizes (+/- 10 bytes), classify it as beaconing.",
              "For connections to a destination that became active after a signal, compute the standard deviation of the time delta between consecutive connections. A very low standard deviation indicates periodicity. Also, calculate the entropy of the payload sizes for these connections; low entropy suggests repetitive communication. A combination of low time-delta deviation and low payload size entropy is a strong statistical indicator of beaconing.",
              "Apply a Fast Fourier Transform (FFT) to the time series of connection events for a given source-destination pair to identify dominant frequencies, which correspond to beaconing intervals. A strong peak in the frequency domain is a high-fidelity indicator of automated, periodic communication that can be used to detect C2."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]