[
  {
    "information_requirement": "Is the adversary modifying malicious tools post-detection to evade signature-based defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.005",
        "name": "Indicator Removal from Tools",
        "evidence": [
          {
            "description": "Execution of a known binary packing, obfuscation, or hex editing utility (e.g., UPX, MPRESS, HxD) on a host not designated for software development or reverse engineering.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard User Workstations, Production Servers, Critical System File Directories",
            "action": [
              "Symbolic: Query SIEM for Windows Event ID 4688 where the NewProcessName field matches a watchlist of known modification tools (e.g., 'upx.exe', 'hxd.exe', 'mpress.exe') and the host is not in the 'Developer Systems' asset group.",
              "Statistical: For each execution of a potential modification tool, calculate the historical frequency of that tool's execution on the specific host and by the specific user. Generate an alert if the tool has never been seen on that host before or if its execution frequency is in the 99th percentile of all tool executions for that host.",
              "Machine Learning: Train a classification model (e.g., a decision tree) using features from Event ID 4688 such as process name, parent process, user context, and command-line arguments to predict whether a process execution is part of a legitimate development workflow vs. a potential evasion attempt. Flag executions classified as 'evasion' with high confidence."
            ]
          },
          {
            "description": "A file transferred over the network, identified with a new SHA256 hash, exhibits a fuzzy hash (e.g., SSDEEP) similarity score greater than 85 when compared against a database of known malicious file fuzzy hashes.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DMZ Network Segment, Internal Server-to-Server Traffic",
            "action": [
              "Symbolic: For every executable file identified in Zeek's files.log, compute its SSDEEP hash. Trigger an alert if this fuzzy hash matches any entry in the threat intelligence feed of known malware fuzzy hashes.",
              "Statistical: Calculate the file entropy of all executable files transferred via Zeek. Flag files with entropy scores greater than 7.5 (typical for packed/encrypted content) that also have a high SSDEEP similarity score (>85) to a previously seen malicious file, indicating a repacked variant.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on the space of fuzzy hash distances to group similar files. Prioritize clusters for investigation that contain at least one known malicious file, as other files in the cluster are likely variants."
            ]
          },
          {
            "description": "Within 60 minutes of an AV/EDR alert blocking a malicious file, new process execution or network C2 activity is observed from the same source host/user, involving a new executable hash but exhibiting behaviorally similar patterns (e.g., same destination IP, same command-line structure).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log",
              "AV/EDR Alert Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Infected Host Endpoint, Domain Controllers, Network Gateway",
            "action": [
              "Symbolic: Create a rule that triggers on any AV/EDR block alert. For the next 60 minutes, correlate the source host/user from the initial alert with any new process creations (Event ID 4688) or network connections (Zeek conn.log) that connect to a destination on a C2 watchlist.",
              "Statistical: Following a malware detection event, monitor command-line arguments of new processes on the source host. Calculate the Jaccard similarity or Levenshtein distance between the new command lines and the command line of the blocked malicious process. Generate an alert if the similarity is high (e.g., >0.8 Jaccard index) but the process executable hash is different.",
              "Machine Learning: Implement a time-series analysis model that baselines the rate of security alerts per host. An AV/EDR block followed by a rapid succession of new, behaviorally similar alerts (e.g., suspicious process creation, anomalous network connection) from the same host within a short window indicates a high-probability automated evasion attempt."
            ]
          },
          {
            "description": "Execution of a compiler (e.g., csc.exe, gcc.exe) or build utility (e.g., pyinstaller.exe, make.exe) on a non-developer host, followed within 5 minutes by the execution of a new executable from a non-standard path (e.g., %TEMP%, %PUBLIC%).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Production Application Servers, Financial Department Workstations, Temporary File Directories (%TEMP%, %APPDATA%)",
            "action": [
              "Symbolic: Alert on any execution of a process from a compiler watchlist (e.g., 'csc.exe', 'gcc.exe', 'pyinstaller.exe') via Event ID 4688 if the source host is not tagged as a developer machine. Correlate with a subsequent Event ID 4688 from the same host for a new executable in a world-writable directory.",
              "Statistical: Establish a baseline of file creation events (Event ID 4663) followed by process execution (Event ID 4688) from the same file path within a 5-minute window. Flag any sequence where the parent process is a compiler and the host is a non-developer machine as an anomaly exceeding 3 standard deviations from the host's normal behavior (which should be zero).",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model) to learn normal sequences of process execution on servers. An observed sequence of 'compiler -> file write -> new process execution from temp dir' would be a low-probability, anomalous state transition for a non-developer machine, triggering an alert."
            ]
          },
          {
            "description": "A process initiates a file write operation (as indicated by the access mask) where the target file path is the same as the process's own executable image path.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application Directories (e.g., C:\\Program Files), User Profile Directories, System Directories (e.g., C:\\Windows\\System32)",
            "action": [
              "Symbolic: Create a detection rule that joins Windows Event ID 4663 (file access) with process information. Alert when the ObjectName field (the file being accessed) is identical to the ProcessName field (the process performing the access) and the AccessList contains a write permission (e.g., 'WriteData' or 'AppendData').",
              "Statistical: Profile all processes for self-writing behavior. Create a statistical baseline of legitimate self-writing processes (e.g., known software updaters). Any process not on this baseline that performs a self-write is flagged. The rarity of the parent process (e.g., powershell.exe) can be used to increase the risk score.",
              "Machine Learning: Train a behavioral model on process-file interactions using features like process name, file path, access type, and process lineage. A classifier can be trained to distinguish legitimate software updater behavior from anomalous self-modification, flagging the latter as highly suspicious."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]