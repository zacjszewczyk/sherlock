[
  {
    "information_requirement": "Is the adversary maintaining persistence via Outlook Rules?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1137.005",
        "name": "Outlook Rules",
        "evidence": [
          {
            "description": "A process created by OUTLOOK.EXE has an executable file hash that matches a known malicious indicator, or the process initiates a network connection to an IP address or domain on a threat intelligence blocklist.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, DNS resolvers",
            "action": [
              "Symbolic (IOC Match): For each process created by 'OUTLOOK.EXE' (ParentProcessName in Windows Event ID 4688), calculate the child process's executable hash and query it against a threat intelligence feed of known malicious hashes. Simultaneously, for any network connections (Zeek conn.log) or DNS queries (Zeek dns.log) originating from the same host, compare the destination IP or domain against a C2 blocklist. Generate a high-severity alert on any match.",
              "Statistical (Anomaly Detection): For processes spawned by 'OUTLOOK.EXE', analyze the entropy of the destination domains requested in Zeek dns.log. A high entropy score (e.g., greater than 3.5), which can indicate a Domain Generation Algorithm (DGA), should be flagged. Calculate the 95th percentile of domain entropy for all processes across the enterprise and alert on any Outlook-spawned process that exceeds this threshold.",
              "Machine Learning (Time-Series Analysis): Develop a time-series model to analyze the frequency and interval of network connections (beaconing) from processes spawned by Outlook. Using Zeek conn.log data, train the model on normal network traffic patterns. Flag any process exhibiting a highly regular, 'heartbeat'-like connection pattern that deviates from the learned baseline as potential C2 communication."
            ]
          },
          {
            "description": "A process creation event is observed for a tool known to manipulate MAPI (e.g., MFCMapi.exe, Ruler.exe), or a PowerShell process is executed with command-line arguments containing cmdlets for Exchange/Outlook rule modification (e.g., New-InboxRule, Set-InboxRule).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Exchange Servers, Administrative jump boxes",
            "action": [
              "Symbolic (Keyword/Signature Match): Create a detection rule that monitors for process creation events (Windows Event ID 4688) where the process name is 'MFCMapi.exe' or 'Ruler.exe'. Additionally, use regular expression matching on PowerShell command-line arguments to detect the use of cmdlets such as 'New-InboxRule', 'Set-InboxRule', and the string 'Microsoft.Exchange.WebServices'. Alert on any match.",
              "Statistical (Frequency Analysis): Establish a baseline of common PowerShell command-line argument patterns and parent processes across the enterprise. Calculate the frequency of parent processes for 'powershell.exe'. Flag any instance where 'OUTLOOK.EXE' is the parent process of 'powershell.exe' as a low-frequency, high-risk anomaly. Also, calculate the term frequency-inverse document frequency (TF-IDF) for PowerShell command-line arguments and alert on commands with high scores for rare terms like 'New-InboxRule'.",
              "Machine Learning (Classification): Train a classification model (e.g., logistic regression or decision tree) on labeled PowerShell command-line arguments (from Windows Event ID 4688) to distinguish between benign administrative scripts and malicious activity. Use features such as command length, presence of specific keywords (e.g., 'EWS', 'Mailbox'), and obfuscation indicators (e.g., Base64 encoding flags). Deploy the model to score new PowerShell executions in real-time."
            ]
          },
          {
            "description": "The OUTLOOK.EXE process is recorded as the parent process for the creation of a command-line interpreter (e.g., cmd.exe, powershell.exe) or a scripting host (e.g., wscript.exe, cscript.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Virtual Desktop Infrastructure (VDI) instances",
            "action": [
              "Symbolic (Rule-Based Logic): Create a detection rule that triggers a high-priority alert for any process creation event (Windows Event ID 4688) where the ParentProcessName is 'OUTLOOK.EXE' and the NewProcessName is one of 'cmd.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', or 'mshta.exe'.",
              "Statistical (First-Seen Analysis): For each user, build a historical baseline of all child processes spawned by 'OUTLOOK.EXE'. Use a frequency analysis model to identify any new or rare parent-child process relationship. Alert when a child process is observed that has never or rarely (e.g., less than 0.1% frequency) been seen for that user or across the organization.",
              "Machine Learning (Clustering): Use a clustering algorithm (e.g., DBSCAN) on features extracted from process creation events, such as parent process name, child process name, and user context. Identify clusters of normal activity and flag any process creation event that is classified as an outlier or noise by the algorithm, particularly when 'OUTLOOK.EXE' is the parent."
            ]
          },
          {
            "description": "A child process of OUTLOOK.EXE is executed from a non-standard file path (e.g., a temporary directory or user-writable location) and subsequently initiates network connections to a low-reputation IP address or a newly registered domain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, Web proxies",
            "action": [
              "Symbolic (Correlation Rule): Correlate process creation events (Windows Event ID 4688) where the parent is 'OUTLOOK.EXE' with network logs (Zeek conn.log). Alert if the child process executable path matches patterns for temporary or user-writable directories (e.g., '*\\\\AppData\\\\Local\\\\Temp\\\\*', 'C:\\\\Users\\\\Public\\\\*') AND the process subsequently connects to an IP or domain present on a threat intelligence feed.",
              "Statistical (Thresholding): For network connections from Outlook-spawned child processes, analyze the distribution of destination ports in Zeek conn.log. Flag connections to ports that fall outside the top 99% of commonly used ports for that host. Additionally, analyze domain registration dates (via WHOIS enrichment of Zeek dns.log data) and alert on connections to domains registered within the last 30 days.",
              "Machine Learning (Sequence Analysis): Implement a sequence analysis model (e.g., Hidden Markov Model) to correlate host and network events. Create sequences of events for each host (e.g., Outlook spawns powershell.exe -> powershell.exe connects to IP X -> IP X receives HTTP POST). Train a model on known malicious and benign sequences to identify and score suspicious chains of activity originating from an Outlook-spawned process."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]