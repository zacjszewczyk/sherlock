[
  {
    "information_requirement": "Is the adversary maintaining persistence by hijacking execution flow?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "A file is written to a directory within the DLL search order or a service's binary path, and its hash matches a known-malicious signature associated with execution flow hijacking.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Windows Event ID 4688 (Process Creation)",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System directories (e.g., System32), Application installation directories, User profile directories on endpoints and servers.",
            "action": [
              "Symbolic: Correlate file creation events (Sysmon Event ID 11) with a threat intelligence feed of file hashes known to be associated with T1574. Generate a high-severity alert upon any match. Also, monitor Zeek files.log for transfers of files with matching hashes.",
              "Statistical: For file creation events in sensitive directories, calculate the entropy of the filename. Alert on filenames with an entropy score greater than the 95th percentile of historical data for that directory, as this may indicate randomized names used to avoid signature-based detection.",
              "ML: Train a classification model (e.g., Random Forest) on features from file creation (Sysmon Event ID 11) and the creating process (Windows Event ID 4688), including file path, process name, parent process, and file signature status. Use the model to predict the likelihood that a file write event is part of a hijacking attempt."
            ]
          },
          {
            "description": "A registry value modification event is observed for a service's 'ImagePath' or 'FailureCommand', pointing it to an unsigned or atypically located executable.",
            "data_sources": [
              "Sysmon Event ID 13 (Registry Value Set)",
              "Windows Event ID 4697 (A service was installed in the system)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers with critical services, Endpoint registry hives.",
            "action": [
              "Symbolic: Monitor registry modification events (Sysmon Event ID 13) for `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\ImagePath`. Alert if the new path points to an executable in a user-writable directory (e.g., C:\\Users\\*, C:\\Temp, C:\\ProgramData) or is an unsigned binary.",
              "Statistical: Establish a baseline of all service `ImagePath` values across the enterprise. Calculate the frequency of each path. Alert on the appearance of a new, low-frequency `ImagePath` (e.g., seen on <1% of hosts), especially if it is not part of a known software deployment or patch.",
              "ML: Use a time-series anomaly detection model on the rate of service modification events (Windows Event ID 4697 and Sysmon Event ID 13). A sudden spike in these events across one or more hosts, outside of a planned maintenance window, could indicate widespread persistence activity."
            ]
          },
          {
            "description": "A registry modification event targets a key known to control global process initialization (e.g., `AppInit_DLLs`), adding or changing a DLL path.",
            "data_sources": [
              "Sysmon Event ID 13 (Registry Value Set)",
              "Windows Event ID 4657 (A registry value was modified)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server registry hives, particularly HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows.",
            "action": [
              "Symbolic: Create a zero-tolerance rule: Alert on any modification (Sysmon Event ID 13) to the `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs` registry value. This mechanism is deprecated and its use is highly suspicious.",
              "Statistical: Track the count of modifications to this key per host over time. A host with a count greater than zero is a statistical outlier, as the fleet-wide average should be zero. This can help prioritize hosts for investigation.",
              "ML: Use an outlier detection algorithm (e.g., Isolation Forest) on host features, where one feature is a binary flag `has_appinit_dlls_mod`. This can help contextualize the alert by identifying hosts with other anomalous characteristics, suggesting a more comprehensive compromise."
            ]
          },
          {
            "description": "A process module load event shows a trusted system process (e.g., svchost.exe) loading a DLL from a non-standard path or a DLL that is unsigned or has never been seen before in that process.",
            "data_sources": [
              "Sysmon Event ID 7 (Image loaded)",
              "Windows Event ID 4688 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server process memory space, Application directories.",
            "action": [
              "Symbolic: For each module load event (Sysmon Event ID 7), check if the `ImageLoaded` path is in a non-standard location (e.g., %APPDATA%, %TEMP%) and the loading process (`Image`) is a critical system binary (e.g., `lsass.exe`, `explorer.exe`). Alert on this condition.",
              "Statistical: For each critical process, build a baseline set of all DLLs it normally loads. Use Jaccard similarity to compare the set of loaded modules during a new process launch against its historical baseline. A low similarity score (e.g., $$< 0.8$$) indicates a significant deviation and potential hijacking.",
              "ML: Train a time-series model on the frequency of new (previously unseen) DLLs being loaded by system processes across the environment. An anomaly in the time series, indicating a sudden increase in novel DLLs, suggests a potential DLL search order hijacking campaign."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary elevating privileges by hijacking execution flow?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "A file is created in a world-writable directory (e.g., `C:\\`, `C:\\ProgramData`) with a filename matching a DLL that a privileged service is known to attempt to load from that path (e.g., `wlbsctrl.dll` for IKEEXT service).",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Windows Event ID 4688 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System root directory (`C:\\`), Publicly writable program directories, Endpoint file systems.",
            "action": [
              "Symbolic: Maintain a watchlist of DLL filenames known to be vulnerable to hijacking for privilege escalation (e.g., `wlbsctrl.dll`, `IKEEXT.DLL`). Monitor file creation events (Sysmon Event ID 11) in user-writable system paths for these filenames. Alert on any match.",
              "Statistical: Profile the user context of processes that write files to system-level directories. Alert when a process running as a standard user writes a DLL to a path like `C:\\Windows\\System32` or `C:\\`. This is statistically rare and highly indicative of an exploit attempt.",
              "ML: Use a sequence analysis model (e.g., Hidden Markov Model) to detect the pattern of a low-privilege process writing a DLL, followed by a system service restarting, and then a new child process spawning from that service with elevated privileges. This sequence is a strong indicator of successful privilege escalation."
            ]
          },
          {
            "description": "A registry modification event sets the 'Debugger' value for a target application within the Image File Execution Options (IFEO) key, pointing to a malicious executable to intercept its launch.",
            "data_sources": [
              "Sysmon Event ID 13 (Registry Value Set)",
              "Windows Event ID 4657 (A registry value was modified)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server registry hives, specifically `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options`.",
            "action": [
              "Symbolic: Monitor registry set events (Sysmon Event ID 13) for any write to a 'Debugger' value under any subkey of IFEO. Alert on any such event not associated with a legitimate debugging tool (e.g., WinDbg, Visual Studio) or known administrative action.",
              "Statistical: Baseline the standard set of IFEO keys in the environment. Alert on the creation of a new IFEO subkey for a process that is not typically debugged (e.g., `services.exe`, `lsass.exe`, `sethc.exe`). Calculate the rarity of the target process across the fleet; the rarer the target, the more suspicious the event.",
              "ML: Train a decision tree classifier on registry event data (Sysmon Event ID 13). Features should include the process making the change, the target key path, and the value being written. The model can learn to distinguish legitimate administrative changes from malicious IFEO abuse."
            ]
          },
          {
            "description": "A file write event (Sysmon Event ID 11) from a process running with medium or low integrity level targets a directory with a system-level integrity SACL (e.g., `%SystemRoot%\\System32`).",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 7 (Image loaded)",
              "Sysmon Event ID 1 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Protected system directories (`%SystemRoot%\\System32`), Application directories for privileged software.",
            "action": [
              "Symbolic: Create a rule that correlates a file write event (Sysmon Event ID 11) in a protected directory with the creating process's integrity level (from Sysmon Event ID 1). Alert if a process with `IntegrityLevel` of 'Medium' or 'Low' writes a file to a directory like `C:\\Windows\\System32`.",
              "Statistical: Analyze the chain of events: file write by low-privilege process -> module load of that same file by high-privilege process. Calculate the time delta between these two events. A very short delta (e.g., $$< 60$$ seconds) is statistically significant and indicates a likely exploit chain. Alert on correlated events within a 5-minute window.",
              "ML: Use a graph-based analysis model. Create nodes for processes, files, and users. Create edges for actions (writes, loads, executes). A path showing `User(Low Priv) -> Process(Low Priv) -> writes -> File.dll -> loaded by -> Process(High Priv)` is a high-confidence indicator of privilege escalation via hijacking."
            ]
          },
          {
            "description": "A process creation event (Sysmon Event ID 1) shows an anomalous parent-child relationship immediately following a file or registry modification indicative of hijacking, such as `services.exe` spawning `cmd.exe`.",
            "data_sources": [
              "Sysmon Event ID 1 (Process Creation)",
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 13 (Registry Value Set)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server process tables, System-wide process ancestry trees.",
            "action": [
              "Symbolic: Define a list of impossible or highly suspicious parent-child relationships (e.g., parent=`lsass.exe`, child=`cmd.exe`; parent=`services.exe`, child=`whoami.exe`). Monitor process creation events (Sysmon Event ID 1) and alert on any matches.",
              "Statistical: Build a probabilistic model of parent-child process relationships from baseline data. For each new process creation event, calculate the conditional probability $$ P(Child | Parent) $$. Alert if this probability is below a certain threshold (e.g., $$< 0.001$$), indicating a statistically rare event.",
              "ML: Use a clustering algorithm (e.g., DBSCAN) on process creation events, using features like parent process name, child process name, command line argument entropy, and user context. Outlier clusters can represent new or anomalous execution chains that warrant investigation for hijacking."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by hijacking execution flow?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "A file write or rename event targets a file path associated with an installed security tool (e.g., EDR agent, antivirus), and the new file's hash does not match the known-good hash for that version.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "File Integrity Monitoring (FIM) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Installation directories of security products (e.g., `C:\\Program Files\\...`) on all endpoints and servers.",
            "action": [
              "Symbolic: Maintain a manifest of file paths and hashes for all deployed security tools. Monitor file create/write events (Sysmon Event ID 11) in these directories. Alert immediately if a file is modified and its new hash does not match the manifest.",
              "Statistical: Monitor the operational status of security agents. A sudden increase in agents reporting as 'offline' or 'disabled' on a specific subnet or host group is a statistical anomaly. Correlate this with file modification events on those hosts to detect potential mass disabling via hijacking.",
              "ML: Train a classifier to detect 'tampering' events. Features would include the target file path (weighted heavily if it is a security tool), the modifying process (e.g., `TiWorker.exe` is less suspicious than `cmd.exe`), and whether the new file is signed. The model can provide a risk score for each modification event."
            ]
          },
          {
            "description": "A DLL with a generic system name (e.g., `version.dll`, `uxtheme.dll`) is written to an application's local directory, a location that is searched before `C:\\Windows\\System32`.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 7 (Image loaded)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application installation directories on endpoints, especially for commonly used software (browsers, office suites, developer tools).",
            "action": [
              "Symbolic: Create a rule that alerts when a file with a name from a list of commonly hijacked system DLLs (e.g., `version.dll`, `cryptbase.dll`, `dwrite.dll`) is created (Sysmon Event ID 11) in a path under `C:\\Program Files` or `C:\\Program Files (x86)` but not in a `System32` or `SysWOW64` directory.",
              "Statistical: For a given application process, baseline the paths from which it loads DLLs (Sysmon Event ID 7). Alert if the process begins loading a DLL from a new, unexpected path, especially if that DLL has the same name as one it normally loads from a system directory. This detects a change in the resolved search order.",
              "ML: Use an autoencoder to learn the normal 'module load profile' for each major application in the environment. The profile would include the set of DLLs and their paths. The autoencoder's reconstruction error will be high for a process that has loaded a hijacked DLL, flagging it as an anomaly."
            ]
          },
          {
            "description": "A file write event modifies a Microsoft-signed binary located in a trusted system directory (`%SystemRoot%\\System32`), and the resulting file is unsigned or signed by an untrusted publisher.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "File Integrity Monitoring (FIM) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Trusted system directories (`%SystemRoot%\\System32`, `%SystemRoot%\\SysWOW64`) on all Windows hosts.",
            "action": [
              "Symbolic: Monitor file write events (Sysmon Event ID 11) targeting files in `System32`. Upon write, trigger a signature check. Alert if a previously signed file becomes unsigned, or if the new signature is not from a trusted publisher.",
              "Statistical: Periodically hash all files in `System32` and compare them to a known-good baseline hash set. Calculate the percentage of mismatched hashes per host. A host with a count of mismatched system files in the 99th percentile of the fleet is highly suspicious.",
              "ML: Train a one-class SVM model on the features of legitimate system files (e.g., entropy, PE header details, signature status, file size). Scan files in system directories and use the model to classify them as 'normal' or 'outlier'. Outliers are candidates for being replaced/hijacked binaries."
            ]
          },
          {
            "description": "A hijacked system process initiates a network connection to an external destination that deviates from its established baseline of communication patterns in terms of destination, port, or data volume.",
            "data_sources": [
              "Sysmon Event ID 3 (Network Connection)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls, proxies), Endpoint network stacks.",
            "action": [
              "Symbolic: Create a rule that alerts when a core system process (e.g., `lsass.exe`, `wininit.exe`, `csrss.exe`) initiates any external network connection (Sysmon Event ID 3 where `DestinationIp` is not a private IP).",
              "Statistical: For other trusted processes (`svchost.exe`, `explorer.exe`), baseline their network behavior using Zeek conn.log: common destination IPs, ports, and data volume. Use a z-score to alert on outliers, such as if `svchost.exe` connects to a port other than 80/443/53 or if daily data sent to a new IP exceeds 3 standard deviations from the mean.",
              "ML: Use a time-series anomaly detection algorithm (e.g., LSTM) on Zeek `conn.log` data, grouped by source process name. The model learns the normal rhythm of connections (e.g., frequency, duration, volume). A hijacked process will create a new pattern that the model flags as anomalous, which can detect C2 beaconing."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]