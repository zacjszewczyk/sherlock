[
  {
    "information_requirement": "Is the adversary evading defenses using application access tokens?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1550.001",
        "name": "Application Access Token",
        "evidence": [
          {
            "description": "A successful token-based API authentication event (e.g., HTTP status 200 OK) that originates from an IP address or contains a User-Agent string present on a high-confidence threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway, Cloud provider network edge, VPN concentrators, Web Application Firewalls",
            "action": [
              "Inner join source IP addresses and User-Agent strings from API calls observed in Zeek logs (http.log, conn.log) with high-confidence cyber threat intelligence (CTI) feeds of malicious IPs and known User-Agents of adversary tools (e.g., pacu, gds-tools). Alert on any confirmed matches.",
              "Calculate the rarity of User-Agent strings and source ASNs observed in API authentication logs (Zeek http.log). Generate an alert if an API call uses a User-Agent or originates from an ASN that falls below a 1% frequency threshold over a 30-day rolling window.",
              "Train a one-class SVM or isolation forest model on features extracted from successful API authentications, including User-Agent, source IP/ASN, requested URI, and time of day. Use the trained model to score new API authentications in real-time and flag any event classified as an anomaly or outlier."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) where the new process name or command line arguments match signatures of known token theft tools (e.g., Mimikatz, Rubeus, browser credential dumpers) or techniques.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer endpoints, Critical application servers, Domain Controllers",
            "action": [
              "Monitor for process creation events (Windows Event ID 4688) with command-line arguments indicating access to browser credential stores (e.g., 'User Data\\Default\\Web Data') or execution of known token theft tools (e.g., Mimikatz, Rubeus, LaZagne). Correlate with subsequent outbound API calls from the same host within a 10-minute window.",
              "For each host, calculate the entropy of the command line arguments for common processes like powershell.exe and cscript.exe. A sudden, sharp increase in command-line entropy, especially when accessing user profile directories, indicates potential obfuscation. Alert when entropy exceeds 3 standard deviations above the host's 30-day baseline.",
              "Use a supervised classification model (e.g., Random Forest, Gradient Boosting) trained on labeled process creation events (Windows Event ID 4688). Features should include parent process name, command line length, command line entropy, and keywords in the command line. The model should classify processes as benign or suspicious (token theft attempt). Deploy the model to score new process events."
            ]
          },
          {
            "description": "A successful token-based API authentication is observed with a combination of anomalous characteristics, such as: the source IP's geolocation indicates impossible travel from the user's last known location; the User-Agent string has not been seen for that user before; and there is no preceding interactive logon (Logon Type 2 or 10) from the source IP within a defined time window.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Geolocation Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Authentication servers, Internet gateway, SaaS application front-ends",
            "action": [
              "Create a rule that triggers if a successful token-based authentication for a user meets two or more conditions: 1) The time elapsed since the user's last authentication from a different location is less than the minimum travel time. 2) The User-Agent is new for that user. 3) There has been no interactive logon (Windows Event ID 4624, Logon Type 2 or 10) from the source IP in the preceding 8 hours.",
              "For each user account, build a multi-faceted baseline profile from historical logs including: 1) Set of known source countries/ISPs, 2) Set of known User-Agents, 3) Typical login hours. Use a scoring system where deviations add to a risk score. An event with a cumulative risk score exceeding the 95th percentile of all user scores indicates a likely compromised token.",
              "Develop a time-series anomaly detection model (e.g., LSTM autoencoder) for each user's API access patterns. The model should learn the normal sequence of API endpoints accessed, request frequency, and data transfer volumes. Flag any session that has a high reconstruction error, indicating a significant deviation from the user's established API interaction behavior."
            ]
          },
          {
            "description": "An API call to a cloud identity service (e.g., AWS STS `AssumeRole`, Azure AD `acquireToken`, GCP `generateAccessToken`) that deviates from an established baseline in terms of frequency, source, requested permissions, or the principal making the request.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure AD Sign-in logs",
              "Google Cloud Audit Logs",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud identity service endpoints (e.g., sts.amazonaws.com, login.microsoftonline.com), Cloud provider management consoles, Egress points to the internet",
            "action": [
              "Create an alert that triggers when a sensitive identity API call (e.g., AWS STS `GetFederationToken`, GCP `generateAccessToken`) is made by a user or from an IP address not on a pre-defined allow-list. This can be implemented via SIEM rules filtering cloud audit logs (CloudTrail, Google Cloud Audit Logs).",
              "For each user/role, establish a baseline for the frequency of token generation requests (e.g., AssumeRole) per hour. Use time-series analysis to detect significant spikes in request volume that exceed 3 standard deviations from the moving average. Also, profile the set of roles typically assumed by each user and alert when a user attempts to assume a role for the first time.",
              "Use an unsupervised clustering algorithm (e.g., DBSCAN) on cloud identity API call logs. Feature sets should include the requesting principal, source IP, requested role/permission, and time of day. Periodically analyze the resulting clusters to identify small, outlier clusters that represent anomalous combinations of these features."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary performing lateral movement using application access tokens?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1550.001",
        "name": "Application Access Token",
        "evidence": [
          {
            "description": "A network connection is observed from one internal cloud resource (e.g., EC2 instance, Azure VM) to another internal or external API endpoint for the first time, or after a long period of dormancy. The significance is increased if the source resource was recently associated with another security alert.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "AWS VPC Flow Logs",
              "Azure Network Watcher flow logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPC/VNet flow logs, Network taps between cloud subnets, Internal API gateways",
            "action": [
              "Create a rule to flag all outbound API calls (from Zeek http.log or VPC Flow Logs) from any internal resource that has had a high-severity security alert in the past 24 hours. Additionally, continuously match destination IPs against a threat intelligence feed of malicious C2 servers.",
              "Generate a communication graph of all internal cloud resources based on historical Zeek conn.log or VPC flow log data. For each resource, establish a baseline of 'normal' destination IPs and ports. Alert when a resource initiates a connection to a destination it has never communicated with before (a new edge in the graph).",
              "Train a graph-based anomaly detection model (e.g., GraphSAGE) on the network communication graph of cloud resources. Use the model to score the anomalousness of new connections in real-time, flagging connections that significantly alter the local graph structure or link previously disconnected clusters of resources."
            ]
          },
          {
            "description": "A sequence of events on a host where an inbound API call is immediately followed by process creation events (Windows Event ID 4688) associated with reconnaissance or lateral movement tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Windows Firewall Log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal-facing web servers, API gateway servers, Application servers",
            "action": [
              "Create a correlation rule that triggers when a host receives an inbound connection on an API port (e.g., 443, 8080) and within 5 minutes, a process creation event (Windows Event ID 4688) is logged on the same host for a tool like `nltest.exe`, `net.exe`, `psexec.exe`, `wmic.exe`, or `powershell.exe` with suspicious arguments (e.g., Invoke-Command).",
              "For hosts running API services, baseline the frequency of command shell execution (`cmd.exe`, `powershell.exe`) by the service account. Alert when the frequency of shell execution by the service account exceeds a dynamic threshold (e.g., 99th percentile) over a short time window (e.g., 10 minutes).",
              "Use a sequence analysis model (e.g., Hidden Markov Model) trained on event logs (network connections, process creations). The model learns normal sequences of events following an inbound API call. Flag any sequence of events that has a low probability under the trained model, such as an API call followed by `net user`."
            ]
          },
          {
            "description": "A network logon event (Windows Event ID 4624, Logon Type 3) on a critical internal server (e.g., Domain Controller, file server) that originates from a source IP address belonging to an ephemeral or non-corporate asset, such as a cloud VM, which has not previously initiated such a logon.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain controllers, File servers, Database servers, Cloud resource network interfaces",
            "action": [
              "For critical internal assets (e.g., domain controllers), maintain an explicit allow-list of source hostnames/IPs that are permitted to connect via network logon (Logon Type 3). Generate a high-severity alert for any network logon attempt logged in Windows Event ID 4624 from a source not on this list.",
              "From Windows Event ID 4624 logs, build a baseline of (Source_IP, Destination_Host, Account) triplets for all Logon Type 3 events. Calculate the frequency of each triplet over a 30-day window. Alert on any new triplet that has never been seen before or has a frequency below a 0.1% threshold.",
              "Model the internal network as a directed graph where nodes are hosts and edges are successful logons. Use a community detection algorithm (e.g., Louvain Modularity) to identify clusters of machines that normally interact. An alert is generated when a new logon creates an edge that bridges two previously separate communities."
            ]
          },
          {
            "description": "An API call, authenticated via an application token, performs a sensitive or destructive action (e.g., AWS IAM `CreateUser`, Azure AD `add owner to role`, GCP `setIamPolicy`) that is inconsistent with the typical API behavior of the associated user or service principal.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Audit Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud provider API endpoints (e.g., management.azure.com, *.amazonaws.com), Web Application Firewalls, Cloud provider audit log aggregators",
            "action": [
              "Define a list of high-impact API calls (e.g., AWS IAM `CreateUser`, Azure `Microsoft.Authorization/roleAssignments/write`, GCP `setIamPolicy`). Create a high-severity alert that triggers in the SIEM whenever one of these events appears in the corresponding cloud audit logs.",
              "For each user and role, profile the set of API calls they normally make. Calculate the Shannon entropy of the API call distribution for each principal over a rolling time window. A sudden increase in entropy suggests they are performing a wider variety of actions than normal. Alert when a user's API call entropy exceeds their 99th percentile baseline.",
              "Train a supervised classification model (e.g., XGBoost) to assign a risk score to each cloud API call. Features should include the principal's role, the API action, the target resource type, source IP geolocation, and time of day. The model should be trained on historical data with known risky actions labeled as high-risk. Flag any new API call that receives a high-risk score for immediate review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]