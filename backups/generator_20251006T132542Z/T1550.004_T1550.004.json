[
  {
    "information_requirement": "Is the adversary evading defenses using stolen web session cookies? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1550.004",
        "name": "Web Session Cookie",
        "evidence": [
          {
            "description": "An HTTP request containing a valid session cookie to a corporate web service originates from a source IP address listed on a threat intelligence feed as malicious, a TOR exit node, or an anonymizing proxy.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, VPN Concentrator, External Web Application Servers, Cloud Service Provider Flow Logs",
            "action": [
              "For every inbound HTTP request in http.log containing a session cookie, extract the source IP from the associated conn.log entry. Compare this IP against a curated threat intelligence list of known malicious IPs, TOR exit nodes, and anonymizing proxies. Generate a high-priority alert on any match.",
              "For each user account, create a historical baseline (e.g., last 30 days) of source countries and Autonomous System Numbers (ASNs) from geolocated conn.log data. For each new authenticated session, check if the source country/ASN is new or falls into the rarest 1% (99th percentile) of the user's historical locations. Trigger an alert for sessions originating from such statistically rare locations.",
              "Develop a per-user time-series model (e.g., Prophet or LSTM) using historical http.log and conn.log data, forecasting the expected volume of requests per hour. Feed the model with real-time session activity. Generate an alert if the observed request volume for a user's session significantly exceeds the model's predicted upper confidence interval, especially during non-business hours."
            ]
          },
          {
            "description": "A process is created with command-line arguments that explicitly reference the file paths or names of common browser cookie databases (e.g., 'cookies.sqlite', 'Network\\Cookies').",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Critical Staff Workstations, Virtual Desktop Infrastructure (VDI) instances, Domain Controllers",
            "action": [
              "Create a detection rule that scans the command line field of Windows Event ID 4688 for process names of known credential/cookie dumping tools (e.g., mimikatz.exe, lazagne.exe) or for regular expressions matching the default file paths of browser cookie stores (e.g., AppData\\Local\\Google\\Chrome\\User Data\\Default\\Network\\Cookies).",
              "For processes like powershell.exe and cmd.exe, calculate the Shannon entropy of the command-line arguments for each execution event (Windows Event ID 4688). Establish a baseline entropy value for these processes across the environment. Alert when a command's entropy exceeds 3 standard deviations from the mean and also contains strings like 'AppData' or 'Local', indicating potentially obfuscated file access.",
              "Train a classification model (e.g., Random Forest) on labeled Windows Event ID 4688 data. Use features such as command line argument length, entropy, presence of special characters, parent process name, and n-grams from the command line. Deploy the model to score new process creation events in real-time and alert on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "A single authenticated user session, identified by a consistent session cookie, shows a change in User-Agent string and an 'impossible travel' velocity between sequential geolocated IP addresses.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4634"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, User Endpoints, Authentication Logs from Domain Controllers, Web Proxies",
            "action": [
              "For a given session identifier in http.log, create a rule that triggers if the User-Agent string value changes between two consecutive HTTP requests. This is a rigid anomaly that should not occur in legitimate browser sessions.",
              "For each user session, calculate the geographic distance and time difference between consecutive geolocated requests from conn.log. If the resulting velocity (distance/time) exceeds a plausible threshold (e.g., 600 mph), flag it as 'impossible travel'. Maintain a per-user baseline of User-Agent strings and flag any session using a User-Agent that has a Jaccard distance greater than 0.5 from the user's typical set of agents.",
              "Use a clustering algorithm (e.g., DBSCAN) on session features from http.log and conn.log such as source IP, User-Agent, request timing, and accessed resources. Legitimate user sessions should form dense clusters. Sessions that are classified as noise or fall into sparse, anomalous clusters are candidates for investigation as they do not conform to established patterns of behavior."
            ]
          },
          {
            "description": "A process accesses a local browser cookie file, immediately followed by a new network connection from the same process to an external, low-reputation domain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, DNS Servers, Internet Gateway",
            "action": [
              "Create a sequence alert that triggers when a process access to a browser cookie file (detected via Windows Event ID 4688 with specific command lines) is followed within 60 seconds by a DNS query (Zeek dns.log) from the same host for a domain on a threat intelligence watchlist.",
              "For each host, establish a baseline of destination IPs and domains queried. Following a suspicious cookie file access event (from the Symbolic action), monitor for new connections in Zeek conn.log or dns.log to destinations that are statistically rare (e.g., in the 99th percentile of rarity) for that host's history, indicating potential exfiltration.",
              "Implement a sequence analysis model (e.g., Hidden Markov Model) that takes a stream of host and network events as input. Train the model to recognize normal sequences (e.g., chrome.exe reads cookie -> chrome.exe makes web request). The model should flag anomalous sequences, such as powershell.exe reads cookie -> powershell.exe makes DNS query to a dynamic DNS domain -> powershell.exe makes a long-lived TCP connection."
            ]
          },
          {
            "description": "A new authenticated session to a web application is established from a new source IP or device without a preceding request to a defined authentication-workflow URL (e.g., login page, SSO redirect).",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Application Servers, Load Balancers, Reverse Proxies",
            "action": [
              "Define the URLs associated with the final steps of your authentication workflow (e.g., /login.aspx, /sso/callback). Create a rule that alerts when a new session (new source IP and User-Agent combination) starts accessing internal application pages (e.g., /dashboard) without having first generated a log for one of the defined authentication workflow URLs.",
              "Calculate the entropy of the first-visited URL ('landing page') per user session for a given application from http.log data. A user session that begins on a high-entropy URL (i.e., not a common landing page like /home or /dashboard) is anomalous and may indicate a session cookie was used to directly access a deep link.",
              "Use a Markov chain model to learn the valid state transitions (page navigations) within your web application from http.log data. A session that begins in a state that is not a designated 'start' state and for which no valid transition from a start state occurred is a high-confidence anomaly indicative of a replayed session."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary moving laterally using stolen web session cookies? (PIR)",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1550.004",
        "name": "Web Session Cookie",
        "evidence": [
          {
            "description": "A new authenticated web session to an internal web application originates from an internal source IP that is on a dynamic 'watch list' due to other suspicious activity (e.g., confirmed C2 beaconing, recent malware alerts).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments, Server Subnets, Data Center Core Switches, Internal Web Servers",
            "action": [
              "Maintain a dynamic watchlist of internal host IPs flagged by other security systems for high-risk activity (e.g., EDR alerts, C2 detections). Create a SIEM rule that triggers an alert when an IP from this watchlist appears as the source in conn.log for a connection to an internal web application, where the corresponding http.log request contains a session cookie.",
              "Using conn.log and http.log data, construct a daily graph of internal web traffic (source host -> destination web server). Calculate the 'out-degree' (number of unique web servers contacted) for each source host. Identify and investigate hosts whose out-degree exceeds the 95th percentile for all hosts of a similar role (e.g., workstation vs. server), as they may be acting as unauthorized pivot points.",
              "Apply a community detection algorithm (e.g., Louvain) to a graph of internal host-to-web-server communications built from conn.log and http.log. The algorithm will identify clusters of normal activity (e.g., 'Finance team' accessing 'ERP server'). Flag for investigation any connection that bridges two distinct communities, especially if the source host is not a member of either."
            ]
          },
          {
            "description": "A network connection to an internal web application, containing a session cookie, originates from a process on the source endpoint that is not a standard web browser (e.g., powershell.exe, curl.exe, rundll32.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Servers hosting internal web applications, Domain Controllers",
            "action": [
              "Correlate Zeek http.log requests containing cookies with Windows Event ID 4688 process creation events from the source IP within a 5-second window. Alert if the process name is on a blacklist of non-browser tools (powershell.exe, certutil.exe, bitsadmin.exe) or not on a whitelist of approved browsers (chrome.exe, msedge.exe).",
              "Build a frequency distribution of parent-child process relationships that initiate outbound network traffic to internal web services. A rare parent-child relationship (e.g., winword.exe spawning powershell.exe which then makes an internal web request) that is statistically anomalous (e.g., occurs < 0.01% of the time) should be scored as highly suspicious.",
              "Train a classifier (e.g., Logistic Regression) on process and network features to identify non-browser web traffic. Use features from Event ID 4688 (process name, parent process) and http.log (User-Agent, destination port) to distinguish legitimate automated traffic from script-based lateral movement."
            ]
          },
          {
            "description": "A single session identifier (e.g., session cookie value) is observed in HTTP requests to an internal web application originating from two or more distinct internal IP addresses within the session's defined timeout window.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Core, Application Server Load Balancers, East-West Traffic Mirrors",
            "action": [
              "For each session ID extracted from Zeek http.log, store the source IP in a watch list with a 30-minute expiration. If a request with the same session ID arrives from a different source IP while the first is still on the list, trigger an alert for a re-used session.",
              "For each user, baseline the number of distinct internal source IPs they use to access internal applications per day. Alert if the number of source IPs for a user on a given day exceeds a dynamic threshold, such as 3 standard deviations above their personal mean, indicating potential session hopping across multiple hosts.",
              "Use a state machine model to track the progression of a user's activity within an application. A sudden, illogical jump in the state (e.g., accessing a settings page without going through the main dashboard) that also coincides with a change in source IP from conn.log is a strong anomaly that can be detected by a model trained on normal user navigation paths."
            ]
          },
          {
            "description": "An authenticated HTTP request to an internal web service is observed from a source IP, but the associated user account has no corresponding interactive (Type 2), remote interactive (Type 10), or network (Type 3) logon events on that source host within a recent time window.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Endpoints, Internal Web Servers",
            "action": [
              "For each authenticated internal web request in Zeek http.log, query for a corresponding Windows Event ID 4624 (Logon Type 2, 10, or 3) on the source host for that user within the last 24 hours. If no such logon event is found, generate an alert for a 'ghost' session.",
              "For each internal server, create a baseline of which users typically log on (via Event ID 4624). For each internal web request, calculate a rarity score for the user-host pair. A web request from a user on a host they have a zero or near-zero historical probability of logging into is highly suspicious.",
              "Train a bipartite graph model of user-host logon relationships using historical Windows Event ID 4624 data. The model can learn expected connections. An attempt to use a web session from a host that the model identifies as a highly improbable source for that user can be flagged as anomalous lateral movement."
            ]
          },
          {
            "description": "A user session within a sensitive internal web application (e.g., vCenter, Kubernetes Dashboard, network device UI) involves actions, identified by URL paths or API calls, that are statistically rare for that user's role or peer group.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Administrative Network Segment, Servers hosting critical management tools, Core Switches",
            "action": [
              "Define a set of highly privileged actions via URL patterns (e.g., /api/v1/delete_vm, /admin/export_all_users). Create a rule that alerts if a user who is not in a predefined 'vCenter Admins' or 'Domain Admins' group attempts to access these URLs, as seen in http.log.",
              "For each user and for peer groups (e.g., 'Help Desk', 'Developers'), build a profile of accessed URLs/API endpoints from http.log. Use frequency analysis (e.g., TF-IDF) to identify actions that are rare for an individual compared to their baseline or rare for their peer group. An action in the 99.9th percentile of rarity for that user/group is a strong anomaly.",
              "Use a sequence-to-sequence autoencoder to learn normal sequences of user actions (URL navigation paths) within the application. When a user's session presents a sequence of actions that the model cannot reconstruct with low error, it indicates a significant deviation from learned behavior, flagging a potentially hijacked administrative session."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]