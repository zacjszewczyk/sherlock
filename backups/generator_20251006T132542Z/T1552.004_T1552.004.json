[
  {
    "information_requirement": "Has an adversary performed discovery, collection, or misuse of private cryptographic keys or certificates? (PIR)",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1552.004",
        "name": "Private Keys",
        "evidence": [
          {
            "description": "A running process's file hash matches a known credential theft tool that targets private keys (e.g., Mimikatz, LaZagne, SharpDPAPI, AADInternals).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints (workstations, servers), Domain Controllers, Public Key Infrastructure (PKI) servers, and Entra ID-joined/hybrid devices.",
            "action": [
              "Symbolic: Continuously monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1). For each new process, compute the SHA256 hash of the executable file and match it against a threat intelligence feed of known malicious tool hashes targeting private keys. An exact match generates a high-severity alert.",
              "Statistical: For processes not matching a known-bad hash, analyze parent-child process relationships from Sysmon Event ID 1. Establish a baseline frequency of parent processes spawning specific children across the enterprise. Flag any process execution where the parent-child pair is statistically rare (e.g., 'winword.exe' spawning 'powershell.exe', or 'lsass.exe' spawning any child), falling below a 1st percentile frequency for that parent-child pair.",
              "Machine Learning: Train a supervised classification model (e.g., XGBoost, Random Forest) using features from process execution events. Features should include: process name entropy, command-line argument count and length, parent process name, process file path depth, and whether the process is unsigned. Train the model on labeled benign/malicious process execution data. Use the model to score new process events in real-time to identify suspicious activity exhibiting malicious characteristics even without a known hash."
            ]
          },
          {
            "description": "A process is executed with command-line arguments containing patterns indicative of searching for, copying, or exporting private key files using system utilities.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise workstations and servers, particularly developer workstations, build servers, and web servers.",
            "action": [
              "Symbolic: Monitor process command lines (Windows Event ID 4688, Sysmon Event ID 1). Apply a ruleset of regular expressions to the command-line field to detect patterns for key discovery and export. Examples: '(find|grep|findstr).*(.key|.pem|.pfx|.ppk)', '(gci|Get-ChildItem).*-Include.*(.pem|.key)', 'certutil.*-exportPFX', 'crypto pki export', 'openssl pkcs12 -export'. Generate an alert on any match.",
              "Statistical: For all command-line invocations, particularly for scripting engines and shells (powershell.exe, cmd.exe, pwsh.exe, bash.exe), calculate the Shannon entropy of the command-line string. Establish a per-process and per-user baseline entropy score. A command line with an unusually high entropy score (e.g., exceeding the 98th percentile for that process/user combination) may indicate obfuscation or complexity and should be flagged for review.",
              "Machine Learning: Implement a Natural Language Processing (NLP) model using a TF-IDF vectorizer and a classifier (e.g., Logistic Regression) trained on a large dataset of benign and malicious command lines. Engineer features such as the presence of file extensions, IP addresses, encoding keywords (e.g., 'base64'), and specific utility names. The model provides a probabilistic score for the likelihood of malicious intent for each executed command, enabling detection of novel and complex variations."
            ]
          },
          {
            "description": "A process or user account with no legitimate business need is observed reading sensitive private key files or directories.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers hosting user home directories (e.g., '*\\.ssh\\*'), Public Key Infrastructure (PKI) servers (e.g., 'C:\\ProgramData\\Microsoft\\Crypto\\*'), web servers with SSL/TLS certificates, and developer workstations.",
            "action": [
              "Symbolic: Enable and monitor System Access Control Lists (SACLs) to generate Windows Event ID 4663 for read access ('Accesses: ReadData' or '0x1') on critical key directories and file types (*.key, *.pem, *.pfx, *.p12). Maintain an allowlist of legitimate process names and user accounts authorized for access. Alert on any access by a process or user not on the explicitly defined allowlist.",
              "Statistical: For each monitored key file/directory, establish a multi-dimensional baseline of access patterns including process, user, and hour-of-day. Calculate the baseline frequency of access for each combination. An alert is triggered if an access event occurs from a user-process combination that is statistically improbable (e.g., falls in the lowest 1% of observed frequencies) or at a time of day that is anomalous for that user (e.g., >3 standard deviations from their mean access time).",
              "Machine Learning: Deploy an unsupervised anomaly detection model, such as an Isolation Forest, on file access events (Event ID 4663). Engineer features including: process name, user account name, target file path, file extension, and time of day (as a cyclical feature). The model learns the pattern of 'normal' access and flags any access event that it scores as a significant outlier, effectively detecting novel unauthorized access without pre-defined rules."
            ]
          },
          {
            "description": "A single user or process is observed accessing a statistically unusual number of distinct private key files across one or more systems in a short time frame.",
            "data_sources": [
              "Windows Event ID 4663",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise-wide file systems, centralized certificate stores, distributed developer workstations, and network file shares (SMB/NFS).",
            "action": [
              "Symbolic: Create a stateful rule that triggers if a single 'SubjectUserName' from Windows Event ID 4663 events is observed accessing more than a defined threshold (e.g., 10) of unique files with extensions .key, .pem, .pfx, or .ppk across one or more hosts within a 5-minute window. Tune threshold based on user role (e.g., a PKI Admin should have a higher threshold).",
              "Statistical: For each user, calculate a rolling 99th percentile of the number of unique key files accessed per hour, based on at least 30 days of historical data from Event ID 4663. Trigger an alert if the count in the current hour exceeds this dynamically calculated threshold. This adaptive threshold accounts for differences in roles and normal user behavior.",
              "Machine Learning: Use a clustering algorithm like K-Means or DBSCAN on users based on their key access behavior. Features should include: count of unique keys accessed, number of distinct hosts accessed from, and the standard deviation of access times. Users who suddenly move from a 'low access' cluster to a 'high access' cluster, or form a new outlier cluster, are flagged for investigation as potential collection activity."
            ]
          },
          {
            "description": "A successful certificate-based authentication event is observed with a combination of anomalous properties, such as a rare geographic location, a new or unrecognized device, or an IP address not previously associated with the user's certificate.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek ssh.log",
              "Zeek ssl.log",
              "VPN/Remote Access Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (Active Directory), VPN concentrators, SSH jump boxes/bastion hosts, network perimeter gateways, and any service allowing client certificate authentication.",
            "action": [
              "Symbolic: For every successful certificate-based login (e.g., Windows Event 4624 Logon Type 3, Zeek ssh.log 'auth_success=true'), enrich the source IP with threat intelligence. Generate a high-severity alert if the source IP is on a deny-list of known malicious IPs, known anonymizing proxies (e.g., TOR exit nodes), or from a non-business-related country.",
              "Statistical: For each user account, build a historical profile of successful authentication attributes (source countries, source ASNs, client application strings, time-of-day). For each new login, assign a risk score based on deviations: login from a country never before seen for this user (+3), new ASN (+2), new client application (+1). A cumulative score exceeding a threshold (e.g., 4) triggers an alert for manual review.",
              "Machine Learning: Implement an unsupervised novelty detection model (e.g., One-Class SVM) for each user's login behavior. Features should include source IP geolocation (latitude/longitude), time of day, day of week, client software string (from Zeek logs), and ASN. The model learns a boundary representing 'normal' login behavior for that specific user. Any new login that falls outside this learned boundary is flagged as a high-confidence anomaly."
            ]
          },
          {
            "description": "A correlated sequence of host and network events indicates a 'collect, stage, and exfiltrate' pattern: 1) mass-reading of key files, 2) creation of an archive file, and 3) an anomalous outbound network connection.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers (for process/file activity), and network egress points (for exfiltration traffic analysis).",
            "action": [
              "Symbolic: Create a stateful correlation rule that triggers when the following sequence is observed from the same hostname or source IP within a 15-minute window: 1) >5 file read events (Event ID 4663) for '*.key' or '*.pem', followed by 2) a process creation event (Event ID 4688) for an archiving utility (e.g., tar, zip, 7z.exe, rar.exe), followed by 3) a network connection (Zeek conn.log) to an external IP on a non-standard port or to a domain with a low reputation score.",
              "Statistical: Monitor the rate of file reads (Event ID 4663) for key files per host. If the rate exceeds the 98th percentile for that host, begin monitoring for archive creation (Event ID 4688). If an archive is created, analyze the size of the subsequent outbound connection (Zeek conn.log 'orig_bytes' field). If the outbound data volume is within +/- 20% of the newly created archive's size and occurs within 5 minutes, flag it as a high-confidence staging and exfiltration event.",
              "Machine Learning: Use a Hidden Markov Model (HMM) to detect the 'collect -> compress -> exfiltrate' attack chain. Define model states as 'Benign', 'Key Discovery/Access', 'Staging/Archiving', and 'Exfiltration'. Train the model's transition probabilities on known attack sequences and normal activity. Apply the model to streams of events (Event 4663, 4688, Zeek conn.log) from each host, flagging event sequences that have a high probability of belonging to the malicious chain of states."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]