[
  {
    "information_requirement": "Is the adversary attempting to steal credentials using ARP cache poisoning?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1557.002",
        "name": "ARP Cache Poisoning",
        "evidence": [
          {
            "description": "An ARP reply is observed in network traffic where the source hardware address (MAC) or its corresponding Organizationally Unique Identifier (OUI) matches an entry on a threat intelligence watchlist of MACs/OUIs associated with known ARP poisoning tools.",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic collection points (e.g., SPAN ports, network taps) monitoring internal network segments, particularly user VLANs and server subnets.",
            "action": [
              "Symbolic: Create a SIEM rule to alert when an ARP event is observed in Zeek arp.log where the 'arp.sha' (source hardware address) or its OUI prefix matches a maintained watchlist of malicious indicators.",
              "Statistical: Profile the baseline rate of all ARP operations (requests, replies) per MAC address. Alert if a MAC address that also appears on a low-reputation threat intelligence feed exceeds its 99th percentile for ARP replies in a 5-minute window.",
              "Machine Learning: Train a classification model (e.g., Random Forest) with features such as OUI, is_gratuitous flag, and matches against threat intelligence lists. Deploy the model to score each ARP event, and alert on any event classified as 'malicious tool' with high confidence."
            ]
          },
          {
            "description": "A single source MAC address sends ARP requests for more than 20 unique IP addresses in the same /24 subnet within a 60-second window (scan), immediately followed by multiple gratuitous ARP replies from the same MAC impersonating a critical asset's IP address (e.g., default gateway).",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network infrastructure segments containing assets like default gateways, DNS servers, and Domain Controllers.",
            "action": [
              "Symbolic: Implement a stateful correlation rule that triggers an alert when a single 'arp.sha' is the source of >20 unique 'arp.tpa' lookups (opcode=1) within 60 seconds, and this is followed within 120 seconds by gratuitous ARP replies (opcode=2, spa=tpa) from the same 'arp.sha' for a critical IP.",
              "Statistical: For each MAC address, calculate the Shannon entropy of the target IP addresses ('arp.tpa') in its ARP requests over a 1-minute window. Alert when this entropy value for a single MAC spikes above a dynamically calculated baseline (e.g., >3 standard deviations), and correlate with a subsequent burst of gratuitous ARP replies from the same MAC.",
              "Machine Learning: Utilize a sequence analysis model (e.g., LSTM) trained on legitimate sequences of ARP events per host. The model should flag a sequence containing a high-entropy scan followed by gratuitous replies for a different IP as an anomaly indicative of a scan-then-poison attack."
            ]
          },
          {
            "description": "A Windows endpoint generates System Event ID 4199 ('The system detected an address conflict for IP address...'), and the conflicting IP address is identified in an asset inventory as a critical network resource (e.g., Gateway, DNS Server, Domain Controller).",
            "data_sources": [
              "Windows Event ID 4199",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly Domain Controllers and other critical servers.",
            "action": [
              "Symbolic: Create a high-priority alert that triggers on any Windows Event ID 4199. The alert logic must enrich the event by cross-referencing the conflicting IP address with a critical asset inventory. If a match is found, escalate the alert.",
              "Statistical: Monitor the rate of Event ID 4199 across all hosts. Use a moving average to establish a baseline. An alert should be generated if a cluster of these events (e.g., >5 events in 10 minutes) occurs in the same subnet for the same conflicting IP, indicating a widespread attack.",
              "Machine Learning: Train a classification model (e.g., Decision Tree) to assign a risk score to each Event ID 4199. Features should include the asset criticality of the host logging the event, the asset criticality of the conflicting IP, and the time of day. A high-risk score automatically triggers a security incident."
            ]
          },
          {
            "description": "A gratuitous ARP reply is observed where the sender IP address is for a critical asset (e.g., default gateway), but the sender MAC address does not match the pre-defined, static MAC address for that asset. This is often accompanied by a high volume of such replies (>10 per minute) from the anomalous MAC.",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps and SPAN ports monitoring core network switches, gateway routers, and DNS server subnets.",
            "action": [
              "Symbolic: Maintain a static IP-to-MAC mapping table for critical assets. Create a rule to alert on any gratuitous ARP reply from Zeek arp.log where the 'arp.spa' is on the critical asset list but the 'arp.sha' does not match the corresponding entry in the mapping table.",
              "Statistical: For each IP address on the critical asset list, establish a baseline for the count of gratuitous ARP replies per minute. Generate an alert if the count from any single source MAC address exceeds the 99th percentile of this baseline.",
              "Machine Learning: Deploy a time-series anomaly detection model (e.g., ARIMA or Prophet) for each critical IP to forecast the expected volume of gratuitous ARP replies. An alert is triggered when the observed volume significantly exceeds the forecasted confidence interval, indicating a potential flood or poisoning attack."
            ]
          },
          {
            "description": "A single MAC address, not listed as a network infrastructure device in the asset inventory, sends gratuitous ARP replies claiming ownership of more than 3 unique IP addresses within a 5-minute window.",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (e.g., Domain Controllers, RADIUS servers) and the subnets containing them.",
            "action": [
              "Symbolic: Create a stateful rule that tracks the distinct count of IPs ('arp.spa') claimed by each MAC address ('arp.sha') via gratuitous ARP replies over a 5-minute window. Alert if this count exceeds 3 for any MAC not on a pre-approved list of infrastructure devices (like HSRP/VRRP routers).",
              "Statistical: For each MAC address, calculate the Shannon entropy of the set of IP addresses it claims via gratuitous ARP replies in a rolling 10-minute window. A sudden spike from near-zero entropy (claiming one IP) to a high value indicates anomalous behavior. Alert when entropy for a non-gateway MAC exceeds a threshold (e.g., 1.5).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) to group network devices based on their ARP behavior (number of IPs claimed, reply frequency, gratuitous reply ratio). An attacker claiming multiple IPs will be identified as a noise point or an anomalous micro-cluster, distinct from normal endpoints and stable infrastructure."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary collecting sensitive data using ARP cache poisoning?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1557.002",
        "name": "ARP Cache Poisoning",
        "evidence": [
          {
            "description": "An ARP reply from a MAC address on a threat intelligence watchlist impersonates a high-value data asset's IP, and is immediately followed by traffic from a client, destined for the data asset's IP, being sent to the attacker's MAC address at Layer 2.",
            "data_sources": [
              "Zeek arp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Subnets containing high-value data assets (e.g., file servers, database servers, code repositories).",
            "action": [
              "Symbolic: Create a rule that triggers when an ARP reply is seen from a MAC on a watchlist ('arp.sha') impersonating a high-value IP ('arp.spa'). Correlate this event to find a subsequent 'conn.log' entry where 'id.resp_p' is a data service port and the 'id.resp_h' is the high-value IP, but the 'mac' in the linked 'conn.log' metadata is the attacker's MAC.",
              "Statistical: After detecting a suspicious ARP event targeting a data server, monitor the traffic volume directed to the attacker's MAC. Alert if the volume of traffic destined for the data server's IP but delivered to the attacker's MAC exceeds the 95th percentile of the attacker's baseline received traffic.",
              "Machine Learning: Train a classifier to predict the risk of a connection being intercepted. Features should include: 'ARP_event_recently_seen' (boolean), 'destination_MAC_matches_ARP_table' (boolean), 'destination_IP_criticality' (numeric), 'destination_port_risk' (numeric). Alert on any connection with a high-risk score."
            ]
          },
          {
            "description": "Within a 10-second window, a single attacker MAC address sends two targeted ARP replies: one to a client's MAC (MAC_A) claiming the server's IP (IP_B), and a second to the server's MAC (MAC_B) claiming the client's IP (IP_A).",
            "data_sources": [
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic collection points monitoring communication paths between user workstations and sensitive data servers.",
            "action": [
              "Symbolic: Implement a stateful correlation rule that looks for two ARP replies from the same source MAC ('sha_attacker') within 10 seconds, where the first reply has 'tha=MAC_A' and 'spa=IP_B' and the second has 'tha=MAC_B' and 'spa=IP_A'.",
              "Statistical: Construct a directed graph from ARP replies over 1-minute windows, where an edge from MAC_X to MAC_Y means X sent a reply to Y. A rapid formation of a bi-directional edge pattern (Attacker -> A, Attacker -> B) where A and B were previously communicating is a statistical anomaly indicative of MitM setup. Monitor the 'betweenness centrality' of nodes; a non-gateway node that suddenly becomes central is suspicious.",
              "Machine Learning: Apply graph-based anomaly detection algorithms on the ARP communication graph. Train a model on normal graph structures (e.g., star-shaped patterns around gateways). The model should flag the sudden emergence of a 'man-in-the-middle' subgraph (Attacker -> A, Attacker -> B, A <-> B) as a high-confidence attack pattern."
            ]
          },
          {
            "description": "A Windows system, identified as a high-value data asset (e.g., file server, database) or the primary workstation of a privileged user, generates System Event ID 4199, indicating an IP address conflict.",
            "data_sources": [
              "Windows Event ID 4199",
              "Zeek arp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Designated high-value data servers (file servers, databases) and workstations of privileged users.",
            "action": [
              "Symbolic: Create a high-priority alert that triggers when Windows Event ID 4199 is generated on any host whose name or IP is present in a 'critical data assets' or 'privileged users' asset group. Escalate immediately for investigation.",
              "Statistical: Analyze the distribution of Event ID 4199 alerts across pre-defined asset tiers (e.g., Tier 0, Tier 1, Tier 2). Use a Chi-squared test to determine if the observed frequency of alerts on high-value assets is statistically significant compared to the historical distribution.",
              "Machine Learning: Train a risk-scoring model for Event ID 4199 specifically for collection attempts. Features should include asset value, user privilege level associated with the host, and whether the host has recently accessed sensitive data repositories. The model's output score determines the alert priority."
            ]
          },
          {
            "description": "Following an ARP reply that changes the known MAC address for a high-value data server, subsequent network connections from clients to that server's IP address show the destination MAC address as the new, unauthorized MAC.",
            "data_sources": [
              "Zeek arp.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic flows to and from high-value data assets, monitored at network chokepoints.",
            "action": [
              "Symbolic: Create a stateful rule that caches the legitimate MAC for high-value IPs. If an ARP reply changes the MAC for a server IP (IP_S) from MAC_legit to MAC_new, alert on any subsequent 'conn.log' entry to IP_S where the Layer 2 destination address is MAC_new.",
              "Statistical: For each critical server, establish a baseline of expected source-to-destination MAC address pairings. Calculate the percentage of 'misdirected' traffic (traffic to the server's IP with an unexpected destination MAC) over time. A sudden increase in this percentage following an ARP anomaly confirms interception.",
              "Machine Learning: Use a time-series model to forecast the expected data volume between specific client-server pairs. If an ARP poisoning event is detected, and the subsequent observed traffic volume between the legitimate client and server MACs drops significantly while traffic to the attacker's MAC on the same service port increases, flag it as a confirmed interception for collection."
            ]
          },
          {
            "description": "A non-gateway endpoint's MAC address receives a volume of inbound traffic (bytes > 95th percentile of its baseline) on ports for data services (e.g., SMB/445, SQL/1433, NFS/2049), where the destination IP in the traffic is for a known data server, not the endpoint itself.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All non-gateway endpoints on internal network segments, with traffic monitored by network sensors.",
            "action": [
              "Symbolic: For all traffic in 'conn.log' where 'id.resp_h' is a known data server IP, create a rule to alert if the destination MAC address (from packet-level metadata) is not the server's legitimate MAC and not a known router MAC. This directly detects misrouted data traffic.",
              "Statistical: For each non-gateway MAC address, baseline the inbound byte count on data-service ports (445, 1433, etc.). Generate an alert if the inbound byte count in a 5-minute window exceeds the 95th percentile of the 30-day baseline for that specific MAC, indicating it is anomalously receiving server-like traffic.",
              "Machine Learning: Use unsupervised learning (e.g., k-means clustering) to group endpoints based on their traffic profiles (bytes in/out, common ports, client/server ratio). An endpoint that abruptly shifts from a 'client' cluster (high outbound, low inbound) to a 'server-like' cluster (high inbound on service ports) is a strong anomaly indicative of a successful MitM position."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]