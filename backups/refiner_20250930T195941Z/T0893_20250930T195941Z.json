[
  {
    "information_requirement": "Is an adversary collecting sensitive project files or configuration data from our ICS assets? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0807",
        "name": "Command-Line Interface",
        "evidence": [
          {
            "description": "Anomalous command-line file access, defined by the execution of file system enumeration or data movement commands (`dir`, `copy`, `type`, `xcopy`, `robocopy`, `findstr`, `certutil`, `bitsadmin`) by `cmd.exe` or `powershell.exe` that targets critical ICS directories (e.g., project files, configuration backups) or files with sensitive extensions (e.g., `.ACD`, `.L5K`, `.SCX`, `.HMI`). The activity is confirmed as evidence when the count of unique sensitive files accessed by a user or process within a rolling 5-minute window exceeds an established behavioral baseline (e.g., 99th percentile), archiving tools (`tar`, `zip`, `7z`) are invoked, or the parent process is not on an approved administrative whitelist (e.g., originates from a web server or Microsoft Office application).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5145",
              "Zeek conn.log",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Process Control Servers, File Shares hosting ICS project files (e.g., .ACD, .L5K, .SCX, .HMI), and Jump Servers providing access to the OT network.",
            "action": [
              "Configure a SIEM alert for Windows Event ID 4688 where `NewProcessName` is `cmd.exe` or `powershell.exe` and the `CommandLine` contains keywords (`dir`, `copy`, `type`, `xcopy`, `robocopy`, `findstr`, `certutil`, `bitsadmin`) and targets a file path with a sensitive ICS extension (`.ACD`, `.L5K`, `.SCX`, `.HMI`, `.XML`, `.INI`) or a directory from a predefined list of sensitive ICS asset locations. Escalate the alert if the `ParentProcessName` is not `explorer.exe` or a whitelisted administrative tool.",
              "For each host in the NAI, ingest Windows Event ID 4688 and 5145 logs. For each user, establish a 30-day baseline of the hourly count of unique sensitive files accessed via command-line interpreters. Calculate the 99th percentile of this baseline and alert when a user's hourly access count exceeds this threshold. Concurrently, monitor data transfer volume from file shares using Zeek `smb_files.log` and Event ID 5145, calculating a 30-day moving average and standard deviation of hourly volume per user, and flag any user whose hourly volume exceeds 3 standard deviations from their average.",
              "Extract feature vectors from Windows Event ID 4688 events for `cmd.exe` or `powershell.exe`, including `CommandLine` length, argument count, character entropy, and boolean flags for sensitive keywords. Apply a DBSCAN clustering algorithm to identify commands that are outliers from established clusters of normal administrative activity. For time-series analysis, ingest process creation logs (Event ID 4688) and apply an Isolation Forest model to the per-hour frequency of file access commands, incorporating temporal features (hour-of-day, day-of-week) to detect anomalous spikes in activity."
            ]
          }
        ]
      },
      {
        "technique_id": "T0853",
        "name": "Scripting",
        "evidence": [
          {
            "description": "Execution of a script (`powershell.exe`, `python.exe`, `wscript.exe`, `cscript.exe`) that reads from multiple sensitive ICS directories or targets files with critical ICS extensions (e.g., `.ACD`, `.L5K`, `.SCX`, `.HMI`). The activity is confirmed as evidence if the script's command line or `ScriptBlockText` (for PowerShell) exhibits a character entropy score exceeding the 99th percentile of benign scripts, contains functions for data compression (`Compress-Archive`), encoding (`[Convert]::ToBase64String`), or exfiltration, and is executed by an anomalous parent process (e.g., `svchost.exe`, a web server process) not on an approved whitelist.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Windows Event ID 4103",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek smb_mapping.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Process Control Servers, Configuration Management Servers, and File Servers/Shares containing ICS project or configuration files.",
            "action": [
              "Create a SIEM rule to correlate Windows Event ID 4688 for scripting engines (`powershell.exe`, `python.exe`, `wscript.exe`) with a corresponding Windows Event ID 4104 (PowerShell Script Block Logging) within a 5-second window. Trigger an alert if the `ScriptBlockText` from Event ID 4104 contains file access cmdlets (`Get-ChildItem`, `Get-Content`) targeting paths or extensions from a list of sensitive ICS assets. Elevate severity if the script block also contains data compression (`Compress-Archive`) or encoding (`[Convert]::ToBase64String`, `certutil -encode`) functions.",
              "For each script execution event (Event ID 4688 and 4104), calculate the character entropy of the `CommandLine` and `ScriptBlockText` fields. Establish a 30-day rolling baseline of entropy scores for normal scripts and alert when a new script's entropy exceeds the 99.5th percentile. Additionally, profile the daily frequency of sensitive file access cmdlet usage per user, calculate a 30-day moving average and standard deviation, and flag any user whose daily count exceeds 3 standard deviations from their historical average.",
              "Train a supervised classification model (e.g., Random Forest) on labeled benign and malicious script executions using features from Event IDs 4104 and 4688, such as script block length, character entropy, presence of sensitive cmdlets (`Invoke-Expression`), parent process, and command-line arguments. Deploy the model to classify new script executions in near real-time. For relationship analysis, construct a dynamic graph with nodes for users, processes, and files, and edges for interactions. Apply a graph-based anomaly detection algorithm to identify unusual subgraphs, such as a script accessing an abnormally high number of sensitive project files followed by a new external network connection (correlated with Zeek `conn.log`)."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]