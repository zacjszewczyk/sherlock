[
  {
    "information_requirement": "Is an adversary attempting to discover installed applications on our managed mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1418",
        "name": "Software Discovery",
        "evidence": [
          {
            "description": "A process creation event is logged on a host system where adb.exe is executed with command-line arguments 'shell pm list packages', indicating an attempt to enumerate installed packages on a connected Android device.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices of developers, IT support staff, and security analysts with mobile device management responsibilities.",
            "action": [
              "Trigger an alert on process creation events (Windows Event ID 4688 or Sysmon Event ID 1) where the process image path ends in '\\adb.exe' AND the command line contains the substrings 'shell', 'pm', 'list', and 'packages'. Correlate against an asset group of authorized mobile developers and escalate if the host is not a member.",
              "For each host, profile the command-line arguments of adb.exe to establish a baseline. Calculate the Shannon entropy for each new execution's command-line and alert if the score exceeds the 98th percentile for that host's historical adb.exe executions. Separately, monitor the daily frequency of package listing commands per user and alert if the count exceeds three standard deviations above the user's 30-day moving average.",
              "Train a supervised classification model (e.g., Random Forest) to predict malicious adb.exe executions. Use features from process creation logs, including: command-line argument entropy, presence of keywords ('list', 'packages', 'pm'), execution time (e.g., outside business hours), and parent process legitimacy (e.g., not cmd.exe or powershell.exe). Deploy the model to score new executions and alert on a predicted probability score greater than 0.90."
            ]
          },
          {
            "description": "A network connection from a managed mobile device's IP address shows an outbound data transfer between 1KB and 50KB to a destination IP that is either newly observed across the enterprise or has a low reputation score, consistent with application list exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network egress points, wireless network segments, VPN concentrators, and DNS resolvers.",
            "action": [
              "Create an alert that triggers if network logs from the mobile device IP range show: (a) an HTTP POST request in Zeek http.log with a 'request_body_len' between 1024 and 51200 bytes to a domain registered within the last 30 days or present on a threat intelligence feed, OR (b) a DNS query in Zeek dns.log with a query length exceeding 100 characters directed to a low-reputation domain.",
              "From Zeek conn.log, profile outbound connections for each mobile device. For each connection, calculate an exfiltration ratio score: orig_bytes / (orig_bytes + resp_bytes + 1). Establish a baseline distribution of this score for each device. Alert if a device's connection score exceeds the 99th percentile of its own 30-day history, particularly when the destination IP has been seen by fewer than five other devices in the past week.",
              "Implement a two-stage anomaly detection process. First, apply an unsupervised model (e.g., Isolation Forest) to Zeek conn.log features (orig_bytes, resp_bytes, duration, service) to identify anomalous sessions from mobile devices. Second, for any flagged session, pass the destination FQDN from Zeek dns.log or http.log to a pre-trained DGA detection classifier (e.g., an LSTM). Escalate for review if an anomalous session is directed to a domain with a DGA probability score above 0.85."
            ]
          },
          {
            "description": "An application on a managed mobile device is reported by an MDM or MTD platform as requesting the 'android.permission.QUERY_ALL_PACKAGES' permission (Android) or utilizing the 'LSApplicationWorkspace' private API (iOS).",
            "data_sources": [
              "MDM/MTD Application Inventory Logs",
              "MDM/MTD Security Alert Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate MDM/MTD platform and Application Vetting Systems.",
            "action": [
              "Configure the MDM/MTD platform to generate a high-priority alert for any new application installation that requests the 'android.permission.QUERY_ALL_PACKAGES' permission or is flagged for using the 'LSApplicationWorkspace' private API. Suppress alerts for applications on a pre-approved allowlist.",
              "Ingest application inventory data from the MDM/MTD platform. For each application, calculate a permission risk score by assigning weights to sensitive permissions (e.g., QUERY_ALL_PACKAGES=10). Alert on any application whose score exceeds the 99th percentile of all apps in the environment. Additionally, create a trend-based alert if the total count of applications with the 'QUERY_ALL_PACKAGES' permission increases by more than 5% week-over-week.",
              "Train and deploy a classification model (e.g., XGBoost) to predict if an Android application is a Potentially Unwanted Program (PUP). Use features from MDM/MTD scans, including: a one-hot encoded vector of requested permissions, the application's install source, counts of declared activities/services/receivers, and a binary feature for the presence of 'QUERY_ALL_PACKAGES'. Automatically flag applications with a predicted malicious probability score greater than 0.95 for vetting or quarantine."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]