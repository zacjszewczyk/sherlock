[
  {
    "information_requirement": "Is an adversary establishing persistence on control system devices via unauthorized firmware modifications? (PIR)",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0839",
        "name": "Module Firmware",
        "evidence": [
          {
            "description": "An unauthorized network file transfer matching firmware characteristics to a critical ICS asset. This is identified by a connection using a firmware transfer protocol (e.g., TFTP, FTP) from an unauthorized source, outside of a maintenance window, and correlated with a file transfer whose name or type suggests a firmware image.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek ftp.log",
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps monitoring north-south traffic between the enterprise network and the PCN, and east-west traffic within the PCN, particularly segments containing critical controllers and Engineering Workstations (EWS).",
            "action": [
              "Create and maintain an asset inventory of critical ICS devices, a whitelist of authorized Engineering Workstation (EWS) IP addresses, and a schedule of approved maintenance windows. Alert when a Zeek conn.log entry shows a connection using a firmware transfer protocol (e.g., service is 'tftp', 'ftp', 'ssh') to a critical ICS asset where id.orig_h is not in the EWS whitelist OR the connection timestamp is outside a maintenance window. Correlate this with a Zeek files.log entry where tx_hosts/rx_hosts match the connection IPs, and the filename extension is '.bin', '.fw', '.hex' or the mime_type is 'application/octet-stream'.",
              "For each ICS device model, profile the 'file_size' of legitimate firmware updates from historical files.log data to establish a mean and standard deviation. For any detected firmware file transfer, calculate the Z-score of its 'file_size' against the model's baseline. Alert if the Z-score is greater than 3.0, indicating a file size that is anomalously large or small. Additionally, track the 7-day rolling count of firmware transfers per device; alert if the daily count exceeds the 99th percentile of the historical daily counts.",
              "Develop a time-series anomaly detection model, such as an LSTM autoencoder, using historical Zeek conn.log and files.log data. Use features such as the hourly count of connections on firmware-related ports (21, 22, 69), total bytes transferred (orig_bytes + resp_bytes), and number of unique source IPs connecting to ICS assets on these ports. Train the model on at least 90 days of data. Deploy the model to generate a reconstruction error for real-time traffic. Alert when the reconstruction error exceeds the 99th percentile of training errors, indicating a deviation from normal firmware-related network activity patterns."
            ]
          },
          {
            "description": "A critical ICS device ceases its expected periodic network communication within 15 minutes of a suspected unauthorized firmware update, suggesting a device reboot, hang, or failure ('bricking').",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps monitoring traffic to and from critical PLCs, RTUs, and associated data historians within the Process Control Network (PCN).",
            "action": [
              "For each critical ICS asset, define its expected heartbeat interval (e.g., 5 seconds for a specific Modbus poll). Create a rule that triggers if no traffic is seen from the device's IP in Zeek conn.log or a relevant protocol log (e.g., modbus.log) for a period greater than 3 times its expected interval. Correlate this 'timeout' event with any firmware-related alert for that same device IP within the last 15 minutes. Escalate to a high-severity incident if both conditions are met.",
              "For each critical ICS device, create a 30-day baseline of the mean and standard deviation of its total network bytes (orig_bytes + resp_bytes) per 1-minute interval from conn.log. Alert if the current 1-minute byte total drops to a value more than 3 standard deviations below the mean, indicating a sudden drop in traffic. Additionally, baseline the 95th percentile of connection 'duration' for the device; alert if a new connection's duration exceeds this percentile, which could signify a hung process or unstable state post-update.",
              "Train a supervised classification model (e.g., Random Forest) using historical, labeled Zeek conn.log data where instances are labeled as 'unstable' if they precede a known device failure or reboot. Features should include 'duration', 'orig_bytes', 'resp_bytes', 'conn_state', and counts of specific states like 'REJ' or 'RSTO'. If labeled data is unavailable, use an unsupervised Hidden Markov Model (HMM) to model the device's network state ('normal', 'rebooting', 'failed'). Alert when the model transitions to a 'failed' or 'rebooting' state immediately following a firmware transfer detection."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary attempting to impair process control by manipulating module firmware on critical PLCs or RTUs? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0839",
        "name": "Module Firmware",
        "evidence": [
          {
            "description": "The execution of a known ICS firmware update utility on a host not authorized for this function, or its execution with command-line parameters targeting an unauthorized device, as observed in Windows process creation logs.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), jump servers, and management servers within the Process Control Network (PCN) or DMZ with access to the PCN.",
            "action": [
              "Maintain a whitelist of authorized EWS hostnames and a list of approved firmware update utility process names (e.g., 'RSLogixFlash.exe'). Create a rule to alert on Windows Event ID 4688 where NewProcessName is on the utility list but the Computer name is not on the EWS whitelist. Additionally, for any execution on a whitelisted EWS, parse the CommandLine for target IP addresses and alert if the target IP does not map to a device managed by that specific EWS in the asset inventory.",
              "For each authorized EWS, baseline the daily execution count of each firmware utility by each authorized user account using historical Windows Event ID 4688 data. Alert if a utility is executed by a user whose historical execution count for that tool is zero. Also, calculate the Shannon entropy of the CommandLine string for each utility; alert if the entropy for a new execution event deviates by more than 2 standard deviations from the historical mean, suggesting unusually structured or obfuscated commands.",
              "Train an Isolation Forest model on historical Windows Event ID 4688 data from all EWS hosts. Use features such as ProcessName, ParentProcessName, User, Computer, and tokenized CommandLine arguments. The model will create a behavioral profile of normal process execution. Score real-time process creation events. Alert on any execution of a firmware utility that receives an anomaly score in the top 1%, indicating it is highly dissimilar from all previously observed legitimate executions."
            ]
          },
          {
            "description": "A critical ICS device initiates or receives network connections involving a source IP, destination IP, port, or protocol that has never been observed for that device during a 30-day rolling baseline period, suggesting new, unauthorized functionality.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "PCN core network switches, network taps at the PCN boundary and between ICS zones, and ICS-aware Network Intrusion Detection Systems (NIDS).",
            "action": [
              "For each critical ICS asset, generate a strict whitelist of all unique 5-tuples (id.orig_h, id.resp_h, id.resp_p, proto, service) from the last 90 days of Zeek conn.log data. Create a rule that alerts on any new connection to or from the asset where the 5-tuple is not in the whitelist. Cross-reference the alert with change management tickets before escalating.",
              "For each critical ICS asset, monitor the count of 'new' (not seen in 30 days) unique destination ports (id.resp_p) it communicates on in a 1-hour window. Establish a baseline for this 'new port count' and alert if the count exceeds the 99th percentile of the historical distribution, which could indicate scanning or C2 activity. Also, track the ratio of failed to successful connection states (e.g., 'REJ'/'SF' in conn_state); alert if this ratio spikes more than 3 standard deviations above its baseline.",
              "Construct a communication graph where nodes are IP addresses (EWS, PLCs, etc.) and edges represent connections from historical Zeek conn.log data. Use features like connection frequency, protocol, and port as edge weights. Train a graph-based neural network (e.g., GraphSAGE) to learn embeddings for each node that represent its normal communication patterns. In real-time, score new connections based on how they alter the graph structure. Alert if a new connection from a PLC results in an anomaly score exceeding a predefined threshold, indicating a fundamental shift in its communication behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]