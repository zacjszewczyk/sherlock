[
  {
    "information_requirement": "Is an adversary collecting call log data from our managed mobile devices? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1636.002",
        "name": "Call Log",
        "evidence": [
          {
            "description": "An Android application, not present on the corporate allowlist, is identified in the UEM inventory with the 'android.permission.READ_CALL_LOG' permission listed in its manifest.",
            "data_sources": [
              "MDM/UEM Application Inventory Log",
              "AndroidManifest.xml",
              "Application Allowlist"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Unified Endpoint Management (UEM) console, Cloud-based application sandbox, Corporate application store",
            "action": [
              "For each application, parse its manifest to identify if the 'android.permission.READ_CALL_LOG' permission is requested. If the permission is present, query the corporate application allowlist by package name and signing certificate. Generate an alert if the application is not found on the allowlist.",
              "Query the UEM application inventory to calculate the prevalence of each permission across all installed applications. Identify all permissions requested by less than 1% of applications (99th percentile of rarity). Generate an alert for any application requesting 'android.permission.READ_CALL_LOG' if it is also classified as rare by this statistical measure.",
              "Within an automated sandbox, use a pre-trained classification model (e.g., Random Forest) to analyze application features (permissions, intents, API calls, code structure). If an application requests 'android.permission.READ_CALL_LOG' and is classified as 'malicious' or 'PUA' with a confidence score exceeding 0.85, automatically block the application and create a high-priority incident for analysis."
            ]
          },
          {
            "description": "A process running on a managed Android endpoint, whose SHA256 hash is not on the approved process allowlist, makes a runtime API call to access the call log content provider URI 'content://call_log/calls'.",
            "data_sources": [
              "Mobile EDR Process and API monitoring logs",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed Android endpoints, Unified Endpoint Management (UEM) console, SIEM platform",
            "action": [
              "Configure mobile EDR agents to monitor for and log any process accessing the 'content://call_log/calls' URI. For each access event, compare the SHA256 hash of the initiating process against an allowlist of known-good applications (e.g., native dialer). Generate a high-severity alert if the process hash is not on the allowlist.",
              "For each application on each device, ingest API access logs into the SIEM and establish a baseline of call log access frequency by counting access events per hour over a 14-day period. Calculate the mean and standard deviation of hourly access counts for each application. Generate an alert if an application's hourly access count exceeds three standard deviations above its established baseline.",
              "Deploy a sequence analysis model (e.g., LSTM autoencoder) to learn normal sequences of API calls for approved applications. Monitor real-time API call sequences from all processes. Generate an alert for anomalous sequences where access to the call log provider is immediately followed by network connection initiation, file system writes to external storage, or cryptographic API calls, indicating a potential collect-stage-exfiltrate pattern."
            ]
          },
          {
            "description": "A managed mobile device's total outbound network traffic (sum of bytes) in a one-hour window exceeds its 30-day 98th percentile for that hour, and this anomaly occurs within 24 hours of installing an application that has the 'android.permission.READ_CALL_LOG' permission.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM/UEM Application Installation Event Logs",
              "Threat Intelligence Platform Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate Wi-Fi network gateways, VPN concentrators, DNS resolvers",
            "action": [
              "Create a SIEM correlation rule that joins MDM/UEM logs with network and threat intelligence data. Trigger a critical alert if an MDM/UEM log shows an app with 'READ_CALL_LOG' permission was installed, AND within 24 hours, a Zeek conn.log event from the same device IP shows an outbound connection to an IP/domain on a threat intelligence feed of known C2 servers.",
              "For each device, create an hourly scheduled query that calculates the 98th percentile of outbound data volume (orig_bytes from Zeek conn.log) over the past 30 days. Correlate this with MDM/UEM logs. Generate a high-severity alert if the current hour's outbound volume exceeds the 98th percentile baseline AND an application with 'READ_CALL_LOG' permission was installed on that device within the last 24 hours. As an enrichment, calculate the Shannon entropy of DNS queries (qname from Zeek dns.log) in the same window; a high entropy score strengthens the alert.",
              "For each device, use a time-series forecasting model (e.g., Prophet) on Zeek conn.log data to predict expected outbound traffic volume. Generate an alert if the actual volume significantly exceeds the forecasted prediction interval. Concurrently, apply a clustering algorithm (e.g., DBSCAN) to network connection features (destination IP, port, JA3/JA3S hash, duration, bytes sent) to identify and alert on outlier network flows that deviate from the device's established behavioral clusters, especially after an app with 'READ_CALL_LOG' is installed."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]