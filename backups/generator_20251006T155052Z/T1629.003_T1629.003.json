[
  {
    "information_requirement": "Is an adversary attempting to evade our mobile security controls by disabling or modifying security tools? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629.003",
        "name": "Disable or Modify Tools",
        "evidence": [
          {
            "description": "An MDM/UEM log event indicating a change in device administrator privileges, such as the revocation of privileges from a required security application or the granting of privileges to an unapproved application.",
            "data_sources": [
              "MDM/UEM audit logs",
              "Application Inventory List"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized log aggregator (SIEM), MDM/UEM administrative servers, fleet of managed mobile endpoints.",
            "action": [
              "Create a SIEM rule to trigger a high-severity alert by querying MDM/UEM audit logs for events where (event_code = 'device_admin_revoked' AND target_app IN [list_of_required_security_tools]) OR (event_code = 'device_admin_granted' AND target_app NOT IN [list_of_approved_admin_apps]).",
              "For each device, establish a 30-day rolling baseline for the count of 'device_admin_granted' events for unapproved applications. Generate a medium-severity alert when a device's daily count exceeds the 99th percentile of its own historical baseline, indicating an unusual pattern of privilege escalation.",
              "Train a classification model (e.g., Gradient Boosting) using features like app_name, app_permissions_requested, installation_source, time_of_day, and device_is_rooted. The model should predict the likelihood that a device administrator change event is malicious. An event with a 'malicious' classification and a confidence score >0.9 should trigger a critical alert and automated device quarantine via MDM API call."
            ]
          },
          {
            "description": "An event from an MTD solution explicitly reports that the agent on a managed device has a status of 'disabled', 'tampered', 'stopped', or 'unresponsive'.",
            "data_sources": [
              "MTD agent status logs",
              "MTD alert logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MTD management console, Centralized log aggregator (SIEM), managed mobile endpoints.",
            "action": [
              "Create a SIEM rule to generate a high-severity alert whenever a log from the MTD platform contains the field-value pair `agent_status: 'disabled'`, `agent_status: 'tampered'`, or `agent_status: 'stopped'`. The alert should include the device ID and user for immediate investigation.",
              "Calculate a 14-day moving average of 'tampered' or 'disabled' events per device model and OS version. Generate a medium-severity alert for an analyst to investigate if the daily count for any specific device group exceeds this moving average by more than three standard deviations, potentially indicating a vulnerability or targeted campaign.",
              "Develop a supervised classification model to distinguish between benign agent stops (e.g., OS update, user reboot) and malicious tampering. Feature inputs should include the agent status event, time since last successful check-in, presence of a concurrent jailbreak/root detection alert, and installation of new applications within 5 minutes of the event. A 'malicious tampering' classification should trigger an automated device isolation workflow."
            ]
          },
          {
            "description": "A complete absence of expected health or status telemetry (heartbeats) from a device's MTD agent for a duration that exceeds a device-specific, statistically-derived baseline, and is not correlated with a known network outage.",
            "data_sources": [
              "MTD agent heartbeat logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MTD management console, Network sensors at internet gateways, Centralized log aggregator (SIEM).",
            "action": [
              "Create a stateful SIEM rule that tracks the last seen heartbeat for each device. If a new heartbeat log for a specific device_id is not observed within a static threshold (e.g., 60 minutes), generate a medium-severity alert to check the device's status.",
              "For each device, ingest MTD agent heartbeat logs and calculate the mean and standard deviation of the time interval between consecutive heartbeats over a 30-day period. Trigger a high-severity alert if a device fails to send a heartbeat for a duration that exceeds its `mean + (4 * standard_deviation)`. Corroborate this by querying Zeek conn.log to confirm no recent connections from the device's IP to the MTD C2 server IPs.",
              "Implement a time-series forecasting model (e.g., Prophet or an LSTM) for each device, trained on its historical heartbeat data to predict the next expected check-in time. Generate a high-severity alert when an actual check-in does not occur within the model's prediction interval, indicating a statistically significant deviation from normal behavior that is not explained by historical patterns."
            ]
          },
          {
            "description": "A compliance report from an MDM/UEM or MTD platform for an Android device shows the SELinux enforcement state is 'permissive' or 'disabled', violating the corporate security policy that requires an 'enforcing' state.",
            "data_sources": [
              "MDM/UEM compliance reports",
              "MTD security posture scan logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM and MTD administrative consoles, Centralized log aggregator (SIEM), fleet of managed Android devices.",
            "action": [
              "Configure a critical-severity SIEM alert to trigger immediately if any MDM or MTD compliance log for an Android device contains the field-value pair `selinux_status: 'permissive'` or `selinux_status: 'disabled'`. This alert should automatically place the device in a restricted network group.",
              "For each Android device, compute the daily Shannon entropy of a concatenated string of its key security settings (e.g., `selinux_status|root_status|developer_mode_enabled`). Establish a 30-day baseline of entropy values for each device. Alert if the daily entropy score for a device exceeds the 98th percentile of its baseline, indicating an abnormal number of simultaneous configuration changes.",
              "Deploy an unsupervised anomaly detection model (e.g., Isolation Forest) trained on a feature set from all managed Android devices. Features should include one-hot encoded `selinux_status`, `root_status`, and numeric features like `days_since_last_patch` and `sideloaded_app_count`. The model will assign an anomaly score to each device; devices with scores in the top 2% should be flagged for manual Tier 2 analyst review as potential outliers from the secure fleet baseline."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]