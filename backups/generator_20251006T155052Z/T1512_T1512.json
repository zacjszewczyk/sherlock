[
  {
    "information_requirement": "Is an adversary using a compromised mobile device's camera to collect video or images? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1512",
        "name": "Video Capture",
        "evidence": [
          {
            "description": "An installed mobile application requests camera permissions (`android.permission.CAMERA` or `NSCameraUsageDescription`) and is flagged as suspicious based on one or more of the following criteria: the developer's signature is not on an approved allow-list; the application is not present in the official corporate application catalog; or the application belongs to a functional category where camera access is statistically rare (e.g., prevalence is in the bottom 5th percentile for its category).",
            "data_sources": [
              "Mobile Device Management (MDM) application inventory logs",
              "App vetting platform scan results"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed corporate mobile devices, Corporate application store, Mobile Application Management (MAM) console",
            "action": [
              "Implement a scheduled query on MDM application inventory logs to identify all applications with `android.permission.CAMERA` or `NSCameraUsageDescription`. Cross-reference the identified application package names and developer signatures against a maintained allow-list of approved corporate applications and trusted developers. Generate a medium-severity alert for any application with camera permissions that is not on the allow-list.",
              "From MDM inventory logs, group all applications by their listed App Store category. For each category, calculate the percentage of apps that request camera permissions. Generate a medium-severity alert when an application requests camera access and belongs to a category where this permission's prevalence is in the bottom 5th percentile, indicating anomalous behavior relative to its peers.",
              "Develop and deploy a binary classification model (e.g., Random Forest) trained on data from an app vetting platform and MDM logs. Use features such as `{permissions_list, app_category, developer_reputation_score, market_downloads, user_rating, age_in_days, public_store_presence}`. The model's target variable is a 'malicious' or 'benign' label from historical analysis. The model should score all new and updated applications within the environment. Trigger a high-priority incident for manual reverse engineering for any application predicted as 'malicious' with a confidence score exceeding a calibrated threshold (e.g., > 0.85)."
            ]
          },
          {
            "description": "A mobile device exhibits a statistically significant anomaly in outbound network traffic volume that is correlated with indicators of covert data exfiltration. This is defined as the total outbound data volume over a 24-hour period exceeding the device's historical 99th percentile, combined with either a connection to a destination on a threat intelligence feed or the transfer of video/image file types to a non-corporate, low-reputation domain.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points for corporate Wi-Fi, VPN concentrators, and cellular data gateways",
            "action": [
              "Create a SIEM correlation rule that monitors `Zeek conn.log` for connections originating from the mobile device IP range. Trigger a high-severity alert if a connection's destination IP matches a known C2 server from a threat intelligence feed, the connection's `orig_bytes` is at least 10x greater than `resp_bytes`, and a corresponding `Zeek files.log` entry (joined by connection UID) shows a `mime_type` of `video/*` or `image/*`.",
              "For each mobile device IP, script a process to maintain a 30-day rolling baseline of total daily outbound bytes using `Zeek conn.log`. Generate a medium-severity alert if a device's 24-hour outbound data volume exceeds its own 99th percentile. Enrich the alert by correlating the destination IP with `Zeek dns.log` to identify domains with a Shannon entropy score > 3.5 (potential DGA) or, via WHOIS enrichment, domains registered within the last 60 days.",
              "Deploy a time-series anomaly detection model (e.g., SARIMA) on each device's hourly outbound byte count from `Zeek conn.log` to flag spikes that violate established daily and weekly seasonality. Separately, apply a density-based clustering algorithm (e.g., DBSCAN) to the fleet's connection metadata `{dest_ip, dest_port, protocol, total_bytes}`. Isolate and investigate small, dense clusters that do not map to known corporate or sanctioned cloud services, as these may represent undiscovered C2 infrastructure used for exfiltrating captured media."
            ]
          },
          {
            "description": "Mobile EDR telemetry shows a process invoking camera-related APIs (e.g., Android's `android.hardware.camera2`, iOS's `AVCaptureDevice`) without user interaction. This is evidenced by the application's UI being in a background state for over 60 seconds when the API call is made, or the API call not being preceded by a direct user-input event (e.g., screen tap) within a 2-second window.",
            "data_sources": [
              "Mobile EDR logs",
              "OS-level API call logs",
              "Application lifecycle event logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "High-value target mobile devices (e.g., executive leadership, system administrators) with EDR agents installed",
            "action": [
              "Configure a high-severity SIEM alert to trigger when a Mobile EDR log for a camera API call (e.g., `AVCaptureDevice.startRunning`) is recorded from a process ID that was previously logged with an 'application entered background' state within the last 60 seconds. Maintain an exception list for approved applications (e.g., 'com.zoom.us', 'com.microsoft.teams') that use this functionality legitimately to reduce false positives.",
              "For each unique mobile application, use Mobile EDR logs to compute a baseline distribution of time deltas between a user interface interaction event (e.g., 'touch_event') and a subsequent camera API call. Trigger a medium-severity alert if a camera API call occurs with a time delta that falls beyond the 99.9th percentile for that specific application, indicating a high probability of non-user-initiated camera activation.",
              "Train a Hidden Markov Model (HMM) on sequences of API calls and application lifecycle events (`app_launch`, `ui_active`, `camera_api_call`, `app_backgrounded`) using a large dataset of known benign applications to learn normal state transition probabilities. Ingest real-time event sequences from monitored devices and use the model to calculate the log-likelihood of each sequence. A sequence with a very low probability, especially one involving a direct or near-direct transition from a 'background' state to a 'camera_active' state, should trigger a high-confidence alert for immediate forensic analysis."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]