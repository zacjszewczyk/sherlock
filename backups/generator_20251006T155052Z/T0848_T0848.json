[
  {
    "information_requirement": "Has an adversary manipulated the operator's view of the industrial process? (TA0105 - Impact)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0848",
        "name": "Rogue Master",
        "evidence": [
          {
            "description": "Detection of a file write, creation, or deletion event on a file within a critical HMI application or project directory (e.g., C:\\Wonderware\\, C:\\Program Files\\Rockwell Software\\) where the event originates from a process not on a pre-approved whitelist, such as a standard HMI editor, vendor patch utility, or approved administrative script.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of HMI application servers, engineering workstations, and historian servers, specifically monitoring application directories and configuration folders.",
            "action": [
              "Implement file integrity monitoring. Create a whitelist of approved process executable paths, hashes (calculated from `NewProcessName` in Event ID 4688), and user accounts (`SubjectUserSid` from Event ID 4663) authorized to modify HMI project files. Monitor `Windows Event ID 4663` (File Write) and alert if a file in a monitored HMI directory is modified by a `ProcessName` or `SubjectUserSid` not on the whitelist.",
              "For processes that perform file modifications in HMI directories (correlate `ProcessId` between Event ID 4688 and 4663), calculate the Shannon entropy of the `ProcessName` field over a 24-hour sliding window. Establish a 30-day baseline to find the 95th percentile of this entropy score. An alert should be triggered if the entropy score spikes above this threshold, indicating an abnormal variety of processes are modifying sensitive files.",
              "Train a sequence analysis model (e.g., a Hidden Markov Model) on the normal sequences of process execution chains on HMI hosts, using `ProcessName` and `ParentProcessName` from `Windows Event ID 4688`. An anomalous sequence, such as `services.exe` spawning `cmd.exe` which then spawns `powershell.exe` to modify an HMI project file (detected via `Event ID 4663`), would be flagged by the model as a high-risk deviation from baselined normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an unauthorized device acting as a master or control server on the ICS network? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0848",
        "name": "Rogue Master",
        "evidence": [
          {
            "description": "An IP address not present on an authoritative master server whitelist is observed in Zeek logs sending ICS write/control commands over the network. Specifically, this includes Modbus function codes 5, 6, 15, or 16, or DNP3 'WRITE' function codes.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network TAPs or SPAN ports on switches within the Process Control Network (PCN), specifically monitoring traffic to and from PLCs and RTUs, and at the boundary between the PCN and the Industrial DMZ.",
            "action": [
              "Create and maintain an authoritative asset list of all authorized master server IP addresses. Implement a detection rule that monitors modbus.log for events where `func` is 'Write Single Coil' (5), 'Write Single Register' (6), 'Write Multiple Coils' (15), or 'Write Multiple Registers' (16), and dnp3.log for events where `func_name` is 'WRITE'. Trigger a high-severity alert if the `id.orig_h` (source IP) of such a command is not in the authorized master server list.",
              "For all observed ICS write commands from IPs not on the master list, calculate the hourly count of unique source IPs. Using a 30-day rolling window, establish a baseline (mean, standard deviation). Trigger a medium-severity alert if the hourly count exceeds 3 standard deviations above the mean. Additionally, trigger a high-severity alert if any single unauthorized IP sends more than 5 write commands within a 60-second window.",
              "Train a time-series anomaly detection model (e.g., LSTM, Prophet) on features extracted from historical logs (90+ days), including write command volume, frequency, and function code distribution per authorized master IP. Apply the model to live traffic. Generate a high-severity alert when the model flags a new, unauthorized source IP exhibiting command patterns that are statistical outliers compared to the learned normal behavior of legitimate masters."
            ]
          },
          {
            "description": "An outstation (e.g., PLC, RTU) IP address initiates a network connection to a destination IP address that is not on its pre-approved list of master servers, using common ICS ports such as 502/TCP (Modbus) or 20000/TCP (DNP3).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors (TAPs/SPANs) monitoring traffic from network segments containing outstations like PLCs and RTUs, and on core switches within the Process Control Network (PCN).",
            "action": [
              "For each outstation IP, create and maintain a strict whitelist of authorized destination master IPs and ports. Implement a detection rule that monitors conn.log and triggers a high-severity alert for any connection where `id.orig_h` is a known outstation and the tuple (`id.resp_h`, `id.resp_p`) is not on its specific whitelist.",
              "For each outstation IP, establish a communication baseline by calculating the rolling 7-day average of unique destination IPs it connects to on ICS ports. Trigger a medium-severity alert if the daily count of unique destination IPs for any outstation exceeds 3 standard deviations from its established baseline.",
              "Apply an unsupervised clustering model (e.g., DBSCAN, K-Means) to conn.log data, using features such as `id.orig_h`, `id.resp_h`, `id.resp_p`, `proto`, `duration`, and `orig_bytes`. Train the model on at least 30 days of data to learn normal communication clusters. Score new connections in real-time; connections classified as outliers or noise points by the model represent anomalous communication paths and must trigger a medium-severity alert."
            ]
          },
          {
            "description": "A master server's IP address is observed in network traffic (e.g., arp.log) associated with a MAC address that does not match its authoritative, statically mapped MAC address, or the IP is seen rapidly associated with multiple MAC addresses.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek arp.log",
              "Zeek dhcp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring Layer 2 traffic on all subnets containing critical ICS assets, particularly the subnet of the primary and backup master servers. Data can also be sourced from ARP tables on managed switches and routers within the PCN.",
            "action": [
              "Maintain a static, authoritative IP-to-MAC address mapping for all critical master servers. Create a detection rule that monitors arp.log. Trigger a critical-severity alert if an ARP reply is observed where a master server's IP is associated with a MAC address that does not match the authoritative mapping.",
              "For each monitored master server IP, track the number of unique MAC addresses associated with it in arp.log over a 5-minute rolling window. Trigger a high-severity alert if this count exceeds 1. Separately, calculate the Shannon entropy of the source MAC address (`src_hw`) field in ARP replies for the master's IP over 1-minute windows. Trigger a medium-severity alert if the entropy value suddenly spikes from a baseline of zero.",
              "Implement a time-series anomaly detection model to monitor the rate of ARP requests and replies for each master server's IP address from arp.log. Train the model on historical data to learn the normal baseline of ARP activity. A sudden, anomalous spike in ARP traffic volume for a master's IP, as flagged by the model, can indicate an ARP poisoning attempt and must trigger a high-severity alert."
            ]
          },
          {
            "description": "A critical master server software service on a Windows host, identified by its service name, logs a 'stopped' state (Windows Event ID 7036) outside of a scheduled and approved maintenance window.",
            "data_sources": [
              "Windows Event ID 7036"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Windows Event Log collection for SCADA/HMI servers, Primary and backup Windows-based master/control servers, Any HMI/SCADA workstations running critical master components.",
            "action": [
              "Maintain a list of critical service names for all master servers (e.g., 'FactoryTalk HMI Server', 'WinCC Runtime'). Create a detection rule to trigger a high-severity alert when a Windows Event ID 7036 is logged for a service on this list with a 'stopped' state. Suppress this alert if the event timestamp falls within a pre-defined maintenance window lookup.",
              "For each critical service, establish a 30-day baseline for the frequency of stop events (Event ID 7036). As the expected baseline is near zero, trigger a high-severity alert if the count of stop events in any 24-hour period is greater than 1, or exceeds 3 standard deviations above its long-term mean if the service is known to be unstable.",
              "Utilize a sequence analysis model to identify malicious event chains. Train the model to recognize known-bad sequences, such as a remote login from an unusual IP (Event ID 4624) followed by suspicious process creation (Event ID 4688) and then a critical service stop (Event ID 7036). Trigger a critical-severity alert when a service stop event is identified as part of a sequence flagged as malicious by the model."
            ]
          },
          {
            "description": "A new, previously unseen MAC address is observed on the Process Control Network which then begins sending ICS protocol traffic (e.g. Modbus, DNP3) consistent with a master server's behavior.",
            "data_sources": [
              "Zeek dhcp.log",
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring DHCP traffic on the PCN, core switches within the PCN, and the Industrial DMZ where asset discovery occurs.",
            "action": [
              "Monitor Zeek dhcp.log for `assigned_ip` events. If the `mac` address is not in the authoritative asset inventory, flag it as a new device. If this new device's IP subsequently appears as a source (`id.orig_h`) in Zeek modbus.log or dnp3.log sending write/control commands, generate a high-severity alert.",
              "Maintain a rolling 30-day inventory of all MAC addresses seen on the network. Calculate the daily count of new MAC addresses observed. Trigger a medium-severity alert if this count exceeds the 99th percentile of the historical daily new MAC count. Enrich the alert with any subsequent ICS protocol traffic from the new device's IP to provide context.",
              "Develop a two-stage model. First, use a device profiling model that classifies devices based on network traffic patterns (protocols used, connection frequency, destinations). When a new device appears, classify it. If it is classified as 'unknown' or its profile unexpectedly matches a 'master server' profile, pass it to a second-stage anomaly detection model that analyzes its specific ICS communication patterns for deviations from established master server baselines. Trigger an alert if the device is both new/unauthorized and exhibits anomalous master-like behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]