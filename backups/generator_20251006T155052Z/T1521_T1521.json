[
  {
    "information_requirement": "Is an adversary using a non-standard or custom encrypted channel for command and control on our managed mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1521",
        "name": "Encrypted Channel",
        "evidence": [
          {
            "description": "A TLS session originating from a managed mobile device exhibits anomalous certificate or domain attributes, such as using a self-signed certificate, a certificate from a non-approved Certificate Authority (CA), or connecting to a domain that is newly registered (e.g., within 30 days) or has a poor reputation.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Egress Points (e.g., corporate Wi-Fi gateways, VPN concentrators) instrumented with Zeek sensors. Cloud Access Security Broker (CASB) providing visibility into cloud app traffic. Mobile Device Management (MDM) platform for device and user context.",
            "action": [
              "Construct a query that joins `ssl.log` with `x509.log` on the connection UID (`uid`). Alert if `x509.validation_status` is 'self-signed certificate' or `x509.issuer` is not in a pre-defined allowlist of trusted CAs. For any alert, further join with `dns.log` on `uid` to check the `server_name` against a threat intelligence feed of known malicious or newly registered domains. Escalate alerts that have matches in threat intelligence.",
              "On an hourly basis, identify all destination server names (`server_name` from `ssl.log`) from mobile devices not observed in the previous 30 days. For each new server name, calculate the Shannon entropy of the domain string. Alert on domains with entropy scores in the top 5th percentile (indicative of Domain Generation Algorithms - DGA) or domains whose reputation score from an integrated threat intelligence provider is in the bottom 5th percentile.",
              "Develop and deploy a Random Forest classification model trained on labeled historical TLS data (`ssl.log`, `x509.log`). Engineer features such as: certificate validity duration, Shannon entropy of the certificate subject and issuer fields, public key length and algorithm, a boolean flag for self-signed status, and a boolean flag for connection to a newly registered domain. The model should score new TLS sessions in real-time. Alert when a session's predicted probability of being malicious exceeds a dynamically tuned threshold based on a target false positive rate. Periodically retrain the model on new data to prevent concept drift."
            ]
          },
          {
            "description": "A TLS client hello from a managed mobile device presents a JA3 or JA3S hash that is either not on an established allowlist of sanctioned applications or is statistically rare (e.g., prevalence below the 1st percentile) across the managed device fleet.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors (e.g., Zeek) at internet egress points and virtual network taps monitoring traffic to/from the mobile device subnet. The Mobile Device Management (MDM) platform is used as a contextual source for application and device inventories.",
            "action": [
              "Baseline and maintain an allowlist of known-good JA3 and JA3S hashes by profiling traffic from approved mobile applications over a 30-day period. Deploy a detection rule that queries `ssl.log` in real-time and alerts on any TLS session from a mobile device IP range that presents a JA3 or JA3S hash not present in the allowlist. Enrich alerts with device owner and application inventory from the MDM platform.",
              "Execute a daily batch job to query the last 30 days of `ssl.log` data. Calculate the frequency of every unique JA3 hash observed from the mobile device fleet. Identify and alert on any connection that uses a JA3 hash with a prevalence in the bottom 1st percentile, as this indicates a rare client application or library that warrants investigation. Compare the rare hash against public repositories for known malware associations.",
              "For each unique mobile device, create a feature vector representing the set of unique JA3 hashes it has used over a rolling 7-day window using one-hot encoding. Apply a density-based clustering algorithm like DBSCAN to the population of device vectors. Devices that are flagged as noise or that form very small, distinct clusters are anomalous and should be investigated, as they represent devices with unique or rare TLS fingerprinting behavior compared to their peers."
            ]
          },
          {
            "description": "An encrypted TCP connection from a managed mobile device to a single destination exhibits C2 beaconing characteristics, defined as highly periodic connections (low jitter), consistent data transfer sizes (low variance), and/or unusually long connection durations.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network flow data collected from core network switches, VPN concentrators, and network taps monitoring traffic from mobile device subnets, including traffic subject to split-tunneling policies.",
            "action": [
              "Deploy a detection rule that queries `conn.log` for TCP connections from the mobile device IP range that meet all of the following criteria: connection state is 'SF' (normal establishment and termination), duration exceeds 8 hours, and the total bytes transferred (`orig_bytes` + `resp_bytes`) is less than 10 KB. Alert on these long-lived, low-throughput connections as potential idle C2 channels.",
              "For each unique source-destination IP pair involving a mobile device, aggregate all connections from `conn.log` over a 1-hour sliding window. Calculate the standard deviation of the inter-arrival time between connections and the standard deviation of the originator payload size (`orig_bytes`). Alert on pairs where both standard deviations are below a statistically determined low threshold (e.g., bottom 5th percentile of all pairs), indicating a highly regular, machine-generated 'heartbeat' pattern.",
              "For source-destination pairs with more than 20 connections in an hour, extract the time series of inter-arrival times from the `ts` field in `conn.log`. Apply a Fast Fourier Transform (FFT) to this time series to convert it to the frequency domain. Train a one-class SVM or other anomaly detection model on the power spectrum of known benign traffic. Alert when the power spectrum of a new connection series is flagged as an anomaly, particularly when a single frequency has significantly more power than others, indicating strong periodicity."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]