[
  {
    "information_requirement": "Is an adversary manipulating transmitted data on mobile devices to cause an impact?",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1641.001",
        "name": "Transmitted Data Manipulation",
        "evidence": [
          {
            "description": "An HTTP POST request, correlated to a mobile device via its source IP, contains a sensitive data pattern, such as a cryptocurrency wallet address or IBAN, and is transmitted to a destination domain that is flagged as malicious by threat intelligence, has a low reputation score, was recently registered, or is statistically anomalous for the source device.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Threat Intelligence Platform Data",
              "DHCP Server Logs",
              "VPN Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate and guest Wi-Fi network access points, VPN concentrators, Perimeter firewalls, Web proxies, Cloud Access Security Broker (CASB)",
            "action": [
              "First, correlate `Zeek conn.log` source IPs with DHCP or VPN logs to identify IP addresses assigned to mobile devices. Second, join this with `Zeek http.log` to filter for HTTP POST requests from these devices. Third, scan the `post_body` field using regular expressions for sensitive patterns (e.g., cryptocurrency addresses, IBANs). Fourth, for any match, enrich the `host` header value against a threat intelligence feed. Trigger a high-severity alert if the destination domain is on a blocklist, has a reputation score below 40, was registered within the last 60 days, and is not on an established enterprise allowlist.",
              "For each unique mobile device, establish a 30-day rolling baseline of destination domains to which it POSTs sensitive data. Calculate the frequency of each destination. Trigger a medium-severity alert if a sensitive data pattern is sent to a destination that falls in the bottom 5% of frequency (i.e., rarer than 95% of other destinations for that user). Additionally, for POST requests to new or rare domains, calculate the Shannon entropy of the `post_body` and alert if the entropy deviates by more than 3 standard deviations from the historical baseline of entropy for similar POSTs from that device.",
              "Develop a feature set for each HTTP POST transaction, including: source IP geolocation, User-Agent string, destination domain reputation, domain age, destination ASN, POST body entropy, request size, hour of day, and day of week. Train a supervised classification model (e.g., Random Forest, Gradient Boosting) on a labeled dataset of benign and malicious transactions. Deploy the model to assign a real-time risk score ($$ [0, 1] $$) to new transactions. Trigger a high-severity alert for scores exceeding a tuned threshold (e.g., > 0.85) and flag for analyst review."
            ]
          },
          {
            "description": "A network connection from a mobile device, identified by its source IP, is made to a destination flagged as malicious by threat intelligence or exhibits anomalous metadata (e.g., domain name, TLS fingerprint, connection frequency) compared to the device's historical baseline.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Threat Intelligence Platform Data",
              "DHCP Server Logs",
              "VPN Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS resolvers, Internet gateway, Wi-Fi network sensors, Cloud Access Security Broker (CASB)",
            "action": [
              "Correlate DHCP/VPN logs with `Zeek conn.log` to identify connections from mobile devices. Enrich the destination IP and any associated domain names (from `Zeek dns.log`) and JA3/JA3S hashes (from `Zeek ssl.log`) against a threat intelligence feed. Trigger a high-severity alert if a connection is made to a known malicious C2 domain, or if the connection uses a JA3/JA3S hash associated with known malware families and is not on an allowlist.",
              "For each mobile device, maintain a 30-day rolling baseline of contacted domains and their corresponding JA3/JA3S hashes. Calculate the rate of 'first-time-seen' domains per hour for each device. Trigger a medium-severity alert if this rate exceeds the 98th percentile of the device's historical norm. Concurrently, for each device, create a set of historically observed JA3/JA3S hashes and alert if the device initiates a connection using a hash not present in its historical set.",
              "On a per-device basis, train an unsupervised anomaly detection model (e.g., Isolation Forest) using features from Zeek logs. Features should include: domain name length, domain name entropy, DNS query type (e.g., A, AAAA, CNAME), connection duration, total bytes transferred (orig_bytes + resp_bytes), JA3 hash, and destination port. The model should learn the device's normal network behavior. Deploy the model to score new connections and trigger an alert for those with high anomaly scores, indicating a significant deviation from the established baseline."
            ]
          },
          {
            "description": "An application on a managed mobile device is found to use a clipboard listener API (e.g., Android's `OnPrimaryClipChangedListener`) without a clear, user-facing justification, particularly when the application also possesses network communication permissions.",
            "data_sources": [
              "MDM/EDR application_manifest.xml",
              "MDM/EDR api_monitoring.log",
              "MDM/EDR application_inventory.csv",
              "Public App Store Scraped Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices (corporate-owned or BYOD enrolled in MDM)",
            "action": [
              "Using an MDM or EDR solution, create a policy to periodically inventory all installed applications on managed devices. For each application, parse its manifest (`application_manifest.xml`) to detect the use of clipboard listener APIs. Cross-reference this with the list of granted permissions, specifically checking for `android.permission.INTERNET`. Trigger a high-severity alert for any non-system, non-allowlisted application that possesses both capabilities.",
              "Create a data pipeline to scrape public app stores (e.g., Google Play Store) to build a statistical baseline of API usage per application category. For each application on a managed device, determine its category and check for clipboard listener usage. Trigger a medium-severity alert if an application uses a clipboard listener and belongs to a category where this functionality is statistically rare (e.g., its usage prevalence is below the 10th percentile for that category).",
              "For each application, construct a feature vector from MDM/EDR data and public app store metadata. Include features such as: count of requested permissions, list of sensitive API calls (e.g., clipboard, SMS, contacts), app category, user rating distribution, number of installs, and developer reputation. Train a supervised classification model (e.g., Logistic Regression, SVM) to generate a Potentially Unwanted Application (PUA) risk score. Trigger an analyst review for applications that receive a high PUA score where the clipboard listener feature is a primary contributing factor to the score."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]