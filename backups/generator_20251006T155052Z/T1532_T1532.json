[
  {
    "information_requirement": "Is an adversary collecting and archiving sensitive data on corporate mobile devices prior to exfiltration? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1532",
        "name": "Archive Collected Data",
        "evidence": [
          {
            "description": "An application, not on an allowlist of known-good file management or backup utilities, creates a file with an archive extension (e.g., .zip, .rar, .7z, .tar.gz). This event is suspicious when the creating application has permissions to access sensitive data (e.g., Contacts, Photos, Microphone) and is accompanied by at least one of the following: 1) the created file's size exceeds the 95th percentile of all files created on that device in the last 30 days, 2) the file is created in a directory with a Shannon entropy score greater than 3.0, or 3) the device initiates an outbound network connection sending over 1MB within five minutes of the file creation.",
            "data_sources": [
              "MTD file_creation.log",
              "MDM application_inventory.log",
              "Zeek files.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on managed mobile endpoints, focusing on user-accessible storage (e.g., Android /sdcard/, iOS 'On My iPhone/iPad') and application-private storage directories. Network egress points instrumented with Zeek for traffic correlation.",
            "action": [
              "Create a detection rule that triggers on a new file creation event from MTD logs where the file extension is in ('.zip', '.rar', '.7z', '.tar.gz'). For each trigger, join the creating process name with the MDM application inventory to check its signing certificate and permissions. Alert if the process is on a threat intelligence denylist OR if it is not on a pre-approved allowlist of backup/file-management tools AND its manifest includes permissions to access sensitive data stores (e.g., Contacts, Photo Library, Microphone).",
              "For each new archive file creation event identified by the symbolic logic, calculate the file's size percentile relative to all other files created on the same device over a 30-day rolling window. Concurrently, calculate the Shannon entropy of the file's parent directory path. Generate a high-priority alert if the file size is greater than the 95th percentile OR the path entropy is greater than 3.0. Enrich the alert by querying Zeek conn.log for connections from the device's IP where timestamp is within 5 minutes of file creation and the `orig_bytes` field is greater than 1,000,000.",
              "Develop a classification model (e.g., Gradient Boosting) to score file creation events for malicious staging. Engineer features from MTD, MDM, and Zeek logs including: file size percentile, directory path entropy, a binary flag for archive extension, one-hot encoded app permissions, a binary flag indicating if the creating app is on the utility allowlist, time of day (as a cyclical feature), and total bytes sent by the device in the 5 minutes following file creation. An event with a model-assigned probability score exceeding a tuned threshold (e.g., 0.90) should trigger an automated incident."
            ]
          },
          {
            "description": "A process, not on an allowlist of legitimate background services, exhibits sustained, anomalous resource consumption while the device screen is off. This is defined as a 60-second window where the process's average CPU utilization, memory usage, and disk write I/O all simultaneously exceed the 95th percentile of that specific application's established 30-day baseline for background ('screen off') activity.",
            "data_sources": [
              "MTD process_performance.log",
              "MDM device_health.log",
              "MDM application_inventory.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile device OS kernel, specifically process, CPU, memory, and disk I/O schedulers, with metrics collected by MDM/MTD agents.",
            "action": [
              "Query MTD performance logs for processes where the `screen_state` field is 'off'. For any such process, check its package name against a threat intelligence denylist and a curated allowlist of legitimate background processes (e.g., system services, known backup agents). Generate a high-severity alert for any match on the denylist. Generate a medium-severity alert for any process not on the allowlist that exhibits resource consumption above predefined static thresholds (e.g., CPU > 70% sustained for 60 seconds).",
              "For each unique application on each device, establish and maintain separate 30-day rolling baselines (mean, standard deviation) of CPU usage, memory consumption, and disk write I/O for both 'screen on' and 'screen off' states. Create a query that uses a 60-second sliding window to calculate the moving average for each metric. Generate an alert if, during a 'screen off' period, the moving averages for CPU, memory, AND disk I/O all simultaneously exceed 3 standard deviations above their respective 'screen off' baselines for that application.",
              "Implement a multivariate time-series anomaly detection model (e.g., LSTM Autoencoder) per device group. Train the model on historical performance vectors containing features such as `cpu_usage`, `memory_usage`, `disk_write_bytes`, `network_sent_bytes`, and a binary `screen_state` flag. In production, feed live telemetry into the model. An anomaly is detected when the model's reconstruction error for a given time window exceeds a dynamically calculated threshold (e.g., the 99th percentile of reconstruction errors on a validation dataset), flagging a deviation from the device's learned normal behavior. Correlate this alert with the running process name during the anomalous window."
            ]
          },
          {
            "description": "An application executes a suspicious sequence of API calls within a 60-second window while in a background state. The sequence must involve: 1) accessing sensitive data stores (e.g., Contacts provider, Photo Library), followed by 2) calling a compression or cryptography library (e.g., `java.util.zip`, `CommonCrypto`), and culminating in 3) initiating a network connection (e.g., `java.net.Socket`). This is considered highly anomalous if the application is not categorized as a known backup or cloud storage utility.",
            "data_sources": [
              "MTD api_call.log",
              "Application Sandboxing Logs",
              "MDM application_inventory.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Instrumentation points within the mobile OS or a sandboxed environment that hook into API calls made by user-installed applications. This includes monitoring system library calls for file system access, data access (contacts, photos), compression, cryptography, and networking.",
            "action": [
              "Define and monitor for the specific, ordered sequence of API calls in MTD logs: `[API_read_contacts -> API_zip_file -> API_socket_connect]` occurring within a 60-second window by the same process ID. For each match, query the MDM inventory to check the application's declared category. If the category is not on an allowlist of expected application types (e.g., 'File Manager', 'Cloud Storage', 'Backup'), generate a high-severity alert.",
              "For each application, build a baseline of API call sequence frequencies using n-grams (e.g., trigrams) over a 30-day period. Monitor for new API call sequences in real-time. Generate a medium-severity alert if an application executes a sequence that has a frequency in the bottom 1st percentile of its baseline, especially if the sequence contains high-risk API categories (cryptography, compression, networking). Additionally, calculate the Shannon entropy of API calls within a 5-minute sliding window for each app. Alert if the entropy score exceeds 3 standard deviations above the app's established baseline, indicating unusually random API activity.",
              "Train a sequence-based classification model (e.g., LSTM or GRU) on labeled datasets of benign and malicious API call sequences from sandboxed analysis. Each element in a sequence should be a vector representing the API call, application state (foreground/background), and time delta from the previous call. Deploy the trained model to classify new API call sequences in real-time. A sequence classified as malicious with a high confidence score (e.g., >0.95) should trigger a high-severity incident for immediate investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]