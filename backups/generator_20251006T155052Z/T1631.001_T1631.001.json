[
  {
    "information_requirement": "Is an adversary attempting to elevate privileges by injecting code into a higher-privileged process on a mobile device? (PIR)",
    "tactic_id": "TA0029",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1631.001",
        "name": "Ptrace System Calls",
        "evidence": [
          {
            "description": "An Android auditd log event contains `type=SYSCALL`, `syscall=101` (ptrace), and `a0=PTRACE_ATTACH`, where the subject process (`exe` field) is not on an established allow-list of debugging/developer tools, and the target process's effective user ID (`euid` field) is `0` (root) or `1000` (system).",
            "data_sources": [
              "Android auditd log",
              "MDM application inventory log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Central SIEM aggregating Android auditd log streams from managed mobile endpoints; Mobile Device Management (MDM) platform containing application inventories.",
            "action": [
              "Create a detection rule that triggers a high-severity alert when an `Android auditd log` event contains `syscall=101` (ptrace) and the `exe` field (source process) matches a known malicious application hash from a threat intelligence feed, and the target process `euid` is `0` or `1000`.",
              "From MDM application inventories, compile an allow-list of known developer tools and debugging applications expected to use ptrace. For all other applications, establish a 30-day baseline of hourly ptrace (`syscall=101`) call counts per application per device. Generate a medium-severity alert if an application not on the allow-list initiates a ptrace call targeting a privileged process (`euid=0` or `euid=1000`). Escalate to a high-severity alert if any application exceeds its 99th percentile of hourly ptrace calls.",
              "Develop and train a Random Forest classification model on labeled `Android auditd log` data to distinguish between benign and malicious ptrace calls. Engineer features including: source/target process UID/EUID, process name entropy, parent process name, time of day, day of the week, and a binary feature indicating if the source application is on an MDM-provided allow-list of developer tools. Deploy the model to score all `syscall=101` events in real-time. Generate a high-severity alert when an event is classified as 'malicious' with a probability score greater than 0.90, particularly when the target process `euid` is `0` or `1000`."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary attempting to evade defenses by executing malicious code within the context of a legitimate mobile application process? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1631.001",
        "name": "Ptrace System Calls",
        "evidence": [
          {
            "description": "An `Android auditd log` event with `syscall=101` (ptrace) is observed from a device's internal IP address, followed within a 5-minute window by network activity from the same source IP recorded in Zeek logs that exhibits one or more anomalous characteristics: a TCP connection to a known malicious IP, a DNS query for a known malicious domain, a DNS query with a Shannon entropy score over 3.5, or a connection to a destination port not commonly used by that device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Android auditd log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at corporate Wi-Fi egress points, VPN concentrators, and DNS resolvers; Central SIEM aggregating network and mobile endpoint logs.",
            "action": [
              "Create a SIEM correlation rule that generates a high-severity alert when an `Android auditd log` event with `syscall=101` is observed from a device IP, and within 5 minutes, a `Zeek conn.log` or `Zeek dns.log` entry from the same source IP shows a connection or query to a destination IP or domain present on a high-confidence threat intelligence feed (e.g., C2 servers).",
              "For each mobile device IP, profile network behavior over a 30-day rolling window using `Zeek dns.log` and `Zeek conn.log` to establish two baselines: 1) a set of historically observed destination ports, and 2) the 95th percentile of Shannon entropy for all requested domain names. After a `syscall=101` (ptrace) event is logged for a device, create a medium-severity alert if, within the next 10 minutes, the device initiates a connection to a destination port not in its baseline set or issues a DNS query for a domain with an entropy score exceeding its 95th percentile threshold.",
              "For each device, develop a time-series anomaly detection model (e.g., an LSTM Autoencoder) trained on 1-minute aggregations of network telemetry from Zeek logs. Features should include: total bytes sent/received, connection count, unique destination IP count, unique destination port count, and DNS query count. After a `syscall=101` (ptrace) event is observed for a device, feed its subsequent network telemetry into the model. Generate a high-severity alert if the model's reconstruction error for the device's activity exceeds the 99th percentile of its historical error distribution for three consecutive 1-minute intervals."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]