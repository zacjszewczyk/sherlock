[
  {
    "information_requirement": "Is the adversary attempting to impair or disable security defenses on our mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1629",
        "name": "Impair Defenses",
        "evidence": [
          {
            "description": "A managed mobile device, identified by its unique ID in MDM logs, fails to send a periodic heartbeat signal, resulting in the time since its last successful check-in exceeding a dynamically calculated threshold. This is observed via missing events in MDM server logs or a lack of connection sessions to the MDM server in Zeek conn.log. The absence is considered anomalous if MDM audit logs show no corresponding authorized administrative action (e.g., 'unenroll', 'decommission') for that device ID within the time window of the missed check-in.",
            "data_sources": [
              "Zeek conn.log",
              "MDM Server Logs",
              "MTD Server Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Organization's internet gateway, Wi-Fi network infrastructure, and MDM/MTD Management Servers",
            "action": [
              "Create a SIEM correlation rule that triggers if an MDM check-in event for a specific device ID is not observed within its expected interval. Upon trigger, the rule must automatically query MDM audit logs for the same device ID for events like 'unenroll', 'wipe', or 'decommission' within a +/- 15-minute window of the missed check-in. If no such authorized event is found, generate a medium-severity alert.",
              "For each managed device, ingest MDM check-in timestamps or Zeek conn.log session end times to the MDM FQDN. Calculate the 99th percentile of the time delta between consecutive check-ins over a rolling 30-day baseline. Schedule a query to run every 5 minutes that flags any device where the current time minus its last check-in time exceeds this device-specific 99th percentile value.",
              "Develop a per-device time-series forecasting model (e.g., ARIMA) using the historical sequence of check-in timestamps from MDM logs. For each device, predict the timestamp of the next expected check-in. Generate an anomaly alert if an actual check-in is not observed within the model's 95% prediction interval, which accounts for normal variability in a device's check-in pattern."
            ]
          },
          {
            "description": "Network traffic from a mobile device, identified by its source IP in Zeek logs, shows one or more of the following: (1) DNS queries (Zeek dns.log) or TLS Server Name Indication (SNI) values (Zeek ssl.log) matching domains/IPs on a mobile-specific threat intelligence feed for rooting kits or spyware; (2) a downloaded Android Application Package (.apk) or iOS App Store Package (.ipa) file whose hash (observed in Zeek files.log) matches a known malicious hash.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek ssl.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Organization's internet gateway and Wi-Fi network infrastructure",
            "action": [
              "Implement a real-time SIEM rule to match fields from Zeek logs against a mobile-specific threat intelligence list. Specifically, match `dns.log:query` and `ssl.log:server_name` against known malicious C2 domains, and match `files.log:md5` or `files.log:sha1` against known mobile malware hashes. A single match on any of these fields from a corporate mobile device's IP address generates a high-severity alert.",
              "For all HTTP/S sessions from the mobile device subnet, calculate the population rarity of the `http.log:user_agent` string. Flag connections where the User-Agent is present in less than 1% of the device fleet. Separately, for all DNS queries to non-allowlisted domains, calculate the Shannon entropy of the query's second-level domain using $$ H(X) = -\\sum_{i=1}^{n} P(x_i) \\log_2 P(x_i) $$. Raise a medium-severity alert when a device exhibits both a rare User-Agent and a high-entropy DNS query (score > 4.0) within the same 5-minute window.",
              "Deploy a pre-trained supervised classification model (e.g., Random Forest) to score network connections in real time. Engineer features for each connection from Zeek logs, including `conn.log:duration`, `conn.log:orig_bytes`, `conn.log:resp_bytes`, JA3/JA3S hashes from `ssl.log`, the entropy of `ssl.log:server_name`, and the statistical rarity of `http.log:user_agent`. Trigger a high-severity alert for investigation if a connection's maliciousness score exceeds a pre-calibrated threshold (e.g., 0.90)."
            ]
          },
          {
            "description": "An explicit event is logged by the MTD or MDM platform indicating a direct attempt to weaken the device's security posture. Qualifying events include: (1) the forceful termination of a monitored security process (e.g., MTD agent), (2) unauthorized modification of a security configuration profile (e.g., disabling 'Google Play Protect'), or (3) an application being granted a high-risk permission (e.g., Android 'Device Administrator') without an associated and approved IT change request.",
            "data_sources": [
              "Mobile Threat Defense (MTD) Agent Logs",
              "Mobile Device Management (MDM) Compliance Logs",
              "IT Change Management System Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device endpoints and MDM/MTD Management Servers",
            "action": [
              "Configure a SIEM rule to generate a high-severity alert upon ingestion of specific critical event IDs from MDM/MTD logs. Key events include 'Security Agent Process Terminated', 'Compliance Policy Violation: Google Play Protect Disabled', and 'High-Risk Permission Granted: Device Administrator'. Before alerting, the rule must query the IT change management system's logs or API for a ticket authorizing this change for the specific user/device in the preceding 24 hours. If no authorization is found, the alert is fired.",
              "Establish a 30-day rolling baseline for the rate of compliance violation alerts and high-risk permission grants, creating separate baselines for different user roles (e.g., 'Developers', 'Sales', 'Executives'). Implement a scheduled hourly query to identify any user or device whose event count in the past 24 hours exceeds three standard deviations above the mean for their assigned peer group. This flags users exhibiting anomalously risky behavior compared to their colleagues.",
              "Integrate event streams from MDM/MTD, VPN, and network logs into a User and Entity Behavior Analytics (UEBA) platform. Utilize a sequence-based anomaly detection model (e.g., an LSTM autoencoder) to learn normal sequences of user and device activities. The system should score the reconstruction error of observed event sequences. Flag sequences with a high anomaly score for analyst review, such as '[Successful VPN login from new country] -> [MDM logs new app installed from unknown source] -> [App granted Device Admin rights] -> [MTD agent misses scheduled check-in]'."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]