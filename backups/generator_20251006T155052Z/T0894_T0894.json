[
  {
    "information_requirement": "Is an adversary using trusted host or application binaries to execute malicious commands or payloads on ICS systems? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0894",
        "name": "System Binary Proxy Execution",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) for a trusted ICS application (e.g., ProjectLoader.exe) or a native Windows binary (e.g., rundll32.exe, mshta.exe) exhibits command-line arguments that contain suspicious patterns such as base64-encoded strings (-enc), remote script execution syntax (e.g., javascript:, vbscript:), script file extensions (.js, .vbs, .ps1), or references to non-standard network locations (e.g., http://, \\\\<untrusted_ip_range>).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA Servers, Historian Servers, Data Gateways within the OT network, and Jump Hosts used for remote OT access.",
            "action": [
              "Query Windows Event ID 4688 logs for process creation events where the parent process is a known ICS application or a LOLBAS binary. Apply a ruleset that searches the CommandLine field for IOCs, including known malicious strings ('IEX', 'DownloadString'), regular expressions matching base64 encoding, or calls to scripting engines with remote file arguments. Alert on any match.",
              "For each unique trusted process name (e.g., HMI_App.exe), establish a 30-day rolling baseline of its command-line argument length and Shannon entropy from Windows Event ID 4688 data. Calculate the 99th percentile for both metrics. For each new process creation event, if the command-line length or entropy exceeds its respective 99th percentile threshold, flag it for review as a statistical anomaly.",
              "Train a supervised classification model (e.g., Logistic Regression, Gradient Boosting) using TF-IDF vectorization on a labeled dataset of benign and malicious command-line arguments specific to the ICS environment. For each new process creation event (Windows Event ID 4688), extract the CommandLine field and classify it. Alert on any command line classified as malicious with a confidence score above a predefined threshold (e.g., 0.90)."
            ]
          },
          {
            "description": "A trusted ICS application or native Windows binary initiates an outbound network connection, confirmed by correlating the Process ID from a process creation event (Windows Event ID 4688) with a network flow event (Zeek conn.log). The connection is considered anomalous if it targets an IP address outside the established OT/IT network boundary, uses a protocol incongruous with the process's known function (e.g., an HMI application using IRC or DNS-over-HTTPS), or features a TLS fingerprint (JA3/JA3S) not seen in the baseline for that process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Network Segments (e.g., Control Network, Process Network), Industrial Demilitarized Zone (IDMZ), SCADA Firewalls, and network taps at key egress/ingress points.",
            "action": [
              "Correlate Windows Event ID 4688 with Zeek conn.log by process GUID/ID and source IP. Maintain a strict whitelist of approved destination IP addresses, subnets, and protocols for each critical ICS application. Alert if a whitelisted process initiates a connection to a destination or using a port/protocol not on its explicit whitelist. Simultaneously, match destination IPs and domains (from Zeek dns.log) against a threat intelligence feed of known C2 servers.",
              "For each trusted process, profile its network behavior over a 30-day baseline using Zeek logs. Calculate the frequency of destination ports, protocols, and JA3/JA3S TLS fingerprints (from Zeek ssl.log). Alert when a process initiates a connection using a port, protocol, or fingerprint that is new or falls in the bottom 5th percentile of rarity. Additionally, calculate the Shannon entropy of DNS query names (from Zeek dns.log) and alert on queries exceeding the 95th percentile, indicating potential DGA activity.",
              "Train an unsupervised anomaly detection model (e.g., Isolation Forest) on a baseline of normal network flow data from Zeek conn.log, attributed to trusted processes. Use features such as proto, resp_p, duration, orig_bytes, resp_bytes, and a categorical representation of the destination ASN. Apply the model to live traffic and alert when any connection is assigned a high anomaly score, indicating a significant deviation from learned normal communication patterns."
            ]
          },
          {
            "description": "A parent-child process relationship is observed in process creation logs (Windows Event ID 4688) where a trusted ICS application or a critical Windows system process (e.g., services.exe, lsass.exe, winlogon.exe) spawns an unauthorized child process. Unauthorized children include command shells (cmd.exe, powershell.exe), script interpreters (wscript.exe, cscript.exe), or known dual-use binaries (psexec.exe, bitsadmin.exe, rundll32.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA Servers, Historian Servers, Jump Hosts, and Domain Controllers within the OT network.",
            "action": [
              "Develop and maintain a strict whitelist of all legitimate parent-child process pairs observed in the stable ICS environment, sourced from Windows Event ID 4688 logs. Create a detection rule that generates a high-severity alert if any process creation event occurs where the parent-child pair (e.g., ParentProcessName and NewProcessName) is not on the established whitelist. For example, alert if SCADA_service.exe spawns powershell.exe.",
              "Over a 60-day period, build a frequency table of all unique parent-child process pairs from Windows Event ID 4688 logs. For each new process creation event, if the observed parent-child pair is either entirely new to the environment or is extremely rare (e.g., falls in the bottom 1st percentile of observed frequency), generate an alert. This is especially critical if the child process is a command-line interpreter or administrative tool.",
              "Model process execution chains as a directed graph, where nodes are unique processes and edges represent parent-child relationships. Train a graph-based anomaly detection algorithm (e.g., GraphSAGE, GCN) on the baseline process graph to learn normal structural properties. For each new process creation, update the graph and score the new edge/node. Alert on structural anomalies, such as a trusted ICS application spawning a process type it has never parented before or the creation of an unusually long or deep process chain originating from a trusted binary."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]