[
  {
    "information_requirement": "Is an adversary manipulating SMS messages on our mobile devices? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1582",
        "name": "SMS Control",
        "evidence": [
          {
            "description": "An application is configured as the default SMS handler, and its package name is not on an approved application allowlist, or the package name is present on less than 1% of the total mobile device fleet. Adversaries may set a malicious app as the default handler to intercept, modify, or delete messages by registering for the SMS_DELIVER broadcast intent and writing to the device's SMS content provider [1][2].",
            "data_sources": [
              "MDM device_settings.log",
              "MDM app_inventory.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Mobile Device Management (MDM) and Mobile Threat Defense (MTD) Platforms; SIEM Log Aggregation Layer",
            "action": [
              "Create and maintain an allowlist of approved SMS application package names (e.g., `com.google.android.apps.messaging`, `com.samsung.android.messaging`). Ingest MDM device setting logs into the SIEM. Write a detection rule that queries for the `default_sms_handler` field and alerts when its value is not present in the allowlist.",
              "Using MDM application inventory logs, execute a scheduled query to aggregate and count all package names configured as the `default_sms_handler` across all devices. Calculate the prevalence percentage for each package name. Generate an alert for any device where the handler's prevalence falls below a statistically determined low-prevalence threshold (e.g., present on <1% of devices, or below the 1st percentile).",
              "Develop a binary classification model (e.g., Random Forest, Gradient Boosting) using features from MDM application inventory data such as requested permissions, developer signature, app store category, user ratings, install source (e.g., official store vs. sideloaded), and age of the app to predict a `is_legitimate_sms_handler` label. Deploy the model to periodically score all active default SMS handlers. Generate an alert for any application classified as 'not legitimate' with a model confidence score greater than $$ 0.9 $$."
            ]
          },
          {
            "description": "An application is granted `android.permission.SEND_SMS` or `android.permission.RECEIVE_SMS` permissions, where the application's stated category (e.g., 'Games', 'Utilities') does not functionally justify this access, or its complete set of requested permissions is a statistical outlier compared to legitimate applications in the same category, indicating potential over-permissioning to enable malicious activity [1].",
            "data_sources": [
              "MDM app_permissions.log",
              "MDM app_inventory.log",
              "Application Risk Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized Mobile Device Management (MDM) Platform; Application Risk Intelligence Feeds; SIEM Log Aggregation Layer",
            "action": [
              "Define a mapping of application categories to a boolean `sms_permission_expected` flag (e.g., 'Communication': true, 'Games': false, 'Social': true). Query MDM logs for all applications with `android.permission.SEND_SMS` or `android.permission.RECEIVE_SMS`. Join with application inventory data and alert if an application has these permissions but its category is mapped to `false`.",
              "For each application category (e.g., 'Communication'), establish a baseline 'permission vector' of commonly requested permissions from the top 50 most prevalent apps. For each new or updated app with SMS permissions, calculate the Jaccard similarity between its permission set and the baseline vector for its category. Alert on any application with a similarity score below a defined threshold, such as $$ J(A, B) < 0.5 $$, indicating an unusual and potentially risky combination of permissions.",
              "Vectorize the complete set of requested permissions for all applications in the fleet using a one-hot encoding scheme. Apply a density-based clustering algorithm (e.g., DBSCAN) to these permission vectors. Manually investigate applications that the algorithm flags as noise points or that fall into small, isolated clusters, as these represent rare and potentially malicious permission combinations not seen in the general population of apps."
            ]
          },
          {
            "description": "A device sends an outgoing SMS message where the destination number matches a known malicious indicator, or the volume, frequency, or destination of outgoing SMS messages from a user deviates by more than three standard deviations from their established behavioral baseline. This can indicate C2 communications, smishing-based malware propagation, or premium-rate SMS fraud.",
            "data_sources": [
              "Carrier SMS Detail Records",
              "Threat Intelligence Phone Number IOC Feed",
              "MDM app_inventory.log",
              "MDM device_state.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Carrier Billing and Usage Portals; Threat Intelligence Platform (TIP); Mobile Device Management (MDM) Platform; SIEM Log Storage",
            "action": [
              "Continuously ingest a threat intelligence feed of known malicious phone numbers (IOCs) associated with smishing, fraud, or C2 into the SIEM. Create a correlation rule that compares the `destination_number` field from ingested Carrier SMS Detail Records against the IOC list in real-time. Generate a high-severity alert upon a match.",
              "For each user, create a 90-day rolling baseline profile from Carrier SMS Detail Records, calculating metrics such as hourly/daily SMS volume, count of unique destination numbers, and Shannon entropy of destination country codes. Generate an alert if a user's daily SMS count exceeds the 98th percentile of their historical distribution, or if an SMS is sent to a country code not present in their baseline profile, or if the hourly entropy of destination numbers spikes.",
              "For each user, train a time-series anomaly detection model (e.g., an LSTM autoencoder) on their historical hourly SMS counts to learn their normal communication rhythm. Deploy the model to score live data streams and alert when the reconstruction error for a given time window surpasses a dynamically adjusted threshold. Upon alert, automatically enrich the finding with contextual data from MDM logs, such as app installations or permission changes within 24 hours of the anomaly, and device integrity status (e.g., rooted, jailbroken)."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]