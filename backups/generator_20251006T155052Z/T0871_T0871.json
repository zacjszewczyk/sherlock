[
  {
    "information_requirement": "Is an adversary leveraging native ICS APIs for unauthorized execution on control system devices? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0871",
        "name": "Execution through API",
        "evidence": [
          {
            "description": "A network connection to a known ICS protocol port (e.g., Modbus/502, DNP3/20000, S7/102) on a control device (PLC, RTU, IED) originates from a source IP address not present on a pre-defined, asset-specific allowlist for that device and port.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network ingress/egress points between the Enterprise Network (Level 4/5) and Process Control Network (Level 3), and network segments within the PCN containing Engineering Workstations (EWs), Human-Machine Interfaces (HMIs), and critical control devices (PLCs, RTUs).",
            "action": [
              "Create and maintain an asset-based allowlist of authorized source IPs (e.g., specific EWs, HMIs) for each destination control device IP and its designated ICS protocol port. Using Zeek conn.log, create a SIEM rule to alert on any connection where id.orig_h is not on the allowlist for the corresponding id.resp_h and id.resp_p. For any alert, correlate the source IP and timestamp with Windows Event ID 5156 (WFP Connection Permitted) and Windows Event ID 4688 (Process Creation) on the source host to identify the originating process.",
              "For each control device (destination IP), establish a 30-day rolling baseline of unique source IPs observed connecting to it per hour from Zeek conn.log. Alert if the count of unique source IPs in a given hour exceeds the 99th percentile for that specific device, as this may indicate a network scan or unauthorized devices attempting to communicate.",
              "Train an Isolation Forest model on historical Zeek conn.log data using features such as source/destination IP, destination port, protocol, connection duration, and total bytes transferred. Flag connections identified as anomalies by the model for analyst review, prioritizing those involving known ICS ports and critical control devices."
            ]
          },
          {
            "description": "The use of a high-risk or write-capable ICS function code (e.g., Modbus 'Write Single/Multiple Coil/Register', S7comm 'PLC Stop/Program Download', DNP3 'Control Operate') is observed in network traffic, particularly when originating from an unauthorized source or outside a scheduled maintenance window.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps or SPAN ports deployed at critical choke points within the Process Control Network (Level 2), such as in front of safety PLCs, between HMI/EWS and control devices, and on links to Historian servers.",
            "action": [
              "Define a list of critical/write-capable ICS function codes (e.g., Modbus FC 5, 6, 15, 16; S7comm 'Stop', 'Start'; DNP3 'Control Operate'). Using Zeek protocol logs (modbus.log, s7comm.log, dnp3.log), create a SIEM rule to generate a high-severity alert whenever these function codes are observed, enriching the alert with asset data for the source/destination and cross-referencing against a maintenance schedule calendar to filter authorized activity.",
              "For each source-destination asset pair, establish a 60-day baseline of function code usage frequency from Zeek protocol logs. Calculate the Shannon entropy of the function code distribution within a rolling 10-minute window. Alert if the entropy drops below the 5th percentile, indicating a potential repetitive, automated attack, or if the Z-score for any single high-risk function code's frequency exceeds 3.0 standard deviations from its norm.",
              "Develop a Hidden Markov Model (HMM) for each critical industrial process, trained on the typical sequences of function codes observed between a controlling HMI/EWS and its target PLC/RTU. The model learns the legitimate operational states (e.g., 'idle', 'running', 'startup'). Alert when an observed sequence of function codes has a very low probability under the trained model, indicating a deviation from normal operational logic that could represent malicious execution."
            ]
          },
          {
            "description": "An authorized source-destination pair (e.g., HMI-to-PLC) exhibits a communication pattern with anomalous volume, timing, or sequencing of API calls, indicating the authorized host may be compromised and used for malicious execution.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the Process Control Network (Level 2) that connect authorized Engineering Workstations (EWs) and Human-Machine Interfaces (HMIs) to their respective control devices (PLCs, RTUs).",
            "action": [
              "Based on operator knowledge, define and implement rules for specific 'anti-patterns' or forbidden sequences of commands within a short time window (e.g., a 'PLC Stop' command immediately followed by a 'Program Download' from a non-EWS source, or a write command to a safety system outside of a planned shutdown). Alert on these logically inconsistent or high-risk command chains that violate established safe operational procedures.",
              "For each authorized source-destination ICS communication pair, baseline the inter-arrival time of requests using timestamps from Zeek protocol logs. Alert if the mean inter-arrival time in a 5-minute window drops below the 1st percentile of the historical baseline, which could indicate an automated script issuing commands much faster than a human operator.",
              "Train a Long Short-Term Memory (LSTM) autoencoder on time-series data representing normal communication volume (e.g., bytes transferred per second from conn.log) and command frequency (e.g., function codes per second from protocol logs) between authorized asset pairs. The model learns to reconstruct the normal 'rhythm' of communication. Alert when the reconstruction error for live traffic exceeds a dynamically learned threshold, indicating the current communication pattern does not match known normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]