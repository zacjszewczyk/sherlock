[
  {
    "information_requirement": "Is an adversary attempting to impact our industrial process by denying operator control? (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0813",
        "name": "Denial of Control",
        "evidence": [
          {
            "description": "A sudden, sustained increase in network traffic volume or connection rate to a critical ICS device (e.g., PLC, RTU), where the traffic exhibits characteristics of a denial of service attack. Specifically, this is identified by a concurrent spike in connection states indicative of resource exhaustion (e.g., 'S0', 'REJ', 'RSTO' in Zeek conn.log), a significant drop in source IP entropy, and traffic targeting known ICS protocol ports (e.g., 502/TCP for Modbus, 20000/TCP for DNP3, 102/TCP for S7Comm).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network boundary points of Level 1 (Control) and Level 2 (Supervisory) ICS network segments, including firewalls and network taps monitoring traffic to PLCs, RTUs, HMIs, and SCADA servers.",
            "action": [
              "Implement a detection rule that triggers when a source IP not on an established `External_Comms_Whitelist` initiates more than a threshold (e.g., 100) of connections with a `conn_state` of 'S0', 'REJ', or 'RSTO' to a single IP from a list of `Critical_ICS_Assets` within a 60-second window. The rule must also verify that the destination port (`id.resp_p`) matches common ICS protocols (e.g., 502, 20000, 102, 44818).",
              "For each critical ICS asset, establish a 30-day baseline of 5-minute rolling averages for `connection_count`, `sum(orig_bytes)`, and the Shannon entropy of source IPs $$ entropy(id.orig_h) $$. Generate an alert if `connection_count` or `sum(orig_bytes)` exceeds its 99th percentile by a factor of 5, while $$ entropy(id.orig_h) $$ concurrently drops below its 10th percentile for at least two consecutive 5-minute intervals.",
              "Deploy a time-series anomaly detection model (e.g., LSTM autoencoder) trained on per-minute aggregations of network traffic features for each critical ICS asset. The feature set must include $$ log_{10}(sum(orig_bytes)) $$, $$ log_{10}(connection_count) $$, $$ entropy(id.orig_h) $$, $$ entropy(id.orig_p) $$, and ratios for connection states like $$ ratio_S0_conns $$ and $$ ratio_REJ_conns $$. After training on at least 30 days of normal operational data, trigger an alert when the model's reconstruction error for an asset surpasses a dynamic threshold (e.g., 3 standard deviations above the mean error) for more than 3 consecutive minutes."
            ]
          },
          {
            "description": "Observation of high-risk ICS control commands (e.g., Modbus 'Write' functions, S7Comm 'Stop CPU', DNP3 'Operate') targeting critical PLCs or RTUs. The activity is confirmed as anomalous by meeting one or more of the following conditions: the command originates from an unauthorized source IP, user account, or host process; the command is issued at a time statistically inconsistent with the user's baseline; or the command sequence deviates from established operational patterns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), SCADA servers, and network taps monitoring Level 2 (Supervisory) to Level 1 (Control) network traffic, as well as Active Directory/Identity Management systems for user authentication.",
            "action": [
              "Implement a rule that queries ICS protocol logs (e.g., `Zeek modbus.log`, `s7comm.log`) for high-risk commands (e.g., Modbus function codes 5, 6, 15, 16; S7Comm 'Stop CPU' job). Correlate the source IP (`id.orig_h`) with Windows logon (Event ID 4624) and process creation (Event ID 4688) events to identify the originating user and process. Alert if the combination of (User, Workstation_IP, Process_Name, Target_PLC_IP, Command_Type) does not match a pre-defined whitelist of authorized operations.",
              "For each authorized (User, Workstation, Target_PLC) triplet, create a historical baseline of command n-gram sequences (n=3) and their probabilities over a 90-day period. Additionally, baseline the time-of-day and day-of-week distribution for command issuance. Generate an alert if a user issues a command sequence with a probability below the 1st percentile of their historical activity, or if a high-risk command is issued more than 2 standard deviations outside their typical operational hours.",
              "Implement an unsupervised clustering model (e.g., DBSCAN) to profile historical ICS command sessions as part of a User and Entity Behavior Analytics (UEBA) framework. Define a session as a sequence of commands from a single user/workstation to a single PLC within a 15-minute window. Use features such as `command_count`, `read_write_ratio`, `command_type_entropy`, and `mean_inter_command_time`. Alert when a new session is classified as a noise point (outlier) by the model, indicating a significant deviation from all known normal behavior clusters."
            ]
          },
          {
            "description": "One or more application crash (Windows Event ID 1000) or hang (Windows Event ID 1002) events involving HMI or SCADA client software on an operator workstation. The event is temporally correlated with preceding (e.g., within 60 seconds) anomalous network activity directed at the workstation. This precursor activity may include a high rate of connections from a single source, traffic with high payload entropy, or the transfer of unexpected file types (e.g., executables, scripts).",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1002",
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek dce_rpc.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Operator workstations (Level 2), Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), and network taps monitoring traffic to and from these critical endpoints within the ICS network.",
            "action": [
              "Create a correlation rule that triggers on Windows Event ID 1000 or 1002 where the `Faulting_Application_Name` matches a list of critical HMI/SCADA executables. Upon triggering, automatically query network logs (e.g., Zeek) for the 5 minutes preceding the event timestamp for the affected host's IP. Escalate to a high-severity alert if the query reveals: a connection from an IP on a threat intelligence blocklist, an executable file transfer (`.exe`, `.dll`, `.ps1`) from an untrusted source in `files.log`, or unauthorized `dce_rpc.log` or `rdp.log` activity.",
              "Upon detection of an HMI software crash (Event ID 1000/1002), automatically script an analysis of the preceding 5 minutes of network traffic to that host from `Zeek conn.log`. For each source IP, calculate the Shannon entropy of the connection payloads (`orig_bytes`) and the rate of new connections. Compare these values to a 30-day rolling baseline for that specific source-destination pair. Alert if the payload entropy or the connection rate for any source IP exceeds its 99th percentile.",
              "Train and deploy a supervised classification model (e.g., Gradient Boosting) to predict the likelihood that a 60-second window of network traffic will cause an HMI crash. Create a labeled dataset by identifying historical HMI crash events (label=1) and sampling benign 60-second windows (label=0). Use features derived from `conn.log` for the time window, including `total_bytes`, `connection_count`, `avg_duration`, `entropy_of_source_ips`, and `ratio_of_rejected_connections`. Score live traffic to HMIs in real-time and alert when the model's predicted crash probability exceeds a defined threshold (e.g., 0.90)."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]