[
  {
    "information_requirement": "Is an adversary using foreground services to establish persistence on a corporate mobile device? (TA0028 - Persistence)",
    "tactic_id": "TA0028",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1541",
        "name": "Foreground Persistence",
        "evidence": [
          {
            "description": "An application requests the 'android.permission.FOREGROUND_SERVICE' permission in its manifest and is observed invoking the startForeground() method via runtime logs. This behavior is considered anomalous if the application is not on a pre-approved allowlist or its service runtime duration is a statistical outlier compared to its application category.",
            "data_sources": [
              "MDM Application Manifest Scan",
              "Android Logcat"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) servers; corporate application store and vetting pipeline; log aggregation platform ingesting Android Logcat data.",
            "action": [
              "Create a rule to query MDM application inventories for newly installed applications. For each new app, parse its manifest for the 'android.permission.FOREGROUND_SERVICE' permission. If the permission exists and the app's package name is not on a pre-defined allowlist, generate a high-priority alert.",
              "From ingested Android Logcat data, group foreground service events by application category (e.g., Navigation, Media). For each category, calculate the 99th percentile of service runtime durations over a 30-day rolling window. Generate a medium-priority alert for any application whose service runtime exceeds its category's 99th percentile threshold.",
              "Train a Random Forest classification model using features from MDM app metadata (e.g., permission count, app source, user ratings, age on app store). Score new applications that request the FOREGROUND_SERVICE permission. If an app's malicious probability score exceeds 0.9, automatically trigger an MDM quarantine action and generate a critical incident for immediate review."
            ]
          },
          {
            "description": "A TCP connection from a mobile device IP to a single external IP address is observed with a duration greater than 4 hours and a total data transfer (originated + responded) below the 5th percentile of normal traffic for that device, indicating a potential 'low and slow' command and control channel.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM device inventory"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors monitoring corporate Wi-Fi and VPN egress points; core DNS resolvers; MDM servers for IP-to-device mapping.",
            "action": [
              "Create a scheduled query to join Zeek conn.log with an MDM inventory to identify mobile device IPs. Alert when a connection from a mobile IP has a 'duration' greater than 14400 seconds and the destination IP ('id.resp_h') matches a threat intelligence feed of known C2 servers. Enrich the alert with the associated DNS query for the C2 domain from Zeek dns.log.",
              "For each mobile device, use Zeek conn.log to establish a 30-day baseline of connection statistics. Calculate the 95th percentile for 'duration' and the 5th percentile for total bytes ('orig_bytes' + 'resp_bytes'). Generate a medium-priority alert when a new connection's duration exceeds the 95th percentile while its total byte count is below the 5th percentile.",
              "For each device, generate a time series of the hourly count of long-duration (>1hr) and low-byte (<1KB) connections from Zeek conn.log. Apply a time-series anomaly detection algorithm, such as Seasonal-Hybrid ESD (S-H-ESD), to this data stream. An anomaly identified by the model, representing a statistically significant deviation from the device's normal connection pattern, should generate an alert for analyst investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary evading background process restrictions on mobile devices to access sensors? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1541",
        "name": "Foreground Persistence",
        "evidence": [
          {
            "description": "A sequence of connections from a mobile device to a single external IP address demonstrates non-random, periodic timing, resulting in a Shannon entropy of inter-arrival times below 1.5. This low entropy suggests automated C2 beaconing rather than human-driven activity.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at traffic egress points; core DNS resolvers; network taps monitoring Wi-Fi access points for mobile devices.",
            "action": [
              "Create a rule to scan Zeek http.log for requests from mobile device IPs where the 'user_agent' matches known malware signatures or is a generic client (e.g., 'Dalvik/2.1.0', null). If the destination domain, found via DNS correlation in Zeek dns.log, has a domain age of less than 30 days, escalate the alert priority.",
              "Using Zeek conn.log, group connections by source (mobile IP) and destination IP in 1-hour windows. For groups with over 10 connections, calculate the time deltas between each connection. Compute the Shannon entropy of these time deltas. Generate an alert if the entropy score is below 1.5, indicating highly predictable, machine-generated beaconing.",
              "On an hourly basis, featurize connections from mobile devices using attributes from Zeek conn.log (e.g., 'duration', 'orig_bytes', 'id.resp_p') and the standard deviation of inter-arrival times to the same destination. Apply a pre-trained density-based clustering algorithm like DBSCAN to identify normal behavior clusters. Flag any connection classified as a noise point (outlier) by the model for analyst review as a potential anomalous C2 communication."
            ]
          },
          {
            "description": "An application, identified via MDM logs as using a foreground service, initiates a network connection where the total data sent ('orig_bytes' from Zeek conn.log) in a 24-hour period exceeds 3 standard deviations from its own 30-day historical baseline for that specific device, suggesting potential data exfiltration.",
            "data_sources": [
              "MDM Application Runtime Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM management servers for application runtime context; network sensors monitoring corporate Wi-Fi and VPN connections from mobile devices.",
            "action": [
              "Create a real-time correlation rule joining MDM application data (mapping device IP to running foreground services) with Zeek conn.log. Generate a high-priority alert if an application using a foreground service communicates with a destination IP present in a threat intelligence feed of known exfiltration endpoints or anonymous file-sharing services.",
              "For each unique application on each device, establish a 30-day rolling baseline of the daily sum of outbound bytes ('orig_bytes') from Zeek conn.log. Calculate the mean and standard deviation for this metric. Generate a medium-priority alert if an application's daily data upload volume exceeds 3 standard deviations above its historical mean for that device.",
              "Develop a Gradient Boosting Regressor model to predict the expected daily data upload volume for each device, using features like user role, device type, and day of the week. Continuously monitor the model's prediction residuals (actual minus predicted volume). A sustained, large positive residual for a device indicates an anomalous data transfer event that should be flagged as a high-severity alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-10-01",
    "version": "1.5",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]