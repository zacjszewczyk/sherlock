[
  {
    "information_requirement": "Has an adversary compromised a host in our ICS environment via a drive-by attack? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0817",
        "name": "Drive-by Compromise",
        "evidence": [
          {
            "description": "A web browser process (e.g., chrome.exe, iexplore.exe) on a critical ICS asset, such as an engineering workstation or HMI, spawns a child process not typically associated with web browsing. Anomalous child processes include command shells (cmd.exe, powershell.exe), script interpreters (wscript.exe, cscript.exe), or unsigned executables executing from a temporary or user-writable path such as `C:\\Users\\<user>\\AppData\\Local\\Temp\\`.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint hosts including Engineering Workstations, Human-Machine Interface (HMI) terminals, operator consoles, and data historians within the Supervisory Control (Purdue Level 2) and Site Operations (Purdue Level 3) networks where process creation logs are collected.",
            "action": [
              "Create a detection rule that triggers when a Parent Process Name (e.g., chrome.exe, iexplore.exe, msedge.exe) from Windows Event ID 4688 or Sysmon Event ID 1 spawns a child process from a watchlist of suspicious binaries (e.g., cmd.exe, powershell.exe, wscript.exe, cscript.exe, mshta.exe). Enhance the rule to alert on command lines containing high-confidence patterns like 'mshta.exe http://', 'rundll32.exe javascript:', or PowerShell download cradles.",
              "For each asset group (e.g., HMIs, Engineering Workstations), build a statistical baseline of all parent-child process relationships observed over a 30-day period. Trigger an alert when a web browser process spawns a child process whose frequency falls below the 1st percentile for that asset group. Additionally, calculate the entropy of command-line arguments and alert if the entropy exceeds 3 standard deviations from the mean for that specific parent-child pair.",
              "Train a Random Forest classification model using features from process creation events (e.g., parent/child process names and paths, command-line length and entropy, parent process integrity level). Deploy the model to score new browser-spawned child processes in real-time, generating a high-priority alert for any event with a maliciousness probability score exceeding a tuned threshold (e.g., > 0.85), particularly on critical ICS assets."
            ]
          },
          {
            "description": "Network traffic from an ICS or supporting corporate host shows DNS queries or direct connections to domains that are known malicious, newly registered (e.g., created within the last 30 days), algorithmically generated (high character entropy), or use TLS certificates with anomalous attributes such as being self-signed, having an unusually short validity period, or having a name mismatch.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network traffic sensors at egress points, internal DNS resolvers, ICS network gateways, and the DMZ between IT and OT networks (Purdue Level 3.5) where Zeek or equivalent network security monitoring logs are generated.",
            "action": [
              "Correlate Zeek logs by connection UID. Alert when a DNS query (`dns.log`) resolves to a domain on a threat intelligence feed or a domain registered within the last 30 days. Additionally, alert if the TLS certificate (`x509.log`) is self-signed, uses a weak key algorithm (e.g., RSA < 2048 bits), or if the server name in the DNS query does not match any Subject Alternative Name (SAN) in the certificate.",
              "For each DNS query in `dns.log`, calculate the Shannon entropy of the query name's domain part. Flag queries with an entropy score in the top 2nd percentile as potential Domain Generation Algorithm (DGA) activity. Separately, profile the JA3 and JA3S TLS fingerprints from `ssl.log` across the environment and alert on the use of any hash that is new or falls in the bottom 1st percentile of frequency, indicating a non-standard client or server.",
              "Construct a bipartite graph of internal hosts and the external domains they query. Apply a community detection algorithm (e.g., Louvain Modularity) to find clusters of internal assets (e.g., multiple HMIs) communicating with the same set of rare external domains. Such clusters are a strong indicator of a targeted watering hole attack and should be prioritized for investigation."
            ]
          },
          {
            "description": "A web browser on an ICS or corporate host downloads a file with an executable MIME type (e.g., application/x-dosexec), a suspicious script extension (.ps1, .vbs), a low-prevalence hash, or a mismatch between its apparent file type and its true content type (e.g., an executable file named 'report.pdf'). The download originates from a low-reputation or uncategorized source domain.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 11 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, internet gateway proxy servers, ICS network gateways, and local download folders (e.g., `%USERPROFILE%\\\\Downloads`) on engineering workstations and HMIs.",
            "action": [
              "Create a rule that inspects `files.log` for downloads with executable MIME types (e.g., 'application/x-dosexec') or script extensions. Automatically query the file's hash against a reputation service and alert if the detection ratio is greater than a low threshold (e.g., > 1). Correlate the file write on the endpoint using the hash from `files.log` and Sysmon Event ID 11 to confirm the local file path.",
              "Establish a 30-day baseline of MIME types served by each source domain (`http.log` host field). Generate an alert if a domain that typically serves benign content (e.g., 'text/html') suddenly serves a high-risk file type (e.g., 'application/x-dosexec'). Additionally, calculate the byte entropy of downloaded files and flag any file whose entropy is > 3 standard deviations from the mean for its given MIME type, suggesting packing or encryption.",
              "Train a Gradient Boosting classifier to predict malicious file downloads. Use features derived from `http.log` (source domain reputation, URI length/entropy), `files.log` (MIME type, file size, file entropy), and `conn.log` (duration, bytes transferred), enriched with external data (domain age, file hash reputation). Deploy the model to score all downloads and create alerts for those exceeding a probability threshold (e.g., > 0.80)."
            ]
          },
          {
            "description": "An outbound HTTP/S request from a host in the ICS or supporting environment contains a User-Agent (UA) string that is anomalous. Anomalies include: matching a known-malicious signature, representing an outdated and vulnerable browser version, being statistically rare for the environment, or mismatching the parent process that generated the network traffic (e.g., a `curl` UA from a `chrome.exe` process).",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 3 (Sysmon)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint hosts such as Engineering workstations and HMIs where Sysmon logs are collected, and network gateways (corporate internet gateway, ICS network gateways) where Zeek logs are generated.",
            "action": [
              "Filter `http.log` for User-Agent strings matching a threat intelligence watchlist of known malicious or outdated browser UAs. For each suspicious HTTP request, use its connection 4-tuple to correlate with the corresponding Sysmon Event ID 3 (Network Connection) on the source host. Alert if the process name (`Image` field) in the Sysmon event is inconsistent with the User-Agent (e.g., `powershell.exe` generating a Chrome UA).",
              "Aggregate and count all User-Agent strings from `http.log` over a 30-day baseline period to establish population statistics. Generate an alert when a host, especially a critical asset like an HMI, emits a User-Agent string that falls into the bottom 5th percentile of frequency for its asset group. Also, alert on User-Agent strings with a length that is a statistical outlier (e.g., < 1st or > 99th percentile for the environment).",
              "Train an autoencoder neural network on the character-level vector representations of all normal User-Agent strings observed in a 30-day baseline period. For each new User-Agent string observed in `http.log`, pass it through the trained autoencoder and calculate the reconstruction error. A high error score, exceeding the 99th percentile of errors from the training set, signifies a novel or malformed string and should be flagged as a high-fidelity anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]