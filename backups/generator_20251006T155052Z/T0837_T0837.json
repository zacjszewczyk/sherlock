[
  {
    "information_requirement": "Has an adversary disabled or degraded critical protective functions? (TA0105 - Impact)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0837",
        "name": "Loss of Protection",
        "evidence": [
          {
            "description": "A safety-critical command (e.g., 'Stop CPU', 'Program/Logic Download', 'Key Switch/Mode Change') is sent to a Safety Instrumented System (SIS) controller, and the command's context is anomalous. Anomalous context is defined by one or more of the following: the command originates from an IP address not on the approved Engineering Workstation (EWS) whitelist; the associated user account is not a member of the authorized SIS engineering group; or the command occurs outside a scheduled and documented maintenance window.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek dnp3.log",
              "Zeek bacnet.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SIS network segments (Level 0/1), Engineering Workstation (EWS) network segment (Level 2/3), Process Control Network (PCN) segments where EWS communicate with SIS devices, Active Directory Domain Controllers",
            "action": [
              "Create and maintain watchlists of critical SIS controller IP addresses and approved EWS source IP addresses. Monitor industrial protocol logs (e.g., Zeek s7comm.log, modbus.log) for safety-impacting commands ('Stop CPU', 'Program/Logic Download') targeting an SIS IP. If a matching command is detected from a source IP not on the EWS whitelist, generate a high-severity alert. Correlate the source IP and timestamp with Windows logon events (Event ID 4624) on the EWS to identify the user; if the user is not in an authorized SIS engineer Active Directory group, escalate the alert.",
              "For each SIS controller, establish a 60-day baseline of logic download events from industrial protocol logs, profiling both the frequency (downloads per hour) and the file size (bytes). Calculate the mean ($$ \\mu $$) and standard deviation ($$ \\sigma $$) for both metrics. Generate a medium-severity alert if a new download's size exceeds $$ \\mu + 3\\sigma $$. Generate a high-severity alert if the hourly download frequency for a specific controller exceeds its historical $$ \\mu + 3\\sigma $$ threshold. If a download's file hash or checksum changes outside a scheduled maintenance window, generate a critical alert.",
              "Develop an unsupervised anomaly detection model (e.g., Isolation Forest) using a 90-day history of industrial protocol logs. For each 5-minute window per SIS controller, engineer features including: count of total commands, count of distinct command types (e.g., read vs. write), ratio of safety-critical to non-critical commands, and the Shannon entropy of source IP addresses communicating with the SIS. Train the model on this historical data to learn the normal operational profile. In production, score each new 5-minute window and generate an alert when the resulting anomaly score exceeds the 99th percentile of scores from the training dataset, indicating a significant deviation from established behavior."
            ]
          },
          {
            "description": "A write command, observed in industrial protocol traffic (e.g., OPC-UA, Modbus, S7comm) or HMI audit logs, modifies a critical alarm parameter such as a setpoint, deadband, or inhibit flag. The action is considered malicious or unsafe if it originates from an unauthorized source (IP or user account), or if the new value moves the parameter to a less safe state (e.g., increasing a high-pressure trip point, disabling a low-level alarm, or widening a deadband to reduce sensitivity).",
            "data_sources": [
              "Zeek opc-ua.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "HMI application audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "HMI network segment (Level 2), EWS network segment (Level 2/3), Process Control Network (PCN) segments (Level 1/2), Data Historian servers",
            "action": [
              "Maintain a configuration table of critical alarm tags/registers, their associated devices, and their defined safe operating value ranges. Monitor industrial protocol write commands and HMI audit logs for any modifications to these specific tags. Generate a high-severity alert if a write command modifies a critical tag and originates from an IP address or user account not on an authorized operator/engineer list. Generate a critical alert if any write command, regardless of source, changes a tag's value to a state outside its defined safe range.",
              "For each HMI and user account, establish a 30-day baseline for the hourly rate of alarm management actions (e.g., setpoint changes, inhibitions, acknowledgements) using HMI audit and industrial protocol logs. Calculate the mean ($$ \\mu $$) and standard deviation ($$ \\sigma $$) of this rate. Generate a medium-severity alert if the current hourly rate of modifications for any single user or HMI exceeds its historical $$ \\mu + 3\\sigma $$ threshold. Escalate the alert to high severity if multiple distinct critical alarm setpoints are modified by the same user within a 5-minute window.",
              "Train a supervised classification model (e.g., Random Forest, XGBoost), using a labeled historical dataset of alarm modifications marked as 'benign' (e.g., routine tuning by an engineer) or 'malicious/unsafe'. Engineer features for each event, including source IP, user, tag modified, previous value, new value, time of day, day of week, and proximity to a maintenance window. In production, classify each new alarm modification event in real-time. Generate a high-confidence alert for any event classified as 'malicious/unsafe', providing the model's feature importance scores as context for the analyst's investigation."
            ]
          },
          {
            "description": "A critical protective device, such as a Safety PLC or a protective relay, ceases to send expected periodic network traffic (e.g., heartbeat messages, status polls, cyclic data updates) for a duration that exceeds a predefined tolerance. This is observed as a complete absence of relevant network entries in network flow (e.g., Zeek conn.log) or industrial protocol logs from the device's IP address.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "ICMP logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0/1 field device network segments, Level 2 SCADA/DCS network segments, Substation network segments, Process Control Network (PCN) segments",
            "action": [
              "Create and maintain a watchlist of all critical protective device IP addresses, their expected communication protocols, and their normal heartbeat/polling interval (e.g., 10 seconds). For each device, run a continuous query that checks for its presence in network logs (e.g., Zeek conn.log) within the last time window. If no communication logs from or to the device's IP are observed for a period of 2x its normal interval, generate a critical 'Device Unresponsive' alert.",
              "For each critical protective device, use 30 days of network flow data (Zeek conn.log) to establish a baseline for its communication patterns, specifically profiling bytes transmitted per minute and connections established per minute. Calculate the 5th percentile for both metrics to define a minimum expected communication threshold. Generate a medium-severity alert if either the byte volume or the connection frequency drops below its 5th percentile threshold for three consecutive 1-minute intervals, suggesting a potential device or network health issue.",
              "For each critical device, develop a univariate time series forecasting model (e.g., SARIMA or Prophet) trained on 90+ days of historical connection counts per minute, derived from Zeek conn.log. The model should learn the device's normal communication patterns, including any daily or weekly seasonality. In production, continuously forecast the expected connection count for the next 5-minute interval, including a 95% confidence interval. If the actual observed connection count falls below the lower bound of the confidence interval for two or more consecutive intervals, generate a high-severity alert for an anomalous communication disruption."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]