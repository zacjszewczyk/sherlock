[
  {
    "information_requirement": "Is an adversary exploiting software vulnerabilities in ICS devices to evade security controls? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0820",
        "name": "Exploitation for Evasion",
        "evidence": [
          {
            "description": "Anomalous network connection to or from an ICS asset (e.g., PLC, RTU, HMI) characterized by the use of a non-standard or unapproved protocol (e.g., RDP, SMB, FTP), a non-standard port for an approved protocol, or connection metrics (byte volume, packet count, duration) that deviate more than 3 standard deviations from an established 30-day baseline for the specific source-destination-port-protocol tuple.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek dce_rpc.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Network boundary between IT and OT networks, Industrial Demilitarized Zone (IDMZ)",
            "action": "1. Establish and maintain a 30-day baseline of normal network communications (source IP, destination IP, destination port, protocol, service, connection duration, orig_bytes, resp_bytes) between EWS/HMIs and field devices (e.g., PLCs, RTUs) using Zeek conn.log. Focus on common ICS protocols (Modbus, S7Comm, EtherNet/IP, DNP3) and their standard ports. For each unique source-destination-port-protocol tuple, calculate the mean and standard deviation for 'orig_bytes', 'resp_bytes', and 'duration'. 2. Symbolic Logic: Generate high-priority alerts for Zeek conn.log entries showing connections from IPs not whitelisted as EWS/HMI assets to known ICS device engineering ports (e.g., Modbus/TCP 502, S7Comm 102, EtherNet/IP 44818, DNP3 20000). Additionally, alert on the use of protocols not explicitly whitelisted for ICS communications (e.g., HTTP/S, FTP, SMB, RDP) to ICS devices. Cross-reference alerts with Zeek notice.log for signatures of known ICS exploits that might correspond to these anomalous connections. 3. Statistical Method: For each unique source-destination-port-protocol tuple, generate an alert on Zeek conn.log entries where 'orig_bytes', 'resp_bytes', or 'duration' exceed the 99th percentile or deviate by more than 3 standard deviations from their established 30-day baselines. Specifically, flag connections with unusually high data volume transfers or unusually long durations that are not associated with scheduled maintenance. 4. Machine Learning: Train a time series anomaly detection model (e.g., Isolation Forest or Prophet) to monitor daily connection counts and aggregated byte volumes for critical ICS devices, using at least 90 days of historical data. Flag significant deviations (e.g., sudden spikes in connections to a PLC, sustained high data transfers) from historical patterns. Generate alerts for anomaly scores exceeding a predefined threshold (e.g., 0.8). 5. Analyze Zeek dce_rpc.log and rdp.log for anomalous RDP or DCE/RPC activity. Specifically, look for RDP connections to PLCs or RTUs, or DCE/RPC activity originating from unauthorized sources or destined for ICS devices not typically accessed via these protocols. Correlate these with Zeek conn.log to identify full connection details."
          },
          {
            "description": "Anomalous process creation on a critical ICS host (EWS, HMI) indicated by an unsigned executable, execution from a non-standard path (e.g., %TEMP%, C:\\Users\\Public), command-line arguments with Shannon entropy exceeding the 99th percentile of the host's baseline, or the use of a Living Off the Land Binary (LOLBin) with suspicious parameters (e.g., network connections, encoding).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Jump Servers within the OT network",
            "action": "1. On EWS and HMI systems, establish a whitelist of legitimate engineering software, system utilities, their expected execution paths, and typical command-line arguments. For known LOLBins and scripting interpreters (e.g., powershell.exe, cmd.exe, wscript.exe), define legitimate usage patterns. 2. Symbolic Logic: Generate high-priority alerts for Windows Event ID 4688 when a process execution is observed where: the executable is not present in the established whitelist; the process executes from a temporary directory (%TEMP%, %APPDATA%) or an unexpected system location (e.g., C:\\Users\\Public); or a scripting interpreter or LOLBin (e.g., certutil.exe, bitsadmin.exe, regsvr32.exe) executes with command-line arguments containing base64 encoded strings, network discovery parameters, or download commands not matching legitimate patterns. 3. Statistical Method: For each Windows Event ID 4688, calculate the Shannon entropy of the full command-line arguments. Alert on command lines with an entropy score exceeding the 99th percentile of historical entropy scores for that host. Separately, identify rare parent-child process relationships by analyzing historical data; flag any parent-child relationship occurring less frequently than the 1st percentile of observed relationships (e.g., an HMI application spawning cmd.exe). 4. Machine Learning: Implement a process behavior classification model (e.g., Random Forest or XGBoost) trained on historical Windows Event ID 4688 data. Use features such as process name, parent process name, execution path, command-line argument entropy, and user account. Train the model to classify process executions as legitimate or anomalous. Flag processes that receive an anomaly score above a predefined threshold (e.g., 0.7). 5. Correlate suspicious process execution events (Windows Event ID 4688) with subsequent outbound network connections (Windows Event ID 5156 - Filtering Platform Connection) from the same process on the same host. Prioritize investigations where the destination is an ICS device, an unauthorized network segment, or an external IP address."
          },
          {
            "description": "Anomalous transfer of firmware (.bin, .hex), configuration (.xml, .cfg), or project files (.prj, .acd) to or from an ICS device, indicated by an unauthorized source IP, a file hash (SHA256) that does not match a known-good baseline, or a transfer occurring outside of a scheduled maintenance window.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN), Engineering Workstations (EWS), Industrial Demilitarized Zone (IDMZ) for firmware update servers, OT File Servers",
            "action": "1. Filter Zeek files.log for file transfers over common industrial protocols (e.g., FTP, TFTP, HTTP, SMB) with file extensions associated with firmware (.bin, .hex, .fw) or critical configuration/project files (.xml, .cfg, .prj, .acd). For Windows-based file shares, monitor Windows Event ID 4663 (An attempt was made to access an object) for write access to these file types. 2. Symbolic Logic: Create and maintain a whitelist of authorized source systems (e.g., specific EWS IPs), authorized destination ICS devices, and known-good file hashes (SHA256) for legitimate firmware and configuration files. Generate an immediate alert for any transfer of these file types that originates from an unauthorized source, is destined for an unauthorized device, has an unknown/mismatched file hash, or occurs outside a pre-defined maintenance window. 3. Statistical Method: Identify instances where the same firmware or configuration file (based on SHA256 hash) is transferred to an unusually high number of devices within a short period (e.g., exceeding the 99th percentile for device count per file hash per hour). Analyze the byte count and duration of firmware transfers, flagging any significant deviations (e.g., more than 3 standard deviations from the mean) from historical norms for specific firmware types or devices. 4. Machine Learning: Employ a classification model (e.g., LightGBM) to categorize firmware and configuration transfer events as legitimate or malicious. Use features including source IP, destination device type, file hash, filename string entropy, file extension, transfer protocol, time of day, day of week, and a boolean for 'is_in_maintenance_window'. Flag events with a high probability (e.g., >0.8) of being malicious for investigation. 5. For each anomalous file transfer detected, analyze the corresponding Zeek conn.log record to identify the full connection details. For Windows Event ID 4663 alerts, investigate the user account and process responsible for the access attempt, correlating with Windows Event ID 4624 (successful login) and 4688 (process creation) to understand the preceding activity."
          },
          {
            "description": "Direct evidence of security control tampering on a critical ICS host (EWS, HMI), including the clearing of security audit logs (Windows Event ID 1102), stopping or disabling of a security service (Windows Event ID 7040), or unauthorized modification of system audit policies (Windows Event ID 4719) or security-related registry keys (Windows Event ID 4657).",
            "data_sources": [
              "Windows Event ID 1102",
              "Windows Event ID 7040",
              "Windows Event ID 4719",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Windows Servers within the ICS network, OT Domain Controllers",
            "action": "1. Configure a high-priority, non-suppressible alert for any instance of Windows Event ID 1102 (The audit log was cleared) on all critical HMI, EWS, and Windows servers within the ICS network. 2. Symbolic Logic: Generate alerts for Windows Event ID 7040 when the 'Service Name' field matches a critical security service (e.g., 'WinDefend', 'Sysmon', EDR agent service) and the 'New State' is 'stopped' or 'disabled'. Alert on Windows Event ID 4719 (System audit policy was changed) and 4657 (A registry value was modified) for changes to security-critical audit subcategories or registry keys (e.g., HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog, HKLM\\Software\\Policies\\Microsoft\\Windows Defender). 3. Statistical Method: Establish a baseline for the hourly log volume for each critical host. Generate an alert if the log volume for a host drops by a significant percentage (e.g., >90%) in a short time frame, which could indicate log tampering even if Event ID 1102 is not present. Analyze the frequency of service state changes (Event ID 7040); alert on any status change for a security service that is historically rare (e.g., below the 1st percentile of frequency). 4. Machine Learning: Implement a sequence analysis model (e.g., Hidden Markov Model) to learn normal sequences of system events on EWS/HMIs. Flag anomalous sequences, such as a suspicious process execution (Event ID 4688) followed within minutes by a log clear (Event ID 1102) or a security service being stopped (Event ID 7040), as high-risk evasion activity. 5. Correlate these security-impacting events with preceding anomalous login activity (Windows Event ID 4624) or process execution (Windows Event ID 4688) on the same host within a 15-minute window to investigate the user account or process responsible for the changes."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]