[
  {
    "information_requirement": "Is an adversary attempting to achieve persistence by modifying ICS project files?",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0873",
        "name": "Project File Infection",
        "evidence": [
          {
            "description": "A file modification event (write, create, or delete) is observed targeting an Industrial Control System (ICS) project file (e.g., .ACD, .S7P, .L5K, .RSS, .ap16, .pro, .PCV, .XEF, .rungs) on a designated engineering workstation or project file server. The event is considered anomalous if it originates from an unauthorized user or host, occurs outside a scheduled maintenance window, or deviates significantly from established baselines of user file access patterns.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656",
              "Windows Event ID 5145",
              "Sysmon Event ID 11",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Project File Shares (e.g., dedicated SMB shares for engineering files) and Engineering Workstations within the Corporate IT, DMZ, or Process Control Network (PCN).",
            "action": "1. Symbolic Logic: From file audit logs (Windows Event ID 4663, Sysmon Event ID 11), filter for events where the TargetFilename field ends with a known ICS project extension (e.g., .ACD, .S7P, .L5K). For each event, verify if the SubjectUserName is a member of the 'Authorized_ICS_Engineers' Active Directory group. Simultaneously, check if the event timestamp falls within a scheduled maintenance window by querying the change management database. Generate a high-severity alert if either the user is unauthorized or the activity is outside a maintenance window. Additionally, cross-reference the SourceAddress from Windows Event ID 5145 with an asset inventory to ensure the access originates from an approved Engineering Workstation. 2. Statistical Method: For each authorized user, ingest file modification events (Sysmon Event ID 11) into a time-series database. Establish a 30-day rolling baseline of the count of unique project files accessed per hour. Calculate the mean and standard deviation for this metric. Generate a medium-severity alert if a user's hourly unique file access count exceeds 3 standard deviations from their personal baseline. Also, calculate the Shannon entropy of the parent folder paths (`C:\\Projects\\PlantA\\`, `C:\\Projects\\PlantB\\`, etc.) accessed by each user weekly. A sharp increase in entropy week-over-week for a user indicates they are accessing a wider, more unusual variety of project directories than normal. 3. Machine Learning Application: Train an Isolation Forest or Local Outlier Factor (LOF) model on a feature set derived from file access logs (Sysmon Event ID 11, Windows Event ID 4663). Use features such as: User, Source Hostname, hour of day, day of week, file extension (one-hot encoded), and the rarity of the process making the change (e.g., `ProcessGuid` in Sysmon). The model should be trained on at least 90 days of logs from known-good engineering activity. In production, score each new file modification event. Events with anomaly scores in the top 1% should be flagged for analyst review, as they represent statistically rare combinations of user, host, time, and file type."
          },
          {
            "description": "A network connection is established to a PLC's known engineering port (e.g., TCP/44818 for EtherNet/IP, TCP/102 for S7COMM, TCP/20000 for DNP3, TCP/502 for Modbus) from a source IP address that is not on the explicit allowlist of authorized Engineering Workstations (EWS). The anomaly also includes connections from authorized EWS that exhibit unusual characteristics, such as unprecedented data volume or duration, suggesting a project download rather than routine polling.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the ICS DMZ (Level 3.5) and Process Control Network (Levels 2/1), and the Engineering Workstations that access them.",
            "action": "1. Symbolic Logic: In your SIEM, create a rule that triggers on Zeek `conn.log` events where `id.resp_p` is in the set of ICS engineering ports (102, 502, 44818, 20000) AND `id.resp_h` is in the asset list of PLCs. The rule should generate a high-severity alert if `id.orig_h` is NOT in the 'Authorized_EWS' asset list. For connections from authorized EWS, correlate the connection's 5-tuple and timestamp with host logs (Windows Event ID 5156) to identify the `Application` and `ProcessID`. Further correlate with Windows Event ID 4688 to ensure the process name is an approved engineering software (e.g., `Studio5000.exe`, `TIA_Portal.exe`). 2. Statistical Method: From `conn.log`, create a 30-day baseline of `(id.orig_h, id.resp_h, id.resp_p)` tuples. Alert on any new tuple not seen in the baseline (a 'new talker' pair). For existing, legitimate pairs, baseline the `orig_bytes` and `duration` fields. Calculate the 99th percentile for both metrics for each unique communication pair. Generate a medium-severity alert if a new connection's `orig_bytes` OR `duration` exceeds its specific 99th percentile threshold, which could indicate a large file download instead of a small status check. 3. Machine Learning Application: Use a DBSCAN clustering algorithm on `conn.log` data, focusing on connections to PLCs on engineering ports. Create a feature vector for each connection including `duration`, `orig_bytes`, `resp_bytes`, and `service` (e.g., 's7', 'enet-ip'). The algorithm will group routine, low-data, short-duration polling connections into dense clusters. Connections identified as noise (not belonging to any cluster) are anomalous and should be investigated. These outliers often represent high-volume, long-duration sessions typical of a project download."
          },
          {
            "description": "A PLC mode change command (e.g., from RUN to PROGRAM/REMOTE) is detected in deep packet inspection logs (e.g., Zeek's s7comm.log or enip.log), and is immediately followed by a high-volume data transfer to the same PLC. This specific sequence of events is a strong indicator of a project file being downloaded to the controller.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (Level 2/1) segments where PLCs and other field controllers reside.",
            "action": "1. Symbolic Logic: Create a stateful SIEM rule. Step 1: Trigger when a PLC mode change event is detected in `s7comm.log` (e.g., `param.function == 'SZL_ID_292_VAL_1'`) or `enip.log`. Step 2: Upon trigger, monitor `conn.log` for the next 5 minutes for connections to the same PLC IP (`id.resp_h`) where the `orig_bytes` value is greater than a threshold (e.g., 1MB). Step 3: If both conditions are met, generate a high-severity alert containing the source host, destination PLC, and byte count. Enrich the alert with user and asset owner information. 2. Statistical Method: For each PLC, ingest protocol-specific logs (`s7comm.log`, `enip.log`, etc.) and `conn.log`. Create two baselines: (a) the hourly frequency of 'write' or 'download' function codes for that PLC, and (b) the 95th percentile of `orig_bytes` for connections to that PLC. Create a rule that alerts when the count of 'download' function codes in an hour exceeds 3 standard deviations from its baseline AND a corresponding connection's `orig_bytes` exceeds the 95th percentile. This correlates an unusual number of write actions with an unusually large data transfer. 3. Machine Learning Application: Implement a sequence-based anomaly detection model, such as a Hidden Markov Model (HMM) or an LSTM network. Train the model on sequences of events for each PLC, where an event is a tuple of (timestamp, event_type, data_volume). Event types could be 'PLC_Mode_Change', 'Tag_Write', 'Connection_Start', 'Connection_End'. The model learns the normal probability of transitioning between states (e.g., the low probability of a 'PLC_Mode_Change' being followed by a high 'data_volume' 'Connection_Start'). A sequence of events with a very low probability score under the trained model indicates a highly anomalous and suspicious series of actions, such as a project download."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]