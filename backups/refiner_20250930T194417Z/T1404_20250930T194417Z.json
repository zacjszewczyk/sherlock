[
  {
    "information_requirement": "Has an adversary successfully elevated privileges on a mobile device by exploiting a software vulnerability? (PIR)",
    "tactic_id": "TA0029",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1404",
        "name": "Exploitation for Privilege Escalation",
        "evidence": [
          {
            "description": "An MDM/UEM platform log event explicitly records a change in a device's integrity status. This is observed as a field like `isJailbroken` or `isRooted` changing from `false` to `true`, or a `complianceStatus` field transitioning to `non-compliant` with an associated reason code indicating `Rooting Detected` or `Device Integrity Compromise` [1].",
            "data_sources": [
              "MDM/UEM compliance logs",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM/UEM management servers, cloud management console, managed mobile devices (corporate and BYOD), enterprise network gateways, VPN concentrators, and DNS resolvers.",
            "action": "1. (Symbolic Logic) Configure a real-time SIEM correlation rule to generate a critical alert immediately upon ingestion of an MDM/UEM log where a device's `isJailbroken` or `isRooted` field value changes to `true` or the `complianceStatus` is `non-compliant` with a reason matching a device integrity failure. 2. (Statistical Analysis) Upon alert, query the device's network logs (Zeek conn.log) for the 24 hours preceding the event. For each connection, calculate the rarity of the destination port and destination ASN compared to the device's 30-day baseline. A connection where the destination port's frequency is below the 5th percentile (i.e., extremely rare for that device) and the ASN is new for that device should be flagged. Sum these flags into a risk score; a score exceeding a predefined threshold indicates suspicious precursor activity. 3. (Machine Learning) Enrich the flagged network connections with JA3/JA3S hashes (from Zeek ssl.log). Feed features including connection duration, bytes sent/received, protocol, destination port rarity score, and JA3/JA3S hash into a pre-trained Isolation Forest anomaly detection model. A connection receiving a high anomaly score occurring within 60 minutes of the root/jailbreak detection event strongly suggests it is the exploit delivery or C2 channel."
          },
          {
            "description": "A log from an MDM/UEM or Mobile Threat Protection (MTP) platform records the installation or execution of a mobile application whose attributes match a known malicious indicator. The match is identified by comparing the application's SHA256 file hash, package name (e.g., `com.exploit.pwn`), or code-signing certificate serial number against a curated threat intelligence feed.",
            "data_sources": [
              "MDM/UEM application inventory logs",
              "Mobile Threat Protection (MTP) agent logs",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile devices with MTP agents, MDM/UEM management console, integrated threat intelligence platforms, network egress points, and corporate Wi-Fi infrastructure.",
            "action": "1. (Symbolic Logic) Implement a continuous SIEM rule that cross-references all application installation events from MDM/MTP logs against a threat intelligence database of malicious mobile application hashes, package names, and signing certificates. Trigger a high-severity alert on any match. 2. (Statistical Analysis) For any device with a malicious app alert, analyze its DNS query history (Zeek dns.log) from the 24 hours prior to installation. Calculate the Shannon entropy of the second-level domain for each queried domain. Flag domains where the entropy score exceeds the 95th percentile for the device's peer group (e.g., all iOS devices). A high entropy score suggests DGA activity for C2. Additionally, calculate the ratio of NXDOMAIN responses to total queries for the device; a ratio exceeding 3 standard deviations from the device's 30-day moving average baseline indicates potential C2 beaconing failure. 3. (Machine Learning) Analyze network sessions (Zeek http.log, ssl.log) associated with application downloads preceding the malicious app installation. Use a supervised classification model (e.g., Random Forest) trained to identify malicious downloads. Features should include: User-Agent string, JA3/JA3S hash, the ratio of uppercase to lowercase characters in the URL path, SSL certificate validity period, and destination IP reputation score. A session classified as 'malicious' is the likely exploit delivery vector."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]