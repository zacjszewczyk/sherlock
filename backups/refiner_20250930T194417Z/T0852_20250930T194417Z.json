[
  {
    "information_requirement": "Is an adversary capturing screen data from Human-Machine Interfaces (HMIs) or Engineering Workstations (EWS)? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0852",
        "name": "Screen Capture",
        "evidence": [
          {
            "description": "A process creation event on a critical ICS asset (HMI, EWS) where the executable is a known screen capture utility (e.g., psr.exe, SnippingTool.exe), a scripting engine (e.g., powershell.exe) is invoked with screen capture-related arguments, or an un-baselined executable is launched.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4697",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Operator Stations, and Jump Servers within the ICS/OT network.",
            "action": "1. Symbolic Logic (Whitelist Violation): Create and maintain a strict whitelist of allowed processes, parent-child relationships, command-line arguments, and user accounts for all HMIs and EWS. Trigger an alert on any process creation event (Windows Event ID 4688) that violates this whitelist. Specifically, alert on: a) Execution of 'psr.exe' or 'SnippingTool.exe'. b) Execution of 'powershell.exe' with command-line arguments (from Event ID 4104) containing 'System.Windows.Forms', 'CopyFromScreen', or 'BitBlt'. c) Execution of any process from a non-standard directory (e.g., %TEMP%, user profile folders). d) Installation of a new service (Event ID 4697) with a suspicious name or path. \n2. Statistical Method (Rarity/Frequency): For each unique process on HMIs/EWS, calculate a 30-day rolling baseline of its execution frequency per host. Alert if a process's daily execution count on a single host exceeds 3 standard deviations above its historical mean. Additionally, calculate the population frequency (rarity) of each process across the entire HMI/EWS fleet. Flag any process execution that falls below the 5th percentile of rarity for investigation, as it represents an uncommon tool. \n3. Machine Learning (Classification): Train a supervised classification model (e.g., Random Forest) on features from process creation events, including process name, parent process, command-line entropy, user context, and file path. The model should be trained on a labeled dataset of known-good operational activity specific to HMIs/EWS. Use the model to classify new process events in real-time and investigate any event classified as 'malicious' with a high confidence score (e.g., > 0.9)."
          },
          {
            "description": "A file creation event for an image file type (.png, .jpg, .bmp) on an HMI or EWS, where the creating process is not an approved application (e.g., a reporting tool) or the file is written to a non-standard location (e.g., C:\\Windows\\Temp).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Local file systems of HMIs and EWS, focusing on temporary directories (%TEMP%, C:\\Windows\\Temp), user profiles, and staging directories used for data transfer.",
            "action": "1. Symbolic Logic (Policy Violation): Enable and monitor file system auditing. Create a whitelist of processes authorized to create image files (e.g., specific HMI reporting software) and their allowed output directories on HMIs/EWS. Trigger an alert on any file access event (Windows Event ID 4663/4656) for an image file extension (.png, .jpg, .bmp, .gif) that violates this policy. Specifically, alert when: a) The creating process (e.g., 'powershell.exe', 'cmd.exe', unknown executable) is not on the whitelist. b) The target file path is a temporary or staging directory not approved for image output. \n2. Statistical Method (Volume and Entropy): For each HMI/EWS, establish a 30-day baseline for the hourly volume of image file creations. Alert when the hourly count exceeds 4 standard deviations above the mean for that specific hour of the day and day of the week to account for operational cycles. Additionally, calculate the Shannon entropy of all newly created image filenames. Alert on any filename with an entropy score in the top 5% (95th percentile) of the baseline, as this can indicate programmatic or randomized naming conventions. \n3. Machine Learning (Time-Series Anomaly): Implement a time-series anomaly detection model (e.g., LSTM Autoencoder) trained on historical file creation data for each HMI/EWS. The model should learn the normal patterns of image file creation, including frequency, time of day, creating process, and file path. Alert on any file creation event that the model flags as a significant anomaly based on its reconstruction error, indicating a deviation from learned benign behavior."
          },
          {
            "description": "An outbound network connection from an HMI or EWS to an unapproved destination or a connection with an anomalously large data payload ('orig_bytes'), suggesting the exfiltration of captured image files.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Network Segments, OT/IT Network Boundary, Purdue Model Level 2/3 systems, ICS DMZ, and Internet Gateway.",
            "action": "1. Symbolic Logic (Whitelist Violation): Define a strict whitelist of allowed destination IP addresses, domains, and ports for all network communications originating from HMIs and EWS. Continuously monitor Zeek conn.log and dns.log. Trigger an immediate alert for any connection from an HMI or EWS that: a) Connects to a destination IP or domain not on the whitelist. b) Uses a destination port not on the whitelist for that specific destination. c) Involves an HTTP POST request (Zeek http.log) with a request body size ('orig_bytes') over a static threshold (e.g., 1 MB) to a non-whitelisted destination. \n2. Statistical Method (Percentile Threshold): For each HMI/EWS source IP, establish a 30-day rolling baseline of the 'orig_bytes' field for outbound connections, segmented by destination port. Alert on any single connection where 'orig_bytes' exceeds the 99.9th percentile for its peer group (e.g., same asset type, same destination port). Additionally, calculate the total outbound data volume per host over a 1-hour window. Alert if this total volume exceeds 3 standard deviations above the historical hourly average for that host. \n3. Machine Learning (Clustering Anomaly): Apply a density-based clustering algorithm (e.g., DBSCAN) to network connection data (Zeek conn.log) from HMIs/EWS. Use features such as source IP, destination IP, destination port, protocol, 'orig_bytes', and connection duration. The algorithm will group connections into clusters of normal behavior. Automatically investigate any connection classified as noise or belonging to a very small, sparse cluster, as these represent rare and anomalous communication patterns potentially indicative of data exfiltration."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]