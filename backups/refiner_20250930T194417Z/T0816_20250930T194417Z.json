[
  {
    "information_requirement": "Has a critical ICS device been restarted or shut down outside of a scheduled maintenance window? (PIR)",
    "tactic_id": "TA0107",
    "tactic_name": "Inhibit Response Function",
    "indicators": [
      {
        "technique_id": "T0816",
        "name": "Device Restart-Shutdown",
        "evidence": [
          {
            "description": "A user-initiated (Windows Event ID 1074) or system (Windows Event ID 6006, 6008) shutdown or restart event on a critical Windows-based ICS asset (e.g., HMI, EWS) that occurs outside of a scheduled maintenance window and is not attributable to a whitelisted administrative process. The anomalous nature is confirmed by the initiating user, process name, shutdown reason code, or the abruptness of the event (Event ID 6008).",
            "data_sources": [
              "Windows Event ID 1074",
              "Windows Event ID 6006",
              "Windows Event ID 6008",
              "Windows Event ID 4624",
              "Windows Event ID 4634",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Operator Stations, SCADA Servers, and Data Historians within the Process Control Network (PCN) and OT DMZ.",
            "action": "1. Symbolic Logic:\na. Create a SIEM rule to alert on any occurrence of Windows Event ID 6008 (unexpected shutdown) on assets tagged as 'Critical ICS'.\nb. Create a SIEM rule to alert on Windows Event ID 1074 (user-initiated shutdown/restart) or 6006 (clean shutdown) on Critical ICS assets IF the event occurs outside a pre-defined maintenance schedule AND the 'InitiatingProcessName' is NOT on a process whitelist (e.g., 'TiWorker.exe', 'wuauclt.exe').\nc. For any alert on Event ID 1074, correlate the timestamp with Windows Event ID 4624 (logon) for the initiating user. Examine the 'Source Network Address' in Event 4624 and cross-reference the source IP with Zeek conn.log data to verify the connection originated from an authorized management subnet. Escalate if the origin is unauthorized or external.\n2. Statistical Method:\na. For each critical ICS asset, establish a 90-day baseline of the hourly count for Event IDs 1074 and 6006, creating separate baselines for maintenance and non-maintenance periods.\nb. Calculate the mean and standard deviation for these counts. Generate an alert if the hourly count for either event on an asset exceeds 3 standard deviations above the mean for a non-maintenance period.\nc. Maintain a frequency distribution of 'ShutdownReason' codes from Event ID 1074 over the last 180 days. Alert if a reason code is observed that has not appeared in the baseline period or whose frequency falls below the 5th percentile, indicating a statistically rare shutdown cause.\n3. Machine Learning:\na. Train a supervised classification model (e.g., Random Forest) using historical logs (Event IDs 1074, 6006, 6008, 4624, 4688) from critical ICS assets, labeled as 'benign' (during maintenance) or 'malicious' (anomalous past incidents).\nb. Engineer features including: EventID, time_of_day, day_of_week, a binary 'is_maintenance_window' feature, the initiating process name, and a binary feature 'is_preceded_by_remote_logon' (true if Event 4624 with Logon Type 10 occurred for the same user/host within 15 minutes prior).\nc. Deploy the model to classify new shutdown events in real-time. Generate a high-priority alert for any event classified as 'malicious' with a confidence score greater than 0.9, providing the top contributing features as context for the analyst."
          },
          {
            "description": "Observation of specific ICS protocol function codes or commands (e.g., DNP3 'Cold Restart', Modbus 'Restart Communications Option', EtherNet/IP 'Reset') targeting a critical PLC, RTU, or IED, especially when originating from an unauthorized source IP or as part of an anomalous sequence of commands.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek opcua.log",
              "Zeek iec61850goose.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network taps or SPAN ports monitoring traffic between Purdue Levels 0 (Process), 1 (Basic Control), and 2 (Supervisory Control), particularly at network aggregation points for PLCs, RTUs, and IEDs.",
            "action": "1. Symbolic Logic:\na. Ingest and parse Zeek ICS protocol logs into a SIEM. Create rules to detect specific restart commands and alert immediately:\ni. dnp3.log: 'function_name' == 'COLD_RESTART' or 'function_name' == 'WARM_RESTART'.\nii. modbus.log: 'function_code' == 8 (Diagnostics) AND 'sub_function' == 1 (Restart Communications Option).\niii. enip.log: 'command' == 'Reset'.\nb. For any alert, cross-reference the destination IP against a verified asset inventory to confirm it is a critical device. Then, validate the 'id.orig_h' (source IP) against a whitelist of authorized engineering workstations and HMIs. Escalate immediately if the source is not on the whitelist.\n2. Statistical Method:\na. For each critical device IP, establish a 30-day baseline of the daily count of restart-related function codes (as defined in the symbolic logic) originating from authorized sources during maintenance windows.\nb. Generate an alert if the daily count of these commands targeting a device exceeds the 99th percentile of its baseline, or if any such command is observed outside a maintenance window from any source.\nc. For each critical device, calculate the Shannon entropy of the source IP addresses ('id.orig_h') issuing any command to it over a rolling 1-hour window. Establish a 30-day baseline for this entropy value. A sharp decrease in entropy (e.g., below the 5th percentile of the baseline) indicates a loss of source diversity and a potential targeted attack from a single or few hosts, warranting investigation.\n3. Machine Learning:\na. Deploy an unsupervised anomaly detection model (e.g., Isolation Forest) trained on a 'golden' dataset of at least 30 days of normal, steady-state ICS protocol logs (Zeek dnp3, modbus, enip logs), excluding maintenance periods.\nb. Use features such as: protocol, function_code, source IP, destination IP, and the time delta since the last command to the same destination IP.\nc. The model will create a baseline of normal command patterns and sequences. In real-time, score new commands against this baseline. Generate an alert for any command or sequence of commands that receives a high anomaly score, indicating a significant deviation from learned normal behavior."
          },
          {
            "description": "A statistically significant deviation in the communication pattern from a critical controller, manifested as a sustained loss of periodic messages (e.g., Modbus polls, DNP3 keep-alives) for a duration exceeding 3 standard deviations of the mean inter-packet gap for that specific device-protocol pair.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek opcua.log",
              "Zeek iec61850goose.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core switches in the Process Control Network (PCN) and aggregation switches at Purdue Levels 1 and 2, where network traffic from PLCs, RTUs, and IEDs is concentrated and can be monitored.",
            "action": "1. Symbolic Logic:\na. For each critical controller IP defined in an asset inventory, create a stateful rule that tracks the timestamp of its last received communication for its primary protocol (e.g., Modbus, DNP3).\nb. For each device, define a static timeout threshold (e.g., 2.5 times its known polling cycle). If the current time minus the last seen timestamp exceeds this threshold, and the device is not in a scheduled maintenance window, generate a 'Potential Device Offline' alert.\nc. Correlate the alert with Zeek conn.log to see if a TCP connection to the device was recently terminated with a 'RST' flag, which could indicate an abrupt shutdown.\n2. Statistical Method:\na. For each critical controller, ingest its specific protocol logs (e.g., modbus.log) and calculate the inter-arrival time for each packet over a 7-day rolling window to establish a baseline distribution.\nb. Calculate the mean and standard deviation of the inter-arrival times for each device. Trigger an alert if the time since the last packet from a device exceeds the mean plus 4 standard deviations of its baseline.\nc. Analyze the 'duration' field from Zeek conn.log for connections involving critical controllers. Establish a baseline for the average connection duration. An abrupt and sustained drop in average duration could indicate the device is rebooting frequently, triggering an alert for investigation.\n3. Machine Learning:\na. For each critical controller, train a time-series forecasting model (e.g., ARIMA or Prophet) on historical data (e.g., packet counts per minute) from its primary protocol log.\nb. The model should learn the device's normal communication rhythm, including daily or operational seasonality. The model will predict the expected packet count for the next 1-minute interval with a 99% confidence interval.\nc. In real-time, compare the actual observed packet count to the model's prediction. If the observed count falls below the lower bound of the confidence interval for three consecutive minutes, generate an alert for 'Anomalous Communication Drop', suggesting a potential device shutdown or fault."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]