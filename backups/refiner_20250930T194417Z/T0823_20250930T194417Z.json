[
  {
    "information_requirement": "Is an adversary using GUI-based remote access for execution on critical ICS hosts? (PIR)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0823",
        "name": "Graphical User Interface",
        "evidence": [
          {
            "description": "A successful remote interactive logon (Windows Event ID 4624, Logon Type 10) to a critical ICS asset where at least one of the following conditions is met: the source IP address is not on the authorized allow-list for that asset; the authenticating user account is not a member of an authorized remote access group; the logon occurs outside of the user's or asset's established maintenance or operational hours.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Windows Event ID 4634",
              "Windows Event ID 4647",
              "Active Directory Security Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Operator Workstations (OWS), ICS Domain Controllers, Jump Servers, Remote Access Gateways",
            "action": "1. Symbolic Logic: Step 1: Maintain an asset inventory of critical ICS hosts (e.g., HMIs, EWS) and corresponding allow-lists for source IPs, user groups, and defined operational hours. Step 2: Create a query to filter for Windows Event ID 4624 with Logon Type 10 where the target host is a critical ICS asset. Step 3: For each event, join with the inventory data to check if the event's source IP address, user account, and timestamp violate the established allow-lists or operational hours. Step 4: Generate a high-priority alert for any event that fails one or more of these policy checks.\n2. Statistical Method: Step 1: For each unique user-to-asset pair, collect a 30-day baseline of successful RDP logons (Windows Event ID 4624, Type 10). Step 2: For each pair, calculate the historical distribution (mean, standard deviation) of logon times (hour of day) and session durations (by correlating logon (4624) with logoff (4634/4647) events or with Zeek conn.log `duration`). Step 3: For each new logon, calculate a z-score for its hour of day and session duration against the historical baseline for that pair. Step 4: Generate an alert if a logon's time-of-day z-score exceeds 3 or if its session duration exceeds the 95th percentile of the historical distribution, indicating a temporally anomalous session.\n3. Machine Learning: Step 1: Create a feature set for each logon event (Windows Event ID 4624, Type 10) including user, target host, source IP, logon hour (as a cyclical feature using sine/cosine transformation), and day of week. Enrich with data from Zeek conn.log like session duration and total bytes. Step 2: Train an unsupervised anomaly detection model (e.g., Isolation Forest or One-Class SVM) on a baseline of known-good historical logon data to learn normal access patterns. Step 3: Apply the trained model to score new logon events in near-real-time. Step 4: Generate a high-priority alert for logons with an anomaly score exceeding a model-derived threshold, indicating a significant deviation from learned normal behavior."
          },
          {
            "description": "Network traffic logs showing a new or established connection using RDP (TCP/3389) or VNC (TCP/5900-5906) to a critical ICS asset where the connection originates from an unauthorized source IP, or where the connection's data volume, duration, or client-side attributes are statistical outliers compared to historical norms for that source-destination pair.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek rdp.log",
              "Zeek x509.log",
              "Firewall logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Network Segments, Demilitarized Zone (DMZ) Firewalls, Connections between IT and OT networks, Remote Access Gateways/VPN Concentrators, Perimeter Firewalls (IT/OT boundary)",
            "action": "1. Symbolic Logic: Step 1: Maintain an inventory of critical ICS asset IP addresses and a corresponding allow-list of authorized source IPs for RDP/VNC access. Step 2: Create a query to filter Zeek conn.log for connections where `id.resp_p` is 3389 or is in the range 5900-5906, and `id.resp_h` is a critical ICS asset. Step 3: For each matching connection, check if the source IP (`id.orig_h`) is present on the allow-list for that specific destination asset. Step 4: Generate a high-priority alert for any connection from a non-allow-listed source IP.\n2. Statistical Method: Step 1: For authorized RDP/VNC connections (as defined by the symbolic logic), establish a 30-day rolling baseline from Zeek conn.log and rdp.log for each source-destination pair. Step 2: Calculate the 99th percentile for `duration` and total bytes (`orig_bytes` + `resp_bytes`) from conn.log. Additionally, calculate the Shannon entropy of the RDP `cookie` field from rdp.log to establish a baseline of complexity. Step 3: For each new connection, compare its `duration` and total bytes to the 99th percentile for that pair. Calculate the entropy of the new connection's RDP `cookie`. Step 4: Generate an alert if a connection's duration or data volume exceeds the 99th percentile, or if the RDP cookie entropy is a significant outlier (e.g., z-score > 3) compared to the baseline for that user/host.\n3. Machine Learning: Step 1: Aggregate Zeek conn.log data into time-series windows (e.g., 10-minute intervals) for each critical ICS asset. Create features such as RDP/VNC connection count, total bytes transferred, number of unique source IPs, and average session duration within the window. Step 2: Train a multivariate time-series anomaly detection model (e.g., a VAE or LSTM-based autoencoder) on historical data to learn the normal rhythm of remote access traffic to each asset. Step 3: Apply the model to the real-time aggregated data stream, calculating the reconstruction error for each time window. Step 4: Generate a high-priority alert when the reconstruction error exceeds a dynamically adjusted threshold, indicating a pattern of traffic (e.g., a sudden spike in short-lived connections from multiple new IPs) that deviates from the learned norm."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]