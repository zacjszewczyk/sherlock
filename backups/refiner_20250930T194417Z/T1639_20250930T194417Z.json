[
  {
    "information_requirement": "Has an adversary exfiltrated data from a corporate mobile device by using a non-standard or alternative network protocol? (PIR)",
    "tactic_id": "TA0036",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1639",
        "name": "Exfiltration Over Alternative Protocol",
        "evidence": [
          {
            "description": "A mobile device initiates an outbound connection using a network protocol (e.g., FTP, IRC, SMB) that is statistically rare for both the individual device and its peer group, or transmits a volume of data via a common protocol (e.g., HTTPS, DNS) that is a statistical outlier compared to established baselines for the device, its peer group, and the overall network.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, guest networks, VPN concentrators, and Mobile Device Management (MDM) platform logs.",
            "action": "1. (Symbolic) Ingest a threat intelligence feed of known malicious IP addresses and C2-associated ports. Create a rule to continuously monitor Zeek conn.log for connections originating from the mobile device IP range. Trigger a high-severity alert if a connection's destination IP or port matches the feed. 2. (Statistical) Using Zeek conn.log, establish a 30-day rolling baseline for each mobile device and its peer group (e.g., department) that includes: a) a set of commonly used protocols and b) the 95th percentile for outbound bytes ('orig_bytes') per protocol. Generate a medium-severity alert if a device uses a protocol not present in its baseline set. Escalate to a high-severity alert if the outbound byte count for a single connection exceeds 3 standard deviations above the device's own 95th percentile for that protocol, or if it establishes a connection to a destination IP that has a low prevalence (<1%) across the mobile fleet. 3. (Machine Learning) a. Feature Engineering: For each connection in Zeek conn.log, create a feature vector including protocol, destination port, duration, orig_bytes, resp_bytes, connection state, and time-based features (hour of day, day of week). b. Unsupervised Anomaly Detection: Apply a density-based clustering algorithm like DBSCAN or an isolation forest model to the feature vectors of all mobile device traffic. Connections that the model flags as outliers or noise represent anomalous network behavior requiring analyst investigation. c. Time-Series Forecasting: For each device, model the daily total outbound data volume using a time-series algorithm (e.g., Prophet). An alert is generated when the actual daily volume exceeds the model's forecasted upper confidence bound, indicating an unusual spike in data transfer."
          },
          {
            "description": "A mobile device's DNS traffic exhibits characteristics of tunneling, defined by one or more of the following: a DNS query rate that is a statistical outlier; query names with abnormally high character length or Shannon entropy; an unusual distribution of DNS record types (e.g., high ratio of TXT/NULL queries); or queries to domains with low prevalence.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, network egress points, and Cloud Access Security Broker (CASB) logs.",
            "action": "1. (Symbolic) Maintain and apply a blocklist of known DNS tunneling C2 domains and dynamic DNS providers often used for malicious purposes. Create a rule to monitor the 'query' field in Zeek dns.log for requests from mobile devices. Trigger a high-severity alert on any match. 2. (Statistical) For each mobile device, establish a 30-day rolling baseline from Zeek dns.log for: a) total daily DNS query count, b) average query name length, c) average Shannon entropy of the query name (excluding the TLD), and d) distribution of query types (A, AAAA, CNAME, TXT, etc.). Generate an alert if any of these metrics deviates by more than 3 standard deviations from the device's historical baseline. Specifically, flag any entropy score consistently above 4.5 as highly suspicious of encoded data. 3. (Machine Learning) a. Feature Engineering: From Zeek dns.log, extract features for each query, including query length, subdomain count, Shannon entropy of the query name, ratio of numeric to alphabetic characters, and n-gram frequency scores. b. Supervised Classification: Train a classification model (e.g., Random Forest) on a labeled dataset containing examples of legitimate and malicious (tunneling) DNS queries. Apply the trained model to live mobile DNS traffic to generate a 'maliciousness' score for each query. Queries exceeding a predefined probability threshold (e.g., >0.85) are flagged for immediate review."
          },
          {
            "description": "A mobile device sends one or more HTTP/S POST requests with a cumulative data payload that is a statistical outlier, or exhibits periodic, 'heartbeat'-like connections to a non-corporate, low-reputation, or newly registered domain (NRD). This behavior is identified by analyzing the size, frequency, and destination of outbound traffic.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxies, internet gateways, VPN concentrators with SSL/TLS inspection capabilities, and Cloud Access Security Broker (CASB) platforms.",
            "action": "1. (Symbolic) Correlate the 'host' field from Zeek http.log and the 'server_name' from Zeek ssl.log against threat intelligence feeds for malicious domains and NRDs. Create a rule that joins this with Zeek conn.log data. Trigger a high-severity alert for any POST request to a matched domain where the connection's outbound payload ('orig_bytes') exceeds a nominal threshold (e.g., 500KB). 2. (Statistical) a. Volume Analysis: Using Zeek conn.log for traffic on ports 80 and 443, calculate the 99th percentile of 'orig_bytes' for all mobile devices. Alert when any single connection from a mobile device exceeds this threshold. b. Beaconing Detection: For each device-destination pair, group connections by time and calculate the time delta between consecutive connections. A low standard deviation in these time deltas (approaching zero) indicates robotic, heartbeat-like activity. Flag pairs with low standard deviation and a high connection count (>10 per hour) for review. 3. (Machine Learning) a. TLS/HTTP Fingerprinting: From Zeek ssl.log and http.log, extract JA3/JA3S hashes and User-Agent strings to profile client applications. Use a clustering algorithm to group known-good applications (e.g., standard browsers, approved corporate apps). Any traffic associated with a client fingerprint that falls outside of these known-good clusters, especially when associated with large POST requests, is flagged as anomalous. b. File-type Analysis: Train a classifier on features extracted from Zeek files.log (e.g., 'mime_type', 'is_orig', 'seen_bytes', entropy of the file header) to identify suspicious file transfers disguised within HTTP/S traffic, such as executables or archives being sent with a '.jpg' extension."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]