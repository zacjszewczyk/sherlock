[
  {
    "information_requirement": "Is an adversary using a compromised ICS host as a proxy for Command and Control communications?",
    "tactic_id": "TA0101",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T0884",
        "name": "Connection Proxy",
        "evidence": [
          {
            "description": "An ICS host (e.g., Engineering Workstation, HMI, Jump Server) exhibits a 'fan-out' network pattern: it receives an initial inbound connection from an external IP address (not belonging to any defined internal IT or OT network ranges), and then, within a 5-minute window, initiates new outbound connections to 5 or more distinct internal ICS assets (e.g., PLCs, RTUs, data historians) that it has not communicated with in the preceding 30 days. This abrupt change in behavior signifies a deviation from the host's established communication baseline and is highly anomalous in deterministic ICS environments where host communication paths are typically static.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Asset Inventory DB"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeters between IT and OT zones, IT/OT firewalls, ICS DMZ/Jump Servers, Engineering Workstations, HMIs, Data Historians, and critical control servers (e.g., SCADA servers).",
            "action": "1. Symbolic Logic:\n    *   Identify inbound connections in Zeek conn.log to any ICS host (id.resp_h) where the source IP (id.orig_h) is not within any defined internal IT or OT network ranges. This requires a defined list of internal IT/OT network ranges from an asset inventory.\n    *   For each identified inbound connection, within a 5-minute time window, search Zeek conn.log for subsequent outbound connections originating from that same ICS host (id.orig_h) to internal ICS assets (e.g., IP addresses in PLC, RTU, or historian subnets).\n    *   From these outbound connections, count the number of unique internal ICS assets contacted.\n    *   Compare this list of unique internal ICS assets against a 30-day historical baseline for the ICS host to identify which of these assets have not been communicated with by this specific host in the preceding 30 days.\n    *   If the count of unique, historically unobserved internal ICS assets exceeds 5, generate a high-severity alert.\n    *   Enrich the alert by correlating with Windows Event ID 4688 on the ICS host to identify the process initiating the outbound connections and with asset criticality from the Asset Inventory DB to prioritize response for high-value targets.\n2. Statistical Method:\n    *   For each ICS host, continuously calculate a 30-day rolling average and standard deviation of the daily count of unique internal ICS destination IP addresses (id.resp_h where id.orig_h is the ICS host and id.resp_h is an internal ICS asset from Zeek conn.log).\n    *   Daily, compute the Z-score for the current unique internal destination IP count relative to its 30-day baseline. Generate a medium-severity alert if the Z-score exceeds 3.0.\n    *   Additionally, determine the 99th percentile of unique internal destination IP counts over the 30-day baseline. If the current day's count exceeds this percentile, trigger an investigation.\n    *   Combine the Z-score with other risk factors, such as the ASN reputation of the external source IP and the criticality of the destination assets, to generate a composite risk score for alert prioritization.\n3. Machine Learning:\n    *   Implement a graph-based anomaly detection model (e.g., Graph Neural Networks, Node2Vec with clustering) using Zeek conn.log data, representing IPs as nodes and connections as edges.\n    *   Train the model on 90 days of historical ICS network traffic to establish a baseline of normal communication patterns and communities within the ICS environment.\n    *   Deploy the trained model to continuously analyze live Zeek conn.log data.\n    *   Alert on any ICS host identified by the model as suddenly becoming a central node, exhibiting connections to a high number of previously unobserved or rarely observed (e.g., <0.1% historical frequency) internal ICS assets.\n    *   Generate an alert when the model outputs an anomaly score exceeding a learned threshold (e.g., the top 1% of historical anomaly scores), particularly if this behavior is preceded by an external inbound connection to the ICS host.\n    *   Periodically retrain the model (e.g., quarterly) to adapt to controlled network changes and prevent model drift."
          },
          {
            "description": "A designated intermediary host (e.g., Jump Server, OT DMZ host) receives an inbound connection from an IP address outside of defined internal IT or OT network ranges, and subsequently, within 30 seconds, initiates one or more outbound connections to internal ICS assets (e.g., PLCs, RTUs) utilizing known ICS-native protocols (e.g., Modbus/TCP on port 502, DNP3 on port 20000, S7 on port 102/TCP, EtherNet/IP on port 44818/TCP). This pattern is especially suspicious if the inbound connection originates from a geo-location or ASN not associated with legitimate business or vendor activity, or if the relay activity is not documented in a change management request.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Asset Inventory DB",
              "Threat Intelligence Feeds",
              "Change Management Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "OT DMZ hosts, Jump Servers, SCADA servers, and network segments containing PLCs, RTUs, and other field devices.",
            "action": "1. Symbolic Logic:\n    *   Monitor Zeek conn.log for inbound connections to designated OT DMZ or Jump Server hosts where the source IP (id.orig_h) is not within any defined internal IT or OT network ranges. Cross-reference the external source IP against threat intelligence feeds for known malicious indicators.\n    *   For each such inbound event, immediately query Zeek conn.log for outbound connections from the same destination host (id.resp_h, which is the DMZ/Jump Server) to internal ICS assets within a 30-second window.\n    *   Filter these outbound connections to specifically match known ICS protocol destination ports (e.g., 502/TCP, 20000/TCP, 102/TCP, 44818/TCP).\n    *   If a match is found (inbound from external followed by outbound to ICS asset via ICS protocol within 30 seconds), trigger a critical alert.\n    *   Correlate the activity timestamp with change management logs to rule out authorized remote maintenance. Enrich with Windows Event ID 4624 (Logon Type 3 or 10) and 4688 (process creation) for user and process context.\n2. Statistical Method:\n    *   For each OT DMZ or Jump Server host, calculate the daily count of unique (external_IP, internal_ICS_IP, ICS_Protocol) triplets observed from Zeek conn.log. Where possible, enrich this analysis by correlating with user logon data (Windows Event ID 4624) on the jump server to form a 4-tuple: (external_IP, internal_ICS_IP, ICS_Protocol, user_account) to track anomalous relaying on a per-user basis.\n    *   Establish a 14-day rolling average and standard deviation for this metric.\n    *   Generate an alert if the current day's count exceeds the average by 3 standard deviations, or if it falls into the top 99.9th percentile of historical observations. Prioritize alerts where the internal ICS IP is categorized as a high-value asset.\n3. Machine Learning:\n    *   Develop a sequence prediction model (e.g., Hidden Markov Model or Recurrent Neural Network) trained on 60 days of historical Zeek conn.log data for OT DMZ and Jump Server hosts.\n    *   The model should learn typical inbound-outbound connection sequences, associated protocols, timing patterns, connection durations, and bytes transferred. C2 relay activity may exhibit different patterns (e.g., long-lived, low-bandwidth 'heartbeat' traffic) compared to legitimate, interactive maintenance sessions.\n    *   Deploy the model to continuously analyze live connection sequences.\n    *   Alert on sequences that deviate significantly from learned normal patterns, specifically flagging instances where an external inbound connection is immediately followed by an unexpected ICS protocol connection to an internal asset with a high anomaly score."
          },
          {
            "description": "A host exhibits network traffic consistent with C2 protocol tunneling, evidenced by specific anomalies within legitimate protocols (DNS, HTTP/S, ICMP), followed by subsequent new connections from that host to other internal ICS assets within 60 seconds. Anomalies include: DNS queries with length exceeding 64 characters or Shannon entropy > 4.0 bits/character; HTTP/S traffic with non-standard user-agents, anomalous JA3/JA3S hashes, or high-entropy SNI values; or ICMP packets with unusually large payloads.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek icmp.log",
              "Zeek ssl.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS servers, hosts with direct or proxied internet access from the OT environment (e.g., Historians, Engineering Workstations), perimeter firewalls/proxies, Web Proxies, and network segments where ICMP traffic is prevalent.",
            "action": "1. Symbolic Logic:\n    *   DNS Tunneling: Create SIEM rules to flag Zeek dns.log entries where the 'query' field length > 64, entropy > 4.0, or matches known DGA patterns.\n    *   HTTP/S Tunneling: Monitor Zeek http.log for non-standard user-agents or methods. Monitor Zeek ssl.log for non-browser JA3 hashes, self-signed certificates, or SNI values that do not match the destination IP's reverse DNS.\n    *   ICMP Tunneling: Monitor Zeek icmp.log for payloads significantly larger than standard echo-request/reply packets.\n    *   Upon detection of any tunneling anomaly, immediately search Zeek conn.log for any new connections originating from the source host (id.orig_h) to internal ICS assets within 60 seconds. Correlate with Windows Event ID 4688 on the source host for suspicious processes (e.g., powershell.exe, rundll32.exe).\n2. Statistical Method:\n    *   For each host, compute 30-day rolling baselines (average, standard deviation, percentiles) for protocol-specific metrics: DNS query/response byte counts and query entropy (dns.log); HTTP URI/user-agent entropy (http.log); ICMP packet sizes (icmp.log); and frequency of TLS cipher suites, versions, and JA3/JA3S hashes (ssl.log).\n    *   Generate alerts when a host's daily metrics exceed a high percentile (e.g., 99.5th) or a Z-score threshold (e.g., >3.0) of its historical baseline.\n    *   Create a composite risk score by combining multiple statistical anomalies. For example, a host with high DNS query entropy and a spike in TLS connections using a rare JA3 hash should be prioritized.\n    *   Correlate these statistical alerts with subsequent internal connections from Zeek conn.log within a 60-second window to identify the full proxying behavior.\n3. Machine Learning:\n    *   Train a supervised classifier (e.g., Random Forest) on labeled traffic, using features from Zeek logs: query/URI length, entropy, TLD distribution, HTTP method/status, ICMP type/code, packet sizes, JA3/JA3S hashes, and certificate validity.\n    *   If labeled malicious data is scarce, use a one-class SVM or Isolation Forest model trained only on 'normal' traffic to detect novel tunneling anomalies.\n    *   Deploy the model to score live traffic. When a high-confidence prediction for tunneling (e.g., model score > 0.95) is made, immediately analyze Zeek conn.log for new connections from that host to internal ICS assets within 60 seconds, which indicates C2 un-tunneling and proxying."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]