[
  {
    "information_requirement": "Is the adversary attempting to discover security software on our managed mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1418.001",
        "name": "Security Software Discovery",
        "evidence": [
          {
            "description": "A mobile application, within five minutes of its first launch on an MDM-enrolled device, generates a DNS query for a domain queried by less than 1% of enterprise devices in the last 30 days, and subsequently initiates a TCP or UDP connection to the resolved IP address with a data transfer exceeding 1KB.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "MDM Application Inventory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, VPN Concentrators, DNS Resolvers, MDM/EMM Servers",
            "action": "Using the device identifier from MDM/EMM logs, correlate the device's assigned IP address with network logs. For DNS requests from this IP, execute the following: 1. (Symbolic) Match the 'query' field in Zeek dns.log against threat intelligence feeds for known C2, DGA, or newly registered domains. Concurrently, inspect the 'ja3' and 'ja3s' fields in Zeek ssl.log for matches against known malicious hashes. 2. (Statistical) For domains not on an organizational allow-list, calculate their 30-day query prevalence across the mobile device fleet. Generate an alert if a domain is queried by fewer than 5 unique devices or its query frequency falls below the 1st percentile. Additionally, calculate the Shannon entropy of the FQDN and alert if the value exceeds 3.5. 3. (ML) Train a per-device time-series anomaly detection model (e.g., SARIMA, LSTM) on outbound data volume ('bytes_out' from Zeek conn.log) aggregated in one-minute intervals. Generate an alert if an anomalous spike is detected within five minutes of a new application's first-launch event from MDM logs, particularly when correlated with a low-prevalence DNS query."
          },
          {
            "description": "A mobile application generates an HTTP/S POST request where the request body size exceeds the 99th percentile of its 30-day baseline for that specific application, or the request URI has a Shannon entropy value greater than 3.5, and the destination Server Name Indication (SNI) is uncategorized or has a low reputation score.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Web Application Firewalls, Forward Proxies, VPN Concentrators",
            "action": "For traffic originating from the mobile device IP address space, establish per-application baselines for HTTP/S activity. Implement the following detections: 1. (Symbolic) In Zeek http.log and ssl.log, match the 'host' and 'server_name' fields against threat intelligence lists of malicious sites. Create an alert for HTTP requests from mobile applications that use non-standard User-Agent strings (e.g., 'curl', 'python-requests', or empty) that deviate from established mobile browser or app agents. 2. (Statistical) For each application, baseline its POST request body size ('request_body_len' in http.log) and URI entropy. Generate an alert if a request's size exceeds the 99th percentile or its URI entropy is more than 3 standard deviations above its mean. Separately, baseline the set of destination SNIs per application and alert if an application communicates with an SNI never before seen for that app across the enterprise. 3. (ML) Train an unsupervised Isolation Forest model on HTTP/S session features from Zeek logs, including: URI length, request method, request body length, SNI prevalence, User-Agent string rarity, response MIME type, and HTTP response status code. Flag sessions identified as significant outliers for analyst investigation."
          },
          {
            "description": "A newly installed or updated application on a managed mobile device requests the 'android.permission.QUERY_ALL_PACKAGES' permission (Android) or utilizes private APIs such as 'LSApplicationWorkspace' (iOS), and this behavior is anomalous compared to other applications in the same app store category or on an organizational allow-list.",
            "data_sources": [
              "MDM/EMM Application Manifest Scans",
              "Mobile App Vetting Service Reports"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) Platform, Third-party Application Vetting System",
            "action": "Continuously analyze application manifests and behavior using MDM/EMM and integrated app vetting platforms. 1. (Symbolic) Create an automated alert for any application not on a pre-defined 'Device Management' or 'Security Tools' allow-list that is found to have the 'QUERY_ALL_PACKAGES' permission in its Android manifest or is flagged by the vetting service for using private enumeration APIs on iOS. 2. (Statistical) Calculate the prevalence of the 'QUERY_ALL_PACKAGES' permission across the entire mobile application inventory, segmented by app store category. Flag any application where this permission is statistically rare for its category (e.g., present in <5% of 'Productivity' apps). Additionally, calculate a permission co-occurrence matrix and alert on applications requesting statistically improbable combinations, such as 'QUERY_ALL_PACKAGES' with 'INTERNET' and 'ACCESS_FINE_LOCATION', if the combination falls below the 1st percentile of observed pairings. 3. (ML) Develop and train a gradient boosting classifier (e.g., XGBoost) to produce an application risk score. Use features such as: presence of 'QUERY_ALL_PACKAGES' or private API usage (high weight), total number of requested permissions, developer reputation score, app store rating, user review sentiment analysis, time since last update, and whether the app is available on an official app store. Trigger an alert when an application's predicted risk score surpasses a tuned threshold."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]