[
  {
    "information_requirement": "Is an adversary using default credentials for lateral movement within the OT network? (TA0109 - Lateral Movement)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0812",
        "name": "Default Credentials",
        "evidence": [
          {
            "description": "A successful network connection to a critical ICS device (e.g., PLC, RTU, HMI) on a management or ICS protocol port (e.g., 20, 21, 22, 23, 80, 443, 102, 502, 2222, 20000, 44818, 47808) is immediately followed by a successful authentication event logged in a protocol-specific log (e.g., Zeek ssh.log, ftp.log) using a known default username (e.g., 'admin', 'root', '1', 'operator', 'ics', 'develop'). The authentication's source IP is not on an established whitelist for the device, or the connection originates from a network segment (e.g., IT network) that is not authorized for direct management access.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssh.log",
              "Zeek ftp.log",
              "Zeek telnet.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek s7comm.log",
              "ICS Asset Inventory",
              "Network Access Control Lists (ACLs)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 1 (Process Control) and Level 2 (Supervisory Control) networks, specifically targeting PLCs, RTUs, HMIs, IEDs, and other field devices. Also, the IT/OT DMZ (Purdue Model Level 3.5), network traffic between Engineering Workstations and Level 2/1 devices, and connections to SCADA servers and Historian databases.",
            "action": "1. Symbolic Logic: Join Zeek conn.log with protocol-specific authentication logs (ssh.log, ftp.log, telnet.log) on the 'uid' field. Filter for connections to destination IPs listed as critical ICS assets in an asset inventory and on common management ports. Alert if conn.log shows a successful connection (state='ESTABLISHED') and the corresponding authentication log shows a successful login ('auth_success'=true) where the 'user' field matches a predefined list of high-risk default credentials. For protocols without explicit authentication logs (e.g., Modbus, DNP3), alert on any 'write' or 'control' function codes originating from an IP not on an approved whitelist for that device. 2. Statistical Method: For each critical ICS device, establish a 30-day rolling baseline of connection and authentication metrics. Key metrics include: count of unique source IPs, entropy of source IPs, ratio of successful to failed authentications, and the set of usernames seen. Calculate the 99th percentile for the count of unique source IPs and the 1st percentile for username rarity. Trigger an alert if: a) a successful authentication occurs with a username from the known default list that has never been seen for that device in the baseline, or b) the number of unique source IPs attempting authentication in a 24-hour period exceeds the 99th percentile, especially if one of those attempts results in a successful login with a default credential. 3. Machine Learning: Develop an unsupervised anomaly detection model (e.g., Isolation Forest or a Graph-based model) using features from aggregated Zeek logs. Features should include: source IP, destination IP, destination port, protocol, connection duration, bytes sent/received, a binary flag if the username is on a default credential list, and categorical features for ICS protocol function codes (e.g., Modbus function code). The model learns normal OT traffic patterns. Alert on events or connection sequences with high anomaly scores, particularly prioritizing those where the 'default_credential' flag is true and the source/destination pair is rare or previously unseen."
          },
          {
            "description": "A successful logon (Windows Event ID 4624, Logon Type 2 or 10) on an Engineering Workstation (EWS) or jump server, using a known default or shared account, is followed within a 5-minute window by the execution of a remote access tool or script (Windows Event ID 4688, PowerShell Event ID 4104) such as `mstsc.exe`, `putty.exe`, `plink.exe`, or PowerShell cmdlets like `Enter-PSSession`. This process then initiates an outbound network connection (Zeek conn.log) from the EWS to one or more ICS devices on management or control ports. The sequence is anomalous, targeting devices not typically accessed by that workstation or occurring at an unusual time.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Zeek conn.log",
              "Zeek ssh.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Jump Servers, Remote Access Servers, SCADA Servers, and Human-Machine Interfaces (HMIs) running Windows operating systems within the Process Control Network (PCN) or IT/OT DMZ.",
            "action": "1. Symbolic Logic: Create a rule that correlates a successful logon (Windows Event ID 4624) on an EWS with a subsequent process creation (Windows Event ID 4688) for a known remote access tool (`putty.exe`, `mstsc.exe`, `psexec.exe`) or a PowerShell script execution (Event ID 4104) containing remote access commands (`Enter-PSSession`, `New-CIMSession`). The correlation should match the `Logon ID` field and occur within a 5-minute window. Further correlate this with an outbound network connection (Zeek conn.log) from the EWS's IP to an ICS device IP. Alert if the initial logon account name is on a list of known default or shared accounts. 2. Statistical Method: For each EWS, establish a 60-day behavioral baseline of user activity. Features should include: login frequency per hour/day, set of processes executed, and the set of destination ICS devices connected to. Calculate the rarity of each process and each destination device for each EWS. Generate a risk score for each session by summing the rarity scores of the executed processes and accessed devices. Alert when a session's risk score exceeds the 98th percentile of the baseline, especially if the session was initiated by a default or shared account. 3. Machine Learning: Train a User and Entity Behavior Analytics (UEBA) sequence model (e.g., LSTM or Transformer) on historical event logs from EWS and jump servers. The model should learn normal sequences of events (logon -> process creation -> network connection). Features for each event in the sequence should include: user account, logon type, process name, parent process, command-line arguments, destination IP, and destination port. The model will output an anomaly score for each new sequence. Alert on sequences with high anomaly scores that involve a default account name and contain a process/destination IP pair not seen in the training data for that user or workstation."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]