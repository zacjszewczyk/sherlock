[
  {
    "information_requirement": "Is an adversary changing PLC operating modes to bypass security controls or prepare for further action? (TA0103 - Evasion)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0858",
        "name": "Change Operating Mode",
        "evidence": [
          {
            "description": "An S7comm 'Set CPU Mode' command (function_code 0x29) or an EtherNet/IP 'Set Attribute Single' service (service_code 0x4C, Class 0x91, Instance 1, Attribute 8) targeting a PLC is observed, where the new mode is 'PROGRAM', 'REMOTE', or 'STOP', and the command's execution timestamp does not fall within a pre-approved, scheduled maintenance window documented in an operational calendar.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network monitoring points (e.g., network taps, SPAN ports) on Level 1 (Control Network) and Level 2 (Supervisory Network) segments, and at the boundary of the Industrial DMZ (IDMZ) to capture all PLC-related traffic.",
            "action": "1. Symbolic Logic: Create a SIEM rule that parses Zeek s7comm.log for `function_code` == 0x29 and Zeek enip.log for `service_code` == 0x4C targeting the specified class/instance/attribute. For each match, extract the `ts` (timestamp), `id_orig_h` (source), and `id_resp_h` (PLC). The rule then performs a lookup against a data source containing approved maintenance windows (e.g., a CSV file or database table with PLC_IP, start_time, end_time). Trigger a high-severity alert if the event's timestamp is outside any approved window for that specific PLC. 2. Statistical Method: For each PLC, ingest Zeek s7comm.log and enip.log data over a 30-day period, excluding known maintenance windows, to build a baseline. Calculate the 95th percentile for the count of mode change commands per hour for each day of the week (e.g., Monday at 2 PM has a 95th percentile of 0). Generate an alert if the current hourly count of mode change commands for any PLC exceeds its established percentile, indicating an abnormal frequency of activity. 3. Machine Learning: Develop a time-series anomaly detection model (e.g., Prophet, LSTM) for each critical PLC using historical Zeek log data. Features should include the count of mode change events per hour, source IP, and the specific mode being set. The model will learn the normal cadence of these changes. Trigger an alert when an observed mode change event has a very low probability score (e.g., < 0.01) according to the model, or when the number of events in a time window significantly deviates from the model's forecast."
          },
          {
            "description": "An ICS protocol command changing a PLC's operating mode (e.g., S7comm 'Set CPU Mode' or EtherNet/IP 'Set Attribute Single') originates from a source IP address that is not present in an authoritative asset inventory of authorized Engineering Workstations (EWS), maintenance laptops, or designated jump servers for that specific OT environment.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments containing Engineering Workstations (EWS), jump servers, and maintenance access points. Also, Level 1 (Control Network) and Level 2 (Supervisory Network) segments to monitor all communications to PLCs, and industrial firewall logs at the IT/OT boundary.",
            "action": "1. Symbolic Logic: Maintain an allowlist of authorized EWS and server IP addresses in a SIEM lookup file or reference set. Create a correlation rule that triggers when a mode change command is detected in Zeek s7comm.log or enip.log, and the `id_orig_h` (source IP) is not in the authorized allowlist. This provides a high-confidence alert for unauthorized source activity. 2. Statistical Method: For each PLC, establish a 30-day rolling baseline of unique source IPs that have initiated mode change commands. Trigger a medium-severity alert if a mode change command originates from an IP address never before seen performing this action in the baseline period. Additionally, calculate the 99th percentile of the daily count of unique source IPs per PLC; alert if this count is exceeded, which could indicate a scanning or distributed attack attempt. 3. Machine Learning: Train a supervised classification model (e.g., Random Forest) using historical Zeek conn.log data associated with mode change commands. Features should include `id_orig_h`, `id_resp_h`, `id_orig_p`, `proto`, `duration`, `orig_bytes`, and time-of-day. Label connections from known EWS IPs as 'authorized' (class 0) and all others as potentially 'unauthorized' (class 1). Deploy the model to score new connections in real-time; alert when a connection associated with a mode change is classified as 'unauthorized' with a high probability (>0.9)."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary executing unauthorized program changes by manipulating PLC operating modes? (TA0104 - Execution)",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0858",
        "name": "Change Operating Mode",
        "evidence": [
          {
            "description": "A sequence of ICS commands is observed from a single source to a single PLC within a 15-minute window, consisting of: (1) a command to change the operating mode to 'PROGRAM' or 'REMOTE', followed by (2) a program download command (e.g., S7comm 'Download Block'), and then (3) a command to change the operating mode back to 'RUN'.",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network monitoring points on Level 1 (Control Network) segments housing critical PLCs, and Level 2 (Supervisory Network) segments connecting PLCs to SCADA/HMI systems and Engineering Workstations (EWS).",
            "action": "1. Symbolic Logic: Implement a stateful SIEM correlation rule that triggers on the detection of the specific three-event sequence. The rule must track events based on a common key (`id_orig_h`, `id_resp_h`) and enforce the order of operations: [Mode Change to Program/Remote] -> [Program Download] -> [Mode Change to Run] within a 15-minute sliding window. An alert from this rule indicates a full program download lifecycle. 2. Statistical Method: For authorized program download sequences, baseline the typical time delta between each step of the sequence (e.g., time from mode change to download, time from download to mode change back). Calculate the median and interquartile range (IQR) for these durations. Alert if an observed sequence has a duration between steps that falls outside the `Q1 - 1.5*IQR` to `Q3 + 1.5*IQR` range. Extremely short durations may indicate automated scripts, while very long durations could signify manual, unauthorized fumbling. 3. Machine Learning: Use a sequence anomaly detection model like a Hidden Markov Model (HMM) or an LSTM-based autoencoder. Train the model on historical sequences of all ICS commands (not just the target sequence) for each PLC. The model learns the normal transition probabilities between different command states. Alert when an observed sequence of commands has a low log-likelihood score, indicating it is a rare or anomalous progression of events, even if the individual commands are legitimate."
          },
          {
            "description": "On an Engineering Workstation (EWS), a process is created (`Windows Event ID 4688`) from an executable not on an established allowlist of engineering software. This process then initiates an outbound network connection (`Windows Event ID 5156`) to a PLC's IP address, which is immediately followed by an ICS mode change command observed in network traffic (`Zeek s7comm.log` or `enip.log`) from the EWS to the PLC, all occurring within a 60-second window.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoint devices designated as Engineering Workstations (EWS) and Maintenance Laptops, monitored via host-based agents (EDR/Sysmon). Also, the network segments where these EWS devices reside to capture their outbound traffic to the OT environment.",
            "action": "1. Symbolic Logic: Create a SIEM correlation rule joining three data sources, keyed by EWS IP address and a 60-second time window. The logic is: (A) `Windows Event ID 4688` where `NewProcessName` is NOT in ('TIA.exe', 'Studio5000.exe', etc.), AND (B) `Windows Event ID 5156` where `ProcessID` matches (A) and `DestAddress` is a PLC, AND (C) Zeek log (`s7comm` or `enip`) shows a mode change command where `id_orig_h` matches the EWS IP from (A) and `id_resp_h` matches the PLC IP from (B). Trigger a critical alert on a successful correlation. 2. Statistical Method: For each EWS, profile the set of processes that normally communicate with PLCs. Calculate a daily Shannon entropy score based on the diversity of process names (`NewProcessName` from Event ID 4688 correlated with Zeek `conn.log`) initiating these connections. A stable system will have low entropy (few, predictable processes). Alert if the daily entropy score exceeds the 95th percentile of its historical values, indicating an unusual variety of processes are now interacting with PLCs. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost) using features from both host and network logs. Host features include `NewProcessName`, `ParentProcessName`, and `CommandLine`. Network features include `id_resp_p`, `proto`, and `duration`. Label known-good engineering activity as 'benign'. The model will learn to predict if a process initiating a connection to a PLC is 'malicious'. Alert when the model predicts 'malicious' with high confidence, especially when the connection is immediately followed by a mode change command."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]