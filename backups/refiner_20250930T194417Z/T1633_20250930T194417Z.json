[
  {
    "information_requirement": "Is malware on a corporate mobile device attempting to detect if it is running in a sandbox or emulator? (TA0030 - Defense Evasion)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1633",
        "name": "Virtualization-Sandbox Evasion",
        "evidence": [
          {
            "description": "A non-system, user-installed application process queries for two or more system properties known to be associated with emulated or sandboxed Android environments (e.g., ro.hardware: goldfish, ro.kernel.qemu: 1, ro.product.brand: generic, ro.product.model: sdk, ro.build.fingerprint contains 'test-keys') within the first 60 seconds of its initial execution.",
            "data_sources": [
              "Mobile device OS logs (e.g., Android logcat)",
              "MDM audit logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform, Centralized SIEM, Network Egress Points (monitoring with Zeek), Mobile Device Endpoints",
            "action": "1. (Symbolic) Implement a SIEM rule that triggers when mobile OS logs show a process not on an approved publisher list (via MDM) querying for two or more properties from a watchlist within 60 seconds of process creation. The watchlist must include: 'ro.hardware:goldfish', 'ro.hardware:ranchu', 'ro.kernel.qemu:1', 'ro.product.brand:generic', 'ro.product.model:sdk', 'ro.build.fingerprint:test-keys'. 2. (Statistical) For all non-system applications, ingest mobile OS logs to profile system property query behavior. Calculate the 99th percentile for the count of unique properties queried by an application in the first 5 minutes of execution. Generate a high-severity alert for any application exceeding this threshold. Additionally, calculate the entropy of the queried property names; a low entropy score may indicate repetitive checking of a small set of known sandbox properties. 3. (Machine Learning) Train a Random Forest classifier to predict 'evasive behavior'. Use features such as: count of suspicious property queries, entropy of property names, time delta between install and first query, process name characteristics (e.g., length, randomness), and application publisher reputation from MDM data. Correlate a high-confidence 'evasive' prediction with subsequent network activity in Zeek conn.log, such as connections to non-standard ports or IPs with low reputation scores, to automatically escalate incident priority."
          },
          {
            "description": "A newly installed application, within the first 60 seconds of its initial launch, requests permissions for and makes API calls to access three or more sensors or data sources indicative of human interaction (e.g., accelerometer, gyroscope, light sensor, READ_CONTACTS, READ_CALL_LOG, READ_SMS). This activity is followed by either no network connections or a single, small (<1KB) network beacon within the next 5 minutes.",
            "data_sources": [
              "Mobile device OS logs (e.g., Android logcat)",
              "MDM audit logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform, Centralized SIEM, Network Egress Points (monitoring with Zeek), Mobile Device Endpoints",
            "action": "1. (Symbolic) Create a SIEM correlation rule that alerts if MDM audit logs show a single application process requesting and accessing three or more 'human interaction' or 'user data' APIs (e.g., getSensorList, READ_CONTACTS, READ_CALL_LOG) within 60 seconds of first launch. Escalate the alert if Zeek conn.log shows either zero outbound connections or a single TCP/UDP connection with an orig_bytes value less than 1024 from the device in the subsequent 5 minutes. 2. (Statistical) Using MDM logs, profile the sequence of API calls made by applications during their first 5 minutes. For each application category, establish a baseline of common API call sequences. Use a sequence comparison algorithm, like Levenshtein distance, to score the deviation of a new application's call sequence from its category's baseline. Alert on applications with a deviation score in the 95th percentile. Additionally, monitor the entropy of sensor data (e.g., accelerometer); an entropy value near zero suggests static, non-human data typical of an emulator. 3. (Machine Learning) Deploy a pre-trained LSTM Autoencoder model for time-series anomaly detection on sensor data streams (accelerometer, gyroscope) from mobile endpoints. Feed real-time sensor data accessed by newly installed applications into the model. A high reconstruction error indicates the data does not match patterns of normal human interaction, suggesting the application is running in an emulated environment. Correlate these findings with process and network data to confirm."
          },
          {
            "description": "A single application process, within the first 5 minutes of execution post-installation, initiates DNS queries for three or more distinct public NTP domains (e.g., time.google.com, pool.ntp.org) or public IP geolocation service domains (e.g., ip-api.com, ipinfo.io). This behavior is not preceded by or concurrent with significant user interaction with the application.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "MDM audit logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) Platform, Centralized SIEM, Network Egress Points (monitoring with Zeek), Corporate DNS Resolvers",
            "action": "1. (Symbolic) Implement a SIEM rule correlating MDM process creation events with network logs. Alert when a new process on a mobile device generates DNS queries (from Zeek dns.log) for three or more distinct domains from a watchlist of public time (e.g., 'pool.ntp.org', 'time.google.com', 'time.nist.gov') and geolocation services (e.g., 'ip-api.com', 'ipinfo.io') within its first 5 minutes of execution. 2. (Statistical) Using Zeek dns.log, establish a 30-day rolling baseline of unique time and geolocation domains queried per device. Within a 10-minute sliding window, alert if the count of such domains for any single device exceeds 3 standard deviations above its own historical baseline. This detects anomalous time-checking or location-checking behavior on a per-device basis. 3. (Machine Learning) Apply a DBSCAN clustering algorithm to 5-minute windows of network traffic from mobile devices. Engineer features from Zeek dns.log and conn.log, including: count of unique FQDNs queried, entropy of queried domain names, ratio of DNS queries to TCP/UDP connections, JA3/JA3S hash, and total bytes transferred. Manually investigate clusters characterized by a high number of diverse DNS queries to time/geo services followed by minimal data transfer, as this pattern is highly indicative of coordinated sandbox evasion."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]