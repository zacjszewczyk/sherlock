[
  {
    "information_requirement": "Is an adversary using remote services to gain initial access to the ICS network? (PIR)",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0886",
        "name": "Remote Services",
        "evidence": [
          {
            "description": "A successful remote service connection (RDP, VNC, SSH) to a critical OT asset (e.g., HMI, EWS) that exhibits multiple anomalous characteristics simultaneously, such as originating from a source IP not on an established access control list, occurring outside of standard maintenance windows, using a non-standard user account for that asset, or being the first such connection type seen from that source IP in over 90 days.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek rdp.log",
              "Zeek ssh.log",
              "Windows Event ID 4624",
              "Microsoft-Windows-TerminalServices-LocalSessionManager/Operational Event ID 21"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IT/OT Network Perimeter (ICS DMZ), Jump Servers, VPN Concentrators, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, Process Control Networks (PCN).",
            "action": "1. Symbolic Logic: Maintain an explicit allow list of (Source IP, User Account, Destination Asset, Port) tuples for authorized remote access. Ingest Zeek conn.log, Zeek ssh.log, and Windows Event ID 4624/21 into a SIEM. Create a rule to alert on any successful connection (e.g., Zeek conn_state = 'SF', ssh.log auth_success = T, Event ID 4624 Logon Type 10) to a critical OT asset on ports 22, 3389, or 5900 where the connection's tuple is not on the allow list. 2. Statistical Method: For each critical OT asset, establish a multi-dimensional baseline from the last 60 days of logs, capturing: (a) the set of known source IP subnets, (b) the distribution of login times by hour-of-day, and (c) typical session durations from the Zeek conn.log 'duration' field. For each new connection, calculate a risk score. Add points for each deviation: +1 for source IP from a new/rare ASN, +1 for login time >2 standard deviations from the mean for that hour, +1 for session duration >95th percentile. Alert on any connection with a cumulative score of 2 or more. 3. Machine Learning: Train an unsupervised anomaly detection model (e.g., Isolation Forest) on historical remote session data. Engineer features for each session: source IP geolocation (country, ASN), is_source_on_allow_list (boolean), destination_asset_criticality (numeric), hour_of_day, day_of_week, protocol, session_duration, and bytes_transferred (orig_bytes + resp_bytes from Zeek conn.log). Apply the trained model to new sessions in real-time. Alert on sessions receiving a high anomaly score, as these represent rare and suspicious combinations of feature values not seen in the training data."
          },
          {
            "description": "A brute-force or password spraying attack pattern is observed, defined by a statistically significant high rate of failed remote service authentications (RDP, SSH) from a single source IP against one or more OT assets, immediately followed by a successful authentication from the same source IP to one of the targeted assets within a short timeframe.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek ssh.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Externally-facing remote access servers, Jump Servers, ICS DMZ, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Active Directory Domain Controllers within the OT environment.",
            "action": "1. Symbolic Logic: Create a SIEM rule that counts failed logins (Windows Event ID 4625, Zeek ssh.log entries where auth_success=F) per source IP per destination IP over a 5-minute sliding window. Trigger an initial event if the count for a single source IP exceeds a hard threshold (e.g., 20 failures). Correlate this trigger with a subsequent successful login (Windows Event ID 4624, Zeek ssh.log auth_success=T) from the same source IP to any of the targeted destinations within the next 15 minutes. Generate a high-severity alert if this full sequence is detected. 2. Statistical Method: For each OT asset, establish a 30-day baseline of the failed login rate (count/minute) per source IP. Calculate the 99th percentile of this rate. In real-time, monitor the failed login rate from each source IP to each asset. Alert if the current rate exceeds the 99th percentile for that asset. Escalate the alert priority if a successful login from the anomalous source IP occurs within 30 minutes after the rate-based alert. 3. Machine Learning: Model login activity as a sequence of events for each source-destination pair. Train a Hidden Markov Model (HMM) with three states: 'Normal Activity' (low rate of fails/successes), 'Brute-Force Attack' (high rate of fails, low/zero successes), and 'Successful Compromise' (a success event following the Brute-Force state). The model learns the transition probabilities between these states from historical data. Apply the model to live login event streams. An alert is generated when the model's most likely path for an observed sequence transitions into the 'Successful Compromise' state."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary using remote services for lateral movement within the ICS network? (PIR)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0886",
        "name": "Remote Services",
        "evidence": [
          {
            "description": "A successful remote service connection (RDP, VNC, SSH) is observed between two internal OT assets (e.g., HMI to EWS) where this specific source-destination-port-user combination has not been seen in a 90-day historical baseline. This includes connections that violate the defined OT communication matrix, such as a Data Historian initiating an RDP session to an HMI.",
            "data_sources": [
              "Zeek rdp.log",
              "Zeek conn.log",
              "Zeek ssh.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, Process Control Servers, Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), Internal OT network segments.",
            "action": "1. Symbolic Logic: Using 90 days of Zeek conn.log and Windows Event ID 4624, generate a baseline set of all observed (source_host, destination_host, destination_port, user_account) tuples representing normal internal remote connections. Store this set in a lookup table. In real-time, for every new successful internal remote connection, check if its corresponding tuple exists in the baseline set. Generate a high-severity alert for any connection not found in the baseline, as it represents a new and unauthorized communication path. 2. Statistical Method: For each internal host acting as a source, use a 30-day rolling window to baseline two metrics: (a) Fan-out: the number of unique destination hosts it connects to via RDP/SSH. (b) Destination Entropy: the Shannon entropy of the set of destination hosts it connects to, measuring the randomness of its connections. Calculate the 95th percentile for both metrics for each host. Alert if a host's daily fan-out or destination entropy exceeds its established 95th percentile, indicating potential scanning or anomalous pivoting. 3. Machine Learning: Model the OT network as a directed graph where nodes are hosts and edges represent successful remote connections. Enrich nodes with attributes (e.g., asset_type: HMI, EWS, PLC; criticality_score) and edges with attributes (e.g., protocol, user_account, connection_frequency). Use a graph-based anomaly detection algorithm (e.g., GraphSAGE) to learn normal graph structure and edge probabilities. Alert on the creation of low-probability edges (e.g., an HMI initiating RDP to another HMI) or significant, anomalous changes in edge weights (e.g., a massive data transfer over a normally quiet link)."
          },
          {
            "description": "An SMB connection is made to an administrative share (e.g., 'C$', 'ADMIN$') on a critical OT asset (EWS, HMI) from a non-administrative workstation or user account. This includes the transfer of executable files (.exe, .ps1), libraries (.dll), or ICS project files (.ACD, .L5K) via SMB to or from an OT asset, especially when the transfer is inconsistent with established software deployment or project management workflows.",
            "data_sources": [
              "Zeek smb_mapping.log",
              "Zeek smb_files.log",
              "Windows Event ID 5145",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Data Historians, Process Control Servers, Domain Controllers within the OT network, File Servers, Internal OT network segments.",
            "action": "1. Symbolic Logic: Monitor for access to administrative shares (C$, ADMIN$) on critical OT assets using Windows Event ID 5145 or Zeek smb_mapping.log. Correlate access with file write activity from the same source using Zeek smb_files.log (action = SMB::FILE_WRITE) or Windows file auditing, specifically looking for suspicious file extensions (.exe, .dll, .ps1, .bat, .L5K, .ACD). Further correlate with a subsequent process creation (Windows Event ID 4688) for that exact filename on the destination host within 10 minutes. Alert on this full three-step sequence. 2. Statistical Method: For each user account, create a 30-day baseline of the set of admin shares they typically access. Alert if a user accesses an admin share on an OT asset for the first time. Separately, for each source-destination host pair, establish a baseline for the volume of SMB data transferred and the entropy of file extensions seen in Zeek smb_files.log. Alert if the volume of an SMB transfer exceeds 3 standard deviations above the baseline mean, or if the file extension entropy for a session drops to a near-zero value, indicating a targeted transfer of a single file type. 3. Machine Learning: Implement a User and Entity Behavior Analytics (UEBA) model focused on SMB activity using a clustering algorithm (e.g., DBSCAN). Engineer a feature vector for each SMB session: user, source_host, destination_host_type (EWS, HMI), share_name, file_extension_category (executable, script, project, document), file_size, and time_of_day. The model will create clusters representing normal behaviors. Alert on any SMB activity that does not fit into an existing cluster (flagged as noise by DBSCAN), as it represents a significant deviation from all learned normal behaviors."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]