[
  {
    "information_requirement": "Is the adversary spoofing reporting messages to hide the true state of the industrial process? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0856",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Reporting messages for a specific ICS field device exhibit protocol-level sequence number or timing anomalies. This includes duplicate sequence numbers from the same source within a short window (e.g., 5 seconds), non-monotonic sequence number progression (a number decreases or resets without a corresponding protocol-level reset command), or gaps in sequence numbers. Additionally, the inter-arrival time (IAT) between messages deviates significantly from the device's configured reporting frequency (e.g., IAT < 50ms or > 10s for a device that reports every 1s).",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), the Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.",
            "action": "1. Symbolic Logic: Configure a SIEM rule to alert when a Zeek dnp3.log entry shows a dnp3.seq_num or a modbus.log shows a modbus.trans_id from the same id.orig_h that is a duplicate of one seen in the last 5 seconds. Create a second rule to detect when a sequence number from a specific id.orig_h decreases without a corresponding 'Cold Restart' (DNP3 Function Code 13) or 'Restart Communications Option' (Modbus Function Code 8) command observed targeting the device in the preceding 60 seconds. 2. Statistical Method: For each unique device (id.orig_h), calculate the inter-arrival time (IAT) between its messages in Zeek logs. Over a 30-day rolling window, establish the 5th and 95th percentiles for the IAT. Alert if the current IAT falls outside this range. Additionally, calculate the Shannon entropy of the sequence number increments (current_seq - previous_seq) over a 1-hour window. A sudden drop in entropy below a baseline threshold (e.g., from 3.5 to <1.0) can indicate a fixed, repeating, or non-random sequence characteristic of a replay or simple spoofing attack. 3. Machine Learning: Implement a multivariate time series anomaly detection model (e.g., LSTM Autoencoder) monitoring sequence number, IAT, and message payload size (from conn.orig_bytes) for each critical device. Train the model on 90 days of baseline Zeek dnp3.log and conn.log data. The model should generate an alert when its reconstruction error for the live message stream exceeds a dynamically adjusted threshold based on a moving average and standard deviation of past errors."
          },
          {
            "description": "A specific telemetry point (e.g., pump pressure, valve position) reported via an ICS protocol shows a value that is physically implausible or contradicts a correlated value from a separate, trusted source. For example, a valve reports 'closed' (value 0) in Zeek modbus.log while a downstream flow meter simultaneously reports significant flow in Zeek dnp3.log, or an HMI application logs a 'high temperature' alarm in the Windows Application Event Log while the corresponding sensor reports a normal temperature.",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log",
              "Windows Application Event Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA servers, Process Historian servers, HMI workstations, Engineering Workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone).",
            "action": "1. Symbolic Logic: Create a SIEM correlation rule that triggers when a Process Historian logs a physics-based alarm (e.g., 'High pressure for Tank A' in Windows Application Event Log) but Zeek logs (dnp3.log, modbus.log) for the sensor on Tank A (id.orig_h) show a pressure value within the normal operational range within the same 30-second window. 2. Statistical Method: For physically linked processes (e.g., pump speed and pipe flow rate), ingest their time-series data from Zeek logs. Perform a continuous cross-correlation analysis on the two data streams over a 5-minute sliding window. Establish a baseline correlation coefficient (e.g., 0.95) during normal operation. Generate an alert if the real-time correlation coefficient drops below a critical threshold (e.g., < 0.5), suggesting one of the signals is no longer reflecting the physical reality. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost) using historical telemetry from both primary ICS protocol logs and trusted secondary sources (e.g., historian database). Features should include the primary value, secondary value, their difference, and contextual data like the device's operational mode (from HMI logs). Label data points as 'divergent' if the difference exceeds a physics-based threshold. Deploy the model to predict 'divergent' states in real-time with high confidence (>0.9)."
          },
          {
            "description": "An ICS protocol reporting message (e.g., DNP3, Modbus) is observed where the source IP address (id.orig_h) or source MAC address (id.orig_l2_addr) in Zeek logs does not match the authoritative entry for that field device in a centrally managed asset inventory. Alternatively, the communication originates from a VLAN or subnet not designated for process control traffic, or the network flow characteristics (e.g., byte count, duration) deviate significantly from the established baseline for that specific device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network gateways between IT and OT environments.",
            "action": "1. Symbolic Logic: Configure a SIEM rule that cross-references every Zeek conn.log entry containing an ICS service (dnp3, modbus) against an asset inventory watchlist. Alert if the log's id.orig_h or id.orig_l2_addr does not match the registered entry for that device. Enhance the rule to also check for communications to unauthorized destinations (e.g., a PLC communicating with an external IP address). 2. Statistical Method: For each unique ICS device (id.orig_h), establish a 60-day baseline for the ratio of conn.orig_bytes to conn.resp_bytes from Zeek conn.log. Calculate the mean and standard deviation of this ratio. Generate an alert if the current ratio for a new connection deviates more than 3 standard deviations from the mean, indicating a potentially malformed or spoofed packet that elicits an unusual response or no response. 3. Machine Learning: Implement an unsupervised anomaly detection model (e.g., Isolation Forest) on network flow metadata from Zeek conn.log for each ICS device. Use features such as conn.orig_bytes, conn.resp_bytes, conn.duration, and the entropy of destination ports contacted by the source IP over a 5-minute window. A sudden increase in port entropy from a device that normally only communicates with one or two servers is highly anomalous. Generate an alert when the model assigns a high anomaly score (>0.75) to a flow."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary spoofing reporting messages to mislead operators and impair process control? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0856",
        "name": "Spoof Reporting Message",
        "evidence": [
          {
            "description": "Reporting messages for a specific ICS field device exhibit protocol-level sequence number or timing anomalies. This includes duplicate sequence numbers from the same source within a short window (e.g., 5 seconds), non-monotonic sequence number progression (a number decreases or resets without a corresponding protocol-level reset command), or gaps in sequence numbers. Additionally, the inter-arrival time (IAT) between messages deviates significantly from the device's configured reporting frequency (e.g., IAT < 50ms or > 10s for a device that reports every 1s).",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments monitoring Level 1 (Basic Control) devices (PLCs, RTUs, IEDs), the Level 2 (Supervisory Control) network, and Industrial Demilitarized Zone (IDMZ) network segments where ICS protocol traffic (DNP3, Modbus, IEC 61850) is captured and processed.",
            "action": "1. Symbolic Logic: Configure a SIEM rule to alert when a Zeek dnp3.log entry shows a dnp3.seq_num or a modbus.log shows a modbus.trans_id from the same id.orig_h that is a duplicate of one seen in the last 5 seconds. Create a second rule to detect when a sequence number from a specific id.orig_h decreases without a corresponding 'Cold Restart' (DNP3 Function Code 13) or 'Restart Communications Option' (Modbus Function Code 8) command observed targeting the device in the preceding 60 seconds. 2. Statistical Method: For each unique device (id.orig_h), calculate the inter-arrival time (IAT) between its messages in Zeek logs. Over a 30-day rolling window, establish the 5th and 95th percentiles for the IAT. Alert if the current IAT falls outside this range. Additionally, calculate the Shannon entropy of the sequence number increments (current_seq - previous_seq) over a 1-hour window. A sudden drop in entropy below a baseline threshold (e.g., from 3.5 to <1.0) can indicate a fixed, repeating, or non-random sequence characteristic of a replay or simple spoofing attack. 3. Machine Learning: Implement a multivariate time series anomaly detection model (e.g., LSTM Autoencoder) monitoring sequence number, IAT, and message payload size (from conn.orig_bytes) for each critical device. Train the model on 90 days of baseline Zeek dnp3.log and conn.log data. The model should generate an alert when its reconstruction error for the live message stream exceeds a dynamically adjusted threshold based on a moving average and standard deviation of past errors."
          },
          {
            "description": "A specific telemetry point (e.g., pump pressure, valve position) reported via an ICS protocol shows a value that is physically implausible or contradicts a correlated value from a separate, trusted source. For example, a valve reports 'closed' (value 0) in Zeek modbus.log while a downstream flow meter simultaneously reports significant flow in Zeek dnp3.log, or an HMI application logs a 'high temperature' alarm in the Windows Application Event Log while the corresponding sensor reports a normal temperature.",
            "data_sources": [
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log",
              "Windows Application Event Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA servers, Process Historian servers, HMI workstations, Engineering Workstations, and network segments where ICS protocol traffic is captured (e.g., Level 2 Supervisory Control Network, Industrial Demilitarized Zone).",
            "action": "1. Symbolic Logic: Create a SIEM correlation rule that triggers when a Process Historian logs a physics-based alarm (e.g., 'High pressure for Tank A' in Windows Application Event Log) but Zeek logs (dnp3.log, modbus.log) for the sensor on Tank A (id.orig_h) show a pressure value within the normal operational range within the same 30-second window. 2. Statistical Method: For physically linked processes (e.g., pump speed and pipe flow rate), ingest their time-series data from Zeek logs. Perform a continuous cross-correlation analysis on the two data streams over a 5-minute sliding window. Establish a baseline correlation coefficient (e.g., 0.95) during normal operation. Generate an alert if the real-time correlation coefficient drops below a critical threshold (e.g., < 0.5), suggesting one of the signals is no longer reflecting the physical reality. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost) using historical telemetry from both primary ICS protocol logs and trusted secondary sources (e.g., historian database). Features should include the primary value, secondary value, their difference, and contextual data like the device's operational mode (from HMI logs). Label data points as 'divergent' if the difference exceeds a physics-based threshold. Deploy the model to predict 'divergent' states in real-time with high confidence (>0.9)."
          },
          {
            "description": "An ICS protocol reporting message (e.g., DNP3, Modbus) is observed where the source IP address (id.orig_h) or source MAC address (id.orig_l2_addr) in Zeek logs does not match the authoritative entry for that field device in a centrally managed asset inventory. Alternatively, the communication originates from a VLAN or subnet not designated for process control traffic, or the network flow characteristics (e.g., byte count, duration) deviate significantly from the established baseline for that specific device.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dnp3.log",
              "Zeek modbus.log",
              "Zeek iec61850.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Level 0 (Process Control) and Level 1 (Basic Control) network segments, Level 2 (Supervisory Control) network segments, Industrial Demilitarized Zone (IDMZ), and network gateways between IT and OT environments.",
            "action": "1. Symbolic Logic: Configure a SIEM rule that cross-references every Zeek conn.log entry containing an ICS service (dnp3, modbus) against an asset inventory watchlist. Alert if the log's id.orig_h or id.orig_l2_addr does not match the registered entry for that device. Enhance the rule to also check for communications to unauthorized destinations (e.g., a PLC communicating with an external IP address). 2. Statistical Method: For each unique ICS device (id.orig_h), establish a 60-day baseline for the ratio of conn.orig_bytes to conn.resp_bytes from Zeek conn.log. Calculate the mean and standard deviation of this ratio. Generate an alert if the current ratio for a new connection deviates more than 3 standard deviations from the mean, indicating a potentially malformed or spoofed packet that elicits an unusual response or no response. 3. Machine Learning: Implement an unsupervised anomaly detection model (e.g., Isolation Forest) on network flow metadata from Zeek conn.log for each ICS device. Use features such as conn.orig_bytes, conn.resp_bytes, conn.duration, and the entropy of destination ports contacted by the source IP over a 5-minute window. A sudden increase in port entropy from a device that normally only communicates with one or two servers is highly anomalous. Generate an alert when the model assigns a high anomaly score (>0.75) to a flow."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]