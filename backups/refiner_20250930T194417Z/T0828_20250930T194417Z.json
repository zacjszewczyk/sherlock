[
  {
    "information_requirement": "Has an adversary's action resulted in a disruption of critical industrial processes, leading to a measurable loss of productivity or revenue?",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0836",
        "name": "Modify Parameter",
        "evidence": [
          {
            "description": "A write operation targeting a critical control system parameter (e.g., a Modbus holding register for a temperature setpoint, a DNP3 analog output point for a valve position) is observed in Zeek ICS protocol logs. The new parameter value falls outside of the documented operational safety limits (e.g., greater than maximum_safe_value) or deviates by more than 3 standard deviations from its 30-day rolling average. This modification is correlated with an originating source IP or user account (via Windows Event ID 4624 on the source host) not on the authorized asset/user allowlist, or occurs outside a scheduled maintenance window without a corresponding change management ticket.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Historian Process Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Control Network (Purdue Model Levels 1 & 2) for PLC/RTU traffic; Engineering Workstations (EWS) and HMIs for host logs and command origination context; Process Historian servers for correlating network events with physical process impact.",
            "action": "1. (Symbolic Logic) Create and maintain an allowlist of authorized source IPs (EWS/HMIs) and critical parameter addresses/tags. Query Zeek ICS logs (e.g., modbus.log) for write functions (e.g., 'write_single_register', 'write_multiple_registers') targeting these critical addresses. Generate a high-severity alert if the source IP (`id.orig_h`) is not on the allowlist OR if the written value (`data_val`) is outside pre-defined, hard-coded engineering safety limits. 2. (Statistical Method) For each critical parameter, ingest its values from Zeek logs into a time-series database. Calculate a 30-day rolling baseline including mean and standard deviation. Generate a medium-severity alert if a newly written value exceeds 3 standard deviations from the baseline mean. Additionally, track the frequency of write operations per parameter per hour; alert if this frequency exceeds its own 3-standard-deviation threshold, indicating an unusual rate of change. 3. (Machine Learning) Train a Random Forest classification model on features engineered from Zeek ICS logs (source IP, destination IP, function, address, value) and enriched with host data from the source EWS/HMI (user account from Win EVT 4624, parent process from Win EVT 4688). Use historical data, labeling events based on known incidents or authorized changes. Deploy the model to score new write events in real-time and alert on those classified as 'anomalous' or 'malicious' with high confidence."
          }
        ]
      },
      {
        "technique_id": "T0816",
        "name": "Denial of Service",
        "evidence": [
          {
            "description": "A critical ICS device (e.g., PLC, RTU) experiences a network-based service disruption, evidenced by one or more of the following conditions over a 1-minute window: 1) A sustained increase in average round-trip time (RTT) of over 50% compared to its 7-day baseline in Zeek conn.log. 2) A connection failure rate where the count of connections with 'S0', 'S1', or 'REJ' states in Zeek conn.log exceeds 3 standard deviations above the baseline. 3) A high volume of ingress traffic (>10,000 packets/sec) from a single source IP, particularly if a high percentage of packets are ICMP messages (observed in Zeek icmp.log) or TCP packets with the SYN flag set and no corresponding established connection (observed in Zeek tcp.log and conn.log). This network anomaly is correlated with a 'communication loss' alarm on an associated HMI or a gap in data reporting from the device to the process historian.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek tcp.log",
              "Zeek udp.log",
              "Zeek icmp.log",
              "HMI Alarm Logs",
              "Historian Process Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Control and Supervisory Networks (Purdue Model Levels 1, 2, 3) to monitor traffic to/from critical controllers, servers, and HMIs; Network boundaries and gateways between IT and OT networks to detect cross-domain flood attempts.",
            "action": "1. (Symbolic Logic) Create a rule to alert when a single source IP (`id.orig_h` in Zeek conn.log) generates more than 1,000 connection attempts to a critical ICS device IP within 1 minute where the `conn_state` is 'S0' (SYN sent, no reply). Additionally, alert if the packet count in Zeek icmp.log from a single source to a single critical destination exceeds 500 packets per second. 2. (Statistical Method) For each critical ICS device IP, establish a 30-day baseline from Zeek conn.log for: average RTT, connection rate (connections/min), and the ratio of failed connections ('S0','S1','REJ') to successful ones ('SF'). Alert if any of these metrics exceeds 3 standard deviations from its baseline in a 5-minute rolling window. Also, calculate the entropy of source IPs connecting to critical devices; a sharp drop in entropy can indicate a flood from a single or small set of sources. 3. (Machine Learning) Deploy a time-series anomaly detection model (e.g., LSTM) trained on historical network metrics from Zeek conn.log (e.g., total bytes, packet count, connection states) for each critical ICS device. The model should predict the expected traffic pattern for a given time of day. Generate an alert when the observed traffic volume or connection state distribution significantly deviates from the model's prediction band, indicating a potential DoS attack."
          }
        ]
      },
      {
        "technique_id": "T0855",
        "name": "Unauthorized Command Message",
        "evidence": [
          {
            "description": "A critical command message, such as a Modbus function code 0x05 (Write Single Coil) to an emergency stop relay or an EtherNet/IP explicit message initiating a device restart, is observed in Zeek ICS protocol logs. The command is considered unauthorized if: 1) It originates from a source IP address or user account (correlated via Windows Event ID 4624) not on the documented allowlist for that specific command and target device. 2) The command occurs outside of its normal baseline operational window (e.g., after 10 PM local time) and does not have a corresponding pre-approved change management ticket. 3) The command is part of a sequence that deviates from established operational workflows (e.g., a 'stop' command without a preceding 'ramp down' command).",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Windows Event ID 4624",
              "Windows Event ID 4663",
              "Change Management System Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and Operator Stations (HMI) for command origination context; ICS Control Network (Purdue Model Levels 1 & 2) for monitoring command transmission to PLCs/RTUs; Authentication Servers for user identity correlation; Change Management database for operational context.",
            "action": "1. (Symbolic Logic) Maintain a strict allowlist of {source IP, user account, destination IP, command_type, target_address_range} tuples representing authorized operations. Query Zeek ICS protocol logs in real-time and generate a high-priority alert for any command that does not match an entry in this allowlist. Correlate alerts with change management logs to suppress alerts for authorized, scheduled actions. 2. (Statistical Method) For each authorized {user, command_type} pair, profile the timing (hour of day, day of week) and frequency of commands over a 30-day period. Alert if a critical command is issued outside the 99th percentile of its typical execution time window. Additionally, model command sequences using a Markov chain; alert if a transition between two command states occurs that has a historically low probability (<0.01%), indicating an abnormal workflow. 3. (Machine Learning) Train a One-Class SVM model on feature vectors representing normal command sequences from authorized users. Features should include: source IP, user account (from Windows Event ID 4624), command type, command parameters, and time delta since the last command. Deploy the model to score new command sequences in real-time. Alert on any sequence identified as an outlier, especially if correlated with anomalous host activity like unauthorized file access to HMI project files (Windows Event ID 4663)."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]