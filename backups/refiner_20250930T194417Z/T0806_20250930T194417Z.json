[
  {
    "information_requirement": "Is an adversary attempting to impair our process control by manipulating I/O points? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0806",
        "name": "Brute Force I-O",
        "evidence": [
          {
            "description": "An observable, anomalous surge in Modbus, DNP3, or S7comm write commands originating from a single source IP (Zeek:id.orig_h) and targeting a single I/O address (Zeek:addr) on a specific PLC (Zeek:id.resp_h). The anomaly is defined by a write frequency that simultaneously exceeds both a dynamic 99th percentile baseline and a 3-sigma upper control limit established over the preceding 30 days. This activity is further qualified as malicious if the source IP is not on an authorized PLC communication whitelist, or if the source is an authorized HMI/EWS but there is no corresponding authorized control application process (Windows Event ID 4688) active within a 5-minute window of the event.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log",
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control Network segments, Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Programmable Logic Controllers (PLCs), and OT network traffic monitoring points.",
            "action": "Symbolic Logic: Upon detection of a frequency anomaly from the Statistical method, immediately check if the source IP (Zeek:id.orig_h) exists in a maintained allow-list of IPs authorized for PLC write access. If the IP is not on the list, escalate as a high-confidence event. If the source IP is on the allow-list (e.g., an HMI), pivot to the host's logs. Query for process creation events (Windows Event ID 4688) on the source host within a 5-minute window of the anomaly. Escalate if the network connection (Zeek:uid) does not have a parent process included in a predefined list of authorized SCADA applications (e.g., 'FactoryTalk.exe', 'WinCC.exe', 'ignition.exe').\n\nStatistical Method: For each unique tuple (source IP, destination PLC IP, I/O address), aggregate ICS protocol write commands (e.g., Modbus function code 6 or 16) into 1-minute counts. Maintain a 30-day rolling baseline of these counts. Generate an alert if the current 1-minute count for a tuple exceeds both its 99th percentile value AND its 3-sigma upper control limit (UCL). This dual condition helps filter out infrequent but legitimate spikes.\n\nMachine Learning: Implement a multivariate time-series anomaly detection model (e.g., Prophet, LSTM Autoencoder) for high-criticality I/O points. Engineer features from Zeek logs including write frequency, day of week, hour of day, and a binary flag for on/off business hours. Train the model on at least 90 days of normal operational data to learn cyclical patterns. Generate an alert when the model's reconstruction error or anomaly score for a new data point exceeds a dynamically adjusted threshold, indicating a significant deviation from the learned normal write frequency patterns."
          },
          {
            "description": "A single source IP (Zeek:id.orig_h) initiates a sequence of Modbus, DNP3, or S7comm write commands to a PLC (Zeek:id.resp_h) that indicates scanning or enumeration behavior. This is evidenced by one of the following in a 30-second window: a) I/O addresses (Zeek:addr) are targeted in a clear arithmetic progression (e.g., 1001, 1002, 1003); b) Over 75% of targeted I/O addresses are invalid, determined by comparison against a known-good PLC configuration map; or c) The Shannon entropy of targeted I/O addresses increases by more than 2 standard deviations from its 30-day baseline, indicating a shift from targeted writes to broad scanning.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control Network segments, Programmable Logic Controllers (PLCs), ICS protocol gateways, and centralized PLC configuration management databases.",
            "action": "Symbolic Logic: For each source IP writing to a PLC, group I/O addresses (Zeek:addr) targeted within a 30-second sliding window. Compare this set of addresses against a pre-compiled list of valid, writable I/O points for that specific PLC. Alert if more than 75% of the addresses in the window are not on the valid list. Concurrently, analyze the sequence of valid addresses for arithmetic progressions (e.g., addr[i] = addr[i-1] + C). Alert if a sequence of 5 or more such writes is detected.\n\nStatistical Method: For each source IP-destination PLC pair, calculate the Shannon entropy of the I/O address field (Zeek:addr) for write commands within a 5-minute sliding window. Establish a 30-day rolling baseline and standard deviation for this entropy value. Generate an alert if the current entropy value exceeds the baseline by more than 2 standard deviations. A sharp increase suggests a shift to scanning behavior.\n\nMachine Learning: Use a density-based clustering algorithm like DBSCAN on I/O write events. For each 1-minute window, create a feature vector for each source IP including: number of unique PLCs targeted, number of unique I/O addresses targeted, and the entropy of I/O addresses. Train the model on historical data to define 'normal' operational clusters. Points that are flagged as noise by DBSCAN represent anomalous scanning or enumeration behavior not seen previously. Escalate these noise points for investigation."
          },
          {
            "description": "A specific I/O point (Zeek:addr) on a PLC (Zeek:id.resp_h) exhibits rapid, repeated state changes ('toggling') from Modbus, DNP3, or S7comm write commands originating from a single source (Zeek:id.orig_h). The frequency of value changes exceeds a pre-defined engineering safe operating limit (e.g., >5 state changes per minute for a large valve). This is further qualified as malicious if the source IP is unauthorized, or if it correlates with a successful logon (Windows Event ID 4624) on an HMI/EWS that is itself anomalous (e.g., rare geolocation, off-hours access, first-time user interaction with the I/O point).",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek s7comm.log",
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Control Network segments, Programmable Logic Controllers (PLCs), critical field devices (e.g., actuators, valves, breakers), HMIs, and Active Directory domain controllers.",
            "action": "Symbolic Logic: Upon detection of a toggle frequency anomaly from the Statistical method, check if the source IP (Zeek:id.orig_h) is on the PLC write allow-list. If not, escalate. If it is an HMI/EWS, correlate the timestamp with successful logon events (Windows Event ID 4624) on that host. Using enriched log data, escalate if the login exhibits at least two anomalous traits: 1) source IP geolocates to a country/ISP not seen for that user in 30 days, 2) logon time is outside the user's baselined 9-5 working hours, 3) the user account has no history of writing to that specific I/O point.\n\nStatistical Method: For critical discrete I/O points, monitor their state (e.g., 0 or 1) from ICS protocol logs. Count the number of state changes (e.g., 0->1 or 1->0) per minute. Alert if this 'toggle frequency' exceeds a static threshold defined by engineering safety limits (e.g., 5 toggles/min) OR if it exceeds the 98th percentile of its 30-day historical baseline. For analog points, calculate the rate of change and alert if it exceeds a similar percentile-based threshold.\n\nMachine Learning: Develop a behavioral model (e.g., Isolation Forest, Autoencoder) for each critical I/O point. Create feature vectors from Zeek logs that include: the value being written, the time since the last write to that point, the source IP, and the function code used. Train the model on historical data to learn the normal 'rhythm' of operations for that point. An adversary repeatedly toggling a value will create a sequence of feature vectors that the model flags as a high-scoring anomaly, distinct from normal operational changes."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]