[
  {
    "information_requirement": "Is an adversary collecting PLC I/O image data to understand the industrial process? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0877",
        "name": "I-O Image",
        "evidence": [
          {
            "description": "An IP address not whitelisted as an authorized Engineering Workstation (EWS), Human-Machine Interface (HMI), or Historian is observed sending ICS protocol read commands (e.g., S7COMM 'Read Var', Modbus 'Read Input/Holding Registers', EtherNet/IP 'Read Tag Service') to a PLC's specific I/O memory addresses or data blocks. [1]",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments, including Level 1 (Control) and Level 2 (Supervisory) zones, specifically network tap points or SPAN ports on managed switches connected to PLC subnets and between Level 2/3 firewalls.",
            "action": "1. (Symbolic Logic) For each PLC, create and maintain a strict whitelist of authorized source IP addresses (HMIs, EWS, Historians). Ingest Zeek ICS protocol logs (s7comm, modbus, enip) into a SIEM. Create a rule that triggers a high-severity alert when a read command is detected where the `id.orig_h` (source IP) is not on the destination PLC's authorized whitelist. 2. (Statistical) For each destination PLC, calculate a 30-day rolling baseline of all unique source IPs that perform read commands. Create a rule to alert when a new read command originates from a source IP not seen in the baseline period (a 'first-seen' IP). Additionally, track the daily count of unique source IPs communicating with each PLC and alert if this count exceeds the 99th percentile of the historical daily counts. 3. (Machine Learning) Train a supervised classification model (e.g., Random Forest) using labeled historical data (Zeek logs enriched with asset inventory) where each record (source IP, destination PLC, function code) is labeled 'authorized' or 'unauthorized'. Deploy the model to score new read events in real-time. Generate an alert for any event classified as 'unauthorized' with a confidence score greater than 0.95."
          },
          {
            "description": "An authorized device (HMI, EWS) sends a volume or frequency of ICS protocol read commands to a PLC that anomalously exceeds its established operational baseline, indicating a potential data collection attempt from a compromised legitimate host. [2]",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network tap points or SPAN ports on managed switches within PCN segments, specifically monitoring traffic flows between Level 3 (Manufacturing Operations Management) devices like HMIs and Engineering Workstations and Level 2 (Control Systems) devices like PLCs.",
            "action": "1. (Symbolic Logic) For each authorized source-destination PLC pair, define a hard-coded maximum request threshold (e.g., 500 read requests per minute) based on vendor specifications or operational necessity. Create a rule that generates a critical alert if this threshold is breached in any 1-minute sliding window. 2. (Statistical) For each authorized source-destination PLC pair, ingest Zeek ICS logs and calculate a 30-day rolling baseline of the average and standard deviation of read requests per minute. Create a rule to alert when the current request count in a 1-minute window exceeds 3 standard deviations above the mean or surpasses the 99th percentile of the historical distribution for that specific pair. 3. (Machine Learning) For each high-consequence source-destination PLC pair, implement a time-series anomaly detection model (e.g., LSTM Autoencoder) trained on at least 90 days of read request frequency data. The model should predict the expected request volume for the next time interval. Generate an alert if the observed request volume significantly deviates from the model's prediction, with the anomaly score exceeding a predefined threshold."
          },
          {
            "description": "ICS protocol read requests are observed using diagnostic, non-standard, or direct memory access function codes (e.g., S7COMM 'Block Read', Modbus 'Read/Write Multiple Registers') that are not part of the documented, baselined function codes for a given authorized HMI-to-PLC communication path. [2]",
            "data_sources": [
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Deep Packet Inspection (DPI) points on network taps or SPAN ports within PCN segments where Level 3 (Manufacturing Operations Management) devices like EWS and HMIs communicate with Level 2 (Control Systems) devices like PLCs.",
            "action": "1. (Symbolic Logic) For each authorized source-destination PLC pair, create and maintain a strict whitelist of permitted ICS protocol function codes/services based on vendor documentation and observed normal operations. Create a rule to generate a high-severity alert immediately upon observing any read command using a function code not on the explicit whitelist for that communication pair. 2. (Statistical) For each source IP, calculate the Shannon entropy of its observed ICS function codes over a rolling 1-hour window. Establish a historical baseline for this entropy score. Alert if the current entropy score for a source IP exceeds its historical 95th percentile, indicating a suspicious diversification of function code usage. 3. (Machine Learning) Train an unsupervised anomaly detection model (e.g., One-Class SVM) on the vector representation of function code distributions for each source IP during normal operation. Deploy the model to analyze new 1-hour windows of activity. Alert if the function code distribution for a given source IP is flagged as an outlier by the model, with an anomaly score exceeding a predefined threshold."
          },
          {
            "description": "A network-level alert for anomalous PLC read activity from an EWS is correlated in time with suspicious host-based activity on that same EWS. This host activity includes the execution of non-baselined processes, command-line arguments containing obfuscation or discovery commands, or the execution of known hacking tools.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices identified as Engineering Workstations (EWS) within the Level 3 (Manufacturing Operations Management) zone, and network tap points within PCN segments where these EWS communicate with Level 2 (Control Systems) PLCs.",
            "action": "1. (Symbolic Logic) Create a correlation rule in the SIEM. When a network alert for anomalous PLC reads from an EWS IP is triggered, automatically query host logs (Windows Event ID 4688) from that EWS for the 15-minute window surrounding the alert. The rule should look for process names on a blacklist (e.g., `mimikatz.exe`, `psexec.exe`) or command-line arguments matching malicious patterns (e.g., `-EncodedCommand`). A match escalates the network alert to a critical incident. 2. (Statistical) For each EWS, maintain a 30-day baseline of all executed process names from Windows Event ID 4688. When a correlated network alert occurs, analyze the host activity in the corresponding time window. Calculate a rarity score for each executed process. Flag any activity with a rarity score in the top 1% (e.g., a process never seen before on that host) for analyst review. 3. (Machine Learning) Develop and deploy a multi-modal security event model (e.g., Graph Neural Network) that takes both network flow data (Zeek) and host process events (Windows Event ID 4688) as input. Train the model on labeled datasets of benign and malicious EWS activity sequences. Generate a high-confidence alert when the model identifies a sequence strongly associated with known adversary TTPs, such as 'unusual PLC read' followed by 'execution of net.exe'."
          }
        ]
      }
    ],
    "references": [
      {
        "number": 1,
        "citation": "Nanjundaiah, Vaidyanath. (n.d.). *PLC Scan Cycle*. InstrumentationTools. Retrieved from https://www.instrumentationtools.com/plc-scan-cycle/"
      },
      {
        "number": 2,
        "citation": "Spenneberg, Ralf. (2016). *S7-PLCs in production environments*. Retrieved from https://media.ccc.de/v/33c3-8093-s7-plcs_in_production_environments"
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]