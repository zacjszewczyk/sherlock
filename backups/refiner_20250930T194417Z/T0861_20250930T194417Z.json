[
  {
    "information_requirement": "Is an adversary attempting to map our industrial control process? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0861",
        "name": "Point & Tag Identification",
        "evidence": [
          {
            "description": "1. Communication using an ICS protocol (Modbus, EtherNet/IP, DNP3, OPC-UA) from a source IP address not previously observed engaging in such communication within a 30-day lookback period. 2. An established ICS host exhibiting a statistically significant increase in the volume of ICS read requests (e.g., Modbus Function Code 0x03/0x04) or the number of unique devices contacted within the Process Control Network, when compared to its historical baseline.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek ethernetip.log",
              "Zeek dnp3.log",
              "Zeek opcua.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments containing PLCs, RTUs, HMIs, and other control devices; Network intrusion detection systems (NIDS) or firewalls monitoring PCN boundaries; DMZ segments for OPC-UA servers; Engineering Workstations (EWS) connecting to PCN devices.",
            "action": "1. Symbolic Logic: Maintain an allowlist of authorized ICS host IP addresses (e.g., HMIs, EWS). For all observed ICS protocol traffic (from Zeek's modbus.log, ethernetip.log, dnp3.log, opcua.log), enrich with a 30-day historical baseline of source IPs that have used these protocols. Generate a high-priority alert if the source IP (id.orig_h) is not on the 30-day historical list AND is not on the static allowlist. The alert must include the protocol, source IP, and destination IP.\n2. Statistical Method: For each authorized ICS host (id.orig_h), establish a 7-day rolling baseline of hourly counts for specific ICS read requests (e.g., Modbus function codes 3 or 4; EtherNet/IP Get_Attribute_All command). Calculate the mean and standard deviation for these hourly counts per host. Generate a medium-priority alert if the current hourly count for a host exceeds its historical mean by 3 standard deviations or surpasses the 99th percentile of its baseline. Similarly, baseline the hourly count of unique destination IPs (id.resp_h) contacted by each host and alert if this count exceeds its 99th percentile.\n3. Machine Learning: Implement a multivariate time-series anomaly detection model (e.g., Isolation Forest, Variational Autoencoder) on a per-host basis using features from Zeek logs, such as hourly counts of ICS packets, unique destination IPs contacted, and protocol-specific function codes used. Train the model on at least 30 days of historical data for each host to learn its normal 'enumeration fingerprint'. Generate a medium-priority alert when the model flags a time window with an anomaly score exceeding the 95th percentile of historical scores, indicating a significant deviation in network scanning or process interrogation behavior."
          },
          {
            "description": "Read access (Windows Event ID 4663 with AccessMask 0x1 for ReadData or 0x100 for ReadAttributes) to ICS project files (e.g., .ACD, .L5K, .CTL) or tag export files (.CSV, .XML) that meets one of the following conditions: 1. The access is performed by a user account or process not on a pre-defined allowlist. 2. An authorized user or host accesses a volume of these files that is statistically anomalous compared to their historical baseline.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and central repositories for ICS project files; File servers storing ICS configurations and tag databases; Historian servers and their configuration directories.",
            "action": "1. Symbolic Logic: Configure SACLs (System Access Control Lists) to generate Event ID 4663 for read access on directories containing ICS project files and tag exports. Maintain an allowlist of authorized user accounts (SubjectUserName) and processes (ProcessName, e.g., 'Studio5000.exe'). Generate a high-priority alert when an Event ID 4663 is logged for a monitored file type (e.g., *.ACD, *.L5K, *.ap16, *.XML) and the associated SubjectUserName or ProcessName is not on the allowlist, especially if the process is a command-line utility like 'cmd.exe' or 'powershell.exe'.\n2. Statistical Method: For each authorized user and host, establish a 7-day rolling hourly baseline for two metrics: A) the count of unique ICS project files accessed, and B) the total count of read operations (Event ID 4663) to these file types. Calculate the mean and 99th percentile for these hourly metrics. Generate a medium-priority alert if a user's activity in a 1-hour window exceeds the 99th percentile for either metric, indicating an unusual volume of file enumeration or tag database access.\n3. Machine Learning: Deploy a User and Entity Behavior Analytics (UEBA) model trained on historical Event ID 4663 and 4688 data from EWS and file servers. The model should profile each user's typical file access patterns, including access times, file types, parent processes, and access frequency. Generate a medium-priority alert when the model detects a significant deviation from a user's established behavioral profile, such as a user accessing an unusually high number of distinct project files in a short time or using a rare process (e.g., a script instead of the legitimate engineering software) to read them."
          },
          {
            "description": "One or more of the following activities targeting a Process Data Historian: 1. A network connection to a historian database port (e.g., 1433/TCP, 5432/TCP, 4840/TCP) from a source IP not seen in the last 30 days. 2. A brute-force or password-spraying attempt, indicated by a high volume of failed logins (Windows Event ID 4625) from a single source followed by a success (Windows Event ID 4624). 3. An anomalously large data transfer from the historian to a client, measured in total bytes transferred, compared to the client's historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Data Historian server(s); Database servers; Firewall/Router logs at network segment boundaries; OPC-UA server network interfaces; Engineering Workstations (EWS) with historian client software.",
            "action": "1. Symbolic Logic: For connections to historian database ports (e.g., 1433, 5432, 3306, 4840), compare the source IP (id.orig_h in zeek_conn.log) against a 30-day historical baseline and a static allowlist of authorized clients. Alert on any connection from an unknown and unauthorized IP. Separately, on historian servers, monitor for 10 or more failed logon events (Event ID 4625) from a single source IP within a 5-minute window, immediately followed by a successful logon event (Event ID 4624) from the same source IP. Generate a high-priority alert for this brute-force success pattern.\n2. Statistical Method: For each established client-historian pair (id.orig_h, id.resp_h, id.resp_p), establish a 7-day rolling hourly baseline for the sum of response bytes (resp_bytes) from zeek_conn.log. Calculate the mean and standard deviation for this baseline. Generate a medium-priority alert when the total resp_bytes for a client in a single hour exceeds its historical mean by 4 standard deviations or surpasses the 99th percentile, suggesting a bulk data export of tag information.\n3. Machine Learning: Implement a client-centric anomaly detection model for historian access using features from zeek_conn.log, including resp_bytes, orig_bytes, duration, and connection frequency. Train the model on at least 30 days of data for each authorized client to learn its normal data retrieval profile. Generate a medium-priority alert when the model detects a significant deviation, such as a data transfer volume that is orders of magnitude larger than normal for that specific client, or a connection occurring at a highly uncharacteristic time (e.g., 3 AM for a day-shift engineer's client)."
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]