[
  {
    "information_requirement": "Is the adversary developing resources using compromised cloud accounts?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1586.003",
        "name": "Cloud Accounts",
        "evidence": [
          {
            "description": "An internal host initiates an outbound network connection to a domain or IP address present on a threat intelligence feed of known-malicious infrastructure, specifically those hosted within cloud provider networks and categorized as C2, phishing, or anonymization services.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Corporate DNS Resolvers, Proxy Servers",
            "action": [
              "Query Zeek dns.log for DNS requests and Zeek conn.log for outbound connections where the destination domain or IP address matches an entry on a threat intelligence feed of malicious infrastructure hosted in the cloud. Generate an alert for any match.",
              "Enrich Zeek dns.log records with domain registration data via passive or active WHOIS lookups. For all connections to cloud-hosted domains, calculate the 5th percentile of domain age across the enterprise. Flag any connection to a domain whose age falls below this percentile as a potentially malicious newly registered domain.",
              "Train a Random Forest classification model using labeled data from threat intelligence feeds (malicious) and historical internal logs (benign). Use features from Zeek conn.log and dns.log such as destination ASN, query length, answer TTL, connection duration, and data volume. Deploy the model to score new outbound connections to cloud infrastructure and alert on those with a high probability of being malicious."
            ]
          },
          {
            "description": "A process execution command line for a cloud management CLI tool (e.g., aws.exe, az.cmd, gcloud.cmd, terraform.exe) is observed on a host, where the associated user account is not a member of a pre-authorized cloud administrator group.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Server Subnets (excluding designated admin hosts), Developer Workstations",
            "action": [
              "Create a detection rule that triggers when Windows Event ID 4688 records a process creation for 'aws.exe', 'az.cmd', 'gcloud.cmd', or 'terraform.exe' and the associated user account is not in a pre-defined 'Cloud Admins' Active Directory group. Correlate this with Zeek http.log records from the same source IP showing User-Agent strings like 'aws-cli/', 'Boto3/', or 'Azure-CLI/' to confirm CLI activity.",
              "For each host, profile the set of unique processes executed over a 30-day period using Windows Event ID 4688. Calculate the inverse host frequency for each process across the enterprise to establish a rarity score. Alert if a cloud CLI tool with a high rarity score (e.g., executed on <1% of hosts) is run on a non-admin workstation.",
              "Apply a K-Means clustering algorithm to hosts using feature vectors derived from process execution data (Windows Event ID 4688) and network logs (Zeek). Features should include counts of distinct processes, network protocols, and destination services. Investigate hosts that are classified as outliers or shift from a 'standard user' cluster to a 'developer/admin' cluster, especially if the change is driven by cloud CLI tool usage."
            ]
          },
          {
            "description": "A single internal host shows a sustained and statistically significant increase in outbound data volume (orig_bytes) or connection count to IP addresses associated with cloud storage or compute services (e.g., AWS S3/EC2, Azure Blob Storage) when compared against its own 30-day historical baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, All Corporate Subnets, VPN User IP Pools",
            "action": [
              "Create a rule to alert if any single host, excluding known backup servers, transmits more than 1GB of data in a single hour to IP ranges associated with major cloud storage providers. Maintain and use an up-to-date IP address list for these providers.",
              "For each host, establish a 30-day baseline of hourly outbound data volume (sum of `orig_bytes` in Zeek conn.log) to cloud provider IP ranges. Generate an alert if the volume in any given hour exceeds the 99th percentile of the host's own historical baseline or the 99th percentile of its assigned peer group (e.g., 'Finance Department Workstations').",
              "For each host-service pair (e.g., host_A to AWS_S3), apply a time-series anomaly detection model like ARIMA to the hourly outbound data volume from Zeek conn.log. Generate an alert if the observed volume exceeds the model's predicted upper confidence bound, indicating a significant deviation from the established pattern."
            ]
          },
          {
            "description": "An internal host, not designated for cloud administration, generates a high entropy of DNS requests for cloud API endpoints (e.g., ec2.*.amazonaws.com, management.azure.com) or initiates TLS connections to cloud management web portals (e.g., console.aws.amazon.com).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, VPN Concentrators, Administrative Workstations",
            "action": [
              "Create a detection rule that alerts when a connection is observed in Zeek ssl.log with a `server_name` of 'console.aws.amazon.com', 'portal.azure.com', or 'console.cloud.google.com' originating from an IP address within a designated server subnet.",
              "For each source IP, calculate the Shannon entropy of the requested subdomains under a cloud provider's parent domain (e.g., '.amazonaws.com') within a 1-hour window using Zeek dns.log. Establish a baseline entropy score for user and server groups. Alert if a host's score deviates by more than 2 standard deviations from its group's baseline.",
              "Model legitimate sequences of cloud API interactions using a Markov Chain trained on DNS queries (from Zeek dns.log) from known administrative hosts. Analyze sessions from non-administrative hosts and alert on any session containing a sequence of API calls with a low probability score, indicating a deviation from normal administrative workflows."
            ]
          },
          {
            "description": "An internal host generates a sequence of DNS queries and subsequent connections for multiple distinct cloud service categories (e.g., identity, compute, storage) within a short time window, following a logical pattern consistent with infrastructure provisioning.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Developer Subnets, Corporate DNS Resolvers",
            "action": [
              "Create a rule that triggers if a single host, not in the 'Cloud Admins' group, generates DNS queries within a 15-minute window for service endpoints in the following order: 1) an identity service (e.g., `iam.amazonaws.com`), followed by 2) a compute service (e.g., `ec2.*.amazonaws.com`), and then 3) a storage service (e.g., `s3.*.amazonaws.com`).",
              "Categorize cloud service domains from Zeek dns.log into functional groups (Identity, Compute, Storage, Networking). For each host, create a daily feature vector representing the count of unique services accessed in each category. Calculate the cosine similarity between a host's daily activity vector and its 30-day average vector. A similarity score below a tuned threshold (e.g., 0.7) indicates a significant behavioral change.",
              "Utilize an association rule mining algorithm, such as Apriori, on historical Zeek dns.log data to discover common sets of cloud services accessed together by legitimate administrators. Generate an alert when a host accesses a new or rare combination of services (an 'itemset') that does not meet a minimum support and confidence threshold, indicating a potentially malicious and novel workflow."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]