[
  {
    "information_requirement": "Is the adversary forging web credentials (e.g., SAML, web cookies) to gain unauthorized access?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1606",
        "name": "Forge Web Credentials",
        "evidence": [
          {
            "description": "A web session is established from a source IP address present on a threat intelligence feed for credential abuse, or the session's HTTP cookie contains a value matching a known malicious signature.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Web Proxies, VPN Concentrators",
            "action": [
              "Symbolic: Continuously correlate source IP addresses from Zeek conn.log against a CTI feed of IPs known for credential abuse. Separately, inspect the 'Cookie' header in Zeek http.log for specific, known-bad cookie values or patterns associated with forgery tools. Alert on any match.",
              "Statistical: For each web application, baseline the length and character entropy of session cookies in Zeek http.log. Flag any session where the cookie's length or entropy is a statistical outlier (e.g., exceeds 3 standard deviations from the application's established normal range), which may indicate a synthetically generated value.",
              "Machine Learning: Build and apply a classification model (e.g., Random Forest) on features extracted from Zeek http.log and conn.log (e.g., User-Agent string, request timing, ASN, geolocation, presence of specific headers). Use a labeled dataset of known-good and known-forged sessions to predict the likelihood that a new session is malicious. Flag sessions with a high probability score."
            ]
          },
          {
            "description": "A process is created with command-line arguments or parent/child relationships indicative of credential forging or the theft of signing keys (e.g., ADFS private key, Zimbra preauth key).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory Federation Services (ADFS) Servers, Domain Controllers, Application Servers with web-facing components (e.g., Zimbra)",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 and Sysmon Event ID 1 for command-line arguments containing keywords for credential forging utilities (e.g., 'mimikatz', 'ADFSDump', 'shimit', 'gdpak'). Create a high-severity alert for any exact match, especially on critical servers like ADFS.",
              "Statistical: For each host, baseline the entropy of command-line arguments for common processes (e.g., powershell.exe, cmd.exe). A sudden spike in entropy for a command executed by a web service account (e.g., the ADFS service account) could indicate obfuscated or encoded commands used to dump signing keys. Alert if entropy exceeds 3 standard deviations from the 30-day rolling average for that host and process.",
              "Machine Learning: Use a graph-based model to analyze parent-child process relationships from Sysmon Event ID 1. Train the model on normal process trees for servers like ADFS. Flag anomalous process chains, such as the ADFS service process ('Microsoft.IdentityServer.ServiceHost.exe') spawning PowerShell, which in turn accesses cryptographic libraries or makes outbound network connections, as a potential indicator of signing key theft."
            ]
          },
          {
            "description": "A SAML assertion is observed with one or more invalid or suspicious attributes, such as a non-approved issuer, an abnormally long validity period, a weak signature algorithm, or a mismatch between the assertion's recipient URL and the actual destination.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Federation Gateways, Reverse Proxies, Cloud Application Security Brokers (CASB), Web Application Firewalls (WAF)",
            "action": [
              "Symbolic: Extract SAML assertions from HTTP POST bodies in Zeek http.log. Validate the 'Issuer' attribute against a static allow-list of approved Identity Providers (IdPs). Alert on any assertion from an unknown issuer or signed with a deprecated algorithm (e.g., SHA1).",
              "Statistical: For all observed SAML assertions, calculate the distribution of validity lifetimes (difference between 'NotOnOrAfter' and 'IssueInstant' attributes). Establish a baseline (e.g., 8 hours for a standard workday). Alert on any assertion whose lifetime is a statistical outlier, for example, exceeding the 99th percentile of all observed lifetimes (e.g., > 24 hours).",
              "Machine Learning: Use an autoencoder on the feature set of a parsed SAML assertion. Create a vector for each assertion including features like: lifetime duration, signature algorithm (one-hot encoded), issuer, and number of attribute statements. Train the model on legitimate SAML traffic and flag assertions with a high reconstruction error, indicating they do not conform to the learned structure of normal assertions."
            ]
          },
          {
            "description": "A successful SAML-based authentication at a Service Provider (SP) is not preceded by a corresponding successful authentication event at the Identity Provider (IdP) for the same user within a defined time window.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624",
              "Azure AD Sign-in Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ADFS Servers, Service Provider (SP) application servers, SIEM/Log Aggregator, Cloud Identity Provider",
            "action": [
              "Symbolic: For each successful SP login for a user (identified in SP application logs or Zeek http.log), query for a corresponding successful IdP login (e.g., Windows Event ID 4624 on ADFS or an Azure AD sign-in event) for the same user in the preceding 10 minutes. If no corresponding IdP login is found, generate an alert. This is a strong indicator of a 'pass-the-token' or forged token attack.",
              "Statistical: For each user, calculate the ratio of SP logins to IdP logins over a 24-hour period. A user whose ratio deviates significantly from their own baseline or the organizational peer group baseline (e.g., exceeds the 95th percentile of the User:SP_Login_Count metric) should be investigated. This requires correlation across SP and IdP log sources.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., LSTM) on the event stream of IdP and SP logins per user. A model trained on normal temporal sequences can flag an SP login event that occurs without a recent preceding IdP event as a temporal anomaly, indicating a potential forged credential."
            ]
          },
          {
            "description": "A session cookie is used with a combination of attributes (e.g., IP address, User-Agent, geolocation) that is inconsistent with the established behavioral profile for that user's sessions.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway, Web Application Firewalls (WAF), User Endpoint Devices, Reverse Proxies",
            "action": [
              "Symbolic: Implement 'impossible travel' detection. When a session cookie is used from a new IP address, calculate the time and distance from its previous use. If the implied speed exceeds a realistic threshold (e.g., 600 mph), flag the session as anomalous. This requires enriching Zeek conn.log IPs with geolocation data.",
              "Statistical: For each user, create a profile of common session attributes (User-Agents, ASNs, source countries). For a new session, calculate a rarity score for each attribute based on historical frequency. A cumulative score exceeding a percentile-based threshold (e.g., 98th percentile) across all attributes indicates a highly anomalous session that may be using a forged or stolen cookie.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on user sessions, where each session is a vector of features (User-Agent similarity hash, ASN, country, time of day). Normal user activity will form dense clusters. Sessions that are marked as noise by the algorithm (i.e., do not belong to any cluster) represent significant deviations and are strong candidates for forged or stolen sessions."
            ]
          },
          {
            "description": "An authenticated session exhibits behavior that deviates from the user's or their peer group's established baseline, such as accessing a novel set of URLs, performing high-privilege actions for the first time, or showing non-human request timing.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Application Servers, SaaS Platforms, Database Servers, DNS Resolvers",
            "action": [
              "Symbolic: Maintain a list of high-privilege URL paths for critical applications (e.g., '/admin', '/config', '/api/v1/users/delete'). Alert if a non-administrator user, after authenticating, attempts to access any of these paths, as identified in Zeek http.log. This could indicate a privilege escalation attempt using a forged high-privilege token.",
              "Statistical: For each user session, calculate the Shannon entropy of the sequence of requested URL paths and the time delta between consecutive requests. A session with entropy or request timing that is a statistical outlier (e.g., exceeds 3 standard deviations from the user's norm) is likely automated or exploratory and should be flagged as potentially malicious.",
              "Machine Learning: Model user navigation paths as a Markov chain, where each state is a category of URL (e.g., 'login', 'dashboard', 'settings'). Train a model for each user or role on legitimate navigation data. For an active session, calculate the probability of the observed state transition. A sequence of very low-probability transitions indicates a significant deviation from normal workflow and could signify a compromised session using a forged credential."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]