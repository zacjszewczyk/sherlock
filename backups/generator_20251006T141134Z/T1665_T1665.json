[
  {
    "information_requirement": "Is the adversary using hidden infrastructure for Command and Control? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1665",
        "name": "Hide Infrastructure",
        "evidence": [
          {
            "description": "Observation of one or more network connection events where the destination IP address, requested domain, or associated SSL/TLS certificate hash is present on a threat intelligence feed of known C2 redirectors, malicious proxies, or abused infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Windows Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., perimeter firewalls, web proxies), enterprise DNS resolvers, and network sensor tap points.",
            "action": [
              "Symbolic (IOC Match): Correlate all outbound connection events from Zeek conn.log, DNS queries from Zeek dns.log, and TLS handshakes from Zeek ssl.log against subscribed threat intelligence feeds. Generate a high-severity alert for any match on IP, domain, or certificate hash indicators categorized as C2 infrastructure.",
              "Statistical (Outlier Detection): Aggregate outbound connections by destination ASN and IP reputation (e.g., 'Proxy', 'VPN', 'Hosting'). For each non-corporate ASN, calculate the 95th percentile for the number of distinct internal source hosts connecting to it over a 24-hour window. Flag and investigate ASNs that both exceed this threshold and have a high proportion (>50%) of destination IPs categorized as proxy or VPN services.",
              "Machine Learning (Classification): Train a logistic regression classifier on enriched network connection data. Use features including: a boolean threat intelligence match, destination port, protocol, connection duration, bytes sent/received, rarity of destination IP's geolocation, IP reputation category, and SSL certificate properties (e.g., is self-signed, issuer). Classify each connection as 'benign' or 'suspicious C2' and create cases for high-confidence suspicious predictions."
            ]
          },
          {
            "description": "Observation of an SSL/TLS session using a self-signed certificate or a certificate from a free provider (e.g., Let's Encrypt), where the destination IP resides in a non-whitelisted public cloud ASN, and the session's JA3/JA3S client fingerprint is either statistically rare within the enterprise or matches a known malicious signature.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network security monitoring sensors with SSL/TLS visibility (e.g., Zeek), and network egress points with access to connection metadata.",
            "action": [
              "Symbolic (Rule-Based): From Zeek ssl.log, create a rule to flag sessions where `issuer` is empty or equals `subject` (self-signed), or contains 'Let\\'s Encrypt'. For flagged sessions, cross-reference the destination IP in Zeek conn.log. Generate an alert if the destination IP's ASN is a non-whitelisted public cloud provider AND the session's JA3/JA3S hash matches a known C2 fingerprint from threat intelligence.",
              "Statistical (Rarity Analysis): For all sessions matching the symbolic rule's certificate and ASN criteria, calculate the enterprise-wide frequency of each observed JA3/JA3S hash over a 30-day baseline. Flag sessions where the JA3/JA3S hash falls into the bottom 5th percentile of frequency (is rare), as this suggests a non-standard or custom client application.",
              "Machine Learning (Anomaly Detection): Deploy an Isolation Forest anomaly detection model on SSL/TLS session metadata. Use features such as certificate validity period, destination port, a boolean for free/self-signed status, destination ASN, and the statistical rarity score of the JA3/JA3S hash. The model will score each session's abnormality; investigate sessions with the highest anomaly scores."
            ]
          },
          {
            "description": "Observation of DNS queries exhibiting one or more suspicious characteristics: the query is for a domain on a dynamic DNS service; the requested subdomain has high character entropy; or the query is for a non-standard record type (e.g., TXT, NULL) with an unusually large response payload.",
            "data_sources": [
              "Zeek dns.log",
              "Windows Event ID 4688",
              "Windows DNS Client Analytic Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise DNS resolvers, endpoint devices (for process context), and DNS forwarders to external resolvers.",
            "action": [
              "Symbolic (List Match): Scan Zeek dns.log for queries where the queried domain's TLD+1 matches a maintained list of dynamic DNS providers (e.g., 'ddns.net', 'no-ip.com', 'duckdns.org'). Generate an alert for any internal host observed making such a query and correlate with process creation logs (Windows Event ID 4688) on the host.",
              "Statistical (Entropy & Size Analysis): For each DNS query in Zeek dns.log, calculate the Shannon entropy of the first label (subdomain). Flag queries with an entropy score exceeding the 98th percentile of the baseline distribution, indicating potential DGA activity. Separately, for TXT record queries, flag responses where the answer length exceeds 3 standard deviations above the 30-day rolling average for TXT response lengths.",
              "Machine Learning (Time Series Forecasting): Implement a time series forecasting model (e.g., SARIMA) on the volume of DNS queries per source host. Generate an alert when the observed query volume for a host significantly exceeds the forecasted volume. Enrich these alerts by correlating them with high-entropy queries or large TXT responses from the same host, which strengthens the evidence for DNS tunneling."
            ]
          },
          {
            "description": "Observation of domain fronting, identified by a mismatch between the TLS Server Name Indication (SNI) field and the HTTP Host header in a decrypted session. Alternately, observation of a suspicious redirection pattern, where a client connects to a high-reputation domain (e.g., CDN) and is immediately followed by a connection to a low-reputation or uncategorized destination.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Decrypting web proxies, network TAPs placed between users and the internet, and network security monitoring sensors.",
            "action": [
              "Symbolic (Mismatch Detection): Within a decrypted traffic environment, join Zeek http.log and Zeek ssl.log on the session UID. Create a rule to generate a high-priority alert when the `host` field from http.log does not equal the `server_name` field from ssl.log, which is a strong indicator of domain fronting.",
              "Statistical (Transition Probability): Without decryption, identify initial connections to high-reputation CDN domains using DNS and SSL logs. For each source host, analyze the subsequent connection within a 5-second window. Calculate the transition probability from a CDN connection to a connection with C2-like traits (e.g., long duration, low data volume, destination is a non-corporate IP). Flag hosts whose transition probabilities are statistical outliers (e.g., > 3 standard deviations from the mean).",
              "Machine Learning (Sequence Analysis): Train a sequence-based classifier (e.g., LSTM) on sequences of session metadata (destination IP, domain, ASN, port, protocol). The model learns normal browsing patterns. Flag anomalous sequences, such as a connection to a trusted CDN followed by a connection to a rare, non-categorized IP address, which is indicative of a redirector."
            ]
          },
          {
            "description": "Observation of periodic network traffic from an internal host to a single external destination, characterized by a near-constant time interval between connections, long connection durations, and consistently low data transfer volumes, indicative of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Windows Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., firewalls), network sensor tap points, and endpoint devices for process and command-line context.",
            "action": [
              "Symbolic (Categorical Match): Enrich Zeek conn.log with IP reputation data. Create a rule to alert on any connection from an internal host to an external IP address explicitly categorized as 'TOR Exit Node', 'Malicious Proxy', or a known C2 provider, especially if the connection uses a non-standard port for web traffic.",
              "Statistical (Beaconing Analysis): For each unique source-destination IP pair in Zeek conn.log, group connections into 24-hour windows. Calculate the standard deviation of the inter-arrival time between connections and the mean bytes sent. Flag pairs with a low inter-arrival time standard deviation (< 1.0 second) and a low mean byte count (< 1KB), as this is characteristic of automated beaconing.",
              "Machine Learning (Clustering): Apply a DBSCAN clustering algorithm to connection metadata. Use features such as `log(bytes_sent)`, `log(duration)`, `stdev(inter_arrival_time)`, and `destination_port`. Investigate clusters that are distinct from the main 'benign traffic' cluster and exhibit C2-like characteristics. For hosts in these anomalous clusters, correlate connection timestamps with process creation logs (Windows Event ID 4688, Sysmon Event ID 1) to identify the originating process."
            ]
          },
          {
            "description": "Observation of a single domain resolving to a large and rapidly changing set of IP addresses over a short time period. These IPs are often geographically and network-diverse (multiple ASNs), and the associated DNS records have a very low Time-To-Live (TTL) value.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise DNS resolvers, DNS forwarders, and network security monitoring sensors capturing DNS traffic.",
            "action": [
              "Symbolic (IOC Match): Continuously monitor Zeek dns.log for queries to domains present on a threat intelligence feed of known fast-flux C2 domains. Generate an immediate alert for any internal host resolving such a domain.",
              "Statistical (Flux Scoring): For each domain queried in Zeek dns.log, calculate a 'flux score' over a rolling 1-hour window using the formula: `(Count(Unique IPs) * Count(Unique ASNs)) / (Average(TTL) + 1)`. Flag domains with a flux score in the 99th percentile of all observed domains, as this indicates a high likelihood of fast-flux DNS.",
              "Machine Learning (Classification): Train a Random Forest classifier to identify fast-flux domains. Use features derived from DNS responses for each domain over a time window, including: count of unique IPs, count of unique ASNs, average TTL, standard deviation of TTL, domain name length, and domain name entropy. The model will classify domains as 'benign', 'legitimate CDN', or 'fast-flux'."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]