[
  {
    "information_requirement": "Is the adversary developing resources by compromising external servers for use in operations against our organization?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1584.004",
        "name": "Server",
        "evidence": [
          {
            "description": "An outbound network connection from an internal host to an external destination (IP, domain) or secured by a certificate (serial, subject) matches a high-confidence indicator of compromise from a threat intelligence feed for known adversary infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Proxies), Corporate DNS Resolvers, TLS-inspecting network sensors",
            "action": [
              "Join network connection logs (Zeek conn.log `id.resp_h`), DNS logs (Zeek dns.log `query`), and certificate logs (Zeek x509.log `certificate.serial`) against a threat intelligence database of known malicious IPs, domains, and certificate serials. Generate a high-severity alert for any match.",
              "For all outbound domains not on a pre-defined allowlist, enrich with external data (e.g., domain age, registration privacy, ASN reputation). Calculate a risk score based on these features. Alert on connections to domains with a risk score in the top 5th percentile of all calculated scores, or those with an age of less than 30 days.",
              "Deploy a supervised classification model (e.g., Gradient Boosting Machine) trained on labeled threat intelligence data to predict the probability of a given connection being malicious. Use features from Zeek logs such as destination IP, port, ASN, protocol, connection duration, and certificate attributes. Alert when the model's predicted probability for a new connection exceeds a risk threshold of 0.85."
            ]
          },
          {
            "description": "An outbound connection from an internal host exhibits network artifacts, such as a JA3/JA3S hash, HTTP User-Agent, or URI path, that are uniquely characteristic of a known command-and-control (C2) framework.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "TLS-inspecting network sensors, Network Egress Points (Firewalls/Proxies), Endpoints generating the traffic",
            "action": [
              "Create and maintain a watchlist of JA3/JA3S hashes, HTTP User-Agents, and URI patterns associated with known C2 frameworks (e.g., Cobalt Strike, Metasploit). Scan Zeek ssl.log (for JA3/JA3S) and http.log in real-time and generate alerts on any exact matches to the watchlist.",
              "For each HTTP request in Zeek http.log, calculate the Shannon entropy of the URI path and query parameters. Establish a baseline of normal entropy values across the enterprise. Flag connections with entropy values greater than the 95th percentile, as high entropy often indicates encoded data used in C2 communications.",
              "Train a sequence-based model, such as a Long Short-Term Memory (LSTM) network, on a labeled dataset of legitimate and malicious URI patterns. Deploy the model to classify outbound HTTP requests in real-time. Alert on requests classified as malicious, which can detect variations of known C2 patterns that evade signature matching."
            ]
          },
          {
            "description": "An internal host establishes a series of outbound connections to a single external destination with highly regular time intervals (beaconing) or transfers data volumes that are statistical outliers compared to its established baseline.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Proxies), Endpoint devices and servers",
            "action": [
              "For any given internal-to-external source-destination IP pair not on an approved services allowlist, create a rule that alerts if the connection count exceeds 20 within a 1-hour window AND the total bytes transferred (`orig_bytes` + `resp_bytes` in Zeek conn.log) is less than 1MB. This helps filter out legitimate, high-volume data transfers.",
              "For each source-destination IP pair in Zeek conn.log over a rolling 24-hour window, calculate the time difference between consecutive connection start times. Alert on pairs where the standard deviation of these time differences is below a low threshold (e.g., < 2.0 seconds), indicating machine-like periodic beaconing.",
              "For each internal host, apply a time-series decomposition model (e.g., STL) to the outbound connection event timestamps to external destinations. Analyze the periodic component to identify strong, repeating patterns. Alert when a strong periodic signal is detected with a frequency that is uncommon for legitimate applications (e.g., a cycle of 13 minutes and 27 seconds)."
            ]
          },
          {
            "description": "An outbound SSL/TLS connection utilizes a server certificate with anomalous attributes, such as being self-signed, having an unusually short validity period, or containing a high-entropy subject name, when compared to a baseline of legitimate traffic.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls/Proxies), Public Certificate Transparency Logs",
            "action": [
              "Generate an alert for any outbound connection logged in Zeek ssl.log that uses a certificate (from Zeek x509.log) where the `issuer` field exactly matches the `subject` field (indicating a self-signed certificate) AND the destination IP address is not on a pre-approved list of internal or partner IP addresses.",
              "From Zeek x509.log, calculate the distribution of certificate validity periods (in days) and the Shannon entropy of certificate subject names. Alert on any certificate with a validity period in the bottom 5th percentile (e.g., < 90 days) OR a subject name entropy in the top 5th percentile, as these are common indicators of adversary-generated certificates.",
              "Use an unsupervised clustering algorithm (e.g., DBSCAN) to group certificates based on a feature set including validity period, key length, public key algorithm, and subject name entropy. Configure the algorithm to identify and alert on small clusters or individual outliers that represent anomalous certificates deviating from the large, dense clusters of legitimate certificate authorities."
            ]
          },
          {
            "description": "An internal host resolves and connects to a newly observed external domain, and within a short time window (e.g., < 5 minutes), a suspicious process such as a scripting engine (e.g., powershell.exe, wscript.exe) is executed on that same host.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Domain Controllers, Corporate DNS Resolvers",
            "action": [
              "Create a correlation rule that triggers when a host resolves a domain seen for the first time in the last 24 hours (from Zeek dns.log) and, within 5 minutes, a process creation event (Windows Event ID 4688) is observed on the same host for 'powershell.exe' containing command-line arguments like '-enc', '-nop', or '-w hidden'.",
              "Maintain a frequency count of all domains queried (Zeek dns.log) and all processes executed (Windows Event ID 4688) per host. For a given host, if a connection is made to a domain in the bottom 5% of prevalence ('least seen') and a process in the bottom 5% of execution frequency for that host is created within 2 minutes, flag the event sequence as a statistical anomaly for investigation.",
              "Implement a graph-based anomaly detection model where nodes represent hosts, domains, and processes. Create time-ordered edges for events: [Host] -> resolves -> [Domain], [Host] -> connects -> [IP], [Host] -> executes -> [Process]. Use a graph neural network (GNN) to learn normal sequences of activity and assign an anomaly score to new sequences. Alert on sequences with high scores, such as a rare path like [Host] -> [Newly Observed Domain] -> [Suspicious Scripting Engine Process]."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]