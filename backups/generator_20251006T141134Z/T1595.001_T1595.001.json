[
  {
    "information_requirement": "Is the adversary conducting reconnaissance by scanning our public-facing IP blocks?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1595.001",
        "name": "Scanning IP Blocks",
        "evidence": [
          {
            "description": "An external source IP address, observed initiating inbound connections, is listed on a high-confidence threat intelligence feed as a known scanner or malicious actor.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing firewalls, network gateways, Cloud Security Groups, and Network ACLs",
            "action": [
              "Symbolic (IOC Match): Continuously correlate the source IP address (`id.orig_h`) of all inbound connections in `Zeek conn.log` and `icmp.log` against threat intelligence feeds for known scanners, botnet C2s, or TOR exit nodes. Trigger an alert on a direct match.",
              "Statistical (Reputation Scoring): For each inbound source IP, calculate a reputation score by summing weighted values based on its presence on multiple threat intelligence lists (e.g., scanners, botnets, proxies). Alert when an IP's cumulative score exceeds a dynamically calculated threshold, such as the 95th percentile of all source IP scores over the last 24 hours.",
              "Machine Learning (Classification): Train a supervised classification model (e.g., Random Forest) using labeled historical data. Features should include the source IP's ASN, country, number of threat feed hits, and historical connection patterns. Use the trained model to classify new inbound source IPs in near-real-time, alerting on those classified with a high probability as 'malicious-scanner'."
            ]
          },
          {
            "description": "Inbound network traffic exhibits protocol-level artifacts or patterns matching signatures of known reconnaissance tools, such as specific User-Agent strings, TCP flag combinations, or TLS JA3/JA3S hashes.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek software.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web application servers, internet-facing firewalls, load balancers, and reverse proxies",
            "action": [
              "Symbolic (Signature Match): Develop and apply a set of rules to inbound traffic logs. Use regular expressions on the `user_agent` field in `Zeek http.log` to detect scanners (e.g., 'Nmap', 'masscan', 'zmap'). Search `Zeek conn.log` for anomalous TCP flag combinations (e.g., FIN/PSH/URG, NULL). Match the `ja3` and `ja3s` hashes in `Zeek ssl.log` against a known-bad list for scanning tools.",
              "Statistical (Frequency Analysis): Calculate the frequency of all User-Agent strings and JA3 hashes observed in a 24-hour window. For a given source IP, calculate a rarity score for its User-Agent and JA3 hash (e.g., inverse document frequency). Alert if a source IP uses multiple identifiers that fall below the 1st percentile of commonality, indicating attempts to evade simple signature matching.",
              "Machine Learning (Sequence Analysis): Train a Hidden Markov Model (HMM) on sequences of TCP connection states (the `history` field in `Zeek conn.log`) from known benign traffic sources. Apply the model to new connection sequences from external IPs. Calculate the log-likelihood of each sequence and alert when the likelihood falls below a threshold, indicating a deviation from normal session patterns characteristic of scanning probes."
            ]
          },
          {
            "description": "A single external source IP address initiates connections to the same destination port on a number of distinct internal destination hosts that is statistically anomalous within a defined time window (horizontal scan).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Demilitarized Zone (DMZ) network segments and externally exposed server subnets",
            "action": [
              "Symbolic (Threshold Rule): For each external source IP, count the number of unique destination IPs (`id.resp_h`) it connects to on a single destination port (`id.resp_p`) within a 1-minute window. Trigger an alert if this count exceeds a static threshold, such as 20 hosts.",
              "Statistical (Percentile Threshold): Over a 5-minute sliding window, calculate the number of unique destination hosts contacted per source IP, grouped by destination port. Establish a dynamic baseline (e.g., 99th percentile) for this metric for each destination port. Alert when any source IP exceeds this port-specific baseline, accounting for the fact that scanning certain ports (like 443) is more common than others.",
              "Machine Learning (Time-Series Anomaly Detection): For each high-value destination port (e.g., 443, 80, 22), model the count of unique source-destination IP pairs per minute as a time series. Use a forecasting model (e.g., Prophet, SARIMA) to predict the expected volume and confidence interval. Alert when the observed count is a significant outlier compared to the model's forecast, indicating a potential coordinated or distributed scan."
            ]
          },
          {
            "description": "A single external source IP address initiates connections to a number of distinct destination ports on a single internal host that is statistically anomalous within a defined time window (vertical scan).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing application servers, VPN concentrators, and externally-facing domain controllers",
            "action": [
              "Symbolic (Threshold Rule): For each source-destination IP pair, count the number of unique destination ports (`id.resp_p`) attempted within a 1-minute window. Trigger an alert if this count exceeds a static threshold, such as 50 unique ports.",
              "Statistical (Entropy Analysis): For each source IP (`id.orig_h`) and destination IP (`id.resp_h`) pair, calculate the Shannon entropy of the destination port numbers contacted within a 5-minute window. A high entropy score indicates a wide, unpredictable scan. Alert when the entropy score for a pair exceeds a dynamic threshold derived from the 98th percentile of all such calculations.",
              "Machine Learning (Clustering): From `Zeek conn.log` events, apply a density-based clustering algorithm like DBSCAN. Use features such as source IP, destination IP, and destination port. A dense cluster of events with the same source/destination IP but a high variance in destination ports will be identified as an anomalous cluster representing a vertical scan, separating it from sparse, legitimate multi-port communication."
            ]
          },
          {
            "description": "A single external source IP address initiates connections or sends probes, such as ICMP or TCP SYN, to multiple internal IP addresses that are sequential or part of the same subnet, indicating a sweep to identify live hosts.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public IP address ranges allocated to the organization and cloud network gateways (e.g., AWS Internet Gateway, Azure Virtual Network Gateway)",
            "action": [
              "Symbolic (Sequence Detection): For each source IP, buffer the destination IPs it contacts from `Zeek conn.log` or `icmp.log` over a 1-minute window. Convert the IPs to their integer representations and check for runs of 10 or more sequential integers. Trigger an alert on detection of such a sequence.",
              "Statistical (Distribution Analysis): For each source IP, collect the set of destination IP addresses it contacted within a 5-minute window. Calculate the standard deviation of the integer representations of these IPs. A low standard deviation suggests the IPs are tightly grouped (e.g., a sweep of a specific subnet). Compare this value to a baseline of normal traffic patterns to identify anomalously grouped probes.",
              "Machine Learning (Pattern Recognition): Represent the target /24 subnet as a 256-element bitmap. For each source IP, mark the destination hosts it probes on this bitmap over a 10-minute window. Train a Convolutional Neural Network (CNN) image classifier on bitmaps of known benign traffic and various sweep patterns (sequential, random, sparse). Use the trained model to classify new bitmaps in near-real-time and alert on patterns identified as sweeps."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]