[
  {
    "information_requirement": "Is the adversary developing resources related to digital certificates for future operations?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1587.003",
        "name": "Digital Certificates",
        "evidence": [
          {
            "description": "A digital certificate's SHA1 hash, serial number, or issuer common name exactly matches a known malicious indicator from an active threat intelligence feed.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, web proxies, mail gateways, and inline TLS decryption devices where TLS inspection is performed.",
            "action": [
              "Symbolic: Continuously compare the 'sha1', 'serial', and 'issuer' fields from Zeek ssl.log against a blocklist of known malicious certificate attributes from threat intelligence. Generate a high-priority alert on any exact match.",
              "Statistical: Calculate the prevalence of all certificate issuers observed in Zeek ssl.log over a 30-day rolling window. Flag any issuer whose prevalence is in the bottom 0.1 percentile (i.e., extremely rare) and is not on an internal allowlist of known-good, low-volume issuers. Correlate with connections to low-reputation IPs (from Zeek conn.log) for prioritization.",
              "Machine Learning: Train a classification model (e.g., XGBoost, Random Forest) using labeled data from threat intelligence feeds. Features should include certificate attributes (validity period, key algorithm, key length, number of SAN entries), issuer details, and subject information (e.g., presence of dynamic DNS keywords). Use the model to score all newly observed certificates that do not have an exact IOC match, alerting on those with a high malicious probability score (>0.85)."
            ]
          },
          {
            "description": "A digital certificate is observed that is self-signed (issuer matches subject), uses a free Certificate Authority for a domain registered within the last 30 days, or has a subject name that is a typosquatted variation of an internal or high-value external domain.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log",
              "Windows Event ID 41 (Microsoft-Windows-CAPI2/Operational)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, corporate DNS resolvers, and all enterprise Windows endpoints' certificate trust stores.",
            "action": [
              "Symbolic: From Zeek ssl.log, parse the 'issuer' and 'subject' fields to flag certificates where they are identical (self-signed). If a self-signed certificate is installed as a root CA, cross-reference the certificate's thumbprint with Windows Event ID 41 in the Microsoft-Windows-CAPI2/Operational log on endpoints to detect T1553.004 - Install Root Certificate.",
              "Statistical: For all domains in certificate subject common names (CN) and subject alternative names (SAN), calculate the Levenshtein distance to a curated list of internal domains and high-value partner/brand domains. Flag domains with a distance less than 3 as potential typosquatting. Correlate certificates from free CAs with domain age derived from passive DNS (Zeek dns.log history) and flag any certificate where the associated domain's age is in the bottom 5th percentile of all observed domains.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., Prophet, LSTM) on DNS query logs (Zeek dns.log) for domains associated with self-signed or free CA certificates. A sudden spike in query volume for such a domain that significantly deviates from the forecasted baseline indicates anomalous interest and potential C2 activity."
            ]
          },
          {
            "description": "An observed digital certificate possesses statistically anomalous characteristics, such as abnormally high Shannon entropy in its subject or issuer fields, or a validity period that is unusually short (< 30 days) or long (> 825 days) compared to an established network baseline.",
            "data_sources": [
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, web proxies, and inline TLS decryption devices where full certificate details are visible.",
            "action": [
              "Symbolic: Implement a rule to flag any certificate from Zeek ssl.log where the validity period (delta between 'not_valid_after' and 'not_valid_before' fields) is less than 30 days or greater than 825 days, excluding known-good issuers like Let's Encrypt which use 90-day certificates.",
              "Statistical: Establish a baseline of certificate properties from the last 90 days of Zeek ssl.log. For each new certificate, calculate the Shannon entropy of the subject CN and issuer fields, and the validity duration. Identify outliers by flagging any certificate where one or more of these metrics exceeds 3 standard deviations from the mean (z-score > 3) or falls outside the 1.5 * IQR range.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on a feature vector derived from Zeek ssl.log. The vector should include: entropy(subject), entropy(issuer), validity period, key length, number of SAN entries, and a binary flag for self-signed. Certificates classified as noise by the algorithm represent atypical combinations of attributes and should be prioritized for analyst review."
            ]
          },
          {
            "description": "A single non-standard digital certificate, identified by its SHA1 hash, is reused across multiple geographically or logically distinct external IP addresses or Server Name Indications (SNIs), suggesting shared C2 infrastructure.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, flow data collectors (e.g., NetFlow/IPFIX), and inline TLS decryption devices.",
            "action": [
              "Symbolic: For any certificate already flagged as suspicious (e.g., self-signed, high entropy), add its SHA1 hash to a watchlist. Generate an alert if this SHA1 hash is observed in Zeek ssl.log associated with more than 3 distinct destination IP addresses in different /24 subnets within a 24-hour period.",
              "Statistical: For every certificate SHA1 hash in Zeek ssl.log, create a running count of unique 'id.resp_h' (from Zeek conn.log) and 'server_name' (from Zeek ssl.log) it is associated with over a 7-day window. Flag any certificate whose count of unique IPs or SNIs exceeds the 99th percentile for all certificates seen on the network.",
              "Machine Learning: Model network connections as a tripartite graph with nodes representing certificate SHA1s, server IPs, and SNIs. Apply community detection algorithms (e.g., Louvain Modularity) to identify clusters of related infrastructure. A certificate node with a high degree centrality that connects to many disparate IP/SNI nodes not otherwise connected within a community is a strong indicator of C2 infrastructure."
            ]
          },
          {
            "description": "A TLS connection uses a certificate whose issuance date ('not_valid_before') and the domain's first-seen registration date are both recent (e.g., within the last 30 days) and chronologically proximate (e.g., issued within 24 hours of domain registration).",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, corporate DNS resolvers, and external threat intelligence platforms providing passive DNS data.",
            "action": [
              "Symbolic: For each 'server_name' in ssl.log, query historical dns.log data or an external passive DNS service for its first-seen date. Generate an alert if a connection is made to a domain first seen within the last 7 days AND its corresponding certificate's 'not_valid_before' date is also within the last 7 days.",
              "Statistical: For every domain-certificate pair, calculate the time delta between the domain's first-seen date and the certificate's 'not_valid_before' date. Create a distribution of these deltas across all network traffic over 30 days. Flag connections where this delta falls into the bottom 1st percentile (e.g., < 24 hours), indicating 'just-in-time' infrastructure provisioning.",
              "Machine Learning: Use a time-series forecasting model (e.g., ARIMA or Prophet) on the daily count of newly registered domains observed in DNS traffic. A sudden, anomalous spike in new domains that exceeds the forecast, especially when correlated with a corresponding spike in new certificates from free CAs or self-signed certificates, indicates a potential large-scale adversary campaign setup and should be flagged."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]