[
  {
    "information_requirement": "Is the adversary conducting reconnaissance using social media?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1593.001",
        "name": "Social Media",
        "evidence": [
          {
            "description": "An internal host establishes a connection to a known malicious IP or domain from a threat intelligence feed, and within the subsequent 60 minutes, the same host establishes one or more connections to domains categorized as social media.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (e.g., perimeter firewalls, web proxies) and internal DNS resolvers where traffic is monitored.",
            "action": [
              "Continuously monitor Zeek conn.log for connections where the destination IP (`id.resp_h`) matches an IP on a curated threat intelligence feed. Upon a match, add the internal source IP (`id.orig_h`) to a 'recently-seen-malicious' watchlist with a 60-minute TTL. Generate an alert if any IP on this watchlist subsequently initiates a connection where the destination resolves to a domain on a 'social media' domain set.",
              "For each internal host, establish a baseline of typical destination Autonomous System Numbers (ASNs) and countries. Monitor for connections to a threat intelligence IP. If a host connects to a malicious IP, then subsequently connects to a social media domain from a rare or new ASN/country for that host (e.g., destination ASN is not in the host's 30-day baseline), flag the activity for review. Prioritize hosts with multiple deviations.",
              "Construct a network graph where nodes are internal hosts, external IPs, and domains. Create edges for connections (host -> IP) and DNS resolutions (IP -> domain). Apply a link prediction algorithm to identify hosts likely to connect to social media domains based on their proximity in the graph to nodes associated with known malicious activity (e.g., IPs from CTI feeds). A high prediction score for a future connection between a 'tainted' host and a social media domain triggers an alert for proactive analysis."
            ]
          },
          {
            "description": "A script interpreter process (e.g., python.exe, powershell.exe, wscript.exe) is executed with command-line arguments containing a social media URL, or an outbound HTTP/S request to a social media domain contains a User-Agent string associated with common programmatic libraries or scraping tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices (workstations, servers) and network inspection points (e.g., web proxies, NG-firewalls with SSL/TLS inspection).",
            "action": [
              "Create a detection rule that triggers an alert on Windows Event ID 4688 if `ProcessName` is in a list of script interpreters (`powershell.exe`, `python.exe`, `curl.exe`, `wscript.exe`) AND `CommandLine` contains a substring from a list of social media domains. Augment this with a network rule that alerts if Zeek `http.log` or `ssl.log` shows a connection to a social media domain where the `user_agent` (in http.log) or `ja3` hash (in ssl.log) matches a known signature for programmatic access libraries.",
              "For each process execution (Windows Event ID 4688) involving a script interpreter, calculate the Shannon entropy of its `CommandLine` string. Establish a baseline entropy distribution for each unique interpreter process name. Generate a medium-severity alert if a command's entropy exceeds the 98th percentile for its process type AND the command line contains a social media domain.",
              "Train a classification model (e.g., Gradient Boosting) using features from both host and network logs for a given session. Features should include: process name, command-line length, command-line entropy, parent process name, destination domain, HTTP User-Agent, and JA3 hash. The model should be trained on labeled data to classify sessions as 'benign browsing', 'benign automation', or 'suspicious reconnaissance/scraping'."
            ]
          },
          {
            "description": "A single source IP establishes a connection to a social media domain and requests a high volume of distinct URIs (>100) within a short time frame (<10 minutes), where the time difference between consecutive requests has a very low standard deviation, indicating programmatic access rather than human interaction.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network flow and HTTP/S inspection points, typically at the network perimeter or in a cloud access security broker (CASB).",
            "action": [
              "For each source IP (`id.orig_h`), count the number of unique URIs requested from a single social media host (from `http.log`) within a 5-minute sliding window. If the count exceeds a hard threshold (e.g., 75 unique URIs), generate an alert.",
              "Group Zeek http.log records into sessions by source IP, destination host, and a 30-minute idle timeout. For each session to a social media host, calculate two metrics: 1) the standard deviation of the time deltas between consecutive requests and 2) the count of unique URIs requested. Flag sessions for review where the standard deviation is below the 5th percentile (indicating robotic timing) AND the unique URI count is above the 98th percentile (indicating broad enumeration).",
              "For each internal host, create a time series of its request rate (requests per minute) to social media domains. Apply a seasonal decomposition model (e.g., STL) to separate trend, seasonality, and residual components. Feed the residual component into an anomaly detection algorithm (e.g., Isolation Forest or a CUSUM detector). A significant, sustained anomaly in the residuals, indicating a deviation from the host's normal browsing pattern, should be alerted on."
            ]
          },
          {
            "description": "A host designated as a server (e.g., domain controller, database server, internal application server) initiates any outbound network connection to a domain categorized as social media, which is a behavior that deviates from its established baseline function.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Log sources monitoring traffic from dedicated server VLANs, data center subnets, and critical infrastructure zones. This also includes central DNS resolver logs that can attribute queries to server source IPs.",
            "action": [
              "Maintain a managed asset list of all server IP addresses and a managed domain list of social media sites. Create a high-severity detection rule that triggers an alert whenever a Zeek `dns.log` query or `conn.log` connection shows a source IP from the server list communicating with a destination on the social media domain list.",
              "For each server IP, build a historical baseline (e.g., over 30 days) of all unique destination domains it has connected to. On a daily basis, check for any new destinations. Generate a high-confidence alert if a server connects to a new destination domain that is also on a list of social media domains, as this is a zero-frequency event against its baseline.",
              "Periodically (e.g., weekly), profile each server's network behavior using features like: set of destination ports, set of destination ASNs, protocol distribution (TCP/UDP/ICMP), and average daily outbound data volume. Use a clustering algorithm like DBSCAN to group servers with similar profiles (e.g., 'web servers', 'database servers'). A server that initiates a connection to a social media site will likely have its profile change, causing it to be flagged as a noise point or to shift clusters, either of which should trigger an alert for anomalous behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]