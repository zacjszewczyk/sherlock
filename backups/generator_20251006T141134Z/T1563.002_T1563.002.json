[
  {
    "information_requirement": "Is an adversary moving laterally by hijacking an RDP session?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1563.002",
        "name": "RDP Hijacking",
        "evidence": [
          {
            "description": "The process `tscon.exe` is executed with command-line arguments that match known malicious signatures, or another process is executed with command-line arguments indicative of RDP session hijacking tools (e.g., specific flags used by Metasploit or Mimikatz modules).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical infrastructure servers (e.g., Domain Controllers, database servers), bastion hosts or jump servers, and workstations of privileged users (e.g., system administrators, developers).",
            "action": [
              "Create a detection rule that triggers on process creation events (Windows Event ID 4688, Sysmon Event ID 1) where the command line field contains exact string or regex matches for known RDP hijacking commands, such as 'tscon.exe [0-9]+ /dest:\\\\S+', 'rundll32.exe tsclient.dll,Shadow', or specific argument patterns from public adversary tools.",
              "For all `tscon.exe` executions, establish a baseline of the parent process for each user and host. Calculate the rarity (e.g., bottom 5th percentile) of the parent-child process relationship. Generate a high-risk score for executions by non-administrative users or from unusual parent processes like 'winword.exe' or 'powershell.exe'.",
              "Train a classification model (e.g., Random Forest) on process creation events for `tscon.exe`. Use features such as the parent process name, argument count, presence of a destination session argument, and n-grams from the command line string. Label known benign administrative scripts and known malicious tool signatures to classify new executions as either 'benign-admin-activity' or 'suspicious-hijack-attempt'."
            ]
          },
          {
            "description": "A process creation event for `tscon.exe` containing a numeric session ID as an argument is observed on a host, preceded within a 5-minute window by a process creation event for `quser.exe` or `query.exe session` initiated by the same user account on the same host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical infrastructure servers (e.g., Domain Controllers, database servers), bastion hosts or jump servers, and workstations of privileged users (e.g., system administrators, developers).",
            "action": [
              "Implement a stateful correlation rule that triggers when a process creation event for `quser.exe` or `query.exe` (with 'session' or 'user' arguments) is followed by a `tscon.exe` execution on the same host and by the same user within a 5-minute window. The rule must validate that the `tscon.exe` command line contains a numeric argument representing a session ID.",
              "For each host, analyze process sequences to establish a baseline of two-step process transitions. Calculate the frequency of the `quser.exe` -> `tscon.exe` sequence per user. Flag any user whose execution frequency of this specific sequence falls into the 99th percentile across all users, indicating potentially scripted or automated discovery and hijacking activity.",
              "Use a sequence modeling algorithm, such as a Hidden Markov Model (HMM), trained on sequences of process creation events per user session. The model should learn normal administrative workflows. Flag any session sequence that has a low probability score under the trained model, particularly sequences containing the `quser`/`query` -> `tscon` pattern, which deviates from learned benign sequences."
            ]
          },
          {
            "description": "A user's RDP session is disconnected (Windows Event ID 4779) and is immediately followed by a session reconnect (Windows Event ID 4778) associated with the same session name but a different user account or source IP address, without a corresponding new interactive logon (Windows Event ID 4624, Logon Type 10).",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4779",
              "Windows Event ID 4634",
              "Windows Event ID 4778",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, authentication servers, and remote access gateways (e.g., RDP gateways).",
            "action": [
              "Create a stateful correlation rule that tracks active RDP sessions by `SessionName` from Logon Event ID 4624 (Type 10). Alert when a reconnect event (Event ID 4778) occurs for an active `SessionName` where the `AccountName` or `ClientAddress` in the event differs from the original logon event's data.",
              "For each active RDP session (`LogonId`), maintain a stateful record of the source IP address from `Zeek conn.log` and logon events. Calculate the number of distinct source IPs associated with a single `LogonId` during its lifetime. Flag any session where this count exceeds 1, as a legitimate RDP session should not migrate between source IPs.",
              "Develop a time-series anomaly detection model (e.g., LSTM autoencoder) on the RDP session event stream per host (logon, logoff, disconnect, reconnect). Use features like time delta between events, event type sequences, and changes in user/IP per session. Generate an alert for an anomalous sequence, such as a disconnect followed by an immediate reconnect from a new IP, which deviates from learned temporal patterns."
            ]
          },
          {
            "description": "Process execution or network connection patterns originating from an RDP session (identified by linking `LogonId` from Event ID 4624 Type 10 to process events) deviate significantly from the established baseline for that specific user or host, and/or include tools commonly used for lateral movement.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers, particularly bastion hosts, jump servers, domain controllers, and workstations of privileged users.",
            "action": [
              "For every process creation event (Sysmon Event ID 1) linked to an RDP logon session (Logon Type 10), match the process name or command line against a watchlist of lateral movement tools (e.g., `psexec.exe`, `wmic.exe`, `at.exe`, `schtasks.exe`, `powershell.exe -enc`). Escalate any match for review.",
              "For each user, build a statistical baseline of activity within RDP sessions. This includes the set of unique processes executed, the entropy of command-line arguments, and the set of destination subnets connected to. Use a scoring system to flag sessions where activity exceeds a 95th percentile threshold on any of these metrics (e.g., a new rare process is executed).",
              "Employ an unsupervised clustering model (e.g., DBSCAN) on featurized RDP session activity. Features should include vectors of process names, network connection properties (port, destination prevalence), and command-line argument statistics. The model will group normal sessions together and identify anomalous sessions as noise or outliers, indicating potential hijacking."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]