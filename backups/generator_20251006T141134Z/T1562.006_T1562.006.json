[
  {
    "information_requirement": "Is the adversary actively blocking security telemetry or indicators to evade detection?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1562.006",
        "name": "Indicator Blocking",
        "evidence": [
          {
            "description": "A process creation event is observed where the file hash matches an entry in a curated threat intelligence list of known indicator blocking tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, Critical servers (e.g., Domain Controllers, file servers), Log aggregation servers",
            "action": [
              "Create a rule to compare the file hash (e.g., SHA256) from all process creation events (Sysmon Event ID 1, Windows Event ID 4688) against a threat intelligence feed of known indicator blocking tools. Generate a critical alert upon a match.",
              "For all new file hashes observed in process creation events, calculate their enterprise-wide prevalence (number of unique hosts). Flag hashes with a prevalence below a defined threshold (e.g., seen on fewer than 0.5% of hosts) but on more than one host within a 24-hour period. This highlights rare tools being deployed across multiple systems.",
              "Train a supervised classification model (e.g., XGBoost, Random Forest) using features extracted from process creation events, such as parent process, user context, process name entropy, and file metadata (e.g., is it unsigned, missing company name). Use the model to score new processes, flagging those with a high probability of being malicious tools, even without a known hash."
            ]
          },
          {
            "description": "A command-line execution is recorded that contains specific strings or patterns indicative of manipulating event logs, firewall rules, or Event Tracing for Windows (ETW) providers.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, Servers with local administrative privileges, PowerShell execution environments",
            "action": [
              "Deploy regex-based rules to scan command-line arguments (Sysmon Event ID 1, Windows Event ID 4688) and PowerShell script blocks (PowerShell Event ID 4104) for keywords and patterns related to indicator blocking, such as 'wevtutil.exe cl', 'Clear-EventLog', 'Set-EtwTraceProvider', 'sc.exe stop Sysmon64', 'netsh advfirewall firewall add rule' with an action of 'block' targeting SIEM/collector IPs, or registry modifications to 'HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog'.",
              "For common processes like powershell.exe, cmd.exe, and reg.exe, establish a baseline distribution of command-line argument length and character entropy for each user. Alert when a new execution's entropy or length exceeds a dynamic threshold (e.g., the 99th percentile for that user/process combination), indicating potentially obfuscated or unusually complex commands.",
              "Implement a command-line classification model (e.g., a fine-tuned BERT or similar transformer) to analyze the semantic structure of commands. Train the model to differentiate benign administrative actions from malicious defense evasion attempts by understanding the context (e.g., 'Set-ItemProperty' on a sensitive registry key is higher risk than on a user profile key)."
            ]
          },
          {
            "description": "A high-fidelity audit event is generated, such as the security log being cleared (Event ID 1102), a Sysmon configuration change (Event ID 16), or a firewall rule blocking telemetry to a known collector.",
            "data_sources": [
              "Sysmon Event ID 16",
              "Windows Security Event ID 1102",
              "Windows Firewall Event ID 4947",
              "Windows Security Event ID 5152"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, Domain Controllers, Systems with host-based firewalls enabled, Network gateways",
            "action": [
              "Create a critical, non-suppressible alert that triggers immediately upon the detection of Windows Security Event ID 1102 (The audit log was cleared) or Sysmon Event ID 16 (Sysmon configuration change). These high-fidelity events require immediate analyst review.",
              "For firewall rule modification events (Windows Event ID 4947), baseline normal activity (e.g., changes via Group Policy). Alert on statistical outliers, such as a rule added manually by a non-administrative user, a rule with a destination IP matching a known log collector, or a rule with an unusually permissive port/protocol combination (e.g., 'any').",
              "Use a sequence mining algorithm (e.g., Hidden Markov Model or LSTM) to analyze event logs per host. Train the model on normal event sequences to identify and alert on anomalous patterns, such as a suspicious login followed by a log clearing event (Event ID 1102) and a subsequent drop in event volume from that host, which contextually validates the tampering attempt."
            ]
          },
          {
            "description": "An endpoint, confirmed to be active on the network via network flow data, ceases to send any log telemetry to the central collector for a statistically significant duration.",
            "data_sources": [
              "Zeek conn.log",
              "SIEM/Log Aggregator ingestion health logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network chokepoints (e.g., core switches, internet gateway), SIEM/Log Aggregator ingestion points, All log-generating endpoints and servers",
            "action": [
              "Implement a 'silent host' rule that checks if a log-generating asset has failed to send any logs within a specified time window (e.g., 30 minutes). If a host goes silent, automatically query network flow data (Zeek conn.log) for its IP address in the same window. If outbound network traffic is observed, escalate an alert for a potential logging failure or deliberate blocking.",
              "For each host and log source combination, model the expected log volume per hour using a time series baseline (e.g., SARIMA or exponential smoothing). Generate an alert when the observed volume drops below a statistically significant threshold (e.g., more than 3 standard deviations below the mean for that time period) for a sustained duration.",
              "Apply an unsupervised time series anomaly detection model (e.g., Isolation Forest or Seasonal-Hybrid ESD) to the log ingestion rates for each host. This approach automatically accounts for seasonality (time of day, day of week) and detects sudden, unexpected drops in telemetry that deviate from learned normal patterns, reducing false positives from simple thresholding."
            ]
          },
          {
            "description": "A sequence of process creations is observed within a short time window on a single host, consisting of a discovery command (e.g., 'tasklist') followed by a termination command (e.g., 'taskkill') targeting a known security service.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint workstations, Servers with interactive user logins, Privileged Access Workstations (PAWs)",
            "action": [
              "Create a time-based correlation rule that alerts if, on the same host and within the same user session (Logon ID), a process execution of a discovery tool ('tasklist.exe', 'sc.exe query', 'Get-Process') is followed within 5 minutes by a termination command ('taskkill.exe', 'sc.exe stop', 'Stop-Service') targeting a process name associated with a known security agent (e.g., 'msmpeng.exe', 'sysmon64.exe', 'carbonblack.exe').",
              "Analyze command-line sequences using n-gram analysis (n=2 or 3) to establish a baseline of common command pairings for each user role. Calculate the conditional probability of sequences like ('tasklist', 'taskkill'). Flag sequences that are statistically rare for a given user or across the enterprise, especially when the target of the second command is a security tool.",
              "Train a sequence-to-sequence model (e.g., an LSTM-based autoencoder) on streams of process creation events per user session. The model learns to reconstruct normal command sequences. An alert is generated when the model's reconstruction error for a new sequence is high, indicating a deviation from learned behavior, such as the anomalous 'discover-then-kill' pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]