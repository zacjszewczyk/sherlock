[
  {
    "information_requirement": "Has the adversary modified network device operating system images or memory to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1601.001",
        "name": "Patch System Image",
        "evidence": [
          {
            "description": "A network device OS image file's cryptographic hash matches a known-bad hash from a threat intelligence source, or a YARA signature for known firmware malware is detected within the file.",
            "data_sources": [
              "Network device OS image files",
              "Threat Intelligence Hash Feeds",
              "Firmware Malware YARA Rules",
              "Zeek files.log",
              "Zeek tftp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Configuration management servers, Core network switches and routers, Perimeter firewalls, TFTP/FTP servers, Centralized file analysis sandbox",
            "action": [
              "Periodically retrieve OS images from network devices. Calculate the SHA256 hash of each image and query for matches against a threat intelligence list of known-bad firmware hashes. Concurrently, scan each image file with a YARA ruleset designed to detect known firmware implants (e.g., SYNful Knock). Generate an alert for any hash or YARA rule match.",
              "Analyze Zeek files.log for file transfers with MIME types like 'application/octet-stream' or filenames ending in '.bin' or '.img'. For each device type, establish a baseline distribution of file sizes for these transfers. Alert on any transfer where the file size exceeds the 99th percentile for that device type, or if the transfer originates from an IP address not seen transferring firmware in the last 90 days.",
              "Train a time-series anomaly detection model (e.g., SARIMA) on the hourly count of firmware image transfers, using historical Zeek files.log data to learn normal maintenance patterns and schedules. Generate an alert if the model flags a statistically significant spike in transfer activity that deviates from the established seasonal pattern (e.g., occurs outside a known maintenance window)."
            ]
          },
          {
            "description": "The cryptographic hash of a network device's stored OS image file does not match the vendor-provided 'golden' hash for the approved version, indicating unauthorized modification.",
            "data_sources": [
              "Network device OS image files",
              "Vendor Firmware Hash Repository",
              "Cisco Syslog Message ID %PLATFORM-1-IMAGE_INTEGRITY_FAIL",
              "TACACS+ command accounting logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Configuration Management Database (CMDB), Golden Image Repository server, Critical network infrastructure (core routers, edge firewalls), Automated configuration management platforms",
            "action": [
              "Maintain a 'golden hash' repository mapping approved OS image versions to their vendor-provided SHA256 hashes. Periodically, execute an automated job to retrieve the running image from each critical network device, calculate its hash, and compare it to the corresponding golden hash. Generate a high-severity alert on any mismatch.",
              "Monitor network device syslog for image integrity failure messages (e.g., '%PLATFORM-1-IMAGE_INTEGRITY_FAIL'). Since these events are exceptionally rare, any occurrence should trigger an immediate alert. Additionally, analyze TACACS+ logs to baseline the frequency of 'show version' commands per user, per device. Alert if a user executes this command more than 3 standard deviations above their historical baseline within an hour of a configuration change.",
              "Train a classification model (e.g., Random Forest) to predict the risk level of a configuration change event. Use features such as user role, time of day, presence of boot variable changes, and temporal proximity to image file transfers (from Zeek logs). A change classified as 'high-risk' by the model should automatically trigger a prioritized, on-demand hash verification action."
            ]
          },
          {
            "description": "A sequence of commands observed in network device audit logs within a short time window matches a known attack pattern for firmware modification, such as image transfer followed by boot variable changes and log clearing.",
            "data_sources": [
              "Network device syslog",
              "TACACS+ command accounting logs",
              "RADIUS accounting logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized syslog server, Authentication, Authorization, and Accounting (AAA) servers, Network management jump hosts, SIEM platform",
            "action": [
              "Using a SIEM, create a correlation rule that triggers when a single user executes the following command sequence within a 15-minute window: (1) a file copy command ('copy tftp:', 'copy scp:'), (2) a boot configuration command ('boot system flash'), and (3) a log manipulation command ('clear logging', 'no logging enable'). Alert on any detected sequence.",
              "For each administrative user session on a network device, calculate the Shannon entropy of the executed commands based on their historical command frequency. A session entropy score in the top 2% (98th percentile) or bottom 2% for that user, indicating unusually high command variety or repetitive scripting, should be flagged for review.",
              "Train a sequence-based anomaly detection model, such as a Hidden Markov Model (HMM), on streams of command-line activity from AAA logs. The model learns the probability of transitioning between different commands for normal administrative tasks. Flag any sequence of commands that has a low probability score under the model, indicating a deviation from learned behavior patterns."
            ]
          },
          {
            "description": "A file transfer containing a network device OS image is observed with anomalous properties, including origination from an untrusted IP, use of an insecure protocol (e.g., TFTP), or occurrence outside a scheduled maintenance window.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Network device syslog for file transfers",
              "Windows Event ID 4688 with command line logging"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Taps/SPAN ports feeding Zeek sensors, Management network segments, File transfer servers (TFTP, FTP, SCP), Windows management workstations",
            "action": [
              "Define an allow-list of authorized management IPs and required protocols (e.g., SCP/SFTP). Create a SIEM rule to monitor Zeek files.log for transfers with filenames like '*.bin' or MIME type 'application/octet-stream' that are transferred over an insecure protocol (e.g., TFTP, FTP) or originate from an IP not on the allow-list. Generate an alert on any match.",
              "From Zeek conn.log and files.log, establish a baseline of firmware transfer activity by hour of day and day of week. Alert if the volume of transfers in an hour exceeds the 99th percentile of the historical baseline. Additionally, maintain a list of historical source-destination IP pairs for firmware transfers and alert whenever a new, previously unseen pair is used.",
              "Apply a time-series decomposition model (e.g., STL) to historical firmware transfer data from Zeek logs to separate seasonality (maintenance windows) and trend from the residual noise. Train an anomaly detection model (e.g., Isolation Forest) on the residual component to identify transfers that are statistically unusual even after accounting for regular, scheduled activity."
            ]
          },
          {
            "description": "Execution of privileged, memory-modifying commands (e.g., 'debug memory', 'poke') is observed on a network device, and the activity is performed by an unauthorized user or is not associated with an approved change request.",
            "data_sources": [
              "TACACS+ command authorization logs",
              "Network device syslog",
              "IT Service Management (ITSM) change records"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized syslog server, AAA servers (TACACS+/RADIUS), ITSM platform (e.g., ServiceNow), Privileged Access Management (PAM) systems",
            "action": [
              "Define a list of high-privilege, memory-modifying commands (e.g., 'debug memory', 'poke', 'system-view diag'). Monitor TACACS+ authorization logs for any execution of these commands. Trigger an alert if the command is executed by a user not on a pre-defined 'super-admin' allow-list or if the execution is not correlated with an approved change ticket in the ITSM system.",
              "For each authorized administrator, establish a personal baseline for the frequency of high-privilege command usage from TACACS+ logs. Alert if an administrator's usage in a 24-hour period exceeds 3 standard deviations above their own historical average, which could indicate a compromised account being used for malicious purposes.",
              "Train a One-Class SVM model on features of authorized high-privilege command executions, including user, source IP, time of day, and associated change ticket attributes. The model learns the multi-dimensional boundary of normal, authorized activity. Flag any new command execution that falls outside this learned boundary as a high-confidence anomaly requiring immediate investigation."
            ]
          },
          {
            "description": "A network device's boot configuration is altered to specify a new OS image, change the boot sequence, or disable a security feature, and this modification is not linked to an authorized change record.",
            "data_sources": [
              "Network device configuration files",
              "Network device syslog (e.g., Cisco %SYS-5-CONFIG_I)",
              "ITSM change records",
              "Git commit history for configs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network configuration management servers (e.g., SolarWinds NCM), Centralized syslog server, ITSM platform, Git repositories for version-controlled configurations",
            "action": [
              "Create a SIEM rule that alerts on any syslog message indicating a configuration change (e.g., Cisco %SYS-5-CONFIG_I) that contains boot variable modification commands (e.g., 'boot system flash:', 'config-register'). Correlate this event with ITSM data; suppress the alert only if an approved change ticket exists for that device and time window.",
              "Implement an automated script to perform a daily 'diff' between the current boot configuration of a device and its last known-good state from a configuration backup system. Calculate a 'drift score' based on the number and sensitivity of the changed lines (e.g., changes to 'boot system' are weighted higher). Alert if the score exceeds the 95th percentile of historical scores observed during normal maintenance.",
              "Train a multiclass classification NLP model (e.g., using BERT) on the text fields of historical change tickets to categorize them (e.g., 'Firmware Upgrade', 'ACL Change', 'Interface Config'). When a boot configuration change is detected via syslog, retrieve the associated change ticket. If the model classifies the ticket as anything other than 'Firmware Upgrade' or 'Scheduled Maintenance', flag the event as a high-risk anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]