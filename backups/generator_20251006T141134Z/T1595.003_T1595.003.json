[
  {
    "information_requirement": "Is the adversary performing reconnaissance against our perimeter using wordlist scanning? (PIR)",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1595.003",
        "name": "Wordlist Scanning",
        "evidence": [
          {
            "description": "An inbound network connection originates from an IP address present on a threat intelligence feed categorized as a known scanner, botnet, or malicious actor.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points (e.g., Firewalls, Edge Routers), Web Application Firewalls (WAFs), Reverse Proxies",
            "action": [
              "Symbolic Logic: Continuously join the source IP address (`id.orig_h`) from Zeek conn.log and http.log against a threat intelligence database of known malicious IPs. Generate a high-severity alert for any successful match.",
              "Statistical Method: For an IP that matches a threat feed, calculate the ratio of failed (HTTP 4xx/5xx) to successful (HTTP 2xx) connections originating from it. If this ratio exceeds the 98th percentile for all external traffic over the last 30 days, escalate the alert priority.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on labeled historical data. Features should include the IP's presence on threat lists, connection frequency, total bytes transferred, and protocol distribution. An output probability score above 0.9 indicates a high likelihood of malicious intent and should trigger an investigation."
            ]
          },
          {
            "description": "The user_agent field in an HTTP request contains a substring that exactly matches a known web scanning or content discovery tool (e.g., 'gobuster', 'dirb', 'ffuf', 'nikto', 'sqlmap').",
            "data_sources": [
              "Zeek http.log",
              "Microsoft-IIS-Logging"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, Application load balancers, API Gateways",
            "action": [
              "Symbolic Logic: Use regular expressions to search the `user_agent` field in Zeek http.log and IIS logs for a maintained list of scanning tool names. Generate a medium-severity alert on any match.",
              "Statistical Method: Calculate the frequency of all User-Agent strings observed across the enterprise over the last 30 days. Alert on any User-Agent string that has never been observed before and is associated with a request rate from a single source IP exceeding 10 requests per second.",
              "Machine Learning: Develop a character-level Natural Language Processing (NLP) model (e.g., using an LSTM) to classify User-Agent strings as 'benign-browser', 'benign-script', or 'malicious-scanner'. Train the model on labeled datasets and apply it to new http.log entries to flag suspicious agents that are not on a static signature list."
            ]
          },
          {
            "description": "A single external source IP address generates a statistically anomalous rate of HTTP requests resulting in client or server errors (e.g., HTTP status codes 404, 403) when compared to a historical baseline.",
            "data_sources": [
              "Zeek http.log",
              "Microsoft-IIS-Logging"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, API Gateways, Cloud Storage Buckets",
            "action": [
              "Symbolic Logic: Create a rule that triggers when a single source IP (`id.orig_h` or `c-ip`) generates more than 100 requests with a status code of 404 or 403 within a 1-minute window to any single web server.",
              "Statistical Method: For each source IP, calculate the ratio of error responses (4xx/5xx) to total responses over a 5-minute sliding window. Establish a dynamic baseline for this ratio using a 30-day moving average per destination host. Flag any IP whose error ratio exceeds 3 standard deviations from the mean for that specific host.",
              "Machine Learning: Use a time-series anomaly detection algorithm (e.g., Seasonal-Hybrid ESD) on the count of 404 errors per source-IP-destination-host pair. The model learns the normal pattern of errors for each asset and flags source IPs that cause a statistically significant and unexpected spike in the error count."
            ]
          },
          {
            "description": "A single external source IP address performs a high volume of DNS queries for cloud storage endpoints (e.g., *.s3.amazonaws.com, *.blob.core.windows.net) containing organizational keywords, followed by connection attempts to a large number of unique, non-existent hosts within those domains.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud storage account boundaries (e.g., AWS account, Azure subscription), Corporate DNS resolvers",
            "action": [
              "Symbolic Logic: Monitor Zeek dns.log for queries containing known organizational keywords (e.g., 'acme-prod', 'acme-dev') directed at cloud storage domains (e.g., `*.s3.amazonaws.com`). Alert if a single source IP makes more than 50 such queries in 10 minutes.",
              "Statistical Method: For each source IP making requests to cloud storage hostnames, extract the requested bucket/container name from DNS or TLS SNI data. Calculate the Levenshtein distance between successive requested names from the same source. A consistently low average distance (e.g., < 3) over 20+ requests indicates sequential or minor permutation scanning. Flag IPs exhibiting this behavior.",
              "Machine Learning: Use a clustering model (e.g., DBSCAN) on features derived from Zeek conn.log and dns.log for connections to cloud services. Features should include source IP, request frequency, character entropy of queried subdomains, and ratio of failed to successful connections. The model can group normal activity and identify scanners as noise or small, dense, anomalous clusters."
            ]
          },
          {
            "description": "A single external source IP makes a high number of requests to the same URI path, while systematically iterating through a large, unique set of URL query parameter names, indicating parameter discovery.",
            "data_sources": [
              "Zeek http.log",
              "Microsoft-IIS-Logging"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web applications with complex user inputs, API endpoints",
            "action": [
              "Symbolic Logic: Create a rule to trigger if a source IP makes over 50 requests in 5 minutes to the same URI path, where each request uses a different query parameter name drawn from a known wordlist of common administrative or debug parameters (e.g., `debug`, `test`, `admin`, `show`, `id`).",
              "Statistical Method: For a given source IP and URI path, calculate the Shannon entropy of the set of unique query parameter keys observed within a 5-minute window. A high entropy value compared to the baseline for that specific endpoint suggests parameter fuzzing. Alert if the entropy score is above the 99th percentile for that URI.",
              "Machine Learning: Implement an autoencoder neural network to learn the normal structure of URLs (path + parameters) for each application. Feed all incoming requests through the model and measure the reconstruction error. Requests that are poorly reconstructed (high error) are anomalous and likely represent attempts to find hidden or vulnerable parameters."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]