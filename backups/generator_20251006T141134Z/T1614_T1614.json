[
  {
    "information_requirement": "Is the adversary attempting to discover the geographic location of systems on the network?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1614",
        "name": "System Location Discovery",
        "evidence": [
          {
            "description": "An internal host makes a DNS query for, or an HTTP/S connection to, a known public IP geolocation service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal DNS Resolvers, Egress Proxy Servers",
            "action": [
              "Symbolic: Maintain a watchlist of domains for public IP geolocation services (e.g., ipinfo.io, ip-api.com, ifconfig.me, whatismyip.com, ipify.org). Create a detection rule to alert on any DNS query (from Zeek dns.log `query` field) or HTTP/S connection (from Zeek conn.log `id.resp_h` or http.log `host` header) to these destinations originating from any internal host.",
              "Statistical: For each host, calculate a 30-day rolling baseline of connections to domains categorized as 'Utilities & Web Services'. Profile the frequency of connections specifically to geolocation services. Flag any host whose hourly connection count to these services exceeds the 99th percentile of its own historical baseline or the baseline of its peer group (e.g., hosts in the same department or subnet).",
              "Machine Learning: Use a trained classifier to distinguish between benign (e.g., browser-initiated) and malicious (e.g., script-initiated) connections to geolocation services. Engineer features from Zeek logs such as user-agent (http.log), connection duration and data volume (conn.log), JA3/JA3S hashes (ssl.log), and the presence of other correlated suspicious activity. A model scoring a connection as 'malicious' with high confidence should trigger an alert."
            ]
          },
          {
            "description": "Execution of a command-line utility or script (e.g., PowerShell, systeminfo, tzutil) containing syntax to query the system's time zone, locale, or keyboard layout.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Application Servers",
            "action": [
              "Symbolic: Create a detection rule that triggers on the execution of specific command-line strings in Windows Event ID 4688 `ProcessCommandLine`. Examples include: `powershell -c Get-Culture`, `Get-TimeZone`, `Get-WinSystemLocale`, `systeminfo | findstr /i 'Time Zone'`, or `tzutil /g`. Enhance the rule to increase severity if the parent process is non-interactive or suspicious (e.g., wscript.exe, mshta.exe, svchost.exe).",
              "Statistical: Calculate the Shannon entropy of unique commands executed per user, per host, within a 10-minute sliding window. A sudden spike in entropy, indicating a rapid succession of varied discovery commands (e.g., querying time, then locale, then system info), deviates from normal interactive behavior and should be flagged for investigation.",
              "Machine Learning: Develop a sequence analysis model (e.g., using a Hidden Markov Model) trained on known benign and malicious command sequences. Feed command-line execution logs (Windows Event ID 4688) for each user session (defined as a sequence of commands from the same ProcessId/ParentProcessId pair within a 60-minute window) into the model. Flag any session that the model classifies as a malicious reconnaissance sequence with a high probability score."
            ]
          },
          {
            "description": "A location discovery command (e.g., 'tzutil /g', 'Get-Culture') is executed by a process or user account that does not typically perform such actions, such as a web server process or a non-interactive service account.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Privileged Access Workstations, Critical Servers",
            "action": [
              "Symbolic: Create a high-severity rule that alerts when a process with a known server application name (e.g., sqlservr.exe, httpd.exe, nginx.exe) or running under a system account (e.g., 'NT AUTHORITY\\SYSTEM', 'NETWORK SERVICE') spawns a child process that executes a location discovery command.",
              "Statistical: For each user account, create two 30-day baselines for location discovery command execution counts: one for business hours (e.g., Mon-Fri, 8 AM-6 PM local time) and one for non-business hours. Calculate the mean and standard deviation for each baseline. Alert if the command count in a given hour exceeds 3 standard deviations (Z-score > 3) from the mean of the corresponding baseline.",
              "Machine Learning: Employ an unsupervised clustering algorithm (e.g., DBSCAN) to group hosts based on their command-line execution patterns. Engineered features should include the count of discovery commands, parent process name entropy, ratio of discovery commands to total commands, and execution time of day. Hosts that are flagged as outliers or fall into a small, distinct 'high-discovery-activity' cluster should be prioritized for analyst review."
            ]
          },
          {
            "description": "A host executes a location discovery command, and within a 5-minute window, initiates an outbound network connection to a destination IP address not seen in the last 30 days or associated with a low-reputation domain.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, User Workstations, Servers with Internet Access",
            "action": [
              "Symbolic: Using a SIEM, join Windows Event ID 4688 (where `ProcessCommandLine` contains location discovery strings) with Zeek conn.log on `host = id.orig_h` where the conn.log timestamp is within 5 minutes after the event log timestamp. Alert if the `id.resp_h` in conn.log is found on a threat intelligence blocklist or if the associated domain (from Zeek dns.log or ssl.log) has a creation date of less than 30 days.",
              "Statistical: For each host, calculate the baseline rate of connections to new IP addresses per hour. Then, create a separate calculation for the rate of connections to new IP addresses that occur within 5 minutes *after* a location discovery command. If the rate for the post-discovery window is statistically significantly higher (e.g., > 3 standard deviations) than the overall baseline rate, generate an alert.",
              "Machine Learning: Use a time-series cross-correlation analysis to model the relationship between the time series of discovery command events and the time series of outbound connections with C2-like features (e.g., long connection duration, high bytes_out/bytes_in ratio, high-entropy DNS queries, non-standard port usage). A strong positive correlation with a short time lag (e.g., 1-5 minutes) between the two series for a specific host is a strong indicator of automated data exfiltration following reconnaissance."
            ]
          },
          {
            "description": "A process on a cloud instance initiates a network connection to the instance metadata service IP (169.254.169.254) and requests a location-specific endpoint (e.g., '/placement/availability-zone', '/location').",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Compute Instances (e.g., AWS EC2, Azure VM), Cloud Network Flow Logs",
            "action": [
              "Symbolic: Create a rule to alert on any network connection to 169.254.169.254 (from Zeek conn.log or Windows Event ID 5156) that is not from a whitelisted, approved process. Specifically monitor for HTTP requests (via Zeek http.log) to paths like '/latest/meta-data/placement/region' (AWS) or requests with the header 'Metadata:true' to '/metadata/instance/compute/location' (Azure).",
              "Statistical: For each instance role (e.g., 'web-server', 'database'), establish a baseline for the hourly count and variety of metadata paths accessed. Alert if an individual instance exceeds the 99th percentile for its role in terms of access frequency, or if it accesses a metadata path never before seen for that role.",
              "Machine Learning: Train a classifier to distinguish legitimate from malicious metadata service access. Features should include the full URI path requested, user-agent, parent process name, process command line, and time since instance boot. A model identifying a request as anomalous, especially if initiated by a shell or a recently downloaded binary, should generate a high-severity alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]