[
  {
    "information_requirement": "Has the adversary collected and prepared data for exfiltration using archiving utilities? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1560.001",
        "name": "Archive via Utility",
        "evidence": [
          {
            "description": "Execution of an archiving utility process where the process executable's file hash or command-line arguments exactly match known malicious indicators from threat intelligence feeds.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All enterprise endpoints and servers, particularly those hosting sensitive data or belonging to high-privilege users such as Domain Controllers, code repositories, and file servers.",
            "action": [
              "1. (Symbolic) Ingest Cyber Threat Intelligence (CTI) feeds containing file hashes (MD5, SHA256) of malicious archiving tools and specific, high-fidelity command-line strings used by threat actors. Create a SIEM rule to query process creation events (Windows Event ID 4688, Sysmon Event ID 1) and alert on any exact match between the 'ProcessHash' or 'CommandLine' fields and the CTI IOC list.",
              "2. (Statistical) For every executed process hash observed in process creation events, calculate its prevalence across the enterprise (e.g., COUNT(DISTINCT Hostname)). Establish a rarity threshold (e.g., running on < 1% of hosts). Flag any archiving utility execution (e.g., process name matches '7z.exe', 'rar.exe') where the process hash is below this rarity threshold, indicating it is not a standard, widely deployed tool and may be an adversary-introduced utility.",
              "3. (Machine Learning) Train a supervised classification model (e.g., Random Forest, Gradient Boosting) using features from process creation logs to predict if an execution is malicious. Features should include parent process name, command-line length, argument count, process hash prevalence (from the statistical method), and binary signature information (e.g., is it signed, who is the signer)."
            ]
          },
          {
            "description": "Execution of legitimate archiving utilities (built-in or third-party) with command-line parameters and process context indicative of malicious data staging, such as targeting sensitive user directories, using password protection, or being spawned by an anomalous parent process (e.g., a web server or Office application).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, developer workstations, administrative jump boxes, and web servers where command-line tools are common but staging large archives, especially by automated processes, is not.",
            "action": [
              "1. (Symbolic) Create SIEM rules to detect executions of utilities (e.g., '7z.exe', 'tar.exe', 'makecab.exe', 'certutil.exe') where command-line arguments contain sensitive paths ('C:\\Users', '\\Documents', 'Desktop'), password flags ('-p', '-hp'), or staging commands ('certutil -encode'). Alert when the parent process is unusual for an archiving utility, such as 'winword.exe', 'outlook.exe', 'w3wp.exe', or 'powershell.exe' executing a remote command.",
              "2. (Statistical) For each legitimate archiving utility, establish a baseline of normal parent-child process relationships and command-line argument patterns. Calculate the Shannon entropy of command-line arguments; flag executions with unusually high entropy, which can indicate obfuscated or randomized script parameters. Alert when a statistically rare parent-child pairing occurs (e.g., a pairing seen less than 1% of the time).",
              "3. (Machine Learning) Use an anomaly detection model (e.g., Isolation Forest) on features extracted from the process event and command line. Model features should include argument count, path depth of target files, presence/absence of password flags, the statistical rarity of the parent process, and the time of day. The model identifies executions that are statistical outliers compared to normal administrative and user activity."
            ]
          },
          {
            "description": "Creation of one or more archive files (e.g., .zip, .rar, .7z, .tar.gz, .cab) that are anomalous in terms of their location (e.g., C:\\Windows\\Temp), size, count, or the process that created them, especially when preceded by broad file access from the same process.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Windows Event ID 4656",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, document management systems (e.g., SharePoint servers), critical application servers, and user profile directories on workstations where large data sets reside or are commonly staged.",
            "action": [
              "1. (Symbolic) Create a rule that alerts on the creation of files (Sysmon Event ID 11) with archive extensions ('.zip', '.rar', '.7z', '.cab', '.tar') in non-standard locations like 'C:\\Windows\\Temp', '%APPDATA%', 'C:\\Users\\Public', or user profile root directories, especially when the creating process (from linked process creation events) is not 'explorer.exe' or a known backup utility.",
              "2. (Statistical) For each host, establish a baseline for the hourly count and total size of created archive files. Use a percentile-based threshold (e.g., alert if count or size exceeds the 99th percentile of the host's own baseline) to detect unusual spikes in activity. Additionally, calculate the Shannon entropy of filenames created with archive extensions within a 5-minute window to detect randomized naming conventions often used by malware.",
              "3. (Machine Learning) Employ a time-series forecasting model (e.g., ARIMA, Prophet) for the volume of archive data created per host or user. An alert is generated when the observed volume significantly exceeds the model's predicted confidence interval. Correlate this alert with preceding file access events (Event ID 4656/4663) on sensitive directories by the same process to increase the alert's fidelity."
            ]
          },
          {
            "description": "Network traffic containing files identified as archives (via MIME type, magic number, or file extension) being transferred to an external or unusual internal destination, where the transfer itself is anomalous in volume, frequency, destination, or protocol.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN gateways, traffic to cloud storage provider IP ranges, and internal network segments separating critical servers from the general user network.",
            "action": [
              "1. (Symbolic) Create a rule to join Zeek's 'files.log' and 'conn.log' on the connection UID ('uid'). Alert when 'files.log.mime_type' is an archive type (e.g., 'application/zip', 'application/x-rar-compressed') and 'conn.log.id.resp_h' is an external IP not on an allowlist of trusted destinations. Also, check for protocol-mismatch, such as an archive MIME type transferred over a non-standard port like 53 (DNS) or 88 (Kerberos).",
              "2. (Statistical) For each internal host, baseline the daily volume ('orig_bytes') of archive data transferred to external destinations. Use a Z-score calculation on the daily volume to identify hosts transferring an anomalous amount of data (e.g., Z-score > 3). Separately, maintain a list of destination Autonomous System Numbers (ASNs) and alert on transfers to new or statistically rare ASNs for the organization.",
              "3. (Machine Learning) Use a one-class SVM model trained on features of normal archive transfers from 'conn.log', 'files.log', and 'ssl.log'. Features should include file size, destination port, time of day, day of week, destination ASN, JA3 hash, and TLS SNI. This model builds a profile of 'normal' outbound archive transfers and flags any transfer that significantly deviates from this profile as a potential exfiltration attempt."
            ]
          },
          {
            "description": "A correlated sequence of events on a single host within a short time window, consisting of broad file system discovery, followed by the execution of an archiving utility on the discovered data, and resulting in the creation of a new archive file.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, database servers, and workstations of executives, system administrators, or developers with access to sensitive intellectual property.",
            "action": [
              "1. (Symbolic) Implement a SIEM correlation rule that triggers when, on a single host within a 30-minute window, a discovery command (e.g., command line contains 'dir /s', 'findstr', 'Get-ChildItem -Recurse') is observed (Sysmon Event ID 1), followed by an archiving utility process (e.g., '7z.exe', 'tar.exe') execution (Sysmon Event ID 1), and culminating in a file creation event for an archive file type (Sysmon Event ID 11).",
              "2. (Statistical) Develop a risk scoring system for event sequences within a user session. Assign scores to each event in the chain (e.g., discovery command: +2, archiving a user profile directory: +5, creating archive in '%TEMP%': +3, parent process is 'powershell.exe': +4). Sum the scores for a user/host session over a rolling time window. If the total score exceeds a dynamically calculated 98th percentile of all session scores, generate a high-fidelity alert for analyst review.",
              "3. (Machine Learning) Use a sequence analysis model, such as a Hidden Markov Model (HMM) or Recurrent Neural Network (RNN), trained on benign event sequences from hosts. The model learns normal transition probabilities between states (e.g., from 'web browsing' to 'document editing'). The specific `discovery -> compression -> stage` sequence, being a low-probability transition in the learned model, would be flagged as a high-risk anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]