[
  {
    "information_requirement": "Is the adversary developing resources by compromising social media accounts for potential future use? (PIR)",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1586.001",
        "name": "Social Media Accounts",
        "evidence": [
          {
            "description": "An outbound network connection from an internal host to a domain or IP address that matches threat intelligence for social media credential phishing, is a known typo-squatted domain, or is a known adversary command and control (C2) server.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Resolvers, Web Proxies",
            "action": [
              "[Symbolic Logic]: Join DNS queries from Zeek dns.log with connection data from Zeek conn.log on the client and server IP addresses. Correlate the queried domain name and resolved IP address against a threat intelligence feed of known phishing, C2, or typo-squatted domains. Generate a high-severity alert for any successful connection to a matched indicator.",
              "[Statistical Method]: For domains not present in threat intelligence, calculate the Levenshtein distance between all requested domains in dns.log and a curated list of legitimate social media domains (e.g., 'facebook.com', 'linkedin.com'). Flag domains with a low distance score (e.g., 1 or 2). For flagged domains, generate an alert if the request frequency from a single host exceeds the 95th percentile of its peer group's request frequency for that domain type.",
              "[Machine Learning]: Deploy a pre-trained domain generation algorithm (DGA) classification model (e.g., Random Forest or LSTM) to score all requested domain names from dns.log in real-time. The model should use features such as character entropy, n-gram frequency, and domain length. Generate an alert if a domain is classified as malicious with high confidence and a successful connection is observed in conn.log."
            ]
          },
          {
            "description": "A web browser or scripting engine process is created with command-line arguments or a parent-child process relationship indicative of automated, non-interactive social media access.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Virtual Desktop Infrastructure (VDI), Application Servers",
            "action": [
              "[Symbolic Logic]: Monitor Windows Event ID 4688 for process creation events. Alert when a browser process (e.g., chrome.exe, firefox.exe, msedge.exe) is launched with command-line flags indicating automation, such as '--headless' or '--remote-debugging-port'. Also, alert when a scripting engine (e.g., powershell.exe, cscript.exe, python.exe) command line contains social media domains in conjunction with web request functions (e.g., 'Invoke-WebRequest', 'selenium').",
              "[Statistical Method]: Establish a baseline of normal parent-child process relationships for each host using historical Windows Event ID 4688 data. Generate an alert for statistically rare relationships, such as a Windows service ('services.exe') or scheduled task ('taskhostw.exe') spawning a browser process. Additionally, calculate the entropy of command-line arguments for browser processes per host; alert on sustained low-entropy values which suggest repetitive, automated commands.",
              "[Machine Learning]: Train a classification model (e.g., Decision Tree or Gradient Boosting) using features from Event ID 4688, including parent process name, command-line argument count, and command-line length. Use the model to distinguish between benign user-driven browser activity and potentially malicious automated scripts. Generate an alert for any process creation event classified as malicious with high confidence."
            ]
          },
          {
            "description": "A credential harvesting event on a host is followed within a short time window by a new or anomalous network connection from the same host to a social media platform API or login page.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Windows Event ID 4656",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Authentication Servers, Domain Controllers",
            "action": [
              "[Symbolic Logic]: Create a SIEM correlation rule that triggers when a known credential dumping tool (e.g., mimikatz.exe) is executed (Windows Event ID 4688) or when suspicious access to the LSASS process is requested (Windows Event ID 4656 with Object Type 'Process' and Accesses 'PROCESS_VM_READ', or Event ID 4663). If this event is followed within a 10-minute window by a network connection (from Zeek conn.log) from the same host to a known social media domain, generate a critical alert.",
              "[Statistical Method]: For each host, calculate the baseline probability of a network connection to a social media site occurring within 5 minutes after a process access event (Event ID 4656/4663). An alert should be generated if the observed conditional probability for a host exceeds a statistical threshold (e.g., >3 standard deviations from the mean of its peer group), indicating a suspicious temporal correlation.",
              "[Machine Learning]: Use a sequence analysis model, such as a Hidden Markov Model (HMM), trained on normal sequences of process and network events per user. The model should learn typical user workflows. Generate an alert when the model observes a low-probability sequence of events, such as [Event: Access to LSASS process] -> [Event: Network connection to api.linkedin.com], that significantly deviates from the user's learned normal behavior profile."
            ]
          },
          {
            "description": "Network traffic from an internal host to social media platforms exhibits anomalous characteristics, such as unusual timing, high frequency, atypical data volume, or connections from unauthorized sources, when compared to an established baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Web Proxies",
            "action": [
              "[Symbolic Logic]: Maintain an explicit allowlist of server IP addresses and service accounts that are authorized to connect to social media APIs for legitimate business purposes. Generate a high-priority alert for any connection to known social media platform IP ranges (e.g., *.facebook.com, *.linkedin.com) that originates from a host or user account not on this allowlist.",
              "[Statistical Method]: For each host, establish a 30-day rolling baseline of its typical interactions with social media sites using Zeek conn.log. Model key metrics such as hourly connection count and total bytes transferred ('orig_bytes' + 'resp_bytes'). Generate an alert when a live measurement exceeds a dynamic threshold, such as the 99th percentile of the host's historical baseline for that specific metric and time-of-day window.",
              "[Machine Learning]: Apply a time-series anomaly detection model (e.g., SARIMA or an LSTM-based autoencoder) to each host's connection volume and data transfer volume directed to social media sites. The model learns the daily and weekly seasonality of a user's activity and flags significant deviations from the learned pattern. An alert is generated for activity indicative of non-interactive automation, such as sustained, high-volume, API-like traffic outside of normal business hours."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]