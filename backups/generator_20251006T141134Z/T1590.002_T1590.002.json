[
  {
    "information_requirement": "Is an adversary performing DNS reconnaissance against our network infrastructure?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1590.002",
        "name": "DNS",
        "evidence": [
          {
            "description": "A DNS query for an organizational domain originates from an external source IP address present on a threat intelligence feed with a 'reconnaissance' or 'malicious' category.",
            "data_sources": [
              "Zeek dns.log",
              "Threat Intelligence Platform Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing DNS servers, Network perimeter firewalls, Cloud provider DNS logs, Threat Intelligence Platform",
            "action": [
              "Symbolic: In your SIEM, create a rule that joins Zeek dns.log with a threat intelligence feed. Generate an alert when `id.orig_h` in dns.log matches an IP on the feed with a 'reconnaissance' or 'malicious' tag and the `query` field contains an organizational domain.",
              "Statistical: Group Zeek dns.log entries by `id.orig_h` over 1-hour windows. For each IP that matches the CTI feed, calculate the percentage of queries (`query`) that end with the organizational domain suffix. Compare this percentage to the 95th percentile of the same metric calculated for all external IPs. Alert if the CTI-matched IP exceeds this threshold and has made more than 20 queries.",
              "Machine Learning: Develop and apply a supervised classification model (e.g., Random Forest) trained on labeled historical data. Use features such as query length, query entropy, query type, source IP reputation (from CTI), source ASN, and geolocation. An alert is triggered when the model classifies a new query from an external source with a high probability score (e.g., >0.9) of being 'reconnaissance'."
            ]
          },
          {
            "description": "An AXFR or IXFR query type is observed in a DNS request originating from an IP address not on an explicit allow-list for zone transfers.",
            "data_sources": [
              "Zeek dns.log",
              "Windows Event ID 5504"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS servers, Secondary DNS servers, Domain Controllers with DNS role",
            "action": [
              "Symbolic: Create a rule to alert on any DNS query in Zeek dns.log where `qtype_name` is 'AXFR' or 'IXFR' and the source IP (`id.orig_h`) is not in a predefined allow-list of secondary DNS servers. On Windows, create a rule to alert on Event ID 5504 where the source IP address is not in the same allow-list.",
              "Statistical: Calculate the hourly rate of DNS queries that receive a 'REFUSED' response code (`rcode_name` = 'REFUSED') from authoritative DNS servers. Establish a baseline mean and standard deviation for this rate. Alert when the hourly rate of refused queries from a single external source IP exceeds 3 standard deviations above the mean, as this can indicate failed zone transfer attempts or other probing.",
              "Machine Learning: Apply an unsupervised anomaly detection model (e.g., Isolation Forest) to DNS sessions from external IPs. Features should include the distribution of query types (e.g., count of A, AAAA, MX, AXFR, ANY), total query volume, and ratio of refused responses. A session flagged as an anomaly with a non-zero count of AXFR/IXFR queries is a high-fidelity indicator of illicit zone transfer attempts."
            ]
          },
          {
            "description": "An external source IP generates a statistically significant volume of DNS queries for an organizational domain that result in a Non-Existent Domain (NXDOMAIN) response, or uses the deprecated 'ANY' query type.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing DNS servers, Internal DNS resolvers, Cloud DNS service logs (e.g., AWS Route 53, Azure DNS)",
            "action": [
              "Symbolic: Generate an alert when a single external source IP (`id.orig_h` in Zeek dns.log) issues a query with `qtype_name` = 'ANY' (qtype 255) for an organizational domain.",
              "Statistical: For each unique external source IP (`id.orig_h`), calculate the count of total queries and the count of queries with an `rcode_name` of 'NXDOMAIN' over a 5-minute window. Compute the NXDOMAIN ratio (NXDOMAIN count / total count). Alert if the total query count exceeds 50 and the NXDOMAIN ratio is greater than the 98th percentile of ratios for all external IPs in the same window.",
              "Machine Learning: Aggregate DNS query data per source IP over a 15-minute window, creating feature vectors including NXDOMAIN rate, query count, and query type distribution (e.g., percentage of 'A', 'MX', 'ANY' queries). Apply a clustering algorithm like DBSCAN to these vectors. Investigate IPs that are flagged as noise or belong to small, sparse clusters, as they represent behavior deviating from the norm."
            ]
          },
          {
            "description": "An external source IP exhibits systematic subdomain enumeration, characterized by a high volume of queries and/or high entropy of queried subdomain labels over a short period.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External-facing DNS servers, Network perimeter firewalls, Cloud DNS provider logs",
            "action": [
              "Symbolic: Create a high-threshold rule that alerts if a single external source IP (`id.orig_h`) generates more than 500 DNS queries for subdomains of a single organizational domain within a 5-minute window.",
              "Statistical: For each external source IP, collect all unique subdomains queried (`query`) for an organizational domain within a 10-minute window. Calculate the Shannon entropy of the character distribution of these subdomain labels. Establish a baseline of normal entropy from legitimate traffic. Alert if an IP's entropy score exceeds the 99th percentile of the baseline, indicating randomly generated or systematically enumerated subdomains.",
              "Machine Learning: Develop a time-series anomaly detection model (e.g., LSTM autoencoder) on the sequence of DNS query volumes per source IP per minute. The model learns the normal traffic patterns. An alert is triggered when the observed query volume from an IP results in a reconstruction error that is significantly higher than the established baseline, indicating a sudden brute-force enumeration attempt."
            ]
          },
          {
            "description": "An external source IP, not on a partner or service provider allow-list, makes an unusually high number of queries for sensitive record types (e.g., MX, TXT, SRV) against an organizational domain.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authoritative DNS servers, Mail gateway DNS records, Cloud service provider DNS records, VoIP infrastructure DNS records",
            "action": [
              "Symbolic: Maintain an allow-list of known partner/service IPs. Generate an alert if an IP not on the list queries for more than 5 distinct SRV records or makes more than 10 TXT record queries for an organizational domain within one hour.",
              "Statistical: For each external source IP, calculate a moving 1-hour count of queries where `qtype_name` is one of 'MX', 'TXT', 'SPF', or 'SRV'. Compare this count to a historical distribution for all external IPs. Generate an alert if an IP's sensitive query count exceeds the 95th percentile of the distribution and the count is greater than a nominal threshold (e.g., 10) to reduce noise.",
              "Machine Learning: Implement a Hidden Markov Model (HMM) to model DNS sessions. Define states such as 'Normal Browsing', 'Mail Check', and 'Reconnaissance'. Train the model on labeled data where observations are sequences of query types from an IP. Apply the trained model to live traffic; an alert is generated when the model decodes the most likely state sequence for a session as containing the 'Reconnaissance' state."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]