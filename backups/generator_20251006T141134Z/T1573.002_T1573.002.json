[
  {
    "information_requirement": "Has an adversary established an encrypted Command and Control channel using asymmetric cryptography? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1573.002",
        "name": "Asymmetric Cryptography",
        "evidence": [
          {
            "description": "An outbound SSL/TLS connection matches a known malicious indicator, such as a destination IP address, domain (SNI), certificate serial/fingerprint, or JA3/JA3S hash present in a high-confidence threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points",
            "action": [
              "Join Zeek conn.log with ssl.log on 'uid'. Compare `id.resp_h` (destination IP) and `server_name` (SNI) against IP and domain threat intelligence feeds. Separately, compare `certificate.serial` and `certificate.fingerprint` from x509.log and `ja3`/`ja3s` hashes from ssl.log against corresponding threat feeds. Generate a high-priority alert containing the matching indicator, source/destination details, and the threat feed name.",
              "For any IOC match identified, calculate the internal prevalence of the destination indicator (`id.resp_h` or `server_name`) across all hosts over the past 7 days. Escalate the alert priority if the prevalence is extremely low (e.g., seen from < 3 unique internal hosts or < 0.1% of the host population), suggesting targeted C2 rather than widespread benign traffic to a compromised site.",
              "Train a supervised classification model (e.g., XGBoost) on labeled historical SSL/TLS connection data. Features should include: JA3/JA3S hash, certificate validity period, public key length, signature algorithm, SNI length, destination ASN, and a binary feature indicating if the destination is present in any threat feed. Deploy the model to score new connections in real-time, alerting on scores above a probability threshold tuned for high precision."
            ]
          },
          {
            "description": "An outbound SSL/TLS connection utilizes a self-signed certificate, a certificate with generic or suspicious subject fields (e.g., 'localhost', 'ACME'), or occurs over a non-standard port for TLS traffic.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points, Internal Server Segments",
            "action": [
              "From Zeek x509.log, create a rule to alert when `certificate.issuer` is identical to `certificate.subject`. Create a second rule to flag certificates where `certificate.subject.CN` or `certificate.subject.O` matches a list of generic values ('localhost', 'test', 'ACME', 'example.com', default vendor names). Correlate these findings with Zeek conn.log where `service` is 'ssl' and `id.resp_p` is not in (443, 8443, 993, 995, 465, 587).",
              "For each outbound SSL/TLS connection, calculate a risk score. Assign points for suspicious attributes: self-signed status (+3), generic subject (+2), non-standard port (+1), and low enterprise-wide prevalence of its JA3 hash (score 1 to 5 based on rarity percentile). Sum the points and alert on any connection with a total score exceeding a statistically derived threshold (e.g., the 99th percentile of all connection risk scores).",
              "Apply an unsupervised clustering algorithm (e.g., DBSCAN) to a dataset of SSL/TLS connection features including certificate validity duration, public key algorithm and length, JA3 hash numerical representation, SNI length, and destination port. Isolate and investigate small clusters or statistical outliers that do not belong to the large, dense clusters representing legitimate traffic from major browsers and services."
            ]
          },
          {
            "description": "An outbound encrypted connection exhibits characteristics indicative of C2, such as a data exfiltration pattern (upload bytes significantly exceed download bytes), beaconing (periodic, regular connections with low jitter), or an unusually long-lived session.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points",
            "action": [
              "For each connection in Zeek conn.log where `service` is 'ssl', calculate the ratio of `orig_bytes` to `resp_bytes`. Generate a medium-priority alert if this ratio is greater than 1.5, the connection `duration` is longer than 10 minutes, and the destination IP does not belong to a pre-defined list or category of known cloud storage, backup, or large file transfer services.",
              "For each internal host, establish a 30-day rolling baseline of its typical outbound SSL/TLS connection behavior from Zeek conn.log. Baselines must include the mean and standard deviation of `duration`, `orig_bytes`, and the `orig_bytes/resp_bytes` ratio. Alert when a new connection from that host has a metric exceeding 3 standard deviations from its established mean.",
              "For each internal source IP, create a time series of the delta (in seconds) between consecutive connections to the same external destination IP. Calculate the standard deviation of these time deltas over a 1-hour window. A very low standard deviation (low jitter) for a series of 5 or more connections indicates automated, machine-like beaconing. Alert on source-destination pairs exhibiting low jitter and a consistent interval (e.g., 60s +/- 2s)."
            ]
          },
          {
            "description": "A non-browser application or scripting engine process (e.g., powershell.exe, cscript.exe, rundll32.exe) initiates an outbound SSL/TLS connection, especially if the process is running from an unusual file path (e.g., %TEMP%, %APPDATA%).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Devices (User Workstations, Servers)",
            "action": [
              "On an endpoint, correlate Windows Event ID 4688 (Process Creation with Command Line) with Event ID 5156 (Network Connection Allowed) using the `ProcessID`. Maintain an allow-list of process image paths (e.g., `C:\\Program Files\\...\\chrome.exe`) permitted to make outbound connections. Alert on any process not on this list, especially scripting engines or LOLBins, that makes a connection to a common SSL/TLS port (e.g., 443).",
              "From Event ID 4688 logs, build a frequency table of all parent-child process relationships observed across the enterprise. Identify and score network connections (from Event ID 5156) that are initiated by processes involved in statistically rare relationships (e.g., `winword.exe` spawning `powershell.exe`). Combine this with a rarity score for the process image path. Alert on connections where the combined risk score exceeds a percentile-based threshold (e.g., 99.9th percentile).",
              "Construct a process-network graph where nodes are processes, files, and network destinations, and edges represent actions (e.g., 'spawned', 'connected_to'). Use a graph neural network (GNN) or other graph-based anomaly detection algorithm to identify high-risk subgraphs. A high-risk example would be an Office application node that spawns a LOLBin process node which then connects to a low-prevalence external IP node."
            ]
          },
          {
            "description": "A host makes DNS queries for domains with characteristics of algorithmic generation (e.g., high character-level entropy, unusual length) or rapidly connects to a large number of unique IP addresses over SSL/TLS in a short period.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS Resolvers, Internet Gateway/Egress Points",
            "action": [
              "Scan DNS query names in Zeek dns.log using a list of known DGA (Domain Generation Algorithm) regular expressions and patterns. If a query matches a pattern, correlate the resolved IP address with outbound connections in Zeek conn.log and ssl.log to confirm if an encrypted C2 channel was established.",
              "For each DNS query in Zeek dns.log, calculate the Shannon entropy of the queried hostname. Establish a baseline entropy for legitimate traffic and alert on queries with an entropy score exceeding a high threshold (e.g., > 4.0). Separately, for each internal host, count the number of unique destination IPs in Zeek conn.log for connections on port 443 over a rolling 5-minute window. Alert on any host whose count exceeds the 99.5th percentile for all hosts.",
              "For each internal host, model the hourly count of new, unique destination FQDNs it queries (from Zeek dns.log) using a time series forecasting model (e.g., SARIMA or Prophet). If the actual count of new domains in a given hour exceeds the upper bound of the model's 99% prediction interval, flag the host for anomalous domain fluxing behavior potentially indicative of DGA-based C2."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]