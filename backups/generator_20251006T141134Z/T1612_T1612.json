[
  {
    "information_requirement": "Is the adversary building malicious container images on hosts to evade defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1612",
        "name": "Build Image on Host",
        "evidence": [
          {
            "description": "A process execution event for a container build (e.g., 'docker build') is observed on a host, and within a short time window (e.g., 5 minutes), the same host initiates network connections to a destination IP or domain that matches a known malicious indicator on a threat intelligence feed or involves files whose hashes match known malware.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host systems, CI/CD pipeline servers, Network egress points, DNS resolvers",
            "action": [
              "Create a rule to correlate process execution logs (Windows Event ID 4688) for 'docker build' with network connection logs (Zeek conn.log, Zeek dns.log) and file analysis logs (Zeek files.log) from the same host within a 5-minute window. Join the destination IP, resolved domain, or file hash against threat intelligence feeds of known malicious indicators. Generate an alert on any match.",
              "For each build process, calculate the Shannon entropy of the query names in associated DNS requests (Zeek dns.log). Establish a baseline of domain entropy for all build processes over the last 30 days. Generate an alert for any build whose associated domain entropy exceeds the 95th percentile of the baseline, indicating potential use of Domain Generation Algorithms (DGA).",
              "Train a supervised classification model (e.g., Random Forest) using features from network connections initiated during build processes (e.g., JA3/JA3S hashes from Zeek ssl.log, destination port, data volume, connection duration). Label data based on threat intelligence and historical incidents. Use the trained model to classify the network profile of each new build as 'benign' or 'malicious'. Investigate builds classified as 'malicious' with high confidence."
            ]
          },
          {
            "description": "A container build command, captured in process execution logs (Windows Event ID 4688), contains command-line arguments or flags indicative of obfuscation or defense evasion. Examples include using '--no-cache' to force re-downloading of layers, specifying an unusual Dockerfile path with '-f' (e.g., in /tmp), or receiving a Dockerfile via stdin from a network utility like `curl` or `wget`.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host systems, Developer workstations, CI/CD pipeline servers",
            "action": [
              "Scan process creation logs (Windows Event ID 4688) for 'docker build' or 'buildah' commands. Create a rule to match command-line arguments against a curated list of suspicious patterns, such as '--no-cache', '-f /tmp/', '-f /var/tmp/', or command chains involving 'curl -sL | docker build -'. Generate an alert on any match.",
              "For each user account, establish a historical baseline of 'docker build' command-line arguments and flags used over a 90-day period. For each new build command, calculate the Jaccard similarity score between the set of its arguments and the user's historical set. Generate an alert for commands with a similarity score below a dynamically determined threshold (e.g., less than 0.2), indicating a significant deviation from that user's normal behavior.",
              "Apply an unsupervised anomaly detection algorithm (e.g., Isolation Forest) to feature vectors derived from tokenized 'docker build' command-line arguments across the entire organization. The model will learn common argument patterns. Use the trained model to score new build commands and generate an alert for any command identified as a high-scoring outlier, suggesting it is structurally different from typical builds."
            ]
          },
          {
            "description": "A process execution event for a container build ('docker build', 'buildah') is observed in logs (Windows Event ID 4688) originating from a host whose role is not a designated build server or developer workstation (e.g., a domain controller, database server). Alternatively, the build is executed by a user account not associated with development or CI/CD service roles.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain controllers, Production application servers, Database servers, Container host systems, Identity and Access Management (IAM) systems",
            "action": [
              "Maintain explicit allow-lists of authorized build server hostnames and authorized builder user/service accounts (or groups). Create a rule to alert whenever a 'docker build' process is detected (Windows Event ID 4688) where the 'Hostname' or 'SubjectUserName' is not on the respective allow-list.",
              "For each host in the environment, calculate the frequency of 'docker build' commands over a 30-day rolling window. Generate an alert if a build command occurs on a host where the historical build frequency is zero. This identifies the first occurrence of a build on a non-standard system.",
              "Train a One-Class SVM model on feature vectors representing legitimate build events, using features such as the user's Active Directory group, the host's role/tag, and the time of day (hour, day of week). Use the model to classify new build events. Generate an alert for any event classified as an anomaly, indicating it does not conform to the established profile of legitimate build activity."
            ]
          },
          {
            "description": "Network traffic logs (Zeek conn.log, Zeek dns.log) show that during a container build process, the host connects to an external destination IP address or domain that is not part of a pre-defined allow-list of legitimate package repositories, container registries, or source code management sites.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, Container host systems",
            "action": [
              "Correlate 'docker build' process events (Windows Event ID 4688) with concurrent network connections (Zeek conn.log, Zeek dns.log). Compare destination domains and IPs against an allow-list of approved registries (e.g., docker.io, gcr.io, quay.io, internal artifactory) and code repositories. Generate an alert for any connection to a destination not on this list.",
              "Profile the distribution of destination Autonomous System Numbers (ASNs) for all network connections made during build processes over a 30-day baseline period. For a new build, identify the ASNs of its network destinations. Generate an alert if the build process connects to an ASN that is not in the top 98% of most frequently used ASNs from the baseline, indicating a connection to a rare or non-corporate network.",
              "Employ a time series forecasting model (e.g., Prophet or ARIMA) to predict the expected volume of data transferred (sum of orig_bytes and resp_bytes from Zeek conn.log) to non-allow-listed destinations during a build process. Generate an alert if the actual data transfer volume significantly exceeds the forecasted prediction (e.g., is greater than 3 standard deviations above the forecast), suggesting an anomalous data download."
            ]
          },
          {
            "description": "A sequence of correlated events occurs on a single host within a short time window (e.g., 10 minutes): a 'docker build' process completes, a 'docker run' process starts using the newly built image, and the resulting container generates anomalous network traffic, such as C2 beaconing or connections to known malicious IPs.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Container host systems, Network egress points, Internal network segments",
            "action": [
              "Create a stateful correlation rule that triggers when: (1) a 'docker build' process (Event ID 4688) is followed by (2) a 'docker run' process (Event ID 4688) using the new image tag within 10 minutes on the same host, and (3) that host's subsequent network traffic (Zeek conn.log) includes connections to a destination IP on a C2 threat intelligence feed.",
              "For the 'build-then-run' sequence, analyze the resulting container's outbound network traffic from Zeek conn.log. For each destination, calculate the standard deviation of the time deltas between consecutive connection events. Generate an alert if the standard deviation is extremely low (e.g., < 1 second for a 60-second window), which indicates highly periodic, machine-generated beaconing activity.",
              "Use a sequence analysis model, such as a Hidden Markov Model (HMM), trained on event sequences (e.g., process_create, network_connect, file_modify) that follow legitimate container deployments. Feed the event sequence following a 'build-then-run' event into the trained model. Generate an alert for sequences that have a low probability score, indicating they deviate significantly from normal post-deployment behavior patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]