[
  {
    "information_requirement": "Is the adversary maintaining persistence by hijacking execution flow?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "A file creation event is observed for a DLL or executable in a directory within a defined execution search path, and the file is either unsigned, has a hash matching a known-malicious indicator, or has a name commonly associated with DLL hijacking (e.g., version.dll).",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 1 (Process Creation)",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server file systems, specifically: application installation directories (`C:\\Program Files`), user profile directories (`%APPDATA%`), and core system folders (`%SystemRoot%\\System32`).",
            "action": [
              "Join file creation events (Sysmon Event ID 11) with a threat intelligence feed of file hashes known to be used in T1574. Generate a high-severity alert if a file created in a sensitive directory (e.g., `C:\\Windows\\System32`) has a matching hash. Also, create a rule to alert if Zeek `files.log` detects the transfer of a file with a matching hash.",
              "For file creation events (Sysmon Event ID 11) in application directories, calculate the entropy of the filename. Establish a baseline of normal filename entropy for each directory. Alert on any new filename with an entropy score exceeding the 98th percentile for that directory's baseline, as this may indicate randomized names used to avoid signature-based detection.",
              "Train a classification model (e.g., Gradient Boosting) on features from file creation (Sysmon Event ID 11) and the creating process (Sysmon Event ID 1), including file path, parent process name, process integrity level, and the file's signature status. Use the model to predict the probability that a file write event is malicious, alerting on predictions above a tuned confidence threshold."
            ]
          },
          {
            "description": "A registry modification event alters a service's 'ImagePath' or 'FailureCommand' value to point to an executable that is unsigned, located in a non-standard directory (e.g., C:\\Temp), or has a low prevalence across the enterprise.",
            "data_sources": [
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Windows Event ID 4697 (A service was installed in the system)",
              "Windows Event ID 4657 (A registry value was modified)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry hives on Domain Controllers, critical application servers, and standard endpoints, specifically `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*`.",
            "action": [
              "Create a SIEM rule to monitor for registry modification events (Sysmon Event ID 13) where the `TargetObject` is `HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\\ImagePath`. Alert if the new value (path) points to an executable in a user-writable directory (e.g., `C:\\Users\\*`, `C:\\Temp`) or if the binary at that path is unsigned.",
              "Maintain a statistical baseline of all service `ImagePath` values across the enterprise. Calculate the prevalence of each path. Generate a medium-severity alert on the appearance of a new `ImagePath` seen on fewer than 1% of hosts, especially if it does not correlate with a known software deployment.",
              "Implement a time-series anomaly detection model on the rate of service modification events (Windows Event ID 4697, Sysmon Event ID 13) per host. A sudden, sharp increase in these events on a single host or small group of hosts, outside of a planned maintenance window, indicates a potential widespread persistence campaign and should be flagged as an anomaly."
            ]
          },
          {
            "description": "A registry modification event is logged for a key controlling global process initialization, such as `AppInit_DLLs`, where a new DLL path is added or an existing one is altered.",
            "data_sources": [
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Windows Event ID 4657 (A registry value was modified)",
              "Sysmon Event ID 7 (Image loaded)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server registry hives, specifically the `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows` key.",
            "action": [
              "Implement a zero-tolerance rule: generate a critical alert for any modification event (Sysmon Event ID 13 or Windows Event ID 4657) where the target registry value is `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs`. Since this mechanism is deprecated, any legitimate use should be explicitly documented and excluded.",
              "Track the count of modifications to the `AppInit_DLLs` key per host over its lifetime. A host with a count greater than zero is a statistical outlier, as the fleet-wide average should be zero. Use this metric to rank hosts for threat hunting priority.",
              "Use a graph-based detection model. Create a node for the `AppInit_DLLs` registry key. Create edges representing a write to this key (Sysmon Event ID 13) followed by any process loading the specified DLL (Sysmon Event ID 7). The existence of this two-step path is a high-confidence indicator of a successful `AppInit_DLLs` hijack."
            ]
          },
          {
            "description": "A trusted system process (e.g., svchost.exe, explorer.exe) loads a DLL (module load event) from a non-standard path (e.g., %APPDATA%) or loads a DLL that is unsigned, has a low-prevalence hash, or has a different hash than the legitimate version in System32.",
            "data_sources": [
              "Sysmon Event ID 7 (Image loaded)",
              "Windows Event ID 4688 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process memory space on endpoints and servers, monitored via endpoint security agents.",
            "action": [
              "Create a SIEM rule to alert when a module load event (Sysmon Event ID 7) shows a critical system process (e.g., `lsass.exe`, `explorer.exe`, `svchost.exe`) loading a DLL where the `ImageLoaded` path is in a non-standard location like `%APPDATA%` or `%TEMP%`, or if the loaded module is unsigned.",
              "For each critical process, build a baseline set of all DLL names and their corresponding hashes that it normally loads. For each new module load, compare the loaded module's hash to the baseline. A hash mismatch for a standard DLL name is a high-confidence statistical indicator of hijacking. Alert if the Jaccard similarity between the current set of loaded modules and the historical baseline for that process drops below a threshold (e.g., $$< 0.9$$).",
              "Train a time-series model on the enterprise-wide frequency of new, never-before-seen DLLs being loaded by system processes. A sudden spike in the time-series chart, indicating a surge in novel DLLs being loaded, suggests a potential widespread DLL search order hijacking campaign and should be flagged as an anomaly."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary elevating privileges by hijacking execution flow?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "A file is created in a directory writable by standard users (e.g., `C:\\ProgramData`) with a filename matching a DLL that a higher-privileged service is known to attempt to load from an insecure path (e.g., `wlbsctrl.dll` by the IKEEXT service).",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 1 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "World-writable directories on endpoints and servers, such as `C:\\`, `C:\\ProgramData`, and `C:\\PerfLogs`.",
            "action": [
              "Maintain a watchlist of DLL filenames known to be vulnerable to insecure loading by privileged services (e.g., `wlbsctrl.dll`, `IKEEXT.DLL`). Monitor file creation events (Sysmon Event ID 11) in user-writable system paths for these filenames and alert on any match, especially if the creating process is running as a standard user.",
              "Profile the user context and integrity level of processes that write files to system-level directories. Alert when a process running with a 'Medium' integrity level (from Sysmon Event ID 1) writes a DLL file (Sysmon Event ID 11) to a path like `C:\\Windows\\System32`. This is statistically rare and highly indicative of an exploit attempt.",
              "Use a sequence analysis model (e.g., Hidden Markov Model) to detect the specific pattern of privilege escalation: 1) a low-privilege process writes a DLL, 2) a system service is observed restarting, and 3) that service spawns a new child process with SYSTEM privileges. This sequence is a strong indicator of successful privilege escalation via DLL hijacking."
            ]
          },
          {
            "description": "A registry modification event sets the 'Debugger' value for a target application within an Image File Execution Options (IFEO) key to a malicious executable, causing the OS to launch the adversary's code instead of the legitimate application.",
            "data_sources": [
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Windows Event ID 4657 (A registry value was modified)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint and server registry hives, specifically `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\` and `HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\`.",
            "action": [
              "Monitor registry set events (Sysmon Event ID 13) for any write operation to a 'Debugger' value under any subkey of the IFEO path. Generate a high-severity alert for any such event, excluding writes from known, legitimate debugging tools (e.g., `WinDbg.exe`, `VsDebugConsole.exe`) which should be whitelisted.",
              "Establish a baseline of all IFEO subkeys present in the environment. Alert on the creation of a new IFEO subkey for a process that is not typically debugged (e.g., `sethc.exe`, `utilman.exe`, `magnify.exe`). Calculate the rarity of the target process across the fleet; the rarer the target, the more suspicious the event.",
              "Train a decision tree classifier on registry event data (Sysmon Event ID 13) targeting IFEO keys. Features should include the name of the process making the change, the target executable's name, and the path of the new debugger executable. The model can learn to distinguish legitimate administrative changes from malicious IFEO abuse for privilege escalation."
            ]
          },
          {
            "description": "A process with a low or medium integrity level successfully writes a file to a directory that is protected by a System-level integrity SACL, such as `%SystemRoot%\\System32`, indicating a potential bypass of file system permissions.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 7 (Image loaded)",
              "Sysmon Event ID 1 (Process Creation)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Protected system directories (`%SystemRoot%\\System32`, `%SystemRoot%\\SysWOW64`) and their associated file system ACLs on all Windows hosts.",
            "action": [
              "Create a rule that correlates a file write event (Sysmon Event ID 11) in a protected directory with the creating process's integrity level (from Sysmon Event ID 1). Generate a critical alert if a process with an `IntegrityLevel` of 'Medium' or 'Low' writes a file to a directory like `C:\\Windows\\System32`.",
              "Analyze event chains by calculating the time delta between a suspicious file write by a low-privilege process and a subsequent module load of that same file by a high-privilege process. A delta of less than 60 seconds is a statistically significant indicator of a likely exploit chain. Correlate and alert on these event pairs occurring within a 5-minute window.",
              "Construct a process-file interaction graph. Nodes represent processes and files, while edges represent actions (e.g., 'writes', 'loads'). A path showing `User(Low Priv) -> Process(Low Priv) -writes-> File.dll -loaded_by-> Process(SYSTEM)` is a high-confidence visualization of privilege escalation via hijacking, which can be detected algorithmically."
            ]
          },
          {
            "description": "A process creation event is logged showing an anomalous parent-child relationship, such as `services.exe` spawning `cmd.exe` or `lsass.exe` spawning `powershell.exe`, immediately following a file or registry modification indicative of a hijack.",
            "data_sources": [
              "Sysmon Event ID 1 (Process Creation)",
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 13 (RegistryValue Set)",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "System-wide process ancestry trees on endpoints and servers; Egress network traffic logs.",
            "action": [
              "Define and monitor for a list of impossible or highly suspicious parent-child process relationships (e.g., parent=`lsass.exe`, child=`cmd.exe`; parent=`services.exe`, child=`whoami.exe`). Monitor process creation events (Sysmon Event ID 1) and generate a high-severity alert on any match.",
              "Build a probabilistic model of parent-child process relationships from baseline data. For each new process creation event, calculate the conditional probability $$P(Child | Parent)$$. Alert if this probability is below a low threshold (e.g., in the 0.1st percentile), indicating a statistically rare and suspicious event.",
              "Use a clustering algorithm (e.g., DBSCAN) on enriched process creation events. Features should include parent process name, child process name, command line argument entropy, user context, and whether the new process makes a network connection (via join with Sysmon Event ID 3 or Zeek `conn.log`). Outlier clusters can represent new execution chains that warrant investigation for hijacking."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by hijacking execution flow?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574",
        "name": "Hijack Execution Flow",
        "evidence": [
          {
            "description": "A file write or rename event modifies a file or DLL associated with an installed security tool (e.g., EDR agent, antivirus), and the resulting file's hash no longer matches the known-good hash for that tool's version.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "File Integrity Monitoring (FIM) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Installation directories of all security products (e.g., `C:\\Program Files\\Windows Defender`) on all endpoints and servers.",
            "action": [
              "Maintain a manifest of file paths and their corresponding cryptographic hashes for all deployed security tools. Monitor file create/write events (Sysmon Event ID 11) in these protected directories. Generate a critical alert if a file is modified and its new hash does not match the manifest.",
              "Monitor the operational status of security agents across the enterprise. A sudden increase in agents reporting as 'disabled' or 'unhealthy' on a specific subnet or host group is a statistical anomaly. Correlate this status change with file modification events on those hosts to detect potential mass disabling via hijacking.",
              "Train a classifier to detect 'tampering' events. Features should include the target file path (weighted heavily if it belongs to a security tool), the modifying process name (e.g., `TiWorker.exe` is less suspicious than `powershell.exe`), and whether the resulting file is signed. The model can provide a risk score for each modification event in a security-sensitive directory."
            ]
          },
          {
            "description": "A DLL with a generic system name (e.g., `version.dll`, `uxtheme.dll`) is created in an application's local directory, a location that is searched before the legitimate system directory (`C:\\Windows\\System32`).",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "Sysmon Event ID 7 (Image loaded)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application installation directories on endpoints, especially for commonly used software with known vulnerabilities like browsers, office suites, and developer tools.",
            "action": [
              "Create a SIEM rule that alerts when a file with a name from a list of commonly hijacked system DLLs (e.g., `version.dll`, `cryptbase.dll`, `dwrite.dll`) is created (Sysmon Event ID 11) in a path under `C:\\Program Files` or `C:\\Program Files (x86)` but not directly in a `System32` or `SysWOW64` directory.",
              "For each major application process, baseline the full paths of all DLLs it loads (Sysmon Event ID 7). Alert if the process begins loading a DLL from a new, unexpected path, especially if that DLL has the same name as one it normally loads from a system directory. This change in the resolved search path is a strong statistical indicator of a hijack.",
              "Use an autoencoder neural network to learn the normal 'module load profile' for each major application. The profile is a vector representing the set of loaded DLLs and their paths. The autoencoder's reconstruction error will be high for a process that has loaded a hijacked DLL from an abnormal path, flagging it as an anomaly."
            ]
          },
          {
            "description": "A file write event modifies a Microsoft-signed binary in a trusted system directory (`%SystemRoot%\\System32`), and the resulting file is either unsigned or signed by an untrusted or expired certificate.",
            "data_sources": [
              "Sysmon Event ID 11 (FileCreate)",
              "File Integrity Monitoring (FIM) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Trusted system directories (`%SystemRoot%\\System32`, `%SystemRoot%\\SysWOW64`) on all Windows hosts.",
            "action": [
              "Monitor file write events (Sysmon Event ID 11) targeting files in `C:\\Windows\\System32`. Upon write, trigger a signature check of the new file. Generate a critical alert if a previously Microsoft-signed file becomes unsigned, or if the new signature is from an untrusted publisher.",
              "Periodically run a script to hash all executable files in `System32` and compare them to a known-good baseline hash set maintained for the current OS patch level. Calculate the percentage of mismatched hashes per host. A host with a count of mismatched system files in the 99.9th percentile of the fleet is highly suspicious and requires immediate investigation.",
              "Train a one-class SVM model on the features of legitimate system files (e.g., entropy, PE header details, signature status, file size, section counts). Scan files in system directories and use the model to classify them as 'normal' or 'outlier'. Outliers are strong candidates for being replaced or patched binaries used for defense evasion."
            ]
          },
          {
            "description": "A core system process (e.g., `lsass.exe`) that typically does not initiate external network traffic, or a trusted process (`svchost.exe`) that does, initiates a network connection to an external destination that deviates from its established baseline in terms of destination IP, port, domain name, or data volume.",
            "data_sources": [
              "Sysmon Event ID 3 (Network Connection)",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (firewalls, proxies), DNS resolvers, and endpoint network stacks.",
            "action": [
              "Create a zero-tolerance rule that generates a critical alert when a core system process that should never access the network (e.g., `lsass.exe`, `wininit.exe`, `csrss.exe`) initiates any external network connection (Sysmon Event ID 3 where `DestinationIp` is not an RFC1918 address).",
              "For processes that do use the network (e.g., `svchost.exe`), baseline their behavior using Zeek `conn.log` and `dns.log`. Use z-scores to alert on statistical outliers, such as `svchost.exe` connecting to a destination country not seen in the last 90 days, or if daily data sent to a new IP exceeds 3 standard deviations from the process's historical average.",
              "Implement a time-series anomaly detection algorithm (e.g., LSTM) on network connection logs (Zeek `conn.log`), grouped by source process name. The model learns the normal rhythm of connections (frequency, duration, bytes sent/received). A hijacked process establishing a C2 channel will create a new, often periodic, pattern that the model can flag as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]