[
  {
    "information_requirement": "Is an adversary abusing cloud administration services to execute commands on virtual machines? (PIR)",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1651",
        "name": "Cloud Administration Command",
        "evidence": [
          {
            "description": "A command executed via a cloud administration API call (e.g., AWS ssm:SendCommand, Azure RunCommand, GCP os-patch-runs/execute) contains arguments matching known malicious indicators, suspicious patterns like encoding, or is statistically anomalous. The execution is observed on the host by the corresponding VM agent process (e.g., ssmagent.exe, waagent.exe, google_guest_agent.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud virtual machine instances, Cloud provider management plane (API logs)",
            "action": [
              "Correlate the cloud API call (e.g., ssm:SendCommand) with the resulting process creation event on the VM (Windows Event ID 4688). Scan the command-line arguments from the process event against a threat intelligence feed of malicious domains, IPs, file hashes, and known malicious command strings. Generate an alert on any match.",
              "For commands executed via cloud administration services, calculate the Shannon entropy of the command-line argument string. Establish a baseline of entropy scores for legitimate administrative commands. Flag any command whose entropy score exceeds the 95th percentile of the baseline or is executed by a user/role whose API calls rarely exceed this threshold.",
              "Develop a classification model (e.g., Random Forest) trained on a labeled dataset of benign and malicious command-line arguments. Use features from both the cloud API log (source IP reputation, user/role history, time of day) and the host event log (command length, special character count, entropy). Apply the model to new correlated API and host events to predict maliciousness."
            ]
          },
          {
            "description": "A cloud VM agent spawns a child process that is statistically rare for the environment or is an interactive tool inconsistent with automated administration.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud virtual machine instances",
            "action": [
              "For any child process of a known VM agent (e.g., ssmagent.exe, waagent.exe, google_guest_agent.exe), create a deny-list of interactive tools or utilities commonly abused by adversaries (e.g., cmd.exe, powershell.exe, pwsh.exe, whoami.exe, net.exe, ipconfig.exe, nmap.exe, mimikatz.exe). Generate a high-severity alert if a VM agent spawns any process on this list outside of an authorized, explicitly tagged interactive session.",
              "For each host, build a historical baseline of all child processes spawned by VM agents using Windows Event ID 4688. Using frequency analysis, identify any process that has never been seen on that host before or is in the bottom 5th percentile of execution frequency across the entire cloud environment. Alert on the execution of such rare processes.",
              "Use a clustering algorithm (e.g., DBSCAN) on features extracted from child process events, such as process name, parent process, user context, and command-line argument structure (length, special characters). Identify clusters of normal administrative activity and flag any new process execution that falls outside these established clusters as an anomalous deviation."
            ]
          },
          {
            "description": "A process spawned by a cloud VM agent initiates network connections to an external destination matching threat intelligence, or exhibits statistically anomalous communication patterns like beaconing.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "AWS VPC Flow Logs",
              "Azure Network Watcher Flow Logs",
              "Google Cloud VPC Flow Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Virtual network gateways and firewalls, Cloud-native network flow logs (VPC), Endpoint network sensors",
            "action": [
              "Correlate process creation events (Windows Event ID 4688) with network connection logs (Zeek conn.log, VPC Flow Logs) by source IP, process ID, and timestamp. For any outbound connection initiated by a process spawned from a VM agent, check the destination IP/domain against a threat intelligence feed of known C2 servers or malicious endpoints. Alert on any match.",
              "For each process spawned by a VM agent, analyze its network connections (Zeek conn.log). Calculate the standard deviation of time deltas between outbound connections to the same destination; a value near zero indicates rhythmic beaconing. Separately, analyze data volume (bytes out) and flag any connection where the volume exceeds the 98th percentile for that process/host combination.",
              "Apply a time-series forecasting model (e.g., ARIMA or Prophet) to the volume and frequency of network connections originating from VM agent child processes. Train the model on historical network logs (Zeek conn.log, VPC Flow Logs) to learn normal patterns. Alert when observed network activity significantly deviates from the forecasted values, suggesting a change in behavior such as large-scale data exfiltration."
            ]
          },
          {
            "description": "A cloud administration command is initiated from an anomalous source IP, by an unusual identity, or at a suspicious time. The API call itself, not just the on-host execution, deviates from established baselines.",
            "data_sources": [
              "AWS CloudTrail logs",
              "Azure Activity Logs",
              "Google Cloud Audit Logs",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity and Access Management (IAM) service logs, Cloud provider management plane (API logs)",
            "action": [
              "Monitor cloud API logs (CloudTrail, etc.) for command execution events (e.g., ssm:SendCommand). Check the source IP address of the API call against allow-lists of corporate IP ranges and known administrator jump boxes. Alert on any execution originating from an unauthorized IP space or a TOR exit node.",
              "For each IAM user/role, establish a baseline of normal API activity, including the types of commands run, the target instances, and the time/day of execution. Alert if a user/role executes a command on an instance for the first time, or if the API call originates from a geographic location or ISP that is in the bottom 5th percentile of frequency for that identity.",
              "Use an anomaly detection algorithm (e.g., Isolation Forest) on multi-dimensional data points representing each command execution API call. Features should include: source IP geolocation, time of day, day of week, IAM principal (user/role), and the target instance ID. Train the model on historical API logs to identify normal execution patterns and flag any new API call that the model scores as a significant outlier."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]