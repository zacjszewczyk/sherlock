[
  {
    "information_requirement": "Is the adversary communicating with command and control infrastructure using non-standard ports? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1571",
        "name": "Non-Standard Port",
        "evidence": [
          {
            "description": "A successful TCP connection (e.g., Zeek 'SF' state) is established from an internal asset to an external, non-private IP address on a destination port outside the organization's standard egress allow-list (e.g., not TCP/80, 443, 53, 25, 22), and the destination IP is present on a high-confidence threat intelligence feed of known C2 servers.",
            "data_sources": [
              "Zeek conn.log",
              "Threat Intelligence Feed"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways, internet-facing proxies, and SIEM/Threat Intelligence Platform",
            "action": [
              "Symbolic: Filter Zeek conn.log for successful outbound connections (`conn_state`='SF') to public IP addresses where `id.resp_p` is not in {80, 443, 25, 53, 22, 8080}. Join the `id.resp_h` (destination IP) with a threat intelligence list of known C2 servers. Generate a high-severity alert for every match.",
              "Statistical: For all successful outbound connections on non-standard ports, calculate the frequency of each destination IP over a 24-hour window. Enrich IPs with ASN and geographic data. Flag destination IPs that appear in the top 99th percentile of connection frequency but are not associated with known business partners or common cloud services (based on ASN/organization name).",
              "Machine Learning: Develop a classification model (e.g., Random Forest) trained on labeled historical data of malicious vs. benign connections. Features should include destination port, connection duration, total bytes sent, total bytes received, threat intelligence reputation score for the destination IP, and rarity of the destination ASN. Use the model to score new, non-standard port connections for their probability of being malicious."
            ]
          },
          {
            "description": "A TLS/SSL session on a non-standard port uses a JA3 or JA3S hash, SSL certificate subject/issuer, or X.509 certificate parameters (e.g., validity period < 90 days, self-signed status) that match known fingerprints of malicious C2 frameworks like Cobalt Strike, Metasploit, or Sliver.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways and any network sensors performing TLS/SSL inspection",
            "action": [
              "Symbolic: For connections on non-standard ports, correlate `uid` from conn.log with ssl.log and x509.log. Match the `ja3`, `ja3s`, certificate `issuer`, and `subject` fields against a curated list of indicators for known C2 frameworks. Generate an alert on any match. Also, alert if `x509.log` shows `self_signed` = 'T'.",
              "Statistical: For all TLS traffic on non-standard ports, calculate the Shannon entropy of the certificate's `subject` string after normalization (e.g., converting to lowercase). Unusually high entropy can indicate Domain Generation Algorithms (DGAs), while very low entropy can indicate default C2 configurations. Flag subjects in the top 5th (high entropy) and bottom 5th (low entropy) percentile for analyst review.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features extracted from ssl.log and x509.log for non-standard port traffic. Features should include certificate validity duration, public key length, signature algorithm, JA3 hash, and boolean flags for self-signed status. Analyze resulting clusters to identify groups of connections exhibiting similar, anomalous characteristics that may represent a single C2 campaign."
            ]
          },
          {
            "description": "The application-layer protocol dynamically identified by a network sensor (e.g., Zeek's `service` field) for traffic on a specific destination port does not align with the IANA-registered or commonly accepted service for that port, such as 'ssl' on TCP/80 or 'http' on TCP/443.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal network segments (for East-West traffic visibility) and egress network gateways (for North-South traffic visibility)",
            "action": [
              "Symbolic: Create a detection rule that queries Zeek conn.log and alerts when the `service` field does not match the expected protocol for the `id.resp_p`. For example, alert if (`id.resp_p` = 53 AND `service` != 'dns') OR (`id.resp_p` = 80 AND `service` NOT IN {'http', 'ssl'}) OR (`id.resp_p` = 443 AND `service` != 'ssl') OR (`id.resp_p` = 22 AND `service` != 'ssh').",
              "Statistical: For each internal host, establish a baseline of normal protocol/port mismatches. Calculate the ratio of mismatched connections to total connections over a rolling 24-hour window. Flag any host whose mismatch ratio exceeds 3 standard deviations above its own baseline or the network-wide average, indicating a significant behavioral change.",
              "Machine Learning: Implement a time series anomaly detection model (e.g., Seasonal-ARIMA) on the network-wide count of protocol-port mismatch events, aggregated per hour. The model learns the normal rhythm of such events (e.g., fewer at night, more during business hours) and alerts on statistically significant spikes that deviate from the forecasted pattern."
            ]
          },
          {
            "description": "A process on a Windows host (e.g., powershell.exe, rundll32.exe) initiates an outbound network connection on a destination port that has not been associated with that process image name or its parent process in baseline data (e.g., last 30 days).",
            "data_sources": [
              "Sysmon Event ID 3",
              "Windows Event ID 5156",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, database servers), developer workstations, and executive endpoints",
            "action": [
              "Symbolic: Using Sysmon Event ID 3, create a rule to alert when `Image` (the process path) is a process not typically associated with network activity (e.g., `regsvr32.exe`, `mshta.exe`, `wscript.exe`, `cscript.exe`) and `DestinationIp` is external.",
              "Statistical: For each host, build a historical baseline (e.g., 30 days) of legitimate {`Image`, `ParentImage`, `DestinationPort`} tuples from Sysmon Event ID 3 logs. Identify first-seen combinations. Score the anomaly based on the rarity of the process, parent process, and port across the enterprise. A rare process using a rare port receives the highest score.",
              "Machine Learning: Train a One-Class SVM (Support Vector Machine) model using baseline data of normal {`Image`, `ParentImage`, `DestinationPort`, `Protocol`} tuples from Sysmon Event ID 3. This model learns the boundary of normal process network behavior. During inference, any new connection that falls outside this learned boundary is classified as an anomaly and flagged for investigation."
            ]
          },
          {
            "description": "An outbound connection on a non-standard port exhibits C2-like characteristics, such as a periodic, low-volume 'heartbeat' pattern; a highly asymmetric data flow (e.g., client-to-server byte ratio > 10:1); or an unusually long session duration with minimal data transfer.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek weird.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways and internal network core switches",
            "action": [
              "Symbolic: Monitor Zeek `weird.log` for events like `active_connection_without_data`, `data_before_established`, or `inappropriate_fin`. Correlate these events by `uid` with connections in `conn.log` that are on non-standard ports. An alert on these specific protocol violations provides high-fidelity evidence of malformed or evasive traffic.",
              "Statistical: To detect beaconing, group Zeek conn.log by source IP, destination IP, and destination port. For each group, calculate the standard deviation of the inter-arrival time between connections over a 1-hour window. A very low standard deviation (e.g., < 2 seconds) for a series of at least 5 connections suggests a machine-generated, periodic heartbeat. Flag for review.",
              "Machine Learning: Use a time series autoencoder neural network trained on sequences of connection features from Zeek conn.log. For each source-destination pair, create a time series of feature vectors like {`duration`, `orig_bytes`, `resp_bytes`, `orig_pkts`, `resp_pkts`}. The model's reconstruction error will be low for normal traffic but high for anomalous patterns like C2 heartbeating or low-and-slow exfiltration, triggering an alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]