[
  {
    "information_requirement": "Is an adversary actively testing or deploying newly developed exploits against our network perimeter?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1587.004",
        "name": "Exploits",
        "evidence": [
          {
            "description": "Outbound network connection logs show successful TCP/UDP sessions from internal hosts to external IP addresses or domains present on a threat intelligence feed specifically curated for exploit development, vulnerability research, or malware staging infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points of the network, including internet gateways and forward proxy servers.",
            "action": [
              "Continuously join Zeek conn.log (on `id.resp_h`) and dns.log (on `query`) with a threat intelligence list of IPs/domains tagged as 'exploit-development', 'vulnerability-research', or 'malware-staging'. Generate a high-priority alert for any successful connection (`conn_state` is not 'S0', 'REJ', or 'RSTO').",
              "For all outbound connections, calculate the baseline frequency of connections to newly observed domains (first seen in the last 24 hours). Alert when an internal host connects to a new domain whose registration age is less than 30 days and the connection volume from the host exceeds 3 standard deviations above its own baseline for connecting to new domains.",
              "Train a supervised classification model (e.g., Random Forest) on labeled historical outbound connections (benign/malicious). Use features like destination IP reputation, ASN, geo-location, port, protocol, connection duration, and bytes transferred. Score new outbound connections in real-time to predict the probability of maliciousness, flagging high-probability connections for investigation."
            ]
          },
          {
            "description": "Web server logs show inbound HTTP/S requests from a single external source containing User-Agent strings, URI paths, or request bodies matching signatures of known vulnerability scanners (e.g., Nmap Scripting Engine, Nuclei, Metasploit Framework) not associated with authorized scanning activity.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers, reverse proxies, and Web Application Firewalls (WAFs) in the DMZ.",
            "action": [
              "Apply a ruleset of regular expressions against the `user_agent` and `uri` fields in Zeek http.log to detect signatures of common scanning tools. Exclude traffic from authorized vulnerability management sources and generate an alert for any other match.",
              "For each source IP, calculate the Shannon entropy of the `uri` field across all its requests in a 5-minute window. Flag any source IP whose URI entropy exceeds the 98th percentile of the global baseline and is also associated with a high rate of 4xx/5xx HTTP status codes.",
              "Use a clustering algorithm (e.g., K-Means) on features extracted from User-Agent strings (e.g., token count, special character frequency, library names). Identify clusters corresponding to scanners, bots, and legitimate browsers. Classify new inbound User-Agents and flag any belonging to the scanner cluster that are not on an allowlist."
            ]
          },
          {
            "description": "Network flow logs show a single external source IP initiating connections to a statistically anomalous number of unique destination ports on a single host (vertical scan) or across multiple internal hosts (horizontal scan) within a short timeframe (e.g., under 5 minutes).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing firewalls, network gateways, and DMZ network segments.",
            "action": [
              "Generate an alert when a single source IP (`id.orig_h`) attempts connections to more than 20 unique destination ports (`id.resp_p`) on a single destination host (`id.resp_h`) within a 1-minute window (vertical scan), OR to more than 20 unique destination hosts on the same port within a 1-minute window (horizontal scan).",
              "For each external source IP, calculate the ratio of unique destination ports to unique destination hosts over a 5-minute window. A high ratio (>10) suggests a vertical scan; a low ratio (<1) with a high count of destination hosts (>10) suggests a horizontal scan. Flag IPs that meet these criteria and exceed the 95th percentile for connection attempts.",
              "Model network traffic using a graph database where nodes are IPs and edges are connections. Apply community detection algorithms to identify groups of nodes with dense internal connections. A community dominated by a single external IP connecting to many internal IPs is indicative of a scanning pattern."
            ]
          },
          {
            "description": "A network session from an untrusted external IP to a port corresponding to a known, unpatched high-severity vulnerability (e.g., from a CISA KEV catalog) exhibits anomalous characteristics, such as an unusually small or large payload size, a non-standard TCP flag sequence, or a session duration that is a statistical outlier compared to legitimate traffic.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing application servers, VPN concentrators, RDP Gateway servers, and other remotely accessible services.",
            "action": [
              "Correlate a list of vulnerable ports on specific hosts (from vulnerability scanner output) with inbound Zeek conn.log data. Generate an alert for any connection attempt to a known-vulnerable port from an IP not on a pre-approved allowlist for that service.",
              "For each critical service port, establish a baseline profile of normal connection metrics (e.g., 25th, 50th, 75th percentiles for `orig_bytes`, `resp_bytes`, `duration`). Flag any new connection where one or more metrics fall outside the 5th-95th percentile range, suggesting a non-standard interaction like a probe or exploit.",
              "Train an anomaly detection model (e.g., Isolation Forest) on a dataset of legitimate connection metadata (`orig_bytes`, `resp_bytes`, `duration`, protocol) for a specific vulnerable service. Score new connections in real-time; connections with a high anomaly score represent potential exploit attempts."
            ]
          },
          {
            "description": "A critical application crash event (Windows Event ID 1000, Faulting application) is logged on a public-facing server within a 60-second window immediately following a completed network session from an untrusted external IP address to a service hosted on that server.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing Windows-based servers (e.g., running IIS, Exchange, RDP services).",
            "action": [
              "Create a stateful correlation rule that triggers when a Windows Event ID 1000 is logged. The rule should then query Zeek conn.log for any connection to the affected server from an external, non-allowlisted IP that terminated within the 60 seconds prior to the event timestamp. Alert on any match.",
              "For each critical server, calculate the baseline rate of application crashes (Event ID 1000) per hour. In parallel, track the rate of new external IP connections. Use a cross-correlation function to identify statistically significant time-lagged relationships where a spike in new IPs is followed by a spike in crashes.",
              "Apply a Granger causality test to determine if the time series of connection attempts from a specific external IP is statistically useful in forecasting the time series of application crash events (Event ID 1000) on a server. A significant p-value suggests the connections are a likely cause of the crashes, indicating potential exploit attempts."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]