[
  {
    "information_requirement": "Is the adversary compromising external or internal accounts to support targeting or operations?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1586",
        "name": "Compromise Accounts",
        "evidence": [
          {
            "description": "An authentication attempt (Windows Event ID 4624 or 4625) is observed where the target username appears in a known breached credential database or the source IP from the corresponding network session (Zeek conn.log) is on a threat intelligence feed for credential abuse.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log",
              "Threat Intelligence Feeds"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing authentication services (e.g., VPN, OWA, M365), internal authentication servers (e.g., Domain Controllers), network egress points, and threat intelligence platforms.",
            "action": [
              "Implement a real-time rule to join login events (Windows Event IDs 4624, 4625) with threat intelligence. Trigger an alert if (a) the TargetUserName field matches an entry in a known breached credential list, or (b) the id.orig_h (source IP) from the corresponding Zeek conn.log session matches an IP on a current threat feed for credential stuffing or brute-force attacks.",
              "For all source IPs present on threat intelligence watchlists, calculate the hourly rate of both successful and failed login attempts. Establish a baseline for 'normal' watchlist IP activity. Trigger an alert if the login attempt rate from any single watchlist IP exceeds the 95th percentile of the baseline for that watchlist category (e.g., 'TOR Exit Node', 'Known Attacker C2').",
              "Deploy a supervised classification model (e.g., Random Forest) trained on labeled historical login data. Engineer features such as is_username_breached, is_ip_on_threat_feed, source_as_rarity, login_hour_of_day, and user_agent_commonality. The model should output a risk score for each login event, triggering an alert for scores exceeding a dynamically tuned threshold based on an acceptable false positive rate."
            ]
          },
          {
            "description": "A password spraying or credential stuffing attack is observed, characterized by a high rate of authentication failures (Windows Event ID 4625) from a single source IP across numerous distinct user accounts within a short time frame. Associated web logs (Zeek http.log) may show user-agent strings of known attack tools.",
            "data_sources": [
              "Windows Event ID 4625",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public web application servers, API gateways, VPN concentrators, network perimeter firewalls, cloud identity provider log streams.",
            "action": [
              "Create a stateful detection rule that triggers when a single source IP (id.orig_h in Zeek conn.log) generates over 20 failed logins (Windows Event ID 4625) for more than 10 unique user accounts within a 5-minute window. Add a condition to increase confidence if the user_agent field in Zeek http.log for that session matches a signature list of credential attack tools (e.g., 'hydra', 'medusa', 'sqlmap', 'ncrack').",
              "For each external source IP, calculate a 'spray ratio' every 5 minutes, defined as (count of unique failed usernames) / (total count of failed logins). A ratio approaching 1.0 indicates a password spray. Trigger an alert if an IP's spray ratio exceeds the 99th percentile of ratios observed across all external IPs in the past 24 hours, and the absolute number of failed accounts is greater than 5.",
              "Apply a density-based clustering algorithm (e.g., DBSCAN) to a dataset of failed authentication events over a 15-minute sliding window. Use features such as source_ip, hashed_username, and timestamp. Identify and alert on clusters that are dense in terms of unique usernames originating from a single or small set of source IPs, as these are indicative of a coordinated password spraying attack."
            ]
          },
          {
            "description": "A brute-force or distributed brute-force attack is observed, characterized by a statistically anomalous volume of failed logins (Windows Event ID 4625) against a single user account from one or many source IPs.",
            "data_sources": [
              "Windows Event ID 4625",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication servers (Domain Controllers, RADIUS), public-facing application servers, cloud identity provider logs (e.g., Azure AD Sign-in logs), network perimeter flow logs.",
            "action": [
              "Implement a rule that alerts when a single user account experiences more than 20 failed logins (Windows Event ID 4625) within a 5-minute period, originating from more than 5 distinct Autonomous System Numbers (ASNs) as determined by enriching source IPs from Zeek conn.log. This indicates a distributed attack.",
              "For each user account, establish a baseline of failed login counts per hour using a 30-day moving average and standard deviation. Trigger an alert if the current hourly count exceeds the baseline by more than 3 standard deviations. Concurrently, calculate the Shannon entropy of source IPs for failed logins per user in a 5-minute window. Alert on a sudden entropy spike for any single user, indicating a shift from a single source to multiple sources.",
              "Deploy a time-series anomaly detection model (e.g., ARIMA or an LSTM-based autoencoder) for each high-value user account or user group. Feed the model a stream of failed login counts per minute. The model, trained on historical login patterns, will alert when it observes a sequence of counts that deviates significantly from the learned normal behavior, indicating a potential brute-force attack."
            ]
          },
          {
            "description": "A successful authentication (Windows Event ID 4624) follows a pattern indicative of a compromised account, such as (1) success after a high-volume brute-force or password spray attempt from the same source, or (2) the login occurs from a geographic location that is physically impossible for the user to have traveled to since their last known login location.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4625",
              "Zeek conn.log",
              "GeoIP Enrichment Database"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controller and member server security logs, VPN access logs, internet gateway flow logs (Zeek conn.log), geolocation data enrichment services.",
            "action": [
              "Create a correlation rule that alerts when a successful login (Windows Event ID 4624) for a specific user from a specific source IP is preceded by more than 10 failed logins (Windows Event ID 4625) for that same user from the same IP within the last 15 minutes.",
              "For each successful login, retrieve the timestamp and geolocated IP of the user's previous successful login. Calculate the great-circle distance and the time difference. If the implied travel speed exceeds a threshold (e.g., 1000 km/h), generate an alert for impossible travel. Additionally, maintain a baseline of typical source countries and ASNs for each user; alert if a login occurs from a country or ASN not seen in the last 90 days for that user.",
              "Train a binary classification model (e.g., Logistic Regression) to score each successful login for anomalousness. Features should include time_since_last_login, distance_from_last_login, is_new_country, is_new_device (if available), is_new_asn, and count_of_prior_failures_in_session. Alert on logins with a predicted probability of being anomalous above a set threshold (e.g., >0.9)."
            ]
          },
          {
            "description": "An inbound email, ostensibly from a trusted external partner, exhibits signs of account compromise, such as failing DMARC/SPF/DKIM checks, containing links to newly registered or suspicious domains, or a significant deviation in writing style and content from the sender's historical baseline.",
            "data_sources": [
              "Email Gateway Logs",
              "Zeek dns.log",
              "Zeek http.log",
              "WHOIS lookup data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mail Transfer Agents (MTAs), email security gateways, network DNS resolvers, web proxies, and external domain intelligence services.",
            "action": [
              "Create a rule to alert on any inbound email where the 'From' header domain belongs to a known partner, but the email fails DMARC authentication with a p=reject or p=quarantine policy. Also, alert if the email contains a URL whose domain is present on a threat intelligence feed of malicious domains.",
              "For each inbound email, extract all URLs from the body and headers. For each domain, query its registration date using a local WHOIS cache populated from Zeek DNS query monitoring. Calculate the age of the newest domain in the email. Generate a high-priority alert if the domain age is less than 30 days and the sender is a partner or executive.",
              "Implement an NLP pipeline for inbound emails from key external partners. For each sender, create a baseline profile using Latent Dirichlet Allocation (LDA) for topic modeling and stylometric features (e.g., avg. sentence length, vocabulary richness). For each new email, compare its topic model and stylometry to the sender's baseline using a similarity score (e.g., cosine similarity). A score below a learned threshold indicates a potential account compromise and should trigger an alert for security review."
            ]
          },
          {
            "description": "A social media account impersonating an organization executive or brand is detected, or a legitimate, monitored account exhibits behavior indicative of compromise, such as a sudden change in content, posting links to suspicious domains, or anomalous network-building activity.",
            "data_sources": [
              "OSINT Monitoring Platform Data",
              "Social Media Site APIs",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public social media platforms (e.g., LinkedIn, X/Twitter), OSINT data aggregation services, brand protection services, internal web proxy logs.",
            "action": [
              "Monitor for new social media profiles using names, handles, or profile pictures that are variations (typosquatting, impersonation) of key executives or official brand accounts. Alert if such a profile is created and posts links to domains registered within the last 60 days (checked via Zeek dns.log and WHOIS) or to known malicious sites.",
              "For monitored legitimate accounts, establish a baseline for posting activity (frequency, time of day), content (topic keywords), and network growth (new connections/followers per day). Alert if any of these metrics deviates by more than 3 standard deviations from the 90-day moving average. Additionally, calculate the Jaccard similarity of hashtags and mentioned accounts between new posts and the historical post corpus; a sudden drop in similarity indicates a potential change in control.",
              "Develop an author attribution model using stylometric features (e.g., word n-grams, function word frequencies, punctuation usage) trained on a corpus of an individual's known public writings (e.g., blogs, past social media posts). Apply this model to new posts from their monitored accounts. An alert is generated if the model classifies the author as 'unknown' or different from the established profile with high confidence, suggesting an account takeover."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.3",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]