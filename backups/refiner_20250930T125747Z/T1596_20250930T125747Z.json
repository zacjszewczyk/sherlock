[
  {
    "information_requirement": "Is the adversary conducting reconnaissance against our enterprise using open technical databases?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1596",
        "name": "Search Open Technical Databases",
        "evidence": [
          {
            "description": "A statistically significant volume of network connections or probes originating from IP addresses present on threat intelligence feeds for public scanning services or known malicious reconnaissance infrastructure.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, external-facing firewalls, and cloud network flow logs.",
            "action": "1. (Symbolic) Ingest CTI feeds of known internet scanners (Shodan, Censys, etc.) and malicious IPs into a reference set. Join this set with source IPs from Zeek conn.log over a 5-minute window. Alert on any match that targets a non-public or sensitive port. 2. (Statistical) For all external source IPs, calculate the number of unique destination ports contacted within a 1-hour window. Establish a baseline and alert on any IP exceeding the 98th percentile, as this indicates port scanning behavior. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., ARIMA) on the volume of connection attempts from the known scanner IP category. Generate an alert when the observed volume significantly deviates from the forecasted volume, suggesting a change in scanning behavior or a new targeted campaign."
          },
          {
            "description": "Inbound HTTP/S requests containing specific User-Agent strings, request headers, or URI patterns that are characteristic of automated internet scanning tools or vulnerability scanners.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing web servers, load balancers, and reverse proxies.",
            "action": "1. (Symbolic) Use regular expression matching on the 'user_agent' and 'uri' fields in Zeek http.log to detect signatures of known tools (e.g., 'masscan', 'zgrab', 'nuclei', 'X-Censys-Scanner'). 2. (Statistical) For each source IP, calculate the Shannon entropy of its requested URIs over a 15-minute period. A low entropy score indicates repetitive, non-human browsing and potential scanning; alert on IPs falling below the 5th percentile of the established baseline entropy. 3. (Machine Learning) Train a classification model (e.g., Logistic Regression) on labeled datasets of benign and scanner-based HTTP requests. Use features like URI length, User-Agent string, and header count to score new requests in near real-time and identify likely scanner traffic that evades simple signature checks."
          },
          {
            "description": "A pattern of widespread, low-and-slow connection attempts from a single or distributed set of external IP addresses across the organization's public IP space, targeting a high number of unique hosts or non-standard ports.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network perimeter firewalls, internet gateways, and DMZ network segments.",
            "action": "1. (Symbolic) Create a rule to immediately alert on any external connection attempt to a predefined 'honey-port' list\u2014ports that are firewalled and should never receive legitimate external traffic. 2. (Statistical) Aggregate Zeek conn.log data over 24 hours. Identify external source IPs that connect to an unusually high number of unique destination hosts (>95th percentile) while maintaining a low connection count per host (<5th percentile), indicative of slow scanning. 3. (Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on connection data features (source IP, destination port, inter-arrival time). This can group seemingly disparate low-and-slow connections into a single cluster representing a coordinated scan, even from multiple source IPs, that would be missed by simple thresholding."
          },
          {
            "description": "A sudden increase in authentication failures (or successes from anomalous locations) for accounts whose usernames are derived from publicly available information, such as WHOIS contacts, certificate details, or data breach corpuses.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, ADFS servers, VPN concentrators, and other external authentication gateways (e.g., OWA).",
            "action": "1. (Symbolic) Proactively compile a watchlist of usernames/emails from public sources (WHOIS, cert transparency logs). Create a rule for a high-severity alert on any successful authentication (Event ID 4624) from an external source for an account on this list that has been dormant for >90 days. 2. (Statistical) For each external-facing service, baseline the authentication failure rate (Event ID 4625). Alert if the failure count for any single user exceeds 4 standard deviations from their personal baseline, or if the total failures for the service exceed the 99th percentile of the service's historical baseline, indicating password spraying. 3. (Machine Learning) For each successful login (Event ID 4624), use a pre-trained geolocation model on the source IP (from Zeek conn.log) and a time-series model on login times. Classify the login as anomalous if it deviates significantly from the user's established geographic and temporal baseline."
          },
          {
            "description": "Anomalous external DNS queries for obscure, legacy, or non-advertised subdomains, especially when the source of the query subsequently attempts to connect to the resolved IP address.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "External DNS servers, internal DNS resolvers forwarding external queries, and network egress points.",
            "action": "1. (Symbolic) Maintain a list of known-malicious or algorithmically generated domains (DGAs). Alert on any external DNS query from Zeek dns.log that matches this list. 2. (Statistical) From Zeek dns.log, calculate the historical query frequency for all organizational subdomains from external sources. Identify 'rare' subdomains by flagging any below the 10th percentile of query frequency. A sudden spike in queries for a rare subdomain from a single external IP is a strong indicator of targeted reconnaissance. 3. (Machine Learning) Use an Isolation Forest model on DNS query features (query length, number of sub-levels, query type). This can identify structurally anomalous domain queries that don't match common patterns. Correlate the source IP of an anomalous query with a subsequent connection attempt in Zeek conn.log to the resolved IP within 5 minutes to increase detection confidence."
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]