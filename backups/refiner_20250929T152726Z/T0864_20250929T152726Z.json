[
  {
    "information_requirement": "Is an adversary leveraging a transient cyber asset for initial access into the ICS environment?",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0864",
        "name": "Transient Cyber Asset",
        "evidence": [
          {
            "description": "A network connection is observed originating from a MAC address or IP address that is not present in the authorized ICS asset inventory for a specific network segment, indicating a new, unidentified device attempting to access the ICS network.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS network segments (e.g., Level 0-3.5), particularly maintenance and engineering VLANs, and the IT/OT network boundary.",
            "action": "1. Symbolic Logic: Continuously monitor Zeek conn.log for new source MAC addresses and IP addresses. Compare each observed address against a curated whitelist of authorized devices maintained in a CMDB or asset inventory for the specific ICS network segment. Generate a high-priority alert for any connection originating from an address not found on the authorized list. 2. Statistical Method: Calculate the daily count of unique new MAC/IP addresses observed in Zeek conn.log per ICS segment. Establish a historical baseline for this metric over the past 30 days. Trigger an alert if the current daily count exceeds the 99th percentile of this historical baseline, indicating a statistically significant increase in new device discovery. 3. Machine Learning Application: Train a one-class Support Vector Machine (SVM) model on historical Zeek conn.log data to learn the 'normal' patterns of source IP/MAC addresses and their initial connection behaviors within each ICS segment. Deploy the model to detect and flag network connections originating from new or infrequent MAC/IP addresses that do not fit the established 'normal' profile, indicating anomalous or unauthorized device presence."
          },
          {
            "description": "A previously identified transient asset (e.g., a contractor's laptop) establishes network connections to sensitive ICS assets (e.g., PLCs, RTUs) or external destinations using protocols, ports, or data volumes that deviate significantly from its established behavioral baseline for specific time windows.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historians, Programmable Logic Controllers (PLCs), and network gateways to corporate IT or the internet within the Process Control Network (PCN).",
            "action": "1. Symbolic Logic: For known transient assets (identified by IP/MAC), create detection rules to alert on connections to blacklisted external IP addresses (e.g., known C2 servers) or unapproved cloud services (Zeek dns.log, http.log). Additionally, alert on connections from transient assets to ICS devices (Zeek conn.log) using non-standard ICS protocols (e.g., SMB, RDP) or non-whitelisted ports for that specific asset and destination. 2. Statistical Method: Establish a multi-faceted baseline for each known transient asset using Zeek conn.log data, including: typical destination IPs and ports, common protocols, average data volume per session, and unique DNS queries from Zeek dns.log for typical operational hours. Calculate the z-score for these metrics against their respective baselines. Trigger an alert if any metric exceeds a 3-standard-deviation threshold (e.g., connection to a previously uncontacted PLC, a sudden spike in data volume, or high frequency of connections to new internal hosts). 3. Machine Learning Application: Develop a time-series anomaly detection model (e.g., ARIMA or Prophet) for the daily count of unique destination IPs and the total data volume from each known transient asset. Additionally, train a supervised classification model (e.g., Random Forest) on historical Zeek logs to classify connection patterns from transient assets as 'normal' or 'anomalous' based on features such as protocol distribution, port usage, and destination types, triggering an alert for 'anomalous' classifications."
          },
          {
            "description": "A new executable file or script with an executable extension (.exe, .dll, .bat, .ps1, .vbs, .py) is transferred from a transient asset to an ICS host via network protocols (e.g., SMB, HTTP, FTP), immediately followed by a process creation event on that ICS host with a matching filename within a short time window (e.g., 5 minutes).",
            "data_sources": [
              "Zeek files.log",
              "Zeek smb_files.log",
              "Zeek http.log",
              "Windows Event ID 4688",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, HMIs, and file servers within the Process Control Network (PCN), especially those configured to accept connections from transient devices.",
            "action": "1. Symbolic Logic: Correlate Zeek files.log (or smb_files.log, http.log) entries showing file transfers from transient asset IPs to ICS host IPs with Windows Event ID 4688 (Process Creation) on the destination host. Create a detection rule that triggers when a file with an executable extension (.exe, .dll, .bat, .ps1, .vbs, .py) is transferred and a process with the same filename (or a close variant) is created on the destination host within a 5-minute window. Also, check if the file hash matches any known malicious hashes (IOCs). 2. Statistical Method: Calculate the Shannon entropy of filenames for all files transferred to ICS hosts from transient assets (Zeek files.log). Establish a baseline for entropy values of known legitimate ICS software and scripts. Flag transfers where the filename entropy exceeds the 95th percentile of this baseline, as high entropy can indicate obfuscation and warrants further investigation. 3. Machine Learning Application: Train a supervised machine learning model (e.g., Logistic Regression or Gradient Boosting) to classify file transfer and execution events as 'malicious' or 'benign.' Features for the model should include file type, source/destination IPs, transfer protocol, file size, filename entropy, and process parent-child relationships from Windows Event ID 4688. The model should learn to identify patterns indicative of unauthorized code execution from transient assets."
          },
          {
            "description": "Execution of administrative or engineering tools (e.g., 'net.exe', 'ipconfig.exe', 'powershell.exe', ICS vendor-specific configuration tools) on an ICS host, initiated from a session linked to a transient asset, with command-line arguments indicative of reconnaissance (e.g., 'net view', 'nmap' commands) or unauthorized modifications (e.g., 'Set-ItemProperty' in PowerShell for critical system settings or direct PLC register writes).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek rdp.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations, Domain Controllers, and other Windows-based hosts within the ICS environment, especially where transient assets establish direct or indirect sessions.",
            "action": "1. Symbolic Logic: Monitor Windows Event ID 4688 (Process Creation) for specific administrative and networking tools ('net.exe', 'ipconfig.exe', 'powershell.exe', 'wmic.exe', 'psexec.exe') originating from logon sessions (Windows Event ID 4624, Zeek rdp.log) associated with transient assets. Alert on command-line arguments that indicate reconnaissance ('net view', 'nltest /dclist', 'ipconfig /all', 'whoami /priv') or privilege escalation attempts ('powershell -enc', known malicious tool names like 'mimikatz.exe'). Also, monitor Zeek dnp3.log and modbus.log for unexpected write commands to critical registers from transient asset IPs. 2. Statistical Method: Establish a baseline of typical command-line arguments and execution frequency for legitimate administrative tools on ICS hosts. Calculate the Jaccard similarity coefficient or edit distance between observed command-line arguments from Windows Event ID 4688 and baselined arguments. Trigger an alert when an observed command-line argument shows low similarity (e.g., below 0.5) to any known legitimate command for a given tool, indicating a potentially novel or malicious usage. Track the frequency of unique process executions from transient asset sessions; a sudden spike in new, low-frequency process names or a significant increase in administrative tool usage (exceeding the 95th percentile of historical activity) should trigger an alert. 3. Machine Learning Application: Employ a natural language processing (NLP) technique (e.g., TF-IDF with a Random Forest classifier) on command-line arguments from Windows Event ID 4688 to classify commands as 'benign' or 'malicious' based on historical labeled data. Train a sequence model (e.g., LSTM or Hidden Markov Model) on the chronological order of process execution events (Windows Event ID 4688) from transient asset sessions to identify anomalous sequences of administrative tool usage that might indicate multi-stage attacks or lateral movement within the ICS environment."
          }
        ]
      }
    ],
    "version": "1.1",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]