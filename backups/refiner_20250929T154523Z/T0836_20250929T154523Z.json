[
  {
    "information_requirement": "Is an adversary modifying critical process control parameters to impair operations?",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0836",
        "name": "Modify Parameter",
        "evidence": [
          {
            "description": "A 'Write' command targeting a critical ICS register or parameter (e.g., setpoint, motor speed, valve position) with a new value that is outside the documented safe operating range (specified in engineering documentation or asset configuration) or deviates by more than three standard deviations from the historical mean of accepted values for that specific parameter, as observed in Zeek ICS protocol logs.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) Segments, PLC/RTU Controllers, SCADA Servers",
            "action": "1. Symbolic Logic (Rule-based): Define critical ICS parameters and their documented safe operating ranges (min/max) from engineering specifications. In the SIEM, create a search query to filter Zeek ICS protocol logs (e.g., modbus.log, s7comm.log) for 'Write' commands (e.g., Modbus function code 0x06 or 0x10, S7 Write Var/Write Block) targeting these critical parameters. Configure an alert to trigger immediately if the 'value' field of a 'Write' command is outside the defined safe operating range for the specific 'register_address' or 'variable_id'. 2. Statistical Method (Baseline Deviation): For each identified critical ICS parameter, collect at least 90 days of historical 'Write' command values from Zeek ICS logs. Calculate the mean and standard deviation of these values. In the SIEM, create a search that monitors real-time 'Write' commands for each critical parameter. Apply a statistical function to compare the current 'value' against the established mean and standard deviation. Generate an alert if the current 'value' deviates by more than three standard deviations from the historical mean for that specific parameter. 3. Machine Learning (Anomaly Detection): Utilize a data science platform or SIEM's ML capabilities to train an unsupervised anomaly detection model (e.g., Isolation Forest, One-Class SVM) on historical 'value' data from 'Write' commands for each critical parameter. Deploy the trained model to ingest real-time 'Write' commands from Zeek ICS logs. Configure the model to output an anomaly score for each new 'Write' value. Generate an alert when a 'Write' command's value is classified as anomalous with a high anomaly score (e.g., top 1st percentile of anomaly scores)."
          },
          {
            "description": "A 'Write' command to an ICS device originates from a source IP address not present in the documented allowlist of authorized Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), or control servers. Alternatively, an observed connection from the corporate IT network to the Process Control Network (PCN) for an ICS 'Write' operation violates documented firewall rules or established network segmentation policies.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "IT/OT Network Boundary, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs)",
            "action": "1. Symbolic Logic (Allowlist/Denylist): Maintain an up-to-date allowlist of authorized source IP addresses for Engineering Workstations (EWS) and Human-Machine Interfaces (HMIs) that are permitted to initiate 'Write' commands to ICS devices. In the SIEM, create a search query that identifies 'Write' commands in Zeek ICS protocol logs (e.g., modbus.log, s7comm.log) and extracts the source IP address (id.orig_h). Configure an alert to trigger immediately if id.orig_h is not found on the authorized allowlist. 2. Statistical Method (Unusual Source-Destination Pairs): Collect historical Zeek conn.log data for at least 90 days, focusing on connections between IT and OT networks. For each unique source-destination IP pair, calculate the historical frequency of connections involving ICS control ports (e.g., Modbus TCP port 502, S7comm port 102). Establish a baseline for normal communication frequency (e.g., 1st percentile). In the SIEM, monitor real-time Zeek conn.log for connections to ICS control ports. Generate an alert if a source IP initiates a connection to an ICS device's control port, and that source IP has a historically low frequency of communication (e.g., below the 1st percentile) with that specific ICS destination and port. 3. Machine Learning (Network Flow Anomaly): Utilize a data science platform or SIEM's ML capabilities to train a network flow anomaly detection model (e.g., using autoencoders or density-based clustering like DBSCAN) on aggregated historical Zeek conn.log data. Focus on features such as source/destination IPs, ports, protocols, and bytes transferred for connections between IT and OT segments. Deploy the model to ingest real-time Zeek conn.log data. Configure an alert when new connection patterns, especially those correlating with 'Write' commands to ICS devices, are classified as anomalous by the model due to significant deviation from learned normal communication behavior."
          },
          {
            "description": "A 'Write' command to an ICS device, originating from an authorized EWS/HMI, correlates with a Windows logon session (Event ID 4624) on that EWS/HMI that exhibits multiple anomalous characteristics, such as login outside of normal working hours for the user, from an unusual geographic location (if VPN/remote access is used), or with an unusual device/workstation name for that user.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), Active Directory Domain Controllers",
            "action": "1. Symbolic Logic (Role-Based Access Control): Maintain an allowlist of user accounts explicitly authorized to perform parameter modifications on specific ICS devices. In the SIEM, correlate 'Write' commands from Zeek ICS protocol logs (e.g., modbus.log, s7comm.log, matching id.orig_h to the EWS/HMI IP) with successful Windows logon events (Event ID 4624) from that EWS/HMI within a 5-minute window. Extract the TargetUserName from Event ID 4624. Configure an alert if the TargetUserName is not present in the allowlist for the specific ICS device targeted by the 'Write' command. 2. Statistical Method (Login Anomaly Score): For each authorized user account that interacts with EWS/HMIs, establish a baseline of normal login characteristics using 90 days of historical Windows Event ID 4624 data (e.g., logon time, source workstation name) and Zeek conn.log (for source IP geolocation if applicable). Calculate typical login times (hour of day, day of week), common source IP addresses/countries, and frequently used workstation names. When a 'Write' command is observed, identify the correlated Windows Event ID 4624. Calculate a risk score for the logon based on deviations from the user's baseline (e.g., login during off-hours, from a historically rare geographic location, or an unfamiliar workstation). Generate an alert if the calculated risk score exceeds the user's 95th percentile of historical login risk scores. 3. Machine Learning (User Behavior Analytics): Utilize a UBA platform or SIEM's ML capabilities to train a User Behavior Analytics model (e.g., using clustering, sequence analysis, or deep learning) on historical user login patterns, leveraging Windows Event ID 4624 fields such as Logon_Type, Source_Network_Address, Logon_Process_Name, and TargetUserName. The model should learn typical login attributes and sequences for each user. When a 'Write' command is observed from an EWS/HMI, evaluate the preceding logon event for that EWS/HMI against the trained UBA model. Configure an alert if the logon event is classified as an outlier or anomaly by the model, indicating a potentially compromised or misused account that led to the 'Write' command."
          },
          {
            "description": "A single, critical control parameter (e.g., a setpoint, motor speed, valve position) is subjected to multiple 'Write' commands within an unusually short period, with a frequency or magnitude of change that significantly exceeds historical norms for that parameter, indicating rapid 'flapping' or oscillatory behavior.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "PLC/RTU Controllers, Process Control Network (PCN) Segments, SCADA/Historian Servers",
            "action": "1. Symbolic Logic (Rate Threshold): Identify critical ICS parameters and define a maximum threshold for 'Write' commands within a specific time window (e.g., 3 'Write' commands to a specific 'register_address' or 'variable_id' within 10 seconds). In the SIEM, create a search query to filter Zeek ICS protocol logs for 'Write' commands targeting these parameters. Group events by 'register_address'/'variable_id' and source IP. Configure an alert to trigger if the count of 'Write' commands for a single parameter from a single source exceeds the defined hard threshold within the specified time window. 2. Statistical Method (Frequency and Magnitude Anomaly): For each unique ICS device and critical parameter combination, collect 90 days of historical Zeek ICS logs to establish baselines for: a) the frequency of 'Write' commands (e.g., writes per minute), and b) the average magnitude of value change per 'Write' (absolute difference between current and previous value). Calculate the 99th percentile for both metrics. In the SIEM, monitor real-time 'Write' commands within a sliding time window (e.g., 60 seconds). Calculate the current frequency and average magnitude of change for each parameter. Generate an alert if either the observed frequency of 'Write' commands or the average magnitude of value change for a parameter exceeds its respective 99th percentile baseline. 3. Machine Learning (Time Series Anomaly Detection): Utilize a data science platform or SIEM's ML capabilities to apply a time-series anomaly detection model (e.g., Exponentially Weighted Moving Average (EWMA), ARIMA, or LSTM) to the sequence of 'Write' events and their associated 'value' for critical parameters from historical Zeek ICS logs. The model should learn normal temporal patterns, value fluctuations, and inter-arrival times of 'Write' commands. Deploy the model to ingest real-time 'Write' command data. Configure an alert when the model identifies significant deviations in the sequence, frequency, or magnitude of parameter changes as anomalous, indicating potential oscillatory behavior or rapid, uncharacteristic manipulation."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]