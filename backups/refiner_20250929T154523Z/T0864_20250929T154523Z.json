[
  {
    "information_requirement": "Is an adversary leveraging a transient cyber asset for initial access into the ICS environment?",
    "tactic_id": "TA0108",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T0864",
        "name": "Transient Cyber Asset",
        "evidence": [
          {
            "description": "A new, previously unobserved MAC address or IP address establishes a network connection within an ICS network segment (e.g., Level 2 Process Control Network, Level 3.5 Manufacturing Zone) and is not present in the authoritative ICS asset inventory (CMDB) or a segment-specific whitelist of authorized devices.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network ingress/egress points for ICS zones (e.g., Level 2 Process Control Network, Level 3.5 Manufacturing Zone), especially within maintenance and engineering VLANs, IT/OT DMZ gateways, and core ICS network switches. Also, Jump Servers and Bastion Hosts within the IT/OT DMZ.",
            "action": "1. Symbolic Logic: For each new unique source_mac or id.orig_h observed in Zeek conn.log within a rolling 24-hour window for any ICS network segment, perform a lookup against the authoritative ICS asset inventory (CMDB) or segment-specific whitelist. If the MAC or IP address is not found in the inventory, generate a high-priority alert with details including timestamp, source IP/MAC, destination IP/port, and the specific ICS segment. 2. Statistical Method: For each ICS network segment, calculate the daily count of unique source_mac and id.orig_h values that were not observed in the previous 7 days. Establish a 30-day historical baseline for this 'new device count' metric. Trigger a medium-priority alert if the current daily 'new device count' for any segment exceeds the 99th percentile of its historical baseline, indicating an unusual surge in new device appearances. 3. Machine Learning Application: Train an unsupervised clustering algorithm (e.g., K-Means or DBSCAN) on historical Zeek conn.log data (features: source_mac, id.orig_h, id.resp_h, id.resp_p, proto, duration, orig_bytes, resp_bytes) from each ICS segment to identify clusters of 'normal' device communication patterns. Deploy the model to continuously process new Zeek conn.log entries. Any new connection that falls outside of established 'normal' clusters or forms a new, small, isolated cluster should be flagged with an anomaly score. Generate a medium-priority alert if an anomaly score exceeds a defined threshold (e.g., 0.8), indicating a potentially unauthorized device or connection pattern."
          },
          {
            "description": "A known transient cyber asset (identified by IP/MAC from the ICS asset inventory) establishes network connections to ICS assets (e.g., PLCs, RTUs, Historians) or external networks using protocols, ports, or data volumes that statistically deviate from its established behavioral baseline (e.g., >3 standard deviations, or outside the 99th percentile of its historical activity), or connects to destinations not present in its top 95th percentile of historical activity, particularly outside of documented maintenance windows.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network ingress/egress points for ICS zones, especially at the boundaries of Level 2/3.5 networks, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historians, Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), and network gateways connecting the Process Control Network (PCN) to corporate IT or external networks. Also, the transient asset's point of connection to the ICS network.",
            "action": "1. Symbolic Logic: For each known transient asset (identified by id.orig_h or source_mac from Zeek conn.log, correlated with CMDB), create watchlists of authorized destination IPs, ports, and protocols for ICS assets. Alert immediately on any connection where the destination IP/port/protocol combination is not on the whitelist for that transient asset and destination ICS asset pair. Additionally, alert on connections from transient assets to known malicious external IPs (from threat intelligence feeds) or unapproved external domains/IPs (Zeek dns.log, http.log). 2. Statistical Method: For each known transient asset, establish a 30-day rolling baseline of its communication patterns from Zeek conn.log and dns.log, including: the top 95th percentile of destination IPs and ports, average hourly data volume (orig_bytes + resp_bytes), and the frequency of unique destination hosts. Calculate the Z-score for observed values against their baselines. Generate a medium-priority alert if: a) A connection is made to a destination IP/port outside the 99th percentile of its historical activity, b) The hourly data volume for any connection exceeds 3 standard deviations from its average, or c) The number of unique destination hosts contacted by the transient asset within an hour exceeds the 99th percentile of its historical hourly unique host count. 3. Machine Learning Application: Train a Long Short-Term Memory (LSTM) or Prophet time-series model for each known transient asset to forecast its expected hourly data volume (orig_bytes + resp_bytes) and count of unique destination IPs from Zeek conn.log. Generate a medium-priority alert when the observed hourly values deviate from the forecasted range by more than 2 standard deviations for at least 3 consecutive hours. Additionally, train a supervised classifier (e.g., Random Forest or XGBoost) using historical Zeek conn.log data, with features such as protocol, port, destination IP entropy, connection duration, and data volume, to classify connections from transient assets as 'normal' or 'anomalous'. Alert on connections classified as 'anomalous' with a confidence score above 0.75, indicating a deviation from learned benign communication patterns."
          },
          {
            "description": "An executable file or script with a known executable extension (.exe, .dll, .bat, .ps1, .vbs, .py) is transferred from a transient cyber asset (identified by IP/MAC) to an ICS host via network protocols (e.g., SMB, HTTP, FTP), and subsequently, a process creation event (Windows Event ID 4688) occurs on that ICS host within 5 minutes, where the created process's filename (Image field) matches the transferred file's name (case-insensitive).",
            "data_sources": [
              "Zeek files.log",
              "Zeek smb_files.log",
              "Zeek http.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historians, and file servers within the Process Control Network (PCN), especially endpoints configured to accept file transfers from transient devices. Also, network segments where transient assets connect and hosts within those segments.",
            "action": "1. Symbolic Logic: Ingest Zeek files.log (or smb_files.log, http.log) and Windows Event ID 4688 (Process Creation) into a SIEM. Correlate events where a file transfer from a known transient asset IP (Zeek files.log: id.orig_h) to an ICS host IP (Zeek files.log: id.resp_h) is observed, and the transferred file has an executable extension (.exe, .dll, .bat, .ps1, .vbs, .py). Within 5 minutes of the file transfer, check for a corresponding Windows Event ID 4688 on the destination ICS host where the 'New Process Name' (Image) matches the transferred filename (File.filename from Zeek logs). Generate a high-priority alert. Additionally, check the file_hash from Zeek logs against a threat intelligence blacklist for known malicious hashes. 2. Statistical Method: For all file transfers from transient assets to ICS hosts (Zeek files.log), calculate the Shannon entropy of the filename. Establish a historical baseline of filename entropy for legitimate ICS software and scripts observed in the environment over the past 60 days. Generate a medium-priority alert for any file transfer where the filename entropy exceeds the 99th percentile of this baseline, as unusually high entropy can indicate obfuscation or random naming conventions used by malware. 3. Machine Learning Application: Train a supervised classification model (e.g., Gradient Boosting Machine or Random Forest) using historical labeled data of file transfers (Zeek files.log) and subsequent process creations (Windows Event ID 4688). Features should include file_type, source_ip, destination_ip, transfer_protocol, file_size, filename_entropy, file_hash_reputation (from external services), process_command_line_entropy, and the time difference between transfer and execution. The model should classify observed file transfer-execution pairs as 'benign' or 'malicious'. Generate a high-priority alert for any pair classified as 'malicious' with a confidence score exceeding 0.8, indicating potential unauthorized code execution."
          },
          {
            "description": "Execution of known administrative or engineering tools (e.g., 'net.exe', 'ipconfig.exe', 'powershell.exe', vendor-specific ICS configuration utilities) on an ICS host, initiated by a user session associated with a transient cyber asset (identified by Windows Event ID 4624 or Zeek rdp.log), where the command-line arguments (from Windows Event ID 4688) are either entirely new, contain keywords indicative of reconnaissance or malicious activity, or exhibit a low Jaccard similarity (e.g., <0.6) to baselined legitimate commands for that specific tool and host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624",
              "Zeek rdp.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Domain Controllers, Bastion Hosts, and other Windows-based servers within the ICS environment, particularly endpoints where transient assets establish direct or indirect interactive sessions via RDP or other remote access protocols. Also, the transient asset's point of connection to the ICS network.",
            "action": "1. Symbolic Logic: Ingest Windows Event ID 4688 (Process Creation) and Windows Event ID 4624 (Successful Logon) into a SIEM. Identify sessions originating from known transient assets by correlating Event ID 4624 source IPs with transient asset inventory, or by analyzing Zeek rdp.log. For processes created within these sessions, monitor Event ID 4688 (Image and Command Line fields) for the execution of administrative tools (e.g., 'net.exe', 'powershell.exe', 'wmic.exe', 'cmd.exe'). Generate a high-priority alert if the command line contains known malicious keywords or arguments (e.g., 'mimikatz', 'Set-ItemProperty -Path HKLM:\\SYSTEM\\CurrentControlSet\\Services\\RemoteAccess', 'whoami /all', 'net group \"Domain Admins\"'). Additionally, monitor Zeek dnp3.log and modbus.log for unexpected write commands to critical control registers or functions originating from transient asset IPs, especially outside of scheduled maintenance. 2. Statistical Method: For each ICS host and administrative tool (e.g., powershell.exe, net.exe), establish a 60-day rolling baseline of legitimate command-line arguments and their execution frequency from Windows Event ID 4688. When a new command-line argument is observed from a transient asset session, calculate its Jaccard similarity coefficient against the baselined arguments for that tool. Generate a medium-priority alert if the similarity score is below 0.6, indicating a novel or significantly altered command. Additionally, monitor the hourly count of unique command-line executions originating from transient asset sessions. Trigger an alert if this count exceeds the 99th percentile of the historical hourly unique command count for that specific transient asset and host, suggesting unusual activity. 3. Machine Learning Application: Train a Natural Language Processing (NLP) model (e.g., a pre-trained BERT model fine-tuned for command-line analysis or TF-IDF with a Logistic Regression classifier) on historical Windows Event ID 4688 command-line arguments, classifying them as 'benign' or 'malicious'. Deploy the model to analyze command lines executed from transient asset sessions. Generate a high-priority alert for any command classified as 'malicious' with a confidence score exceeding 0.8. Furthermore, train a Hidden Markov Model (HMM) or a Recurrent Neural Network (RNN) on sequences of process execution events (Windows Event ID 4688) from transient asset sessions to learn common execution flows. Alert on sequences that exhibit a low probability under the trained model, indicating a deviation from normal operational procedures or a potentially malicious multi-stage execution."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]