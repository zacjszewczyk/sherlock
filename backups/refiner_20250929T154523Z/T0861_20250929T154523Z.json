[
  {
    "information_requirement": "Is an adversary attempting to map our industrial control process? (PIR)",
    "tactic_id": "TA0100",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T0861",
        "name": "Point & Tag Identification",
        "evidence": [
          {
            "description": "Detection of a source IP address, not observed communicating via ICS protocols (Modbus, EtherNet/IP, DNP3, OPC-UA) with PLCs, RTUs, or HMIs within the last 30 days, initiating such communication. Alternatively, an established ICS host exhibiting a statistically significant deviation (e.g., exceeding the 99th percentile or 3 standard deviations above its 7-day historical baseline) in the volume of ICS read requests (e.g., Modbus Function Code 0x03/0x04, EtherNet/IP Get_Attribute_All, OPC-UA Read Service) or an unusual increase in unique destination IP addresses contacted within the Process Control Network (PCN) compared to its 7-day historical baseline.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek ethernetip.log",
              "Zeek dnp3.log",
              "Zeek opcua.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments containing PLCs, RTUs, HMIs, and other control devices; Network intrusion detection systems (NIDS) or firewalls monitoring PCN boundaries; DMZ segments for OPC-UA servers; Engineering Workstations (EWS) connecting to PCN devices.",
            "action": "1. Symbolic Logic: Identify all unique id.orig_h (source IP addresses) from zeek_modbus.log, zeek_ethernetip.log, zeek_dnp3.log, and zeek_opcua.log over a 24-hour period. Compare these IPs against a historical list of all id.orig_h observed in these logs over the past 30 days. Maintain an allowlist of known and authorized ICS hosts (e.g., HMIs, engineering workstations, historians). Generate a high-priority alert when an id.orig_h is both not present on the 30-day historical list and not on the authorized allowlist, and initiates any Modbus, EtherNet/IP, DNP3, or OPC-UA communication (e.g., any entry in the respective Zeek logs where id.orig_h is new and unauthorized). Include the protocol, source IP, and destination IP in the alert.\n2. Statistical Method: For each established ICS host (id.orig_h) communicating with PLCs/RTUs, establish a 7-day rolling hourly baseline for the count of specific ICS read requests: modbus.func values 3 or 4, ethernetip.command 0x6F (Get_Attribute_All), dnp3.func 0x01 (Read), and opcua.service 'Read'. Calculate the mean and standard deviation for these hourly counts for each host and request type. Generate an alert if the current hourly count for any of these request types from a specific host exceeds its mean by 3 standard deviations or exceeds the 99th percentile of its historical hourly counts, indicating a statistically significant increase in enumeration activity. Additionally, for each ICS host, baseline the hourly count of unique id.resp_h (destination IP addresses) contacted within the PCN from zeek_conn.log and alert if it exceeds the 99th percentile of its historical unique destination counts.\n3. Machine Learning: Apply a time-series anomaly detection model (e.g., Isolation Forest or Prophet) to two key metrics: 1) the hourly volume of unique destination IP addresses (id.resp_h) contacted by each ICS host within the PCN (from zeek_conn.log), and 2) the hourly volume of total ICS protocol packets generated by each source IP (sum of records in zeek_modbus.log, zeek_ethernetip.log, zeek_dnp3.log, zeek_opcua.log). Train the model on 30 days of historical data. Alert when the model identifies an anomaly score exceeding the 95th percentile of historical anomaly scores, indicating a significant change in network enumeration behavior that deviates from learned normal patterns."
          },
          {
            "description": "Windows Event ID 4663 (File System) indicating read access (AccessMask containing 0x1 for ReadData or 0x100 for ReadAttributes) to known ICS project files (e.g., .ACD, .L5K, .CTL, .ap16) or tag export files (e.g., .XML for tag exports, .csv exports of tag databases) by an unauthorized user account, a non-allowlisted process, or from an unusual network path/share, specifically targeting tag database files or configuration exports on Engineering Workstations or file servers.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and central repositories for ICS project files; File servers storing ICS configurations and tag databases; Historian servers and their configuration directories.",
            "action": "1. Symbolic Logic: Configure Windows auditing for Event ID 4663 (File System) on critical directories containing ICS project files and tag database exports (e.g., *.ACD, *.L5K, *.CTL, *.ap16, *.XML, *.csv). Define an allowlist of authorized SubjectUserName (user accounts/groups) and ProcessName (e.g., Studio5000.exe, RSLogix5000.exe, TiaPortal.exe, FactoryTalkView.exe, csv.exe if legitimate) associated with legitimate access. Generate an alert for any Event ID 4663 where Object Name matches an ICS project file extension or known tag export filename pattern, and the SubjectUserName or ProcessName is not on the allowlist. Specifically flag access where AccessMask includes 0x1 (ReadData) or 0x100 (ReadAttributes) by generic system processes (cmd.exe, powershell.exe, explorer.exe from non-user context) or from network shares accessed by non-EWS hosts.\n2. Statistical Method: For each authorized user account and EWS, establish a rolling 7-day hourly baseline for the number of unique ICS project files accessed (based on Event ID 4663 Object Name unique values matching relevant extensions) and the total volume of read operations (count of Event ID 4663 with AccessMask 0x1 or 0x100) to these file types. Calculate the mean and 99th percentile for these hourly metrics. Alert if a user's or EWS's activity in a 1-hour window exceeds the 99th percentile for either metric, indicating an unusual volume of file enumeration or tag database access.\n3. Machine Learning: Implement a User and Entity Behavior Analytics (UEBA) model that profiles normal access patterns for ICS project files by each user and workstation. Train the model on historical Event ID 4663 data (e.g., 90 days) to identify typical access times, specific file types accessed, process interactions, and AccessMask values. Alert when the model detects a significant deviation from the established behavioral profile (e.g., an anomaly score exceeding a trained threshold like the 90th percentile of historical anomaly scores), such as a user accessing an unusual number of different ICS project file types, or accessing files at atypical hours, or using a process not historically associated with such file access, indicating potential credential abuse or an adversary enumerating files for tag identification."
          },
          {
            "description": "Detection of a source IP address not observed connecting to the historian database port (e.g., 1433/TCP for MS SQL, 5432/TCP for PostgreSQL, 3306/TCP for MySQL, 4840/TCP for OPC-UA) within the last 30 days. Alternatively, an established client exhibiting an anomalous volume of data transferred (resp_bytes in Zeek conn.log) exceeding the 99th percentile or 4 standard deviations above its 7-day historical baseline, or a sequence of 10 or more login failures (Windows Event ID 4625) from a single source IP within a 5-minute timeframe immediately followed by a successful login (Windows Event ID 4624) to the historian server.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624",
              "Windows Event ID 4625"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Data Historian server(s); Database servers; Firewall/Router logs at network segment boundaries; OPC-UA server network interfaces; Engineering Workstations (EWS) with historian client software.",
            "action": "1. Symbolic Logic: Identify all unique id.orig_h (source IPs) from zeek_conn.log where id.resp_p (destination port) matches known historian database ports (e.g., 1433/TCP, 5432/TCP, 3306/TCP, 4840/TCP for OPC-UA). Compare these IPs against a historical list of all id.orig_h observed connecting to these ports over the past 30 days. Maintain an allowlist of authorized historian client IPs. Generate an alert when an id.orig_h is both not present on the 30-day historical list and not on the authorized allowlist, and attempts to connect to any historian database port. Additionally, monitor Windows Event ID 4625 (Account Logon Failed) on historian servers: search for 10 or more failures from a single IpAddress (source IP) for a TargetUserName within a 5-minute rolling window, immediately followed by a Windows Event ID 4624 (Account Logon Successful) from the same IpAddress and TargetUserName.\n2. Statistical Method: For all successful connections to the historian's database port (from zeek_conn.log), establish a 7-day rolling hourly baseline for the resp_bytes (response bytes) field, grouped by id.orig_h (source IP), id.resp_h (historian IP), and id.resp_p (port). Calculate the mean and standard deviation of resp_bytes for each unique (source, destination, port) triplet. Generate an alert when a single connection's resp_bytes value exceeds its mean by 4 standard deviations, or when the hourly sum of resp_bytes for a given source IP to a specific historian port exceeds the 99th percentile of its historical hourly sums, indicating an unusually large data retrieval possibly for tag database exfiltration.\n3. Machine Learning: Develop a User and Host Behavior Analytics (UHBA) model that profiles the typical data retrieval patterns from the historian. Train the model on historical zeek_conn.log data (e.g., 90 days), focusing on id.orig_h, id.resp_h, id.resp_p, orig_bytes, and resp_bytes. The model should learn typical data transfer volumes, frequencies, and connection durations for each client. Alert when the model identifies a significant deviation in data transfer volume or frequency for a specific client (e.g., an anomaly score exceeding a trained threshold like the 90th percentile of historical anomaly scores), such as a client pulling a volume of data significantly larger than its learned baseline, or accessing the historian at atypical frequencies or times, or connections with unusually long durations, indicating potential bulk data exfiltration or tag database dump attempts."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]