[
  {
    "information_requirement": "Is an adversary executing commands on critical ICS assets via a command-line interface?",
    "tactic_id": "TA0104",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T0807",
        "name": "Command-Line Interface",
        "evidence": [
          {
            "description": "Detection of a known ICS shell process (e.g., cmd.exe, powershell.exe, or vendor-specific CLI tools like FactoryTalk View SE Client.exe, Siemens Automation License Manager.exe) on an ICS asset spawning a child process that is not part of its established operational baseline. Specifically, the child process (e.g., net.exe, ipconfig.exe, whoami.exe, certutil.exe, mshta.exe, wscript.exe, or any scripting interpreter like python.exe, perl.exe, cscript.exe) has not been observed in the last 90 days or represents less than 0.01% of all child processes spawned by that specific parent on that host over the last 30 days.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Historian Servers, Process Control Servers (PCS), Data Gateways, Application Servers within the Process Control Network (PCN) and Manufacturing Zone (MZ)",
            "action": "1. Pre-requisite: Ensure Windows Event ID 4688 (Process Creation) with command-line auditing is fully enabled on all critical ICS assets. \n2. Symbolic Logic (Whitelist-based): Develop and maintain a whitelist of approved parent-child process relationships for each critical ICS host. Create a SIEM rule to alert on any deviation where a recognized ICS management shell (e.g., cmd.exe, powershell.exe, or vendor-specific CLI) spawns an unapproved child process that is not explicitly on the whitelist.\n3. Statistical (Baseline Deviation): Establish a 90-day rolling baseline of all parent-child process relationships on each ICS asset. For each unique parent process, calculate the weekly execution frequency of its child processes. Flag and alert on child processes that have not been observed in the last 90 days, or whose weekly execution count falls below the 0.01th percentile of observed frequencies for that parent on that specific host.\n4. Machine Learning (Behavioral Anomaly Detection): For each critical ICS host, establish a daily time series of the count of unique child processes spawned by each known ICS shell process. Apply a time series anomaly detection algorithm to identify statistically significant deviations (e.g., a sudden spike in the number of unique child processes, or a count exceeding 3 standard deviations from the 30-day moving average) from the expected daily pattern, indicating unusual process execution behavior."
          },
          {
            "description": "A successful remote interactive login (Windows Event ID 4624, Logon Type 10) to a critical ICS asset from an external network segment (e.g., via RDP, SSH, or Telnet, indicated by Zeek conn.log or rdp.log) is observed. Within 60 seconds of this login, command-line activity (Windows Event ID 4688) associated with the same logon session is initiated, where the command or its arguments have not been executed by that specific user account from that source IP address in the last 60 days, or the login/command execution occurs outside of defined operational hours (e.g., 07:00-17:00 M-F) and established maintenance windows.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek rdp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS DMZ/Perimeter, Remote Access Gateways, Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Jump Servers, Terminal Servers within the ICS network.",
            "action": "1. Pre-requisite: Collect and centralize Windows Event ID 4624 (Logon Type 10 for RDP/Remote Interactive), Windows Event ID 4688 (Process Creation with command lines), and Zeek conn.log (filtered for RDP/SSH/Telnet ports 3389, 22, 23) and rdp.log from ICS DMZ/Remote Access Gateways and critical ICS assets. \n2. Symbolic Logic (Correlation & IOC Matching): Create SIEM correlation rules to link successful remote interactive logons from external IP ranges (non-RFC1918 or outside defined trusted subnets) with process creation events occurring within 60 seconds of the logon for the same Logon_ID. Alert if the executed command contains known adversarial tools or common recon commands (e.g., whoami, net user, systeminfo, ipconfig, tasklist) that are not part of a pre-approved script or maintenance procedure.\n3. Statistical (Behavioral Baseline & Anomaly Scoring): For each unique user account, establish a 90-day baseline of typical remote login times, source IP subnets, and the set of commands executed during remote sessions. Calculate a Jaccard similarity score between the current session's command set and the user's historical command sets. Trigger an alert if the score is below a predefined threshold (e.g., 0.2), or if the login originates from an IP address/subnet not seen in the last 90 days for that user, or if it occurs outside of defined operational windows (e.g., 07:00-17:00 M-F) or established maintenance windows.\n4. Machine Learning (Remote Session Behavioral Anomaly): For each unique user account, create a behavioral profile based on aggregated features of their remote interactive sessions over the last 90 days (e.g., typical number of distinct commands executed, average command length, entropy of command arguments, and the top N most frequent command verbs). Apply an unsupervised anomaly detection algorithm (e.g., Isolation Forest or One-Class SVM) to these aggregated session features. Flag new remote sessions that are identified as outliers (e.g., a high anomaly score), indicating behavior significantly different from the user's established profile."
          },
          {
            "description": "Execution of a command-line process (Windows Event ID 4688) on an ICS asset where the command arguments contain known suspicious keywords or patterns (e.g., powershell -enc, Invoke-Expression, whoami, net group, ipconfig /all, systeminfo, nslookup, findstr, echo, type, copy, move, xcopy targeting unusual paths like C:\\Users\\Public\\, C:\\Windows\\Temp\\, or C:\\ProgramData\\). The command line may also exhibit high character entropy (e.g., >4.5 bits per character for strings longer than 20 characters), indicative of obfuscation or encoding.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows-based ICS assets, including HMIs, EWS, Historian Servers, Process Control Servers (PCS), and Data Gateways within the Process Control Network (PCN) and higher zones.",
            "action": "1. Pre-requisite: Ensure full command-line auditing is enabled for Windows Event ID 4688 on all ICS assets to capture detailed process creation information, including full command lines. \n2. Symbolic Logic (Keyword & Pattern Matching): Implement SIEM detection rules to identify command lines containing known suspicious keywords, flags, or patterns such as powershell -enc, Invoke-Expression, IEX, certutil -urlcache -f, mshta.exe http, wscript.exe //B, taskkill /IM, bitsadmin /transfer, or file redirection to common temporary directories (e.g., C:\\Windows\\Temp\\, C:\\ProgramData\\) combined with common data staging commands (type, echo, copy).\n3. Statistical (Entropy & Outlier Detection): For all command-line arguments (from Windows Event ID 4688), calculate the Shannon entropy. Alert on command lines with an entropy score exceeding 4.5 bits per character for strings longer than 20 characters, especially if they also contain uncommon characters or sequences (e.g., ^, |, &, !, $ used in unusual contexts). Additionally, identify command lines that are statistical outliers in length (e.g., exceeding the 99th percentile of length compared to the historical average for that specific process).\n4. Machine Learning (Text Classification): Train a supervised machine learning model (e.g., Logistic Regression or SVM) on a curated dataset of known malicious and benign command lines relevant to ICS environments. Use features like n-grams of command segments, special character counts, and entropy scores. Continuously classify incoming command lines from ICS assets and alert on those predicted as malicious with a high confidence score (e.g., >0.8)."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-25",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]