[
  {
    "information_requirement": "Is an adversary using valid accounts to move laterally between ICS assets? (PIR)",
    "tactic_id": "TA0109",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T0859",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A successful interactive or network authentication event (Windows Event ID 4624) on a critical ICS asset (e.g., HMI, PLC controller, Historian) where the source IP address (from Zeek conn.log id.orig_h) and the authenticated account (TargetAccountName) do not match any pre-approved (Source_IP, Destination_IP, TargetAccountName) whitelist entry for that specific ICS asset.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), Historian Servers, Active Directory/Authentication servers, Network switches/routers in critical OT segments, IT/OT DMZ gateways, Jump Servers.",
            "action": "1. Symbolic Logic: Define an explicit allow-list of known, authorized (source_ip, destination_ip, account_name) tuples for successful Windows logins (Event ID 4624). For each successful login, join with Zeek conn.log on DestinationIP=id.resp_h and filter for id.orig_h matching Source_IP. Alert if the observed (id.orig_h, DestinationIP, TargetAccount) combination does not exist in the predefined allow-list. 2. Statistical Method: For each (Destination_IP, TargetAccount) pair from Windows Event ID 4624, calculate the historical frequency of unique Source_IP addresses (from Zeek conn.log id.orig_h) over the past 90 days. Identify login events where the Source_IP is new for that specific pair, or where its historical frequency for that pair is below the 1st percentile of observed source IPs for that pair. Generate an alert for such statistically rare or novel login attempts. 3. Machine Learning: Develop a supervised classification model (e.g., Logistic Regression or Random Forest) using features derived from successful login events (Windows Event ID 4624 and Zeek conn.log). Features include Source_IP (subnet, entropy of past usage), Destination_IP, TargetAccount, Time_of_Day (encoded), Day_of_Week (encoded), and historical login frequency for the Source_IP-Destination_IP-Account triplet. Train the model on labeled historical data (normal vs. anomalous logins, potentially using change management records). Score new login events for anomaly likelihood, prioritizing those exceeding a 0.8 anomaly score for immediate investigation."
          },
          {
            "description": "Observed network connections (Zeek conn.log) to critical ICS assets (e.g., HMIs, EWS, Historian Servers) using administrative protocols (e.g., RDP, SSH, SMB, WinRM) where the initiating host (id.orig_h), target host (id.resp_h), or the authenticated user account (correlated from Windows Event ID 4624 using id.orig_h) deviates from established administrative access policies or baseline communication patterns. Specifically, look for connections where the (Source_IP, Destination_IP, User_Account, Protocol) tuple is not on an authorized whitelist or exhibits statistical rarity.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network switches and routers in critical OT segments, Firewalls at network boundaries (e.g., IT/OT DMZ), Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), Jump Servers, Remote Access Gateways, Historian Servers, Process Control Networks (PCN) assets.",
            "action": "1. Symbolic Logic: Filter Zeek conn.log for entries where service is 'rdp', 'winrm', 'ssh', or 'smb' (or id.resp_p is 3389, 5985, 5986, 22, 445, 139) and both id.orig_h and id.resp_h are identified critical ICS assets. Correlate these connections with Windows Event ID 4624 on the destination host to identify the authenticated user account. Compare the resulting (Source_IP, Destination_IP, User_Account, Protocol) tuple against a predefined 'ICS Administrative Access Control Matrix' or whitelist. Generate a critical alert for any connection violating this matrix. 2. Statistical Method: For each (Source_IP, Destination_IP, User_Account, Protocol) tuple involving administrative protocols, calculate the historical 7-day rolling average and standard deviation of connection counts (from Zeek conn.log) over the past 90 days. Generate a high-priority alert if the current connection count for a tuple exceeds 4 standard deviations above its rolling average or is above the 99.5th percentile of its historical distribution, indicating statistically anomalous administrative activity. 3. Machine Learning: Employ a time-series anomaly detection model (e.g., Isolation Forest or Prophet with anomaly detection) on the hourly volume of administrative protocol connections (RDP, WinRM, SSH, SMB) between critical ICS hosts, segmented by (Source_IP, Destination_IP) and (User_Account, Destination_IP). Train the model on 90 days of historical data. Flag and alert on significant deviations (e.g., 99% prediction interval violation or anomaly score > 0.7) from the predicted normal patterns, indicating unusual administrative activity."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Has an adversary created or compromised a valid account for persistent access to the ICS environment? (PIR)",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0859",
        "name": "Valid Accounts",
        "evidence": [
          {
            "description": "A successful creation of a new local or domain user account (Windows Event ID 4720) on a critical ICS asset (e.g., Engineering Workstation, HMI, Historian Server, Active Directory Domain Controller within OT) where the account name (TargetAccountName), creation time, or creating process (ProcessName) deviates significantly from established baselines or lacks explicit authorization in a change management system.",
            "data_sources": [
              "Windows Event ID 4720"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Active Directory/LDAP servers, Local security logs on EWS/HMIs/Historian Servers, Configuration management systems for PLCs/RTUs (if applicable), Patch Management/Change Management systems, Jump Servers.",
            "action": "1. Symbolic Logic: Immediately alert on any Windows Event ID 4720 (A user account was created) on critical ICS assets. Filter for account creations occurring outside of predefined maintenance windows (e.g., 08:00-17:00 M-F). Enrich the alert with context from a configuration management database or change management system to verify if the account creation was authorized. Additionally, compare the TargetAccountName against a blacklist of unauthorized or default accounts (e.g., 'admin', 'guest', 'test') and check for fuzzy matches (e.g., Levenshtein distance < 2) to existing legitimate accounts. 2. Statistical Method: Establish baselines for the normal frequency of user account creations (Windows Event ID 4720) per day/week, and for characteristics of created accounts (e.g., account name length, entropy of name, presence of special characters, creating process name) on critical ICS assets over the last 180 days. Generate an alert if the number of new accounts created within 24 hours exceeds the 99.5th percentile of historical frequency, or if characteristics of the new account (e.g., creating process is atypical, account name entropy is significantly higher/lower than average) fall outside 3 standard deviations from the mean for similar account creations. 3. Machine Learning: Train a supervised classification model (e.g., XGBoost or SVM) on historical Windows Event ID 4720 data. Use features such as TargetAccountName (entropy, length, similarity to existing accounts, presence of common keywords), CreatorProcessName, CreationTime (hour of day, day of week, time since last creation), and the destination host. Label known legitimate account creations (e.g., via change management integration) as 'normal'. Use the model to predict the likelihood of new account creations being anomalous, alerting on events with an anomaly score above a dynamic threshold (e.g., top 0.5% of scores or precision-recall optimized threshold)."
          },
          {
            "description": "A successful interactive or network authentication event (Windows Event ID 4624) by a privileged OT user account (e.g., engineers, administrators, service accounts) to a critical ICS asset where the source IP address (from Zeek conn.log id.orig_h) is not explicitly permitted by an authorized access control list for that account and asset, or originates from an atypical geographic location or network segment (e.g., outside designated jump server/VPN subnets).",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "VPN concentrators, Jump servers, Firewalls (IT/OT boundary), Active Directory/Authentication servers, Network switches/routers in critical OT segments, Endpoint devices (EWS, HMIs, Historian Servers), Remote Access Gateways.",
            "action": "1. Symbolic Logic: Correlate successful login events (Windows Event ID 4624) on critical ICS assets with the source IP (id.orig_h) from Zeek conn.log, focusing on privileged OT accounts. Maintain a strict allow-list of authorized source IP ranges (e.g., VPN subnets, jump server IP pools, designated OT management subnets) for these accounts accessing ICS assets. Generate a critical alert for any successful login by an OT-privileged account where the source IP address is not on this allow-list, indicating unauthorized external or internal access. Additionally, enrich with geo-location data and alert if the login originates from a country never before observed for that user or asset. 2. Statistical Method: For each OT-privileged user account, establish a baseline of typical login source IP subnets, login times (hour of day, day of week), and destination assets over the last 90 days using Windows Event ID 4624 and Zeek conn.log. Calculate a multi-factor deviation score for each new login event, considering factors like: Source_IP not observed before for the user (high score), login outside typical hours (medium score), login to an unusual destination asset (medium score), or login from a rare geographic location (medium score). Alert when the cumulative deviation score for a login event exceeds the 99.8th percentile of historical deviation scores for that user, indicating a statistically anomalous access attempt. 3. Machine Learning: Deploy an unsupervised anomaly detection model (e.g., One-Class SVM or Isolation Forest) on a feature set derived from successful login events (Windows Event ID 4624 correlated with Zeek conn.log). Features should include: Source_IP (subnet, entropy of previous usage, geohash), User_Account, Destination_IP, Protocol, Time_of_Day (encoded), Day_of_Week (encoded), and historical frequency of the Source_IP-Destination_IP-User_Account tuple. Train the model on 180 days of historical data to establish normal behavior for privileged accounts. Flag login events with an anomaly score exceeding the 99.9th percentile as high-priority, indicating potentially compromised credentials or unauthorized access."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]