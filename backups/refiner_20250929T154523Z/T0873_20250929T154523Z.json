[
  {
    "information_requirement": "Is an adversary attempting to achieve persistence by modifying ICS project files?",
    "tactic_id": "TA0110",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T0873",
        "name": "Project File Infection",
        "evidence": [
          {
            "description": "Anomalous file write, create, or delete operations on ICS project files (e.g., .ACD, .S7P, .L5K, .RSS, .ap16, .pro) on designated engineering workstations or file shares. The anomaly is defined by the action originating from an unauthorized user/host, occurring outside a documented change window, or exhibiting statistically unusual characteristics compared to a historical baseline.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656",
              "Sysmon Event ID 11",
              "Zeek smb_files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Project File Shares (e.g., dedicated SMB shares for engineering files) and Engineering Workstations within the Corporate IT, DMZ, or Process Control Network (PCN).",
            "action": "1. Symbolic Logic: For Windows Event ID 4663/4656 or Sysmon Event ID 11, filter for ObjectType/TargetFilename ending with known ICS project extensions (.ACD, .S7P, .L5K, .RSS, .ap16, .pro). Trigger an alert if the SubjectUserName/User is not in the 'Authorized_ICS_Engineers' group, the SourceAddress/SourceIp is not within the 'ICS_Engineering_Subnets' list, or the modification occurs outside a pre-defined maintenance window. Correlate with change management system data if available to suppress alerts for authorized changes. 2. Statistical Method: For each unique SubjectUserName, establish a 30-day rolling baseline of hourly file modification counts (using Windows Event ID 4663/Sysmon Event ID 11) on ICS project files. Calculate the 99th percentile for these counts. Generate an alert if a user's modification count in an hour exceeds this threshold. Additionally, calculate the Shannon entropy of file paths modified by each user; a sudden spike in entropy can indicate anomalous activity like creating files in unusual locations. 3. Machine Learning Application: Utilize an anomaly detection model (e.g., Isolation Forest) trained on features from file modification events. Features should include: user, source host, file extension, time of day (cyclical encoding), day of week, and access mask. Train the model on historical data from authorized engineering activities to learn normal patterns. The model will score new events, flagging those with high anomaly scores, which represent significant deviations from established legitimate behavior."
          },
          {
            "description": "A network connection to a PLC IP address on a known engineering port (e.g., TCP/44818 for EtherNet/IP, TCP/102 for S7COMM) originates from a host not on an explicit allowlist of authorized engineering workstations. This includes anomalous connections from authorized hosts that occur outside of normal operational parameters.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments within the ICS DMZ (Level 3.5) and Process Control Network (Levels 2/1), and the Engineering Workstations that access them.",
            "action": "1. Symbolic Logic: From Zeek conn.log, filter for connections where id.resp_p is 44818 (EtherNet/IP) or 102 (S7COMM) and id.resp_h is a known PLC IP. Alert if id.orig_h is not in the 'Authorized_EWS' asset list. Correlate with Windows Event ID 4688 (with command line logging) on id.orig_h to check if the initiating process (NewProcessName) is a known engineering application and its ParentProcessName is legitimate (e.g., explorer.exe, not powershell.exe). 2. Statistical Method: Create a baseline of normal (source host, destination PLC) communication pairs over a 30-day period from Zeek conn.log. Generate an alert for any new connection pair that has not been observed in the baseline. Further, for each established pair, baseline the distribution of connection durations and total bytes transferred. Alert if a new connection's duration or byte count exceeds the 99th percentile for that specific pair, indicating a potential project download instead of a routine status check. 3. Machine Learning Application: Employ an unsupervised clustering algorithm like DBSCAN on connection data from Zeek conn.log. Use features such as duration, orig_bytes, resp_bytes, source/destination port, and time-of-day. Normal, frequent connections for polling or heartbeats will form dense clusters. The algorithm will identify outlier connections that do not belong to any cluster, such as long-duration, high-bandwidth sessions indicative of an unauthorized project file transfer."
          },
          {
            "description": "A PLC mode change command (e.g., RUN to PROGRAM/REMOTE) is observed in protocol-specific logs (e.g., s7comm.log, enip.log), immediately followed by a statistically significant increase in data transfer volume to the same PLC on an engineering port. This sequence strongly indicates a project file download operation.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek s7comm.log",
              "Zeek enip.log",
              "Zeek dnp3.log",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (Level 2/1) segments where PLCs and other field controllers reside.",
            "action": "1. Symbolic Logic: Monitor Zeek protocol logs (s7comm.log, enip.log) for explicit mode change commands or function codes indicating a program download (e.g., S7COMM 'Download block'). If detected, search Zeek conn.log within the next 5 minutes for a connection to the same PLC IP on its programming port where the total bytes (orig_bytes + resp_bytes) exceeds a defined threshold (e.g., 500KB). Alert if the source host is unauthorized or the activity is outside a maintenance window. 2. Statistical Method: For each PLC, establish a 30-day baseline of the ratio of bytes sent vs. received (orig_bytes / resp_bytes) per connection on programming ports. A project download should have a very high ratio. Alert when a connection's byte ratio exceeds the 99th percentile for that PLC. Additionally, monitor the rate of specific protocol function codes (e.g., 'write tag', 'mode change'); an abnormal burst in these events correlated with high data volume is a strong indicator of a project download. 3. Machine Learning Application: Develop a multivariate time-series anomaly detection model (e.g., VAR or LSTM-based autoencoder) for each critical PLC. The model should be trained on 5-minute intervals of aggregated data, using features such as total byte volume, connection count, and the frequency of specific commands (mode changes, block downloads) from protocol-specific Zeek logs. The model learns the complex relationships between these metrics during normal operations and will flag intervals where the combination of activities is anomalous, indicating a likely unauthorized project modification."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]