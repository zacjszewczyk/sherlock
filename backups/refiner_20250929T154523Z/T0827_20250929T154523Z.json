[
  {
    "information_requirement": "Has an adversary caused a sustained loss of control over a critical industrial process? (PIR)",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0827",
        "name": "Loss of Control",
        "evidence": [
          {
            "description": "A sustained increase in the rate of failed operator commands from specific HMI workstations to critical PLCs/RTUs, exceeding a dynamic statistical threshold (e.g., 3 standard deviations from baseline), evidenced by: (1) Windows Event ID 1000 application error logs on HMIs containing specific communication failure strings (e.g., 'Modbus communication error', 'PLC connection lost'), AND (2) a concurrent absence of corresponding successful ICS protocol 'Write' operations (e.g., Modbus Function Code 0x05, 0x06, 0x0F, 0x10) from the HMI's IP address in Zeek modbus.log, OR (3) an increase in ICS protocol error responses (e.g., Modbus Exception Responses) in Zeek modbus.log that exceeds the 99th percentile of historical values.",
            "data_sources": [
              "Windows Event ID 1000",
              "Zeek modbus.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Operator Workstations / HMIs, Process Control Network (PCN) Segments, Engineering Workstations",
            "action": "1. Symbolic Logic: Query Windows Event ID 1000 logs on HMI workstations for application errors containing keywords such as 'Modbus communication error' or 'PLC connection lost'. Correlate these events with an absence of successful Modbus 'Write' operations (Function Codes 0x05, 0x06, 0x0F, 0x10) from the HMI's source IP in Zeek modbus.log within a 5-minute window. Alert on concurrent findings. 2. Statistical Method: For each HMI, calculate a rolling 7-day baseline for the average rate and standard deviation of 'failed operator commands' (defined as the sum of Windows Event ID 1000 errors with communication failure strings and instances of absent Modbus 'Write' commands from the HMI IP). Alert if the current 5-minute average failure rate for any HMI exceeds 3 standard deviations from its established baseline. Additionally, from Zeek modbus.log, calculate the ratio of Modbus exception responses to successful responses; alert if this ratio for any HMI-PLC pair increases above the 99th percentile of its historical 30-day values. 3. Machine Learning Application: Deploy a time-series anomaly detection model (e.g., LSTM Autoencoder or Isolation Forest) trained on historical data from Windows Event ID 1000 (communication errors) and Zeek modbus.log (exception responses and absent writes) for each HMI. The model should learn normal patterns of command failures and exception rates. Alert when the model identifies significant deviations from expected patterns, indicating a high probability of anomalous loss of control (e.g., anomaly score > 0.8)."
          },
          {
            "description": "Critical process variables (e.g., reactor temperature, boiler pressure, flow rate to a safety valve) exhibit sustained deviations (e.g., continuously exceeding the 99th percentile of their 30-day historical operating range) for a period longer than 5 minutes, without corresponding authorized 'Write' commands to adjust setpoints or process values being logged in ICS protocol traffic (Zeek modbus.log, dnp3.log) originating from pre-defined, whitelisted HMI or engineering workstation IP addresses.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Process Historian Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) Segments, Programmable Logic Controllers (PLCs), Process Historian Server",
            "action": "1. Symbolic Logic: Query Zeek modbus.log and dnp3.log for 'Write' commands (e.g., Modbus Function Codes 0x05, 0x06, 0x0F, 0x10, DNP3 Function Codes 0x03, 0x04) targeting known critical process setpoint registers. Filter these commands to identify any originating from source IP addresses not present on an established whitelist of authorized HMI or engineering workstation IPs. Generate an alert for any such unauthorized 'Write' command. 2. Statistical Method: From Process Historian Data, establish a 30-day rolling 99th percentile operating range for each critical process variable (PV). Alert if any PV continuously exceeds its 99th percentile range for more than 5 minutes AND there is no corresponding authorized 'Write' command from a whitelisted source IP in Zeek modbus.log or dnp3.log within that 5-minute window. Additionally, calculate the Shannon entropy of destination registers for 'Write' commands in Zeek modbus.log and dnp3.log over 1-hour intervals; alert if the entropy score drops below the 5th percentile of historical values, indicating a sudden focus on a limited set of registers. 3. Machine Learning Application: Implement a multi-variate anomaly detection model (e.g., Isolation Forest or One-Class SVM) that processes critical process variable data from the Process Historian and correlated 'Write' command logs from Zeek modbus.log and dnp3.log. Train the model on known normal operating conditions. Continuously feed real-time data to the model and alert on deviations where PVs exhibit anomalous behavior not attributable to legitimate control actions (e.g., model anomaly score > 0.7). Additionally, deploy a predictive time-series model (e.g., Prophet or ARIMA) on key PVs to forecast expected values, alerting when actual PVs consistently fall outside the 95% prediction interval for a sustained period (e.g., 5 consecutive minutes) without corresponding authorized 'Write' commands."
          },
          {
            "description": "An alarm event indicating an unscheduled or unauthorized activation of the Safety Instrumented System (SIS) is observed (e.g., specific alarm codes in SIS HMI logs, or network messages indicating an unexpected trip status), resulting in an emergency shutdown or transition to a safe state. This activation occurs without any preceding authorized manual operator action (e.g., no corresponding login or command from whitelisted SIS workstations) or a legitimate process condition (e.g., no critical process variable exceeding safety limits as per historian data) that would necessitate such an activation.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "SIS System Logs",
              "Process Historian Data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Safety Instrumented System (SIS) Workstations, SIS Controllers, Demilitarized Zone (DMZ) between the Process Control Network and Safety Network",
            "action": "1. Symbolic Logic: Monitor SIS System Logs for alarm events indicating an unscheduled SIS activation or trip status. Correlate such events with: (a) any successful logins (Windows Event ID 4624) to SIS engineering workstations originating from IP addresses not on an approved whitelist within the preceding 30 minutes, OR (b) any new or unusual TCP connections (identified via Zeek conn.log, e.g., connections to SIS controller ports from unapproved sources or previously unseen destination ports) to SIS network segments within the preceding 5 minutes. Alert on any correlation. 2. Statistical Method: From Windows Event ID 4624 logs, establish a 90-day baseline for typical login times and source IP addresses for each SIS workstation. Calculate the statistical rarity (e.g., using a z-score or percentile rank) of any login event occurring within 30 minutes prior to an SIS activation alarm. From Zeek conn.log, calculate the frequency distribution of source/destination IP pairs and ports communicating with SIS network segments over a 30-day baseline; alert on any connection with a frequency below the 1st percentile of historical traffic that occurs within 5 minutes of an SIS activation. Additionally, compare process variable data from Process Historian against safety limits; if an SIS trip occurs without any PV exceeding safety limits, calculate its statistical rarity against historical events. 3. Machine Learning Application: Develop a supervised classification model (e.g., Gradient Boosting Classifier or Random Forest) to classify SIS activations as legitimate or anomalous. Train the model using labeled historical data including features derived from SIS System Logs (alarm codes), Windows Event ID 4624 (login anomalies), Zeek conn.log (network communication patterns to SIS segments), and Process Historian Data (PVs exceeding safety limits). Deploy the model to provide real-time classification of SIS activations. Additionally, apply unsupervised anomaly detection (e.g., DBSCAN or Isolation Forest) on Zeek conn.log data for traffic destined for SIS segments, specifically looking for unusual communication bursts, protocol usage, or source/destination IP combinations that deviate from established clusters or baselines in the 5 minutes preceding an SIS activation, suggesting potential interference."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]