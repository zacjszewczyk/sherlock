[
  {
    "information_requirement": "Is an adversary attempting to evade detection by masquerading malicious files as legitimate ICS software or processes? (PIR)",
    "tactic_id": "TA0103",
    "tactic_name": "Evasion",
    "indicators": [
      {
        "technique_id": "T0849",
        "name": "Masquerading",
        "evidence": [
          {
            "description": "A process, identified by its New Process Name (e.g., 'RSLinx.exe', 'FTView.exe'), is initiated from a New Process Command Line that contains a file path not present in the established whitelisted baseline of legitimate installation directories for that specific process name, and/or originates from known suspicious directories such as C:\\Users\\*, C:\\Temp\\, C:\\Windows\\Temp\\, or network shares.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS), Human-Machine Interfaces (HMIs), ICS Application Servers, Data Historians, Jump Servers within the ICS network.",
            "action": "1. Symbolic Logic: Establish a comprehensive whitelist of expected New Process Command Line paths for all known ICS vendor applications and critical system utilities on target assets. Monitor Windows Event ID 4688 for New Process Name and New Process Command Line. If a New Process Name matches a whitelisted application but its New Process Command Line path is not in the whitelist, OR if the path contains known suspicious substrings (e.g., 'C:\\Users\\', 'C:\\Temp\\', 'C:\\Windows\\Temp\\', '\\\\Share\\'), THEN generate a high-priority alert. 2. Statistical Method: For each unique New Process Name observed in Windows Event ID 4688, calculate the frequency and historical count of its associated New Process Command Line paths over the last 90 days. Identify paths that appear with a frequency below the 5th percentile or have a count of less than 3 occurrences, indicating rarity. Correlate these rare paths with processes that match common ICS application names. Trigger an alert if a known ICS application runs from a statistically rare or previously unseen path. 3. Machine Learning: Develop and train a machine learning model (e.g., a one-class SVM or Isolation Forest) on historical New Process Command Line paths for all observed New Process Name entries from Windows Event ID 4688 on critical ICS assets to learn the 'normal' distribution of execution paths. Apply the trained model to incoming New Process Command Line data. Flag any execution path classified as an outlier or anomaly, particularly if it's associated with an ICS-relevant New Process Name, and trigger an alert."
          },
          {
            "description": "A file is created or modified (indicated by Access Mask in Windows Event ID 4663 including 0x2 for FILE_WRITE_DATA or 0x4 for FILE_APPEND_DATA) in an ICS critical directory, where its Object Name (filename) contains multiple consecutive file extensions (e.g., 'Project_Update.zip.exe', 'firmware.bin.vbs') or an extension not typically found in ICS environments (e.g., '.scr', '.lnk', '.hta', '.js', '.ps1').",
            "data_sources": [
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) local drives, Shared Network Drives (e.g., for project files, backups), ICS Application Servers, Data Historians.",
            "action": "1. Symbolic Logic: Configure Windows auditing to log Event ID 4663 for WriteData and AppendData on critical ICS directories (e.g., C:\\Program Files\\Rockwell Software\\, C:\\Siemens\\TIA Portal\\, network shares for project files). Monitor these events and extract the Object Name. Implement regular expressions (e.g., `\\.[a-zA-Z0-9]{2,5}\\.[a-zA-Z0-9]{2,5}$`) or string matching rules to identify filenames containing multiple consecutive extensions or known malicious/uncommon extensions for ICS environments (e.g., .scr, .vbs, .hta, .js, .ps1 if not explicitly whitelisted). Generate an alert for any matches. 2. Statistical Method: For all Object Name values observed in Windows Event ID 4663 events within critical ICS directories, calculate the Shannon entropy of the filename string (excluding the path and single file extension). Track the frequency of unique file extensions. Establish a baseline for typical entropy ranges and extension distributions for each directory. Alert on Object Name entries where the entropy score exceeds the 95th percentile for that directory or where a rare file extension (e.g., less than 1% historical occurrence) is observed in conjunction with an unusual filename length (e.g., greater than 2 standard deviations from the mean). 3. Machine Learning: Train a text classification model (e.g., using TF-IDF features of filenames and their extensions) on a dataset of known legitimate and malicious ICS-relevant filenames from Windows Event ID 4663 logs. The model should learn to classify new filenames as 'legitimate' or 'suspicious'. Apply this model to newly observed Object Name entries in critical ICS directories. Trigger an alert for any filenames classified as 'suspicious' or 'malicious'."
          },
          {
            "description": "A process with a Process Name commonly associated with legitimate system services (e.g., 'svchost.exe', 'lsass.exe', 'explorer.exe') on an ICS asset establishes an outbound network connection (observed in Windows Event ID 5156, Process Name and Remote Address fields; and Zeek conn.log, id.orig_h and id.resp_h) to a destination IP (id.resp_h) or destination port (id.resp_p) that is not part of the established communication baseline for that specific process, or connects to a destination IP/domain (query in Zeek dns.log) known to be malicious, or to a Remote Address outside the expected operational geographic region.",
            "data_sources": [
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ICS Network Segments (Control/Process LAN, DMZ), Corporate-to-ICS DMZ, Internet Gateway (for outbound connections from ICS assets), Firewalls logging connection attempts.",
            "action": "1. Symbolic Logic: Continuously ingest Windows Event ID 5156 from critical ICS assets and Zeek conn.log and dns.log from relevant network segments. Create a whitelist of legitimate destination IP addresses/domains and port combinations for common system processes (e.g., 'svchost.exe' connecting to domain controller for DNS, or specific update servers). Correlate Process Name from Event ID 5156 with id.orig_h and id.resp_h from Zeek conn.log. If a process commonly associated with system services initiates a connection to a destination IP (id.resp_h) or DNS query (query in dns.log) that is present on a known threat intelligence blacklist (e.g., C2 servers, known malicious domains), OR attempts to connect to a restricted geographical region based on IP geolocation, THEN immediately generate a critical alert. 2. Statistical Method: For each unique Process Name observed making outbound connections via Windows Event ID 5156, and correlated Zeek conn.log entries, baseline the normal patterns of destination IP (id.resp_h), destination port (id.resp_p), total bytes transferred (sum of orig_bytes and resp_bytes), and connection duration over a 30-day period. Calculate the 95th percentile for these metrics for each process. Trigger an alert if a common system process (e.g., 'svchost.exe') initiates a connection where any of these metrics (e.g., id.resp_p, total_bytes, duration) exceed their established 95th percentile, or if the destination IP is a new IP address not observed in the last 90 days for that specific process, indicating a statistically anomalous connection. 3. Machine Learning: Develop a multivariate anomaly detection model (e.g., using Isolation Forest or Autoencoders) that takes features from Windows Event ID 5156 (e.g., Process Name, Remote Address, Remote Port) and correlated Zeek conn.log entries (e.g., id.resp_h, id.resp_p, orig_bytes, resp_bytes, duration, proto) for connections originating from ICS assets. Train the model on historical benign network traffic patterns. Apply the model to real-time data streams. Any connection flagged as anomalous by the model, especially if initiated by a system-level process, should trigger an investigation and an alert."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]