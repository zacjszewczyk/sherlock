[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using file masquerading techniques?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1036.007",
        "name": "Double File Extension",
        "evidence": [
          {
            "description": "Detection of files matching known malicious hashes or highly specific, high-confidence double extension filenames (e.g., 'invoice.pdf.exe') being written to disk, executed, or transferred over the network.",
            "data_sources": [
              "Zeek files.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Scan file hashes from Zeek files.log (for network transfers) and files referenced in Windows Event ID 4688 command lines (for execution or inferred creation) against a threat intelligence feed of known malicious file hashes associated with double extensions. Maintain and match against a list of highly specific, known malicious double extension filenames (e.g., 'Urgent_Update.docx.scr'). Alert immediately on any matches. Correlate findings with source/destination IPs or parent processes."
          },
          {
            "description": "Creation or writing of files on disk exhibiting a double file extension where the first extension suggests a common benign type (e.g., .txt, .pdf, .jpg) and the second is a known executable type (e.g., .exe, .scr, .bat, .hta, .lnk).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 (Process Creation) command lines for indications of file creation or writing by processes such as browsers, email clients, office applications, or script interpreters (e.g., curl -o, powershell Out-File). Apply regular expressions to identify filenames matching the pattern '*.<common_benign_ext>.<executable_ext>'. Examples: '*.pdf.exe', '*.docx.scr', '*.jpg.hta'. Calculate frequency of such creations by parent process and flag unusual occurrences using descriptive statistics (e.g., identifying parent processes rarely associated with creating executable files but now creating double-extension executables)."
          },
          {
            "description": "Execution of a file possessing a double file extension, particularly when the final extension is executable and the file originates from a high-risk path (e.g., user downloads, temporary internet files, email attachment cache).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Windows Event ID 4688 (Process Creation) logs. Extract the `NewProcessName` (executable path) and `CommandLine`. Use regular expressions to identify filenames with double extensions (e.g., '*.txt.exe', '*.doc.scr') in the `NewProcessName` or `CommandLine`. Prioritize alerts if the file path points to common user download locations (`%USERPROFILE%\\Downloads`), browser cache folders (e.g., `%LOCALAPPDATA%\\Microsoft\\Windows\\INetCache`), temporary folders (`%TEMP%`, `%TMP%`), or Outlook attachment caches. Use frequency analysis on parent processes (e.g., `outlook.exe`, `chrome.exe`, `explorer.exe`) initiating such executions to detect anomalous patterns."
          },
          {
            "description": "Network transfer (download or upload) of files with double extensions where the apparent extension is benign (e.g., .doc, .pdf) and the true, final extension is executable (e.g., .exe, .scr, .hta).",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek files.log metadata, focusing on the `filename` field, for files transferred via HTTP/S, SMTP (if files are extracted), FTP, etc. Apply regular expressions (e.g., `.*\\.(txt|doc|docx|pdf|xls|xlsx|ppt|pptx|jpg|jpeg|png|gif)\\.(exe|scr|com|bat|vbs|ps1|js|hta|lnk)$`) to detect double extension patterns. Correlate with Zeek http.log to examine `User-Agent` and `Referer` for context on downloads. Calculate frequency distributions of such filenames and associated source/destination IPs. Use time series analysis to detect sudden increases in such file transfers."
          },
          {
            "description": "Anomalous process behavior exhibited by a process launched from a file with a double extension, such as unexpected network communications, file system modifications indicative of payload dropping, or registry modifications for persistence.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Upon detecting an execution involving a double-extension file (via Windows Event ID 4688 pattern match), monitor the subsequent actions of this process and its children. Specifically look for: 1. New outbound network connections (Zeek conn.log from the host) to unusual IP addresses, low-reputation domains, or non-standard ports. 2. Further file creation events (inferred from child process command lines in Event ID 4688) in system directories or user startup folders. 3. Command line arguments in child processes (Event ID 4688) indicating use of `reg.exe`, `schtasks.exe`, or PowerShell cmdlets for modifying autorun registry keys or creating scheduled tasks. Use correlation analysis to link the initial double-extension execution with these subsequent suspicious behaviors within a defined time window (e.g., 5-10 minutes)."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]