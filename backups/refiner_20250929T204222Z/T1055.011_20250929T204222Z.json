[
  {
    "information_requirement": "Has the adversary leveraged Extra Window Memory Injection for privilege escalation?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.011",
        "name": "Extra Window Memory Injection",
        "evidence": [
          {
            "description": "A known low-privilege process (e.g., specific malware name, or a legitimate but commonly abused utility like mshta.exe with suspicious arguments) observed as a parent to, or active immediately prior to anomalous activity by, a high-privilege system process (e.g., services.exe, lsass.exe), followed by privilege escalation indicators from the target system process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4672",
              "Windows Event ID 4720",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a list of process names and command-line patterns known to be leveraged by tools or malware that might use EWM injection for privilege escalation. Monitor Windows Event ID 4688 for instances where these low-privilege processes are parents of high-privilege system processes, or their activity immediately precedes anomalous behavior by a high-privilege target. Correlate this with subsequent privilege escalation events such as Windows Event ID 4672 (Special Privileges assigned), Event ID 4720 (User account creation), or Event ID 4697 (Service installation) apparently originating from or in the context of the targeted high-privilege process. Alert on such correlated sequences involving known suspicious initiator processes/patterns."
          },
          {
            "description": "A non-administrative process spawning a command-line interpreter or scripting host, followed by a typically interactive high-privilege process (e.g., explorer.exe, or a system-level GUI process) performing administrative actions without apparent direct user initiation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4698",
              "Windows Event ID 4702",
              "Windows Event ID 4697"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for non-administrative parent processes launching command-line interpreters (e.g., `cmd.exe`, `powershell.exe`) or scripting hosts. Correlate this with subsequent events within a short time window (e.g., 1-5 minutes) where a high-privilege GUI process (like `explorer.exe` if running elevated, or other system-level GUI elements) creates a new scheduled task (Event IDs 4698, 4702, 4700), installs a new service (Event ID 4697), or modifies critical system registry keys, particularly if the task/service command line or registry modification points to suspicious executables or scripts. Use sequence analysis and process lineage from Event ID 4688 to link these activities."
          },
          {
            "description": "A process unexpectedly gaining highly sensitive privileges (e.g., SeDebugPrivilege) or a new integrity level after temporal proximity to activity by another, potentially injecting, process (not its direct parent in a typical launch), and subsequently interacting with critical system processes (e.g., lsass.exe).",
            "data_sources": [
              "Windows Event ID 4672",
              "Windows Event ID 4688",
              "Windows Event ID 4656 (Object Access - if LSASS auditing enabled)",
              "Windows Event ID 4663 (Object Access - if specific object access auditing enabled)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4672 for assignment of powerful privileges like SeDebugPrivilege to processes not typically holding them. Correlate this with preceding Windows Event ID 4688 activity to identify a potential 'injector' process active shortly before the 'target' process received these privileges. If LSASS auditing (Event ID 4656 with specific SACLs) or critical object access (Event ID 4663) is enabled, look for the newly-privileged target process attempting to access `lsass.exe` memory or modify protected system objects. Use correlation analysis (PID, timestamps) to link a suspect initiator, the target gaining privileges, and subsequent sensitive actions. Calculate frequency distributions of processes gaining specific privileges; flag rare or unprecedented assignments."
          },
          {
            "description": "A high-privilege system process (e.g., svchost.exe, services.exe) initiating anomalous network connections (e.g., to known C2 servers, unusual internal hosts for lateral movement) or creating unexpected child processes, following closely after activity by a lower-privileged, non-parent process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 to identify processes running with high privileges (e.g., SYSTEM). Use Windows Event ID 5156 and Zeek conn.log to baseline and monitor network connections initiated by these processes. Establish typical network communication patterns (destinations, ports, protocols, data volume) and common child processes using descriptive statistics (mean, median, standard deviation) and frequency analysis. Flag instances where a high-privilege process, after inferred interaction (based on temporal proximity of activity logs from a lower-privileged, non-parent process), initiates network connections to unusual external (check against threat intel) or internal destinations, or spawns unexpected child processes. Use time series analysis on connection counts/volume from high-privilege processes to detect anomalous spikes."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using Extra Window Memory Injection to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.011",
        "name": "Extra Window Memory Injection",
        "evidence": [
          {
            "description": "A common user-facing application (e.g., browser, office document reader, email client) making network connections to known malicious IP addresses, domains, or URLs, especially if the connection pattern matches known malware C2 behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate network logs (Zeek conn.log, http.log, dns.log; Windows Event ID 5156) originating directly from common user applications (e.g., `chrome.exe`, `iexplore.exe`, `outlook.exe`, `acrord32.exe`, `winword.exe`) against threat intelligence feeds of known malicious IPs, domains, and URLs (updated frequently). Prioritize alerts where the user application itself is the source of the connection. Look for connections to specific URI patterns or C2 protocols if known for malware utilizing EWM injection. Perform an inner join of process network activity data with threat intelligence lists."
          },
          {
            "description": "A common graphical user interface (GUI) application spawning an unusual or unexpected child process (e.g., cmd.exe, powershell.exe, rundll32.exe with suspicious arguments, or a rarely seen executable) which then performs suspicious actions like downloading files or establishing persistent network connections.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for common GUI applications (browsers, Office apps, PDF readers) launching child processes. Maintain a baseline of typical parent-child relationships using frequency analysis. Flag deviations, particularly the spawning of command-line interpreters, scripting engines, or utilities like `rundll32.exe` with obfuscated or suspicious command-line arguments. Correlate the activity of these unusual child processes with network logs (Zeek conn.log, Windows Event ID 5156) to detect subsequent file downloads from untrusted sources or C2-like beaconing. Use entropy measures on command lines to detect obfuscation."
          },
          {
            "description": "A typically non-networking graphical application (e.g., notepad.exe, calc.exe) or a sandboxed application initiating any outbound network connections, or a normally networking application connecting to highly unusual ports, protocols, or geographic locations inconsistent with its profile.",
            "data_sources": [
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish profiles of normal network behavior for common graphical applications, including whether they typically make network connections, and if so, to what destinations/ports (e.g., using descriptive statistics). Monitor Windows Event ID 5156 and Zeek conn.log/dns.log for deviations. Alert on processes like `notepad.exe` or `calc.exe` making any external network connection. For standard networking applications (browsers, Office), flag connections to non-standard ports (e.g., not 80/443 for HTTP/S), direct-to-IP connections where domain names are typical, or connections to geolocations inconsistent with user profiles or organizational norms. Use inter-quartile range (IQR) or percentile analysis to identify outlier connection behaviors."
          },
          {
            "description": "A common user process (e.g., browser, office application) exhibiting a sudden and sustained change in network traffic (volume, frequency, type) or generating an unusual number of application errors, not correlated with explicit user actions, potentially indicating hidden code execution and instability.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Windows Application Event Log (e.g.",
              "Event ID 1000)"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor common user applications for significant, unexplained increases in network traffic volume or connection counts using Zeek conn.log and http.log. Employ time series analysis (e.g., moving averages, exponential smoothing) to detect anomalous spikes or sustained deviations from baseline network activity per process. Correlate these network anomalies with application error logs (e.g., Windows Application Event Log, Event ID 1000 for Application Error) for the same process around the same timeframe, as injected code might lead to instability or crashes. Investigate deviations not attributable to legitimate software updates or user activity."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]