[
  {
    "information_requirement": "Has the adversary executed code using JavaScript?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.007",
        "name": "JavaScript",
        "evidence": [
          {
            "description": "JavaScript execution events attempting to connect to known malicious URLs/IPs or involving JavaScript files with known malicious hashes.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for script host executions (wscript.exe, cscript.exe, node.exe) or browser processes known to interpret JavaScript. Correlate these process activities with network connections logged in Zeek conn.log and Zeek http.log made by or shortly after their execution. Compare destination URLs/IPs against continuously updated cyber threat intelligence (CTI) feeds of known malicious sites. Analyze JavaScript files identified in Zeek files.log (e.g., with .js extension or specific MIME types) and check their cryptographic hashes against databases of known malicious file hashes. Alert on any confirmed matches and investigate the execution chain."
          },
          {
            "description": "Execution of JavaScript by Windows Script Hosts (wscript.exe, cscript.exe) with suspicious command-line arguments, or execution of .js/.jse files exhibiting high entropy indicative of obfuscation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for 'wscript.exe' or 'cscript.exe' process creations. Analyze their command lines for patterns such as Base64 encoded content, use of `eval()`, excessive string concatenation, calls to `ActiveXObject` for sensitive components (e.g., `WScript.Shell`, `MSXML2.XMLHTTP`), or direct embedding of long scripts. If script files are captured (e.g., via Zeek files.log when transferred over the network, or via endpoint collection), calculate entropy measures on .js/.jse file content; flag scripts with abnormally high entropy (e.g., >7.0 on a scale of 0-8) as potentially obfuscated. Correlate high entropy files with their execution events using descriptive statistics to identify unusual script characteristics."
          },
          {
            "description": "Identification of known malicious JavaScript framework signatures, obfuscated function call patterns, or C2 communication indicators within JavaScript content observed in network traffic.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze JavaScript content extracted from Zeek http.log (e.g., within `<script>` tags or .js files) or from Zeek files.log. Implement regular expression searches for signatures of known malicious JS libraries (e.g., BeEF hooks), suspicious function call patterns (e.g., `eval(unescape(...))`, `String.fromCharCode` with large char code arrays, dynamic script element creation with remote sources), or specific strings/URL patterns associated with C2 frameworks. Maintain and regularly update a list of these signatures. Use correlation analysis to link suspicious scripts to specific hosts or user sessions and investigate further."
          },
          {
            "description": "JavaScript execution initiated by non-standard parent processes (e.g., Microsoft Office applications, PDF readers) or from unusual file paths (e.g., temporary internet files, user download folders, recycle bin).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for instances where JavaScript/JScript files (.js, .jse) are executed or scripting engines (wscript.exe, cscript.exe, mshta.exe processing VBScript/JScript, node.exe) are launched by parent processes not typically associated with direct script execution (e.g., WINWORD.EXE, EXCEL.EXE, POWERPNT.EXE, OUTLOOK.EXE, ACROBAT.EXE). Also, flag executions of scripts from atypical file system locations such as temporary directories (e.g., AppData\\Local\\Temp), user profile download folders, recycle bin, or removable USB drives. Establish baselines for common script execution paths and parent-child process relationships; use frequency analysis and descriptive statistics (e.g., identifying low-frequency parent processes for script hosts) to detect deviations."
          },
          {
            "description": "Anomalous system or network activity (e.g., unexpected child process creation like cmd.exe/powershell.exe, registry modifications for persistence, sensitive file access, C2-like network beaconing) occurring immediately following confirmed JavaScript execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate confirmed JavaScript execution events (identified via Windows Event ID 4688 involving wscript.exe, cscript.exe, node.exe, etc.) with subsequent system and network events originating from the same host within a short timeframe (e.g., 1-5 minutes). Monitor for: 1. Child processes (Event ID 4688) created by the script host that are suspicious (e.g., cmd.exe, powershell.exe, bitsadmin.exe, certutil.exe). 2. Registry modifications (Event ID 4657) to persistence locations (e.g., Run keys) or security settings. 3. File access/creation (Event ID 4663) in sensitive system directories or user data folders indicative of data staging or tool deployment. 4. Network connections (Zeek conn.log) exhibiting C2-like beaconing patterns (regular intervals, small payloads), connecting to newly seen external IPs, or using non-standard ports. Use time series analysis for network patterns and correlation analysis to link JavaScript execution to these subsequent suspicious behaviors."
          },
          {
            "description": "Execution of Node.js (node.exe) with command-line arguments pointing to .js files from untrusted or uncommon locations, or followed by suspicious child process creation or unusual network activity.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for process creation of 'node.exe'. Analyze command lines for .js files being executed, particularly from non-standard application directories, temporary folders, user profiles, or network shares. Correlate 'node.exe' execution with subsequent child process creation (e.g., cmd.exe, powershell.exe, or other interpreters) or network connections (Zeek conn.log) to unusual external IP addresses, non-standard ports, or exhibiting C2-like communication patterns (e.g., beaconing, large unexpected uploads). Baseline legitimate Node.js usage within the environment (common paths, parent processes, typical network behavior) and alert on deviations using frequency analysis, inter-quartile range for connection volumes, and correlation analysis."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]