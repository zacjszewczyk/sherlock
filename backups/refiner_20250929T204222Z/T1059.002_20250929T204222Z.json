[
  {
    "information_requirement": "Is the adversary using AppleScript for malicious execution on macOS endpoints?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1059.002",
        "name": "AppleScript",
        "evidence": [
          {
            "description": "Execution of AppleScripts with file hashes matching known malicious scripts or connections to known malicious infrastructure.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process and file events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Continuously monitor file creation and process execution events on macOS endpoints. Compute the hash (e.g., SHA256) of all executed .scpt, .applescript files, and application bundles. Correlate these hashes against a threat intelligence feed of known malicious scripts. Additionally, cross-reference any IP addresses or domains observed in Zeek conn.log that are associated with AppleScript executions against CTI feeds. Alert on any match."
          },
          {
            "description": "Execution of the 'osascript' command-line utility with suspicious arguments or parent processes, or AppleScript code containing malicious command patterns.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process and script content events"
            ],
            "data_platforms": [
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process execution events for 'osascript'. Flag instances where the parent process is an office productivity application (e.g., Microsoft Word, Outlook, Excel), a web browser, or a PDF reader, which is a common phishing pattern. Analyze command-line arguments for inline execution ('-e') containing keywords like 'do shell script', 'curl', 'python', or base64 encoded strings. Scan script content for these keywords and API calls used to download payloads or interact with user prompts ('display dialog'). Use regular expression matching on command lines and script content to identify these patterns."
          },
          {
            "description": "An unusual process (e.g., an office application) spawning 'osascript', which then makes an outbound network connection, especially to a rare or uncategorized destination.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) process and network events",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate macOS process execution events with network connection logs in near real-time. Create a detection rule for the sequence: 1) A user-facing application (e.g., Word) spawns 'osascript'. 2) The 'osascript' process (or its child) initiates an outbound network connection within a short time window (e.g., 60 seconds). Use frequency analysis and entropy measures on destination FQDNs/IPs observed in Zeek conn.log to flag connections to rare or new domains, prioritizing those that are uncategorized or have low reputation scores."
          },
          {
            "description": "An AppleScript process creating or modifying files in sensitive system or user directories, indicating an attempt to establish persistence or install malicious tools.",
            "data_sources": [
              "macOS Endpoint Security Framework (ESF) file events"
            ],
            "data_platforms": [
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor file creation and modification events performed by 'osascript' or its child processes. Specifically, alert on any file writes to known persistence locations such as '~/Library/LaunchAgents', '/Library/LaunchAgents', '/Library/LaunchDaemons', or '/Library/ScriptingAdditions'. Use descriptive statistics to create a baseline for normal 'osascript' file I/O behavior and identify any processes that create an unusually high number of files or write to unexpected locations."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]