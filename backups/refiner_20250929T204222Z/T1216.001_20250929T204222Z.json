[
  {
    "information_requirement": "Is the adversary bypassing security controls using PubPrn?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1216.001",
        "name": "PubPrn",
        "evidence": [
          {
            "description": "Execution of `pubprn.vbs` with the `script:` moniker referencing known malicious URLs, domains, IP addresses, or specific, highly indicative malicious script file names.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for `cscript.exe` (or `wscript.exe`) executing `pubprn.vbs` with the `script:` parameter. Extract the full URL, domain, IP address, and script file name from the command line. Cross-reference these extracted values against continuously updated threat intelligence feeds of known malicious indicators (e.g., C2 URLs, malware drop sites, IOCs from PubPrn campaigns). Alert on any matches. Simultaneously, monitor Zeek http.log and conn.log for direct network connections to these known malicious locations, even if the originating process context is initially unclear, then correlate back to potential `pubprn.vbs` activity."
          },
          {
            "description": "Command-line execution of `cscript.exe` with `pubprn.vbs` utilizing the `script:` moniker followed by a non-LDAP protocol (e.g., `http:`, `https:`, `ftp:`, `file:`, `smb:`) to specify the script location.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Filter Windows Event ID 4688 for command lines where the parent process is `cscript.exe` (or `wscript.exe`) and `pubprn.vbs` is a script argument. Parse the arguments passed to `pubprn.vbs` to identify the presence of the `script:` moniker. If `script:` is present, extract and analyze the specified protocol. Generate a high-priority alert if the protocol is anything other than `ldap` (e.g., `http`, `https`, `ftp`, `file`, `smb`). This pattern is a strong indicator of malicious intent, especially on older Windows versions vulnerable to this technique."
          },
          {
            "description": "Spawning of unexpected or suspicious child processes (e.g., `powershell.exe`, `cmd.exe`, `rundll32.exe`, other LoLBins) by `cscript.exe` immediately following the execution of `pubprn.vbs` potentially involving a `script:` moniker.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for parent-child process relationships. Identify `cscript.exe` processes that have executed `pubprn.vbs` (particularly those matching the `script:` moniker pattern). Analyze any child processes spawned by these `cscript.exe` instances within a short time window (e.g., 0-60 seconds). Flag common suspicious child processes like `powershell.exe`, `cmd.exe`, `bitsadmin.exe`, `certutil.exe`, `regsvr32.exe`, `rundll32.exe`, or any process launched with obfuscated/encoded command lines or from atypical file paths (e.g., temp directories). Use entropy measures on child process command lines to detect obfuscation. Establish a baseline of legitimate child processes (if any) for `cscript.exe` and alert on deviations."
          },
          {
            "description": "Unusual outbound network connections initiated by `cscript.exe` (or its child processes) shortly after `pubprn.vbs` execution, particularly to download script files (.sct, .js, .vbs) or executables from uncategorized or newly observed domains/IPs.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate Windows Event ID 4688 process creation events showing `cscript.exe` executing `pubprn.vbs` (especially with the `script:` moniker) with subsequent outbound network activity (Zeek conn.log, http.log, files.log) from the same host IP address within a 1-5 minute window. Profile typical network behavior for `cscript.exe`. Flag connections attempting to download script files (e.g., URI ending in `.sct`, `.js`, `.vbs` in Zeek http.log, or matching file types in Zeek files.log) or executable content, especially if originating from or destined to domains not on an organizational allowlist, newly registered domains (NRDs), or IPs with low reputation scores. Use time series analysis to detect unusual spikes in such downloads from hosts after `pubprn.vbs` activity."
          },
          {
            "description": "Execution of `pubprn.vbs` in an anomalous context, such as by unexpected user accounts, on systems where printer publishing is atypical, or with parameters that don't conform to standard administrative use.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline for legitimate `pubprn.vbs` executions within the environment using Windows Event ID 4688, considering typical parent processes (`cscript.exe`, `wscript.exe`), user contexts (e.g., administrators, specific service accounts), common host types (e.g., print servers, specific workstations), and historical frequency. Monitor for deviations: `pubprn.vbs` executed by non-standard user accounts (e.g., regular users, compromised service accounts not related to printing), on servers or critical workstations where it has no legitimate purpose, or a sudden increase in execution frequency on one or more systems (use descriptive statistics, IQR, or percentile analysis on execution counts per host/user). Investigate executions with unusual argument structures beyond typical `LDAP://` paths if the `script:` moniker is not used but other parameters seem suspicious."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]