[
  {
    "information_requirement": "Is the adversary maintaining persistence using print processors?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1547.012",
        "name": "Print Processors",
        "evidence": [
          {
            "description": "A file with a known malicious hash or name, intended to act as a print processor, is created in the system's print processor directory.",
            "data_sources": [
              "Windows Event ID 11 (Sysmon)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Sysmon Event ID 11 for file creation events where 'TargetFilename' is within the print processor directory (e.g., C:\\Windows\\System32\\spool\\prtprocs\\x64\\*). Extract the file hash from the 'Hashes' field and the filename. Correlate the extracted hash against a CTI feed of known malicious file hashes. Additionally, check the filename against a list of known malicious print processor DLL names. Alert on any match."
          },
          {
            "description": "An unsigned DLL is loaded by spoolsv.exe, or a file is written to the print processor directory by an unusual parent process such as a script interpreter.",
            "data_sources": [
              "Windows Event ID 7 (Sysmon)",
              "Windows Event ID 11 (Sysmon)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Sysmon Event ID 7 for DLLs loaded by 'spoolsv.exe'. Analyze the 'Signed' and 'Signature' fields; create a detection for any DLL that is unsigned or has an invalid/untrusted signature. Separately, monitor Sysmon Event ID 11 for file writes to the print processor directory. Analyze the writing process ('Image'); flag writes from non-installer processes like 'cmd.exe', 'powershell.exe', or processes running from temporary directories. Correlating these patterns helps identify the setup of malicious persistence."
          },
          {
            "description": "An anomalous sequence of a file write to the print processor directory followed by a corresponding registry key modification under the Print Processors hive occurs.",
            "data_sources": [
              "Windows Event ID 11 (Sysmon)",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate events across a single host. Look for a Sysmon Event ID 11 (File Create) in C:\\Windows\\System32\\spool\\prtprocs\\* followed within a short time window (e.g., < 1 minute) by a Windows Event ID 4657 (Registry Write) to 'HKLM\\SYSTEM\\...\\Print Processors\\...'. The registry write's data should reference the name of the newly created file. This sequence, especially when performed by a non-system, non-installer process, is a strong behavioral indicator of this persistence technique being established."
          },
          {
            "description": "The spoolsv.exe process initiates network connections to unusual external destinations, particularly after a system reboot or print spooler service restart.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 3 (Sysmon)"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Sysmon Event ID 3 for network connections where the source 'Image' is 'spoolsv.exe'. Correlate with Zeek conn.log from the host's IP address. Establish a baseline of normal destination IPs/domains for spoolsv.exe (e.g., internal print servers, Microsoft update servers). Use frequency analysis (rarity) on destination IPs and ports to identify anomalous connections. Use time series analysis to detect new connection patterns emerging after a system restart, which may indicate the persistent DLL has been loaded and is executing its C2 function."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to gain elevated privileges via print processors?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1547.012",
        "name": "Print Processors",
        "evidence": [
          {
            "description": "The spoolsv.exe process loads a DLL whose hash is present on a threat intelligence feed of known malicious files.",
            "data_sources": [
              "Windows Event ID 7 (Sysmon)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Sysmon Event ID 7 (Image Load) where 'Image' is 'spoolsv.exe'. Extract the hash of the loaded DLL from the 'Hashes' field. Perform an inner join of the extracted file hashes against a CTI database of known malicious DLL hashes. An alert on a match indicates that the SYSTEM-level spoolsv.exe process has loaded a known malicious payload, resulting in privileged code execution."
          },
          {
            "description": "A non-privileged user account or common script interpreter process writes a registry key to the Print Processors hive.",
            "data_sources": [
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4657 for write operations to 'HKLM\\SYSTEM\\...\\Print Processors\\...'. Analyze the 'SubjectUserName' and 'ProcessName' fields. Baseline the legitimate processes/users that modify this key (e.g., SYSTEM, TrustedInstaller.exe). Flag any writes originating from unexpected user accounts (e.g., standard users) or from common scripting processes ('powershell.exe', 'cmd.exe') not part of a known administrative task. This pattern targets the setup phase of the escalation, which is often performed by a lower-privileged process."
          },
          {
            "description": "The spoolsv.exe process, running as SYSTEM, spawns suspicious child processes such as command shells or network utilities.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1 (Sysmon)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) where the parent process is 'spoolsv.exe'. Analyze the child process name and command line. Flag the creation of interactive shells ('cmd.exe', 'powershell.exe'), network utilities ('net.exe', 'nltest.exe'), or credential access tools. Use correlation analysis to link these child process events to a preceding unusual DLL load by spoolsv.exe (Sysmon Event ID 7). This behavior directly indicates successful privilege escalation and subsequent malicious action."
          },
          {
            "description": "A lower-privilege process writes a file to the print processor directory, and the Print Spooler service is subsequently restarted outside of a normal maintenance window.",
            "data_sources": [
              "Windows Event ID 11 (Sysmon)",
              "Windows Event ID 7036 (System Log)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate Sysmon Event ID 11 (File Create) in the print processor directory by a non-system user/process with a subsequent Windows Event ID 7036 from the Service Control Manager indicating the 'Print Spooler' service has been stopped and then started. Use time series analysis to identify service restarts that fall outside of normal system reboots or established patching schedules. This specific sequence of 'drop DLL, restart service' is a strong behavioral indicator of an adversary actively triggering the privilege escalation."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]