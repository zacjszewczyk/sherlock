[
  {
    "information_requirement": "Has the adversary moved laterally through the network using SSH?",
    "tactic_id": "TA0008",
    "tactic_name": "Lateral Movement",
    "indicators": [
      {
        "technique_id": "T1021.004",
        "name": "SSH",
        "evidence": [
          {
            "description": "SSH connection attempts using client software versions or public key hashes known to be associated with malicious tools or threat actors.",
            "data_sources": [
              "Zeek ssh.log",
              "Linux auth.log",
              "Linux secure log"
            ],
            "data_platforms": [
              "Network devices",
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain and regularly update a threat intelligence list of SSH client version strings and public key hashes known to be used by malicious tools (e.g., from CTI reports or malware analysis). Scan Zeek ssh.log `client_version` and `host_key` fields, and Linux auth/secure logs for public keys used in authentication. Alert on any exact matches to this selector list."
          },
          {
            "description": "Execution of the SSH client with command-line parameters commonly used in automated scripts to bypass security prompts or hide forensic artifacts.",
            "data_sources": [
              "Windows Event ID 4688",
              "Linux auditd logs"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688, Linux auditd) for executions of `ssh`, `plink.exe`, or other SSH clients. Analyze the command line for patterns such as `-o StrictHostKeyChecking=no`, `-o UserKnownHostsFile=/dev/null`, `-batch`, or non-interactive password passing via tools like `sshpass`. Use regular expression matching to flag these command patterns, which are indicative of scripted lateral movement, and correlate them with subsequent network connections on port 22."
          },
          {
            "description": "An SSH login establishing a new connection pathway between users and systems not previously observed, or an account logging in from an unfamiliar source IP.",
            "data_sources": [
              "Linux auth.log",
              "Linux secure log",
              "Zeek ssh.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Maintain a baseline graph or lookup table of historic user-to-host and host-to-host SSH connections over a significant period (e.g., 30-90 days). Analyze real-time SSH authentication logs (Linux auth.log/secure, Zeek ssh.log, Windows Event ID 4624 Logon Type 3) and alert on any successful login that represents a new 'edge' in this graph (i.e., a user or source host connecting to a destination for the first time). Use frequency analysis to score the rarity of the connection and prioritize alerts for investigation."
          },
          {
            "description": "A single source host or user account making SSH connections to a statistically unusual number of distinct systems within a short timeframe, indicating lateral movement scanning or automated spreading.",
            "data_sources": [
              "Zeek ssh.log",
              "Zeek conn.log",
              "Linux auth.log",
              "Linux secure log"
            ],
            "data_platforms": [
              "Network devices",
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Aggregate SSH connection data (Zeek ssh.log, Zeek conn.log, Linux auth/secure logs) by source IP or user account over sliding time windows (e.g., 10 minutes, 1 hour). Calculate the number of distinct destination IPs/hostnames contacted by each source. Use statistical outlier detection methods, such as identifying sources with connection counts beyond the 95th percentile or 1.5 times the inter-quartile range (IQR) above the upper quartile, to flag 'fan-out' behavior. Visualize connection counts per source using a box-plot to identify outliers."
          },
          {
            "description": "An established SSH session containing traffic patterns indicative of tunneling or port forwarding, especially to or from sensitive internal services.",
            "data_sources": [
              "Zeek ssh.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek ssh.log for sessions where `forwarding_requested` is true. Correlate the SSH session (identified by its unique ID) with other connections in Zeek conn.log that occur during the session's lifetime. Search for new connections originating from the SSH server or client that appear to be proxied, especially connections to internal-only ports (e.g., 3389 RDP, 139/445 SMB, 1433 MSSQL) or unexpected external destinations. Use time series analysis on the byte counts of SSH sessions; a session with high, sustained traffic may be used for tunneling large volumes of data and can be flagged for review."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]