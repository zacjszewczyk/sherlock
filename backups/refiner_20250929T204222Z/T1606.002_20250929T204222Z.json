[
  {
    "information_requirement": "Has the adversary accessed credentials using forged SAML tokens?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1606.002",
        "name": "SAML Tokens",
        "evidence": [
          {
            "description": "SAML assertions observed in network traffic signed by a known compromised token-signing certificate or issued by a known malicious issuer name.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Requires TLS visibility/inspection. Extract SAML assertions from network traffic (e.g., from Zeek http.log bodies or Zeek files.log where content type is XML/SAML). Parse the XML to identify the signing certificate's thumbprint and the issuer's name. Compare these atomic indicators against a CTI feed of known compromised certificate thumbprints (e.g., those associated with the 'Golden SAML' attack) or known malicious issuer strings. Alert immediately on any match."
          },
          {
            "description": "Anomalies in SAML assertion structure or content, such as unusually long lifetimes, mismatched identifiers, or patterns consistent with known forging tools.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 1202"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Requires TLS visibility. Extract and parse SAML assertions from network traffic. Analyze token lifetime; alert on lifetimes exceeding organizational policy (e.g., > 24 hours). Check for structural inconsistencies, such as the NameID and Subject fields not matching the user context. Look for specific XML artifacts or patterns associated with tools like ADFSpoof. On the Identity Provider (IdP), monitor Windows Event ID 1202 (ADFS) for tokens being issued with unusual claim rules or lifetimes and correlate with network-observed tokens."
          },
          {
            "description": "SAML-based logins observed in network traffic to a service provider without corresponding, time-proximate authentication logs on the Identity Provider (IdP).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Windows Event ID 1202",
              "Windows Event ID 4769"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Zeek http.log/conn.log for traffic indicating a SAML login to a key service provider (e.g., HTTP POST to a SAML endpoint). Extract user identifiers if possible. Correlate this network event with IdP logs (e.g., Windows Event ID 1202 for ADFS token issuance, or 4769 for Kerberos tickets if part of the flow) on the domain controllers for the same user within a short time window (e.g., 1-2 minutes). Use correlation analysis to count discrepancies; a high volume of network-observed SAML logins without corresponding IdP logs is a strong indicator of forged 'Golden SAML' tokens."
          },
          {
            "description": "Anomalous user login behavior for SAML-authenticated sessions, including impossible travel, unusual source geolocation, or access at atypical times compared to user baselines.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "For SAML-based logins, monitor source IPs from Zeek conn.log and subsequent on-premise logon events (Windows Event ID 4624). Build user-specific baselines for typical login geolocations and times using historical data. Use percentile analysis on login times and frequency analysis on source countries to flag outliers. Implement impossible travel detection by using correlation analysis on timestamps and geolocations for sequential SAML logins by the same user, alerting on physically unfeasible travel times. Use box-plots to visualize and detect anomalous login frequencies per user."
          },
          {
            "description": "A user account, after a SAML login, performs privileged actions inconsistent with its assigned role or permissions, indicating a forged token with elevated claims.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688",
              "Windows Event ID 4672",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate successful SAML logins with the resulting logon session on an endpoint/server (Windows Event ID 4624). Monitor this session for the assignment of special privileges (Event ID 4672) or the creation of high-privilege processes (Event ID 4688, e.g., SYSTEM). Compare observed activity against a baseline of normal behavior for that user's role. Use linear regression to determine if SAML logins from certain sources or exhibiting other anomalies correlate with a higher rate of subsequent privileged activity alerts, indicating a successful attack."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]