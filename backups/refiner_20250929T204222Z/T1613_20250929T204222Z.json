[
  {
    "information_requirement": "Is the adversary attempting to discover container resources and environment details?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1613",
        "name": "Container and Resource Discovery",
        "evidence": [
          {
            "description": "API calls to container orchestration platforms (Kubernetes, Docker) originating from IP addresses known to be malicious or associated with active reconnaissance campaigns.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate source IP addresses making connections (Zeek conn.log) or HTTP requests (Zeek http.log) to container API endpoints (e.g., Docker API ports 2375/2376, Kubernetes API port 6443/443, kubelet port 10250) against a continuously updated cyber threat intelligence (CTI) feed of known malicious IPs or IPs associated with active scanning/reconnaissance campaigns. Alert on any matches and investigate associated API interactions for discovery attempts."
          },
          {
            "description": "Usage of specific command-line utilities (e.g., `kubectl`, `docker`, `crictl`) or scripts with discovery-focused arguments/options, or network requests with User-Agent strings characteristic of known container discovery tools, originating from unexpected hosts or contexts.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 on servers and relevant endpoints for execution of `kubectl.exe`, `docker.exe`, `crictl.exe` or other container CLI tools with common discovery commands (e.g., `get pods`, `ps`, `images`, `nodes`, `cluster-info`, `api-resources`). Look for unusual parent processes (e.g., not an interactive shell or approved script host), execution from unexpected user accounts, or execution within atypical script contexts. Analyze Zeek http.log for User-Agent strings associated with known container enumeration tools (e.g., Kubeaudit, Kube-hunter, Peirates) or generic scripting User-Agents (e.g., Python-requests, curl) making unusual API calls. Correlate tool execution with network API calls to container platforms using time and source IP."
          },
          {
            "description": "Anomalously high volume or frequency of API calls to container orchestration platforms (e.g., Kubernetes, Docker) from a single source, or connections from unexpected network segments.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek conn.log and http.log for connections to container API ports. Establish baselines for normal API call volume and frequency per source IP/subnet. Flag source IPs exhibiting unusually high volumes of discovery-related API calls (e.g., LIST, GET operations on multiple resource types) or connections originating from network segments not authorized for API access (e.g., user subnets accessing K8s API). Use descriptive statistics (mean, standard deviation, percentiles) and outlier detection methods like Inter-Quartile Range (IQR) or Z-scores on call counts or connection rates per source over defined time windows."
          },
          {
            "description": "Anomalous interaction patterns with container management web UIs (e.g., Kubernetes Dashboard, Rancher, OpenShift console), such as rapid enumeration of resources or access from untrusted sources.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Zeek conn.log and http.log for connections to container dashboard web interfaces. Analyze session characteristics (duration, bytes transferred) and HTTP request patterns (e.g., high number of 'list' or 'get' requests to resource-listing endpoints, unusual sequences of page views indicative of broad scanning) per source IP. Use time series analysis on connection volume and activity metrics (e.g., request rate, diversity of URLs accessed) to identify deviations from normal baseline behavior for legitimate administrative access. Correlate access with source IP reputation and expected user behavior patterns (e.g., typical hours of operation, geolocations)."
          },
          {
            "description": "Broad or systematic enumeration of diverse container resources (e.g., pods, services, secrets, deployments, nodes, images, namespaces, roles) via API calls, especially from unexpected internal sources, non-administrative user contexts, or potentially compromised pods/containers.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Servers",
              "Endpoints"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Filter Zeek http.log for REST API calls to container orchestration platforms (e.g., Kubernetes API paths like `/api/v1/pods`, `/api/v1/secrets`, `/apis/apps/v1/deployments`, `/api/v1/nodes`, `/api/v1/namespaces`; Docker API paths like `/containers/json`, `/services`, `/secrets`, `/images`). Profile typical API call patterns (source IP/pod, user-agent, invoked API paths, frequency) for discovery operations. Identify and alert on API call sequences originating from unusual internal subnets/pods, or those showing a high variety (using entropy measures on requested resource paths per session) or high volume of 'get' or 'list' operations across many different resource types within a short timeframe. Correlate with host-based logs (e.g., Windows Event ID 4688 for `kubectl.exe` or `docker.exe` or Linux audit logs if available) for processes initiating these calls, looking for non-interactive or unauthorized execution."
          },
          {
            "description": "Anomalous access to or retrieval of sensitive container information such as logs, environment variables, configurations (ConfigMaps, Secrets), or detailed cluster/node status from unexpected sources or in an unusually large volume.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Zeek http.log for API calls to container log endpoints (e.g., K8s: `/api/v1/namespaces/{namespace}/pods/{pod_name}/log`, Docker: `/containers/{id}/logs`), configuration endpoints (e.g., K8s: `/api/v1/namespaces/{namespace}/configmaps`, `/api/v1/namespaces/{namespace}/secrets`), or detailed cluster/node status endpoints (e.g., K8s: `/api/v1/nodes`, `/healthz`, `/metrics`, `/api/v1/componentstatuses`). Analyze Zeek conn.log for sustained or high-volume connections related to these requests. Baseline legitimate log/status/configuration access patterns (e.g., by monitoring systems, administrators during specific tasks). Flag access from non-standard client tools (identified via User-Agent in http.log), unusual IP addresses, or if the volume of data retrieved (e.g., all logs from all pods, all secrets in a namespace) is abnormally high using percentile analysis on data transfer sizes or request counts per source. Use linear regression to identify trends in sensitive data access that deviate from norms."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]