[
  {
    "information_requirement": "Has the adversary caused a denial of service by exhausting application resources?",
    "tactic_id": "TA0040",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1499.003",
        "name": "Application Exhaustion Flood",
        "evidence": [
          {
            "description": "Network traffic targeting application resources originating from IP addresses known to be part of botnets or previously associated with DoS/DDoS attacks.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Continuously cross-reference source IP addresses identified in Zeek conn.log (especially those generating high request volumes or connection rates to application ports) against regularly updated threat intelligence feeds that list known botnet C2s, compromised machines actively used in DoS campaigns, or IP addresses with a significant history of DoS activity. Alert on matches and correlate with observed impact using linear regression or simple correlation coefficients between traffic from malicious IPs and application error rates."
          },
          {
            "description": "Presence of specific, known malicious request patterns, User-Agent strings, or malformed packet structures associated with DoS tools or application-specific vulnerability exploits targeting resource exhaustion.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Zeek http.log for HTTP/S requests containing User-Agent strings of known DoS tools (e.g., Slowloris, LOIC variants, GoldenEye) or specific request patterns/payloads known to trigger resource exhaustion vulnerabilities in targeted applications (e.g., regular expression DoS patterns, XML bombs, unusually crafted API calls designed to maximize server load). Analyze Zeek conn.log for malformed packets or protocol anomalies if the DoS targets lower layers of the application stack. Maintain and regularly update a library of these patterns and signatures based on threat intelligence and vulnerability disclosures."
          },
          {
            "description": "Statistically significant surge in request volume, connection rate, or data throughput to specific application services, deviating sharply from established baselines.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish fine-grained baselines for request rates, connection counts, and data volume per application service/URL using historical Zeek conn.log and http.log data (e.g., averages per minute, per 5 minutes, per hour). Employ time series analysis (e.g., ARIMA, Holt-Winters) or statistical process control charts (e.g., CUSUM, EWMA) to detect rapid, statistically significant increases (e.g., >3-5 standard deviations above mean, or exceeding dynamic thresholds based on percentile changes from the moving average). Correlate alerts with source IP diversity; a surge from a few IPs is more indicative of a targeted DoS attack. Use box-plots to visualize request rate distributions and identify outliers."
          },
          {
            "description": "Sustained high CPU, memory, or I/O utilization on application servers, correlated with a spike in application-specific error rates or critical Windows Event Logs (e.g., Resource-Exhaustion-Detector, W3SVC worker process limits exceeded, Application crashes).",
            "data_sources": [
              "Windows Event ID 2004 (Resource-Exhaustion-Detector)",
              "Windows Event ID (System/Application logs for application-specific errors",
              "e.g.",
              "W3SVC Event ID 46",
              "W3SVC Event ID 5011)",
              "Windows Event ID 1000 (Application Error)"
            ],
            "data_platforms": [
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event Logs for resource exhaustion events (e.g., System Event ID 2004), IIS worker process limits being exceeded (e.g., W3SVC Event ID 46 'limit for the number of worker processes has been exceeded', Event ID 5011 'worker process failed to respond to a ping'), and application crashes (e.g., Application Event ID 1000). Correlate these server-side stress indicators with anomalous network traffic patterns identified in Zeek logs. Establish baselines for normal error rates and resource utilization (e.g., by analyzing performance counter data that may be logged as events). Use correlation analysis and descriptive statistics (e.g., mean error rate, frequency of critical events) to identify periods where server stress significantly deviates from baseline and coincides with suspicious network activity from specific sources."
          },
          {
            "description": "Anomalously high frequency of requests from specific source(s) targeting known resource-intensive application features, API endpoints, or database queries, leading to demonstrable performance degradation or service unavailability.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event Logs (Application log for specific error messages or performance warnings)"
            ],
            "data_platforms": [
              "Network devices",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Identify and maintain a list of resource-intensive application features, URLs, or API endpoints (e.g., complex search functions, report generation, large file uploads/downloads). Monitor Zeek http.log for request rates to these specific targets from individual source IPs. Calculate the frequency of requests per source IP to these endpoints over defined time windows. Use percentile analysis (e.g., flag IPs in the 99th percentile of request frequency) or IQR to flag IPs making an unusually high number of requests compared to typical users. Correlate these high-frequency requests with server-side logs from Windows Event Logs (Application) indicating slow response times, increased application-specific error rates (e.g., database query timeouts, 'service temporarily unavailable' messages), or resource contention warnings."
          },
          {
            "description": "Anomalous characteristics in request distributions or content (e.g., unusually large/small request sizes, abnormal request parameters, very low inter-arrival times, or a high concentration of specific, complex transaction types) aimed at an application.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Analyze Zeek http.log and conn.log. For requests targeting key applications, establish detailed baselines for: request size distribution, inter-arrival time between requests from a single source IP, distribution of HTTP methods, and typical patterns of parameter values/lengths. Use descriptive statistics (mean, median, mode, standard deviation, IQR) and entropy measures (e.g., Shannon entropy of request parameters or URL paths originating from a single source over a short time window). Flag source IPs exhibiting significant deviations, such as extremely low inter-arrival times (indicating rapid-fire requests), unusually large or malformed request bodies, or parameters crafted to trigger computationally expensive backend processing. Employ box-plots or histograms to visualize distributions of these metrics and identify outliers."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]