[
  {
    "information_requirement": "Is the adversary maintaining persistence through system firmware modification?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1542.001",
        "name": "System Firmware",
        "evidence": [
          {
            "description": "Detection of known malicious firmware utility hashes or specific EFI/BIOS module hashes associated with persistent threats being written to disk or executed.",
            "data_sources": [
              "Windows Event ID 4688 (with process hash logging enabled)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for execution of processes. Extract process hashes if available through enhanced logging. Compare these hashes against a maintained threat intelligence list of known malicious firmware modification tools, UEFI rootkits, or bootkits (e.g., LoJax, TrickBoot). Alert on any matches. Correlate positive matches with subsequent system reboots, unexpected behavior, or presence of suspicious EFI variables."
          },
          {
            "description": "Execution of known or suspicious firmware management utilities (e.g., vendor flash tools, CHIPSEC) or scripts with command-line arguments indicating firmware writing, dumping, or modification, especially outside of authorized change windows or by unauthorized users.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for process creation events. Flag execution of known firmware flashing/update tools (e.g., AFUWIN.exe, AMIDEWIN.exe, FWUpdLcl.exe, BiosMgmt.exe, chipsec_util.py) or any process with command-line arguments containing keywords such as 'flash', 'bios', 'uefi', 'updatefw', 'writerom', 'dumpefi', 'spi', 'nvram', or referencing firmware image files (e.g., .rom, .bin, .efi, .fd). Use descriptive statistics (frequency counts, user agent analysis) to baseline legitimate use. Apply correlation analysis: flag if occurring outside scheduled maintenance, by unauthorized users, or if the tool is downloaded from an untrusted source (potentially identifiable via Zeek logs if network download is observed prior to execution)."
          },
          {
            "description": "Anomalous system boot behavior, such as unexpected persistence of processes or network connections initiated very early in the boot sequence, not attributable to legitimate startup items or services registered in the OS.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal boot-time processes (Windows Event ID 4688 parent-child relationships, user context, executable paths, and typical startup times) and network connections (Zeek conn.log, correlated with system boot times). Monitor for deviations: processes launching with no parent or unusual parents (e.g., smss.exe directly launching non-system processes), unsigned executables consistently appearing at startup without standard OS registration, or network connections to unusual external IPs immediately post-boot. Use time series analysis for boot-time network traffic patterns and process launch frequency. Investigate processes that reappear after reboots despite removal attempts from standard OS persistence locations (e.g., registry run keys, startup folders, services)."
          },
          {
            "description": "Unauthorized or suspicious attempts to access or modify system firmware-related memory regions, devices (e.g., SPI flash, NVRAM), EFI variables, or specific BIOS files by non-standard processes or user accounts.",
            "data_sources": [
              "Windows Event ID 4656 (Object Access)",
              "Windows Event ID 4663 (Object Access attempt)",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Enable and monitor SACLs for Windows Event IDs 4656/4663 on firmware-related device objects (e.g., \\Device\\PhysicalMemory, specific SPI controller devices if exposed via drivers) and critical EFI variables (e.g., BootOrder, BootNext) stored in locations accessible for monitoring. Monitor for write/modify access attempts by processes not part of legitimate, whitelisted firmware update procedures (identified via Windows Event ID 4688 and associated command lines). Analyze frequency of access, process names, and user context. Use statistical analysis (e.g., IQR on access counts, frequency distributions of accessing processes) to identify anomalous access patterns potentially indicative of firmware manipulation for persistence."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading detection through system firmware modification?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense-Evasion",
    "indicators": [
      {
        "technique_id": "T1542.001",
        "name": "System Firmware",
        "evidence": [
          {
            "description": "Detection of known malicious firmware components (via hashes) or tools specifically designed to hook critical system functions, disable security software, or hide artifacts from the operating system.",
            "data_sources": [
              "Windows Event ID 4688 (with process hash logging enabled)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for process execution. Extract process hashes and compare against a CTI list of known firmware rootkits, bootkits, or specific tools (e.g., those associated with Equation Group, Hacking Team) that install firmware implants designed for defense evasion (e.g., those that manipulate MSRs, IDT, SSDT, or specifically target EDR/AV hooks at a low level). Alert on matches. Correlate with observed failures, modifications, or tampering of security tools on the endpoint."
          },
          {
            "description": "Execution of tools or scripts attempting to enumerate or modify UEFI variables, Boot Configuration Data (BCD), or Master Boot Record (MBR/VBR) in patterns associated with bypassing security boot mechanisms or hiding malicious boot-time activity.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for command-line execution of tools like `bcdedit.exe`, `bootice.exe`, or custom scripts interacting with EFI variables (e.g., via PowerShell cmdlets if available) or directly writing to boot sectors. Look for patterns like disabling secure boot options (e.g., `bcdedit /set {current} bootstatuspolicy ignoreallfailures`), modifying boot paths to load untrusted components (e.g., `bcdedit /set {guid} path \\path\\to\\malicious.efi`), or clearing boot logs. Baseline legitimate `bcdedit` usage and use regular expressions or correlation analysis to find suspicious command combinations or sequences, especially if executed by non-administrative users or unusual processes."
          },
          {
            "description": "Persistent network connections or processes initiated extremely early in the system boot sequence, before OS-level security monitoring tools and drivers are fully initialized, potentially indicating firmware-based C2 or stealthy payload execution.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688 (correlating with boot logs/timestamps)",
              "Windows System Event Log (for boot timestamps)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate system boot completion times (e.g., from Windows System Event Log Event ID 12 or 6005) with the earliest observed network activity (Zeek conn.log, filtering for specific host IPs) or process launch times (Windows Event ID 4688). Establish a baseline for earliest legitimate network/process activity post-boot. Investigate connections or processes starting significantly earlier than this baseline (e.g., within seconds of boot event), especially if connecting to unusual external destinations or if the process is unsigned/unknown. Use time-series analysis on the delta between boot completion and first network packet per host to detect behavioral shifts."
          },
          {
            "description": "Attempts to tamper with or disable host-based security sensors (e.g., EDR, AV) or their logging mechanisms, originating from processes with suspicious characteristics or following alerts related to potential firmware access or modification.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Security Event ID 4719 (System Audit Policy Changed)",
              "Windows System Event Log (for service stop/errors of security tools)"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 for processes attempting to stop services associated with security tools (e.g., `sc.exe stop <EDR_service_name>`, `taskkill /IM <AV_process_name>`), modify their registry keys to alter configuration, or unload their drivers. Correlate such attempts with processes previously flagged for suspicious firmware-related activity (e.g., execution of firmware flashing tools, access to physical memory). Monitor Windows Security Event ID 4719 for unauthorized changes to audit policy that could blind security monitoring. Monitor System Event Log for unexpected termination or errors of critical security services. Use correlation analysis to link these events to potential firmware compromise indicators or specific attacker toolsets."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]