[
  {
    "information_requirement": "Is the adversary collecting data from the network or systems using automated techniques?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1119",
        "name": "Automated Collection",
        "evidence": [
          {
            "description": "Execution of processes with file hashes or names known to be associated with specific automated collection tools or malware components.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process creation events (Windows Event ID 4688). Compare the file hash (if available from enhanced logging like Sysmon Event ID 1) and process name of newly created executables against a cyber threat intelligence (CTI) feed of known malicious collection tools (e.g., specific versions of WinRAR used by APTs, custom data gathering scripts). Alert on any matches and investigate the parent process and subsequent activity."
          },
          {
            "description": "Execution of scripting commands with parameter patterns characteristic of automated data collection, such as recursive directory listings piped to compression utilities.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor process command lines (Windows Event ID 4688) and PowerShell script block logs (Windows Event ID 4104) for patterns combining file discovery (`dir /s`, `Get-ChildItem -Recurse`), filtering by file type (`*.doc*`, `*.xls*`), and piping the results to an archival utility (`Compress-Archive`, `tar`, `7z`) or a staging file (`>> C:\\Users\\Public\\stage.dat`). Use regular expressions to detect these chained command patterns. Analyze the entropy of command lines or script blocks to detect potential obfuscation."
          },
          {
            "description": "A single process exhibits a high rate of file read operations across numerous directories, followed by file write operations to a single staging file or archive.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4663 for file read access (`Accesses: ReadData`). For each process, calculate the rate of unique file paths accessed within a short time window (e.g., 1 minute). Use statistical methods like the Inter-Quartile Range (IQR) or standard deviation from a learned baseline to flag processes with abnormally high file access rates. Correlate these high-access processes with subsequent file write events to a new file (especially with extensions like .zip, .rar, .7z, .tmp, .dat) or process creation events (Windows Event ID 4688) for known archiver tools. This chained sequence is a strong behavioral indicator of collection and staging."
          },
          {
            "description": "A process, especially one running non-interactively, accessing a wide variety of sensitive file types or locations such as user profiles, browser data stores, or document folders.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Define and maintain a weighted list of sensitive file extensions (`.doc*`, `.xls*`, `.ppt*`, `.pdf`, `.txt`, `.sql`, `.key`, `.pst`) and directory paths (`C:\\Users\\*\\Documents`, `*\\AppData\\Local\\Google\\Chrome\\User Data\\`). Monitor file access events (Windows Event ID 4663) and assign a risk score to processes based on the number and weight of sensitive files/paths they access. Analyze process creation events (Windows Event ID 4688) to determine if the process is non-interactive (e.g., spawned by a service or scheduled task). Flag processes with high cumulative risk scores that are operating non-interactively or outside of normal application behavior."
          },
          {
            "description": "A significant and anomalous increase in outbound network traffic volume or file transfers from an endpoint, temporally correlated with preceding high-volume file access or collection script execution.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of outbound network traffic volume (total bytes, connection count, and file transfer sizes via Zeek files.log) for each host using time series analysis. Monitor for statistically significant spikes in outbound traffic (e.g., > 3 standard deviations from the mean). Use correlation analysis to link these network anomalies with preceding host-based events within a defined time window (e.g., 15 minutes), such as high-rate file access (Windows Event ID 4663) or the execution of known collection command patterns (Windows Event ID 4688). A strong correlation between these events is a high-confidence indicator of collection followed by exfiltration."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]