[
  {
    "information_requirement": "Is the adversary establishing persistence using AppDomainManager hijacking?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1574.014",
        "name": "AppDomainManager",
        "evidence": [
          {
            "description": "A legitimate .NET process loads a DLL or initiates a network connection to a destination matching a known malicious hash, IP address, or domain associated with AppDomainManager payloads.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Correlate network connections (Zeek conn.log) from legitimate .NET processes against a CTI feed of known malicious IPs/domains. Separately, if DLL loading is logged (e.g., via Sysmon or advanced logging on Event ID 4688), compare file hashes of loaded assemblies against a feed of known malicious payloads. Alert on any matches."
          },
          {
            "description": "A process sets the core AppDomainManager environment variables (COMPLUS_AppDomainManager_Assembly, COMPLUS_AppDomainManager_Type) or modifies a .NET .config file to insert <appDomainManagerAssembly> tags.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Using regular expressions, monitor process command lines (Windows Event ID 4688) for the explicit setting of 'COMPLUS_AppDomainManager_...' variables. Monitor registry modifications (Windows Event ID 4657) to 'Environment' keys for the same variables. Monitor file modification events (Windows Event ID 4663 with SACLs) on .NET .config files for the insertion of '<appDomainManager...>' XML tags. Flag any of these specific, high-fidelity patterns."
          },
          {
            "description": "A .NET process, immediately after its startup, creates a new persistence mechanism (e.g., scheduled task, Run key) or exhibits anomalous network behavior inconsistent with its established baseline.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4698",
              "Windows Event ID 4657",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers",
              "Network devices"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of normal post-startup activity for critical .NET applications. Monitor for a .NET process creation event (Event ID 4688) followed shortly by the same process ID creating a scheduled task (Event ID 4698) or modifying a startup registry key (Event ID 4657). Concurrently, use time series analysis on Zeek conn.log data to detect anomalous network traffic (e.g., new destinations, unusual protocols, beaconing behavior) originating from the process. Correlate these behavioral anomalies with the process start time to identify hijacked processes."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting privilege escalation using AppDomainManager hijacking?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1574.014",
        "name": "AppDomainManager",
        "evidence": [
          {
            "description": "A high-privilege .NET process loads a DLL whose hash matches a known payload used for privilege escalation.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Identify critical, high-privilege .NET processes (e.g., services running as SYSTEM). If advanced logging is available to capture loaded modules per process, compare the hashes of all DLLs loaded by these processes against a threat intelligence database of known malicious files. Prioritize alerts for high-privilege processes loading known malicious code."
          },
          {
            "description": "A low-privilege process or user modifies the configuration or environment of a known high-privilege .NET application to enable AppDomainManager hijacking.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor for modification events targeting the .config files (Event ID 4663 with SACLs) or registry-based environment variables (Event ID 4657) of high-privilege .NET services. Correlate the event with the user/process context that initiated the change (from the event data). Flag and investigate any instance where a non-administrative user or process sets 'COMPLUS_AppDomainManager...' variables or modifies the .config file for a process that runs as SYSTEM or Administrator."
          },
          {
            "description": "A high-privilege .NET process (e.g., a Windows Service) spawns an unexpected child process, such as cmd.exe or powershell.exe, or performs sensitive actions like creating a new administrator account.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4720"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Establish a baseline of legitimate parent-child process relationships for high-privilege .NET applications and services. Monitor Windows Event ID 4688 for deviations, alerting when a trusted service spawns an interactive shell (cmd.exe, powershell.exe) or other anomalous processes. Monitor Windows Event ID 4720 (A user account was created) and correlate the creating process ID back to high-privilege .NET applications. Use frequency analysis to detect rare parent-child pairings or actions."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using AppDomainManager hijacking?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1574.014",
        "name": "AppDomainManager",
        "evidence": [
          {
            "description": "A trusted, allow-listed .NET process initiates a network connection to an IP address or domain known to be associated with malicious command and control (C2) infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "Network devices",
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Create a list of trusted, commonly allow-listed .NET processes (e.g., MSBuild.exe, InstallUtil.exe, w3wp.exe). Filter network connection logs (Zeek conn.log or Windows Event ID 5156) for outbound traffic from these specific processes. Inner join the destination IPs/domains from these connections with a high-confidence, continuously updated CTI feed of malicious C2 infrastructure. Any match is a high-fidelity indicator of a hijacked, trusted process."
          },
          {
            "description": "A script or loader process sets the AppDomainManager environment variables ('COMPLUS_...') specifically for a child process immediately before launching a legitimate, trusted .NET application.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Monitor Windows Event ID 4688 logs for command lines that contain both a command to set an environment variable (e.g., 'set COMPLUS_...') and launch a .NET application, or where a parent process's command line contains the variable setting and it immediately spawns the target .NET child. This sequential pattern of a parent process explicitly setting hijacking variables for a specific child process is a strong indicator of this evasion technique."
          },
          {
            "description": "A trusted .NET process, often used as a 'living-off-the-land' binary, performs anomalous file I/O, such as writing executables to disk or accessing sensitive user data, or attempts to tamper with security software.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "Endpoints",
              "Servers"
            ],
            "nai": "Insert site-specific NAI here",
            "action": "Baseline the normal file and registry access behavior for trusted .NET utilities (e.g., MSBuild.exe, aspnet_compiler.exe). Monitor for these processes performing anomalous file writes (Event ID 4663 with SACLs) to unusual locations (e.g., C:\\ProgramData, C:\\Users\\Public) or accessing browser credential stores. Additionally, monitor for these processes attempting to stop security services (via `sc` or `net` in Event ID 4688) or modify their registry configurations (Event ID 4657). Use correlation analysis to link these behaviors to a single process instance and flag deviations from baseline."
          }
        ]
      }
    ],
    "version": "2.1",
    "date_created": "2025-05-04",
    "last_updated": "2025-07-20",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]