[
  {
    "information_requirement": "Is the adversary attempting privilege escalation using thread local storage callbacks?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.005",
        "name": "Process Injection: Thread Local Storage",
        "evidence": [
          {
            "description": "A process with a known malicious SHA256 hash requests a handle with write or execute permissions (e.g., PROCESS_VM_WRITE, PROCESS_VM_OPERATION) to a critical system process such as lsass.exe, services.exe, or csrss.exe.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Privileged User Workstations",
            "action": [
              "Symbolic: Query for Windows Event ID 4656 where the 'Object Name' is a privileged process (lsass.exe, services.exe, wininit.exe) and the 'Accesses' field contains write/execute rights (e.g., 0x20, 0x8, 0x1000). Join the source 'Process ID' with process creation events (Windows Event ID 4688) to get the executable's hash. Alert if this hash matches a known-bad hash from threat intelligence feeds.",
              "Statistical: For all Windows Event ID 4656 events indicating a handle request to a privileged process, calculate the Shannon entropy of the source process path string. Establish a baseline entropy for paths of legitimate processes that access these privileged processes. A process path with an entropy score in the top 98th percentile, suggesting randomization or obfuscation, is anomalous. Alert on high-entropy source process paths requesting privileged access.",
              "Machine Learning: Develop a logistic regression model trained on labeled historical data (Windows Event ID 4656, 4688). Features should include: source process path entropy, a boolean for whether the source process is unsigned, a feature vector for requested access rights, a boolean for if the target process is privileged, and time of day. Use the model to classify each handle request event with a probability score of being malicious. Alert on events with a score greater than $$ P(malicious) > 0.9 $$."
            ]
          },
          {
            "description": "A process not signed by Microsoft or a trusted publisher requests a handle with write/execute access to a privileged process, and within 60 seconds, the target process initiates an outbound network connection or spawns an unexpected child process (e.g., cmd.exe).",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 5156",
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Enterprise DNS Servers, Network Egress Points",
            "action": [
              "Symbolic: Create a rule that triggers on Windows Event ID 4656 where the target process is privileged and the source process is not in a predefined list of trusted system processes. If this event is followed within 60 seconds by a Windows Event ID 5156 or Zeek conn.log event from the same host, where the application name matches the privileged target process, generate a high-severity alert.",
              "Statistical: For each privileged process (e.g., lsass.exe), build a baseline of normal child process relationships and network connection destinations over a 30-day period. For any handle request (Event ID 4656) with write access to these processes, monitor for subsequent child process creation (Event ID 4688) or network connections (Zeek conn.log). Calculate the rarity of the child process or destination IP. If the rarity score (e.g., inverse document frequency) exceeds a threshold (top 1% rarest), flag the sequence as suspicious.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., ARIMA) on the network traffic volume (bytes out) originating from privileged processes. A significant, unexplained spike in traffic volume following a write-access handle request (Event ID 4656) to that process should be flagged as an anomaly indicative of successful injection and command and control communication."
            ]
          },
          {
            "description": "A critical system process that typically does not initiate network connections (e.g., lsass.exe, smss.exe, wininit.exe) is observed making an outbound network connection in Zeek conn.log or Windows Event ID 5156.",
            "data_sources": [
              "Windows Event ID 5156",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Domain Controllers, DNS Servers",
            "action": [
              "Symbolic: Create a zero-tolerance rule: Alert on any Windows Event ID 5156 or Zeek conn.log record where the 'Application Name' or source process is 'lsass.exe', 'smss.exe', 'wininit.exe', or 'csrss.exe' and the destination IP is external to the corporate network.",
              "Statistical: For processes like 'services.exe' which may have legitimate but rare network activity, monitor for connections that are statistical outliers. Use a Z-score calculation on the daily connection count per destination port. A score of $$ Z > 3 $$ to a non-standard port indicates a potential anomaly. Correlate with DNS lookups for newly registered domains in Zeek dns.log.",
              "Machine Learning: Implement a one-class SVM (Support Vector Machine) model trained only on legitimate network connections from system processes. Any new connection that falls outside the learned boundary of 'normal' is classified as an anomaly. Features can include destination port, protocol, bytes sent, and JA3 hash from Zeek ssl.log."
            ]
          },
          {
            "description": "A process executing from a user-writable directory (e.g., C:\\Users\\*\\AppData\\*, C:\\ProgramData\\*, C:\\PerfLogs\\) or a path identified as a masquerade (e.g., C:\\Windows\\svchost.exe) requests a handle with PROCESS_ALL_ACCESS (0x1F0FFF) to a privileged process.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers, Application Servers",
            "action": [
              "Symbolic: From Windows Event ID 4688, get the path of the 'Creator Process Name'. Join with Windows Event ID 4656 on 'Process ID'. Alert if the process path matches a regex for suspicious locations (e.g., `^C:\\\\Users\\\\.*`, `^C:\\\\ProgramData\\\\.*`) and the handle request is for a privileged process with high-privilege access masks.",
              "Statistical: Calculate the frequency of all source process paths that request handles to privileged processes. Paths that fall below a 5th percentile frequency threshold are considered rare. Alert when a rare-path process requests write or execute access to a privileged process. This helps find outliers without predefining 'bad' paths.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on process execution events, using features like process path tokens, parent process name, and command-line arguments. Identify clusters of anomalous execution behavior. If a process from an anomalous cluster subsequently requests a handle to a privileged process (Event ID 4656), raise a high-confidence alert."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting defense evasion using thread local storage callbacks?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.005",
        "name": "Process Injection: Thread Local Storage",
        "evidence": [
          {
            "description": "A process with a SHA256 hash matching a threat intelligence feed requests a handle with write or execute permissions to a commonly abused legitimate process, such as explorer.exe, svchost.exe, or a web browser process (chrome.exe, firefox.exe).",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Enterprise Workstations and Servers, VDI Environments",
            "action": [
              "Symbolic: Upon a process creation event (Windows Event ID 4688), hash the executable file. If the hash is in a list of known malware, monitor for any subsequent handle requests (Windows Event ID 4656) from that process's PID to common host processes (explorer.exe, svchost.exe) with write access. Alert immediately.",
              "Statistical: Profile the set of source processes that request handles to 'svchost.exe'. Legitimate requesters are typically system processes like 'services.exe' or 'rpcss.exe'. Any source process name that is statistically rare (e.g., not in the top 95% of frequent requesters) should be flagged for investigation, especially if it requests write access.",
              "Machine Learning: Train a Random Forest classifier to predict if a handle request to a common process is part of an injection attempt. Features should include: source process name, source process path, parent of source process, and requested access mask. Use the model to score all requests to high-value injection targets like 'explorer.exe', alerting on high scores."
            ]
          },
          {
            "description": "Following a handle request with write access to a common parent process (e.g., explorer.exe), the parent process spawns a command-line interpreter (cmd.exe, powershell.exe) or a script interpreter (cscript.exe, wscript.exe), which is an unusual parent-child relationship.",
            "data_sources": [
              "Windows Event ID 4656",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers",
            "action": [
              "Symbolic: Create a rule that triggers when a write-access handle request (Event ID 4656) to 'explorer.exe' is followed within 60 seconds by a process creation event (Event ID 4688) where the 'Parent Process Name' is 'explorer.exe' and the 'New Process Name' is 'cmd.exe', 'powershell.exe', or 'pwsh.exe'.",
              "Statistical: For each common parent process (explorer.exe, chrome.exe, etc.), generate a frequency distribution of its child processes over a 30-day window. Alert when a child process is spawned that is in the bottom 5th percentile of frequency (a rare child). For example, if 'explorer.exe' spawning 'powershell.exe' occurs less than 0.01% of the time, it's a high-confidence indicator.",
              "Machine Learning: Use a graph-based anomaly detection algorithm on process lineage data. Represent processes as nodes and parent-child relationships as edges. Identify subgraphs that deviate structurally from the main process graph, such as a browser spawning a shell. Flag any handle request events that precede the creation of these anomalous subgraphs."
            ]
          },
          {
            "description": "A common interactive process (e.g., explorer.exe, chrome.exe) either spawns a command-line interpreter or initiates a network connection to an IP address or domain with a reputation score below a defined threshold, or to a destination not seen in the last 90 days.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress Points, DNS Servers",
            "action": [
              "Symbolic: Alert when a process creation event (Event ID 4688) shows a parent of 'explorer.exe' or 'chrome.exe' spawning 'powershell.exe' with a non-interactive or encoded command-line argument. Additionally, alert if Zeek conn.log shows a connection from a host running these processes to a destination IP on a threat intelligence blocklist.",
              "Statistical: For each host, maintain a stateful list of domains queried (from Zeek dns.log) over a rolling 30-day window. If a common process like a browser connects to a domain not on this list (a 'new' domain for that host), calculate the domain's Shannon entropy. A high entropy score (suggesting DGA) for a new domain is suspicious. Alert on connections to new, high-entropy domains.",
              "Machine Learning: Deploy a time-series model to forecast the expected number of network connections and data volume egressing from common applications. If the actual observed values significantly exceed the forecasted upper confidence bound, especially to new destinations, flag it as anomalous behavior potentially caused by code injection."
            ]
          },
          {
            "description": "A process not associated with software installation (e.g., not msiexec.exe, setup.exe) writes a new file with a PE header (.exe, .dll) to disk, and the original process subsequently requests a handle with write access to a common host process (e.g., svchost.exe).",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4656",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Download Directories, Temporary File Locations",
            "action": [
              "Symbolic: Create a rule that triggers on a file creation event (Sysmon Event ID 11) where the file is an executable and the creating process is not on an allowlist of installers/updaters. If that same process PID then generates a handle request (Windows Event ID 4656) with write access to another process within 5 minutes, alert on this 'drop and inject' behavior.",
              "Statistical: Build a frequency table of processes that create executable files. Any process outside the top 95% of common 'creator' processes (e.g., 'winword.exe' creating an .exe) is anomalous. Score the anomaly based on the rarity of the parent process and the file extension. A high score indicates a likely dropper.",
              "Machine Learning: Train a decision tree classifier to identify dropper behavior. Features would include: source process of file write, file extension, target directory of file write, and subsequent API calls made by the source process. A path in the tree leading to 'file_extension=.exe' and 'source_process=winword.exe' followed by a 'Process Injection' event would be classified as malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]