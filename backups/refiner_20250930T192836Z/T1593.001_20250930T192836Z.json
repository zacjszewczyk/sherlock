[
  {
    "information_requirement": "Is the adversary conducting reconnaissance using social media?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1593.001",
        "name": "Social Media",
        "evidence": [
          {
            "description": "An internal host makes outbound connections to known social media domains within a 60-minute window of communicating with an IP address or domain on a threat intelligence feed of known adversary infrastructure.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points of the network, such as firewalls and web proxies, where network traffic is monitored.",
            "action": [
              "Symbolic Logic: Correlate Zeek conn.log against a threat intelligence feed. For any internal IP (`id.orig_h`) that communicates with a known malicious destination, create a watch list for that IP for the next 60 minutes. If that same IP then initiates a connection to a domain categorized as social media, generate an alert.",
              "Statistical Method: For all hosts communicating with social media sites, calculate the Jaccard similarity between the set of external IPs they connect to and a set of known malicious IPs from a CTI feed. A non-zero Jaccard index indicates overlapping communication and should be flagged for review. Prioritize hosts with the highest similarity scores.",
              "Machine Learning: Use a graph-based analysis model where hosts, social media domains, and known malicious IPs are nodes. Create an edge between a host and an external IP if a connection occurs. Identify and score paths of length two (Host -> Malicious IP, Host -> Social Media IP). Use a community detection algorithm (e.g., Louvain Modularity) to find clusters of hosts exhibiting this behavior."
            ]
          },
          {
            "description": "A process is executed on a host with command-line arguments containing a social media URL and a script interpreter (e.g., python.exe, powershell.exe), or a network request to a social media site contains a User-Agent string associated with a known scraping tool or library.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and servers capable of running scripts; Network egress points where HTTP traffic is inspected.",
            "action": [
              "Symbolic Logic: Create a detection rule that triggers on Windows Event ID 4688 when `ProcessName` is a script interpreter (e.g., `powershell.exe`, `python.exe`, `curl.exe`) and `CommandLine` contains a social media domain (e.g., 'linkedin.com'). Additionally, create a rule for Zeek http.log where the `host` field is a social media domain and the `user_agent` field matches a list of known scraping tools (e.g., 'Scrapy', 'python-requests').",
              "Statistical Method: For all processes in Windows Event ID 4688, calculate the entropy of the command-line arguments. Unusually high entropy in commands invoking script interpreters and connecting to social media sites can indicate obfuscated or complex scraping commands. Alert on processes where the command-line entropy exceeds the 95th percentile for that specific process name.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on labeled data from Windows Event ID 4688 and Zeek http.log. Features could include process name, command-line length, presence of special characters, user-agent string, and destination domain category. The model will classify each event as 'benign browsing', 'benign scripting', or 'malicious scraping'."
            ]
          },
          {
            "description": "An internal IP address makes requests to a high number of unique URIs on a single social media domain at a regular, non-human interval, with session durations significantly shorter than the user population's average.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points where HTTP traffic is inspected; DNS servers resolving external domains.",
            "action": [
              "Symbolic Logic: For a given source IP (`id.orig_h`) and social media destination domain, trigger an alert if the number of unique URI requests in Zeek http.log exceeds 50 within a 5-minute window.",
              "Statistical Method: For each user session on a social media site (defined by source IP and destination domain over a time window), calculate the standard deviation of the time delta between consecutive GET requests. A very low standard deviation (e.g., below the 5th percentile of all sessions) suggests automated timing. Also, calculate the number of unique URIs visited per session and flag sessions exceeding the 98th percentile.",
              "Machine Learning: Apply time series analysis to the request rate for each source IP connecting to social media sites. Use an anomaly detection algorithm like Isolation Forest on the time series of request counts per minute. A sudden, sustained spike in requests that is flagged as an anomaly indicates probable scraping activity."
            ]
          },
          {
            "description": "A host categorized as a server (e.g., domain controller, database server, application server) initiates an outbound network connection to a domain classified as social media, which is a deviation from its established baseline of network destinations.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Server subnets; Critical infrastructure zones; DNS servers resolving external domains.",
            "action": [
              "Symbolic Logic: Maintain an asset list of server IP addresses and a list of social media domains. Create a rule that generates a high-severity alert whenever a source IP from the server list initiates a connection to a destination domain on the social media list, as recorded in Zeek dns.log or conn.log.",
              "Statistical Method: For each server, establish a baseline of destination domains and ports over a 30-day period. Calculate the frequency of each destination. Any connection to a social media domain will be a zero-frequency event for a properly baselined server and should be treated as a high-confidence anomaly.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) to group servers based on their network connection profiles (features could include destination IPs, ports, protocols, data volume). A server that initiates a connection to a social media site may be flagged as a noise point or cluster outlier, indicating a significant deviation in behavior that warrants investigation."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]