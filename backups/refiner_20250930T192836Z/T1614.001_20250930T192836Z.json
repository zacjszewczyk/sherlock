[
  {
    "information_requirement": "Is an adversary performing system language discovery to tailor their attack or evade detection? (TA0007 - Discovery)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1614.001",
        "name": "System Language Discovery",
        "evidence": [
          {
            "description": "A process creation event is recorded with a command line that contains an exact match to a known, high-confidence indicator for system language discovery.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Application Servers, Executive Workstations",
            "action": [
              "Symbolic Logic: Create a detection rule in the SIEM to monitor process creation events (Windows Event ID 4688, Sysmon Event ID 1) for exact command-line matches to a curated list of known malicious language discovery commands (e.g., `systeminfo | findstr /B /C:\"System Locale\"`, `wmic os get locale`, specific `rundll32.exe` calls). Alert on any match.",
              "Statistical Method: For processes that match broader patterns (e.g., `systeminfo`, `Get-Culture`), analyze the frequency of the parent process. Establish a baseline of common parent processes (e.g., `explorer.exe`, `cmd.exe` run interactively). Alert when the parent process is a low-frequency outlier (e.g., occurring in less than the 1st percentile of parent processes for this action), such as `winword.exe` or `mshta.exe`.",
              "Machine Learning: Develop a supervised classification model (e.g., Logistic Regression, Random Forest) trained on labeled command line execution data. Use features such as the process name, parent process name, command line length, presence of special characters (|, <, >), and n-grams from the command line string. Deploy the model to score new process creation events in real-time and alert when the probability of being malicious discovery activity exceeds a predefined threshold (e.g., > 0.9)."
            ]
          },
          {
            "description": "A PowerShell script execution event contains cmdlets or .NET calls associated with system language or locale discovery.",
            "data_sources": [
              "Windows Event ID 4104",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers with PowerShell v5+ enabled",
            "action": [
              "Symbolic Logic: Monitor PowerShell script block logs (Event ID 4104) for the presence of keywords like `Get-Culture`, `Get-UICulture`, `[System.Globalization.CultureInfo]`, `Get-WinSystemLocale`, and `Get-WinUserLanguage`. Trigger an alert on any match originating from an obfuscated or non-interactive script.",
              "Statistical Method: For each script block containing a language discovery keyword, calculate the entropy of the script block content. Establish a baseline entropy score for legitimate administrative scripts. Alert when the entropy score of a script block exceeds a high percentile (e.g., 95th percentile), indicating potential obfuscation often used to hide malicious reconnaissance.",
              "Machine Learning: Use a time-series analysis model (e.g., ARIMA, LSTM) to monitor the rate of PowerShell-based discovery events per host. Establish a baseline forecast for this activity. Generate an alert when the observed count of discovery events significantly deviates from the forecasted range, indicating a potential burst of automated reconnaissance activity."
            ]
          },
          {
            "description": "A process reads from specific Windows Registry keys that store system language, locale, or keyboard layout information.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Registry hives on all Windows Endpoints and Servers, particularly Domain Controllers and critical servers",
            "action": [
              "Symbolic Logic: Deploy a System Access Control List (SACL) or Sysmon configuration to monitor for read access (Windows Event ID 4663 or Sysmon Event ID 13) to the registry keys `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language`, `HKCU\\Control Panel\\International`, and `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layouts`. Create an allowlist of known-good processes (e.g., `explorer.exe`, `ctfmon.exe`, `LogonUI.exe`) and alert on any access from a process not on the list.",
              "Statistical Method: For all processes accessing the monitored registry keys, perform a frequency analysis on the process image path across the enterprise. Identify processes that are rare (e.g., appearing on < 1% of endpoints). Investigate any low-prevalence process accessing these keys, as it may indicate a custom malware implant.",
              "Machine Learning: Train an anomaly detection model (e.g., One-Class SVM or Isolation Forest) on features of processes accessing these registry keys, including process name, path, parent process, and user context. The model will learn the profile of 'normal' access. Deploy the model to score new access events and alert when an event is flagged as an anomaly."
            ]
          },
          {
            "description": "A process with suspicious characteristics (e.g., unsigned, running from a temporary directory) performs system language discovery within a short time after its creation.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104",
              "Sysmon Event ID 1",
              "Sysmon Event ID 13",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, particularly those of high-value targets; Public-facing web servers",
            "action": [
              "Symbolic Logic: Create a correlation rule that triggers when a process creation event (Sysmon Event ID 1) from an untrusted source (e.g., parent process is `winword.exe`, `excel.exe`, `outlook.exe`, or `wscript.exe`) is followed within 60 seconds by a language discovery action (e.g., specific command line, registry read) from the same process. Alert on this sequence.",
              "Statistical Method: Develop a risk scoring system. Assign points for suspicious attributes observed in process creation events: +10 for unsigned binary, +15 for executing from a user-writable path (e.g., `AppData`, `Temp`), +20 for a parent process like a browser or Office app. Assign +30 if the process subsequently performs a language discovery action. Establish a threshold (e.g., > 40 points) based on statistical analysis of historical alerts to separate noise from true positives. Alert when a process's cumulative score exceeds the threshold.",
              "Machine Learning: Implement a graph-based analysis model. Represent processes, files, registry keys, and network connections (from Zeek conn.log) as nodes, and their interactions as edges. Identify subgraphs where a newly created process node connects to a language-discovery-related registry or command-line node. Use graph algorithms to detect anomalous paths, such as a process spawned from an email attachment that then performs discovery and makes an external network connection. Flag these sequences as high-risk."
            ]
          },
          {
            "description": "System language discovery is observed as part of a larger sequence of reconnaissance activities performed by the same process or in the same user session.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Sysmon Event ID 13",
              "Sysmon Event ID 22"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Entire enterprise network, with focus on lateral movement paths between workstations and servers",
            "action": [
              "Symbolic Logic: Define a set of TTPs for host reconnaissance (e.g., `whoami`, `ipconfig /all`, `net user`, `tasklist`, `systeminfo`, T1614.001). Create a correlation rule that looks for 3 or more distinct reconnaissance TTPs executed by the same process (via ProcessGUID) or user session within a 10-minute window. An alert triggered by this rule indicates a broader, more deliberate reconnaissance campaign.",
              "Statistical Method: For each host, calculate the rate of unique discovery commands executed per hour. Use time-series analysis to establish a baseline rate. Alert when the rate exceeds a dynamic threshold, such as 3 standard deviations above the mean for that host, indicating an abnormal burst of reconnaissance activity.",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model or Recurrent Neural Network) trained on known attack sequences. Feed streams of security events (process creation, registry access, network connections) per host into the model. The model learns the probability of transitioning from one state (e.g., initial execution) to another (e.g., language discovery) and then to another (e.g., network enumeration). Alert when the model identifies a sequence of events with a high probability of matching a malicious reconnaissance pattern."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]