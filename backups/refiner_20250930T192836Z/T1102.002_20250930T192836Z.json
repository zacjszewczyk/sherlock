[
  {
    "information_requirement": "Is the adversary communicating with compromised systems via legitimate web services? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1102.002",
        "name": "Bidirectional Communication",
        "evidence": [
          {
            "description": "Observed network traffic matches a known malicious indicator (domain, IP, URL) associated with C2 over legitimate web services.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways, DNS resolvers, and forward proxy servers.",
            "action": [
              "Symbolic: Correlate Zeek logs (dns.log `query`, http.log `host`, conn.log `id.resp_h`) against a threat intelligence feed of known malicious domains and IP addresses used for C2 over web services. Generate an alert for any match.",
              "Statistical: For destinations identified as legitimate web services (e.g., github.com, pastebin.com), calculate the rarity of the full URI path (from Zeek http.log `uri`) across the enterprise over a 24-hour window. Flag URIs in the 99th percentile of rarity for further inspection.",
              "Machine Learning: Use a pre-trained classification model (e.g., a gradient boosting classifier) to score DNS queries and HTTP requests based on features like domain name length, entropy, TLD, and presence of keywords. Flag requests with a high maliciousness score that resolve to IPs of known legitimate web services."
            ]
          },
          {
            "description": "An HTTP request to a legitimate web service contains a User-Agent, URI path, or API call structure that matches patterns of known malware or C2 frameworks.",
            "data_sources": [
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways and forward proxy servers.",
            "action": [
              "Symbolic: Scan Zeek http.log `user_agent` and `uri` fields using a curated set of regular expressions that match C2 tool signatures (e.g., Cobalt Strike's Malleable C2 profiles, Empire's default user agents, known malicious API paths for services like Dropbox or Telegram). Alert on matches.",
              "Statistical: For each legitimate web service domain, establish a baseline of common User-Agent strings. Calculate the frequency of each User-Agent string seen connecting to these services. Flag connections using a User-Agent that falls below a 1% frequency threshold for that specific service.",
              "Machine Learning: Train a sequence-based model (e.g., an LSTM) on legitimate HTTP URI paths for high-traffic web services (e.g., `api.github.com`). Use the model to identify anomalous sequences or structures in new URI requests that deviate significantly from learned patterns, potentially indicating C2 commands embedded in the path."
            ]
          },
          {
            "description": "A network session to a legitimate web service exhibits anomalous data transfer characteristics, such as a high upload-to-download ratio, periodic 'heartbeat' timing, or high-entropy payloads.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress network gateways and network tap/span ports.",
            "action": [
              "Symbolic: Create a rule that flags any connection (Zeek conn.log) to a known web service domain where the data sent (`orig_bytes`) is greater than the data received (`resp_bytes`) by a factor of 10, and the total session duration is less than 5 seconds.",
              "Statistical: For each source host-destination service pair, calculate the standard deviation and mean of time deltas between consecutive connections over a 24-hour period. Flag pairs exhibiting a low standard deviation (e.g., less than 2 seconds) and a consistent mean (e.g., every 60 seconds), which indicates beaconing. Additionally, calculate the Shannon entropy of HTTP POST bodies; flag payloads with entropy scores above 7.5, suggesting encrypted or compressed data.",
              "Machine Learning: Use time series analysis (e.g., ARIMA) to model the expected data volume (bytes sent) from each host to popular web services. Flag any traffic spike that the model identifies as a significant anomaly (e.g., outside the 99% confidence interval)."
            ]
          },
          {
            "description": "A network connection to a legitimate web service is initiated by a process that is non-interactive, unsigned, running from an unusual path, or not typically associated with user-driven web browsing.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Workstations, servers (especially domain controllers and application servers), and virtual desktop infrastructure.",
            "action": [
              "Symbolic: Join Windows Event ID 4688 (Process Creation) with network connection logs (Zeek conn.log) on source IP and timestamp. Alert when a process such as `powershell.exe`, `cscript.exe`, `rundll32.exe`, or any executable running from `%APPDATA%` or `%TEMP%` initiates an external connection to a known web service domain (e.g., `*.github.com`, `*.dropbox.com`).",
              "Statistical: For each process name (e.g., `chrome.exe`, `svchost.exe`), build a baseline of common parent processes from Event ID 4688 `ParentProcessName`. Flag any network-initiating process that has a statistically rare parent (e.g., a `powershell.exe` spawned by `winword.exe` that then connects to Pastebin).",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features from process creation and network events: process name, command line arguments, parent process, destination domain, and port. Identify clusters of behavior that are small and isolated from the main clusters of benign activity. These outlier clusters represent anomalous process-network behavior chains."
            ]
          },
          {
            "description": "A server, such as a domain controller or database server, initiates outbound communication to a consumer-grade web service (e.g., social media, cloud storage, forums) that is not required for its business function.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Server subnets, critical asset network segments, and data center core.",
            "action": [
              "Symbolic: Create and maintain an explicit allow-list of required external destinations for each server role (e.g., a Domain Controller should only talk to Microsoft update servers). Alert on any connection from a server to a destination not on its specific allow-list, especially if the destination category is 'Social Media' or 'File Sharing'.",
              "Statistical: Profile the set of unique destination domains contacted by each server over a 30-day rolling window. Calculate the Jaccard similarity index between the set of domains for the current day and the set from the previous 30 days. A sharp drop in similarity indicates the server is contacting many new domains and should be investigated.",
              "Machine Learning: Train a one-class SVM model on the network traffic profile (features like destination domains, ports, protocols, data volume) for each server role during a known-good period. Use the trained model to classify new network connections as either 'in-profile' or 'out-of-profile' (anomalous). Flag all out-of-profile connections from critical servers for review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]