[
  {
    "information_requirement": "Is the adversary collecting sensitive data or information via messaging applications?",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1213.005",
        "name": "Messaging Applications",
        "evidence": [
          {
            "description": "A network connection from a corporate-managed device to an external IP address or domain, where the connection is attributed to a messaging application process and the destination is present on a threat intelligence feed of known malicious hosts or unapproved cloud storage providers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (e.g., Firewalls, Proxies), DNS Resolvers",
            "action": [
              "Symbolic: Join network flow data (Zeek conn.log) with DNS query data (Zeek dns.log) and TLS data (Zeek ssl.log) on the unique connection ID (uid). Filter for traffic associated with known messaging application domains. Compare the destination IP address (id.resp_h) and Server Name Indication (server_name) against a threat intelligence feed of known malicious C2 servers, TOR exit nodes, and unapproved cloud storage domains. Generate an alert for any match.",
              "Statistical: For each user, calculate the frequency of destination Autonomous System Numbers (ASNs) and countries for messaging application traffic over a 30-day rolling window. Identify connections where the destination ASN or country is rare for that user (e.g., appears in less than 1% of their historical connections). A high-risk score is assigned if a rare ASN/country is also associated with a high data volume.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) or isolation forest model on features from Zeek logs (conn, ssl, dns) for legitimate messaging traffic. Features should include: destination IP, destination port, SNI, data volume (orig_bytes + resp_bytes), connection duration, and protocol. Use the trained model to score new connections in real-time. Connections flagged as anomalous by the model indicate potential exfiltration to an unusual destination."
            ]
          },
          {
            "description": "A process creation event for a messaging application (e.g., slack.exe, msteams.exe) that includes command-line arguments for non-interactive use, file attachment, or channel specification, often associated with scripting.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints (Workstations, Laptops), Servers with Messaging Clients Installed",
            "action": [
              "Symbolic: Using process creation logs (Windows Event ID 4688), create a detection rule that searches for messaging application process names (e.g., slack.exe, msteams.exe, discord.exe) executed with command-line arguments matching known scripting patterns. Use regular expressions to find flags related to file uploads, channel posting, or API token usage (e.g., '--post-file', '--channel', '--token'). Alert on any match.",
              "Statistical: For each messaging application process, calculate the entropy of the command-line arguments. Establish a baseline entropy score for normal, interactive use. A significantly higher entropy score (e.g., > 2 standard deviations from the mean) can indicate the presence of encoded scripts, long file paths, or API tokens, suggesting automated activity. Also track the frequency of unique command-line argument combinations per user and flag rare combinations.",
              "Machine Learning: Develop a classification model (e.g., Logistic Regression, Random Forest) trained on labeled process creation events. Features should include: process name, parent process name, command-line argument length, argument entropy, and binary flags for the presence of specific keywords (e.g., 'http', 'api', 'upload'). The model will classify each launch event as 'benign' or 'suspicious automation'. Suspicious classifications trigger an investigation."
            ]
          },
          {
            "description": "The total volume of data uploaded (orig_bytes) or the count of files transferred via a messaging application by a single user or from a single host exceeds a statistically determined threshold based on historical behavior.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points",
            "action": [
              "Symbolic: Create a simple threshold rule that alerts when a single connection attributed to a messaging application exceeds a hard-coded data upload limit (e.g., 500 MB). This serves as a coarse, high-severity tripwire for unusually large single-session transfers.",
              "Statistical: For each user, calculate a 30-day rolling baseline of daily data upload volume (sum of `orig_bytes` in Zeek conn.log) and file transfer counts (count of events in Zeek files.log) associated with messaging applications. Generate an alert when a user's daily activity exceeds the 99th percentile of their historical baseline for either metric. This detects significant deviations from normal behavior.",
              "Machine Learning: Implement a time series anomaly detection model (e.g., ARIMA or Prophet) for each user's aggregate hourly data upload volume via messaging apps. The model will predict the expected data volume for the next hour based on historical patterns (e.g., time of day, day of week). An alert is triggered if the actual observed volume significantly exceeds the model's prediction confidence interval, indicating a potential bulk exfiltration event."
            ]
          },
          {
            "description": "A messaging application process is created by a non-human system account (e.g., NT AUTHORITY\\SYSTEM) or is spawned by a parent process that is not the standard interactive user shell (e.g., explorer.exe), such as wmic.exe, powershell.exe, or svchost.exe.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints, Application Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule using Windows Event ID 4688 data that triggers an alert if `NewProcessName` corresponds to a messaging application (e.g., 'slack.exe') AND (`SubjectLogonId` is '0x3e7' for SYSTEM or `ParentProcessName` is NOT 'explorer.exe' OR `ParentProcessName` IS IN ['powershell.exe', 'cmd.exe', 'wscript.exe', 'cscript.exe', 'svchost.exe', 'taskhostw.exe']).",
              "Statistical: Build a frequency table of all parent-child process relationships involving messaging applications across the enterprise over a 30-day period. Calculate the probability of each unique (Parent, Child) pair. Alert on the occurrence of low-probability pairs (e.g., P < 0.001), such as `(svchost.exe, slack.exe)`, which are highly anomalous and indicative of persistence or remote execution.",
              "Machine Learning: Train a graph-based anomaly detection model on process lineage data. Represent normal activity as a graph where nodes are processes and edges represent parent-child relationships. Use the model to identify new or structurally anomalous subgraphs, such as a messaging app being spawned deep within a process tree originating from a web server or a scheduled task, which deviates from the typical flat structure of `explorer.exe -> app.exe`."
            ]
          },
          {
            "description": "A network connection is initiated by a messaging application process to an internal IP address and port associated with sensitive services (e.g., file shares, database servers, source code repositories, domain controllers) that are not on an approved list of destinations for that application.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal Network Segments, Sensitive Data Enclaves (e.g., Database Zones, Developer Networks), User Endpoints",
            "action": [
              "Symbolic: Using host-based network connection logs (Windows Event ID 5156), create a rule that alerts when `Application` path points to a messaging client AND `DestAddress` is within an internal sensitive IP range (e.g., database subnet, domain controller subnet) AND `DestPort` is a service port (e.g., 445, 1433, 3389, 389) NOT on an explicit allow-list for that application.",
              "Statistical: For each messaging application, create a baseline of all internal destination IP addresses and ports it communicates with across the enterprise. Use frequency analysis to identify the top N most common destinations (likely API gateways or update servers). Generate a low-severity alert for any connection to an internal destination not in the top 99.9% of the frequency distribution, flagging it as a rare internal connection for investigation.",
              "Machine Learning: Use a community detection algorithm (e.g., Louvain Modularity) on a graph of internal network traffic, where nodes are hosts and edges are connections. Identify the 'community' or cluster that messaging applications normally belong to. An alert is triggered if a messaging application process creates a connection to a host in a different community (e.g., the 'database server' community or the 'domain controller' community), indicating a behavioral deviation."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]