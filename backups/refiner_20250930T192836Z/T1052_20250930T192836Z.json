[
  {
    "information_requirement": "Is the adversary exfiltrating data via a physical medium? (PIR)",
    "tactic_id": "TA0010",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1052",
        "name": "Exfiltration Over Physical Medium",
        "evidence": [
          {
            "description": "A file is written to a removable media device by a process whose executable hash matches a known-bad hash from threat intelligence feeds.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate endpoints (laptops, desktops), servers with USB access, privileged user workstations.",
            "action": [
              "Symbolic (IOC Match): On detection of a file write to removable media (Windows Event ID 4663 where Object Type is 'File' and Object Name contains a drive letter for removable media), extract the Process ID. Correlate with process creation logs (Windows Event ID 4688) to retrieve the full path of the creator process. Calculate the SHA256 hash of the creator process executable and query against a threat intelligence database of known malicious hashes. Generate a high-severity alert on any match.",
              "Statistical (Frequency Analysis): For processes writing to removable media, track the frequency of unique source file paths and parent processes. Establish a baseline for common processes (e.g., explorer.exe) and their typical write patterns. Flag processes that are rare writers to removable media (e.g., in the bottom 5th percentile of frequency) or parent processes that rarely spawn writers (e.g., wmiprvse.exe) as anomalous.",
              "Machine Learning (Classification): Develop a supervised machine learning classifier (e.g., Random Forest) trained on labeled historical data. Features could include process name, parent process name, file extension of the written file, and command line arguments. Use this model to score new write events in real-time, alerting on those classified as malicious with high confidence."
            ]
          },
          {
            "description": "A command-line interface or script is executed with arguments that explicitly copy files or directories from a sensitive internal location to a path on a removable media device.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints and servers with command-line auditing enabled, administrative jump boxes.",
            "action": [
              "Symbolic (Regex/Rule Match): Monitor process creation logs with command lines (Windows Event ID 4688, PowerShell Event ID 4104). Apply regular expressions to detect the use of file copy utilities (e.g., xcopy, robocopy, Copy-Item) where the source path is a sensitive directory (e.g., 'C:\\Users\\', 'C:\\inetpub\\') and the destination path corresponds to a removable drive pattern (e.g., 'E:\\', 'F:\\'). Alert on direct matches.",
              "Statistical (Argument Analysis): For all command-line copy operations, parse the arguments. Calculate the entropy of source and destination filenames/paths. Flag commands with unusually high path entropy (obfuscated) or those copying an anomalously high number of files (e.g., using *.* on a large directory) or specific sensitive file extensions (.pst, .sql) that deviate from the 95th percentile of normal copy operations for that user.",
              "Machine Learning (NLP/Sequence Analysis): Use a Natural Language Processing (NLP) model trained on malicious and benign command lines. Treat the command line as a sentence and arguments as tokens. Train the model to identify suspicious sequences, such as the combination of a sensitive source, a recursive copy flag, a force flag, and a removable media destination, to detect novel variations."
            ]
          },
          {
            "description": "A large archive file (.zip, .rar, .7z) is created on a local disk and is then immediately written to a removable media device within a short time window (e.g., under 5 minutes).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, file servers, and temporary directories on application servers.",
            "action": [
              "Symbolic (Correlation Rule): Create a SIEM correlation rule that triggers when two events occur within a 5-minute window from the same host: 1) A process creation (Windows Event ID 4688) for an archiving utility (7z.exe, WinRAR.exe, powershell.exe with 'Compress-Archive') creates a file with an archive extension. 2) A file write event (Windows Event ID 4663) where the object name from event 1 is written to a removable media path. Alert on this correlated sequence.",
              "Statistical (File Name Entropy & Size): When the symbolic correlation rule triggers, calculate the Shannon entropy of the archive filename; a high score suggests obfuscation. Compare the size of the archive to the user's/host's baseline of typical file writes to removable media. A sequence involving a high-entropy filename and a file size greater than the 98th percentile of historical writes should be considered high-risk.",
              "Machine Learning (Time-Series Anomaly Detection): Model the sequence of file system events (file create, file write, process create) as a time series for each host. Train a time-series anomaly detection model (e.g., LSTM Autoencoder) on benign activity. A sequence of 'create large archive -> write archive to USB' would generate a high reconstruction error, flagging it as a temporal anomaly."
            ]
          },
          {
            "description": "Anomalous volume, frequency, or type of data written to a removable storage device, deviating significantly from established baselines for the user or endpoint.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All endpoints with enabled object access auditing, particularly those used by privileged users or personnel in sensitive roles.",
            "action": [
              "Symbolic (Threshold Rule): For each removable media write event (Windows Event ID 4663), extract the file extension. Maintain a list of high-risk file extensions (e.g., .pst, .ost, .bak, .sql, .pfx, .kdbx). Create a rule that alerts if more than 10 files from this high-risk list are written to removable media by a single user within a one-hour window.",
              "Statistical (Multi-Metric Baselining): For each user-host pair, create a historical baseline of removable media write activity using Windows Event IDs 4663 and 4656. The baseline should include metrics like total data volume per hour, number of unique files written per hour, and file extension distribution. Monitor new activity and calculate a z-score for each metric against the baseline. An event where multiple metrics exceed a z-score of 3 indicates a significant deviation.",
              "Machine Learning (Clustering/Peer Group Analysis): Use an unsupervised clustering algorithm (e.g., DBSCAN) to group users based on their removable media usage patterns (volume, frequency, file types, time of day). A user whose behavior suddenly shifts from a 'Low-Volume Office Docs' cluster to a 'High-Volume Mixed Files' cluster, or becomes an outlier to their assigned cluster, is a strong candidate for investigation."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]