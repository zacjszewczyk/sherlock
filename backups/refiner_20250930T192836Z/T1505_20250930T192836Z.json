[
  {
    "information_requirement": "Is the adversary maintaining persistence by abusing server software components?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1505",
        "name": "Server Software Component",
        "evidence": [
          {
            "description": "A new file with an extension associated with server-side scripting (e.g., .aspx, .jsp, .dll, .php) is written to a server directory, and its hash matches a known malicious signature.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers (DMZ), Internal application servers (e.g., SharePoint, Confluence), Database servers (e.g., MSSQL, Oracle)",
            "action": [
              "Symbolic: Create a detection rule that triggers when a file write event (Windows Event ID 4663) is observed in a web-accessible directory (e.g., C:\\inetpub\\wwwroot\\) for a file with a script extension (.aspx, .jsp, .php). Compare the hash of the created file against a threat intelligence feed of known malicious web shells and backdoors. Alert on any match.",
              "Statistical: For each web and application server, establish a baseline of file extensions and parent processes that normally write to content or plugin directories. Calculate the frequency of different file extensions being written. Alert if a rarely seen file extension is written or if a file is written by an unusual parent process (e.g., a process other than a trusted installer or deployment service), flagging events that fall into a low-frequency percentile (e.g., <5%).",
              "ML: Train a classification model (e.g., Random Forest) on features from file creation events, including parent process name, command line, file path entropy, file extension, and time of day. The model will classify each file write event as 'benign' or 'malicious component'. Use this model to score new events in real-time and alert on high-probability classifications."
            ]
          },
          {
            "description": "A web server process (e.g., w3wp.exe, httpd.exe) writes a new executable or script file (.aspx, .php, .jsp, .cfm) to a directory it serves.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers (DMZ), Internal web application servers",
            "action": [
              "Symbolic: Create a rule to alert when a ProcessName matches a known web server process ('w3wp.exe', 'httpd.exe', 'tomcat.exe') and is associated with a file write event (Windows Event ID 4663) for a file with a scriptable extension (.aspx, .php, .jsp) into its own web-accessible directory path (e.g., 'inetpub\\wwwroot', '/var/www/html').",
              "Statistical: Establish a baseline for file write operations in web directories, profiling the parent processes, filenames, and file extensions. Calculate the Shannon entropy of filenames being written by web server processes; a high entropy score can indicate randomized filenames used by an adversary. Alert when a file write event's features (e.g., parent process, file extension) are statistical outliers (e.g., > 3 standard deviations from the mean frequency).",
              "ML: Use an unsupervised learning model, such as a one-class SVM or isolation forest, trained on legitimate file-write activities within web directories. Use features like parent process name, file path, file extension, and time of day. The model will identify and score new file-write events as anomalous if they deviate significantly from the learned 'normal' profile."
            ]
          },
          {
            "description": "A server application process (e.g., w3wp.exe, sqlservr.exe, httpd.exe) spawns a child process commonly used for command and control, reconnaissance, or execution, such as cmd.exe or powershell.exe.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web servers, Database servers, Application servers, Domain Controllers",
            "action": [
              "Symbolic: Create a detection rule that triggers when a ParentProcessName is in a list of server applications ('w3wp.exe', 'sqlservr.exe', 'httpd.exe', 'tomcat.exe', 'dns.exe') and the ProcessName is in a list of suspicious utilities ('cmd.exe', 'powershell.exe', 'whoami.exe', 'net.exe', 'certutil.exe', 'rundll32.exe').",
              "Statistical: For each server application process, build a baseline of all normally spawned child processes over a 30-day period. Calculate the frequency of each parent-child relationship. Generate an alert if a server process spawns a child process that has never been seen before or is in the bottom 5th percentile of frequency.",
              "ML: Train a classification model (e.g., Logistic Regression) to predict the likelihood of a parent-child process pair being malicious. Features should include the parent process name, child process name, command-line arguments of the child process, user context, and process integrity level. Use the model to provide a risk score for each process creation event on a server."
            ]
          },
          {
            "description": "A server process establishes a network connection with characteristics that deviate from its established baseline, such as communicating with a rare external IP, using a non-standard port, or exhibiting periodic 'heartbeat' traffic.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (Firewalls/Gateways), Server network interfaces, DNS servers",
            "action": [
              "Symbolic: Using Zeek conn.log, filter for connections originating from server IP addresses. Correlate the destination IP address, domain name (from Zeek dns.log), and port against threat intelligence lists of known C2 servers, TOR exit nodes, or malicious infrastructure. Alert on any match.",
              "Statistical: For each server process, baseline outbound network connections, profiling destination IPs/ASNs, ports, connection duration, and bytes transferred. Alert if a connection's destination IP falls into a low-prevalence ASN/country (e.g., seen in <1% of connections). Analyze the time intervals between connections to the same destination to detect beaconing (connections with low variance in inter-arrival time).",
              "ML: Apply a time-series forecasting model (e.g., ARIMA or LSTM) to the volume of outbound data per hour for each critical server process. An alert is generated if the actual data volume significantly exceeds the forecasted volume and its confidence interval. Additionally, use a clustering algorithm (e.g., DBSCAN) on connection metadata (port, protocol, destination ASN) to identify small clusters of anomalous connections that differ from the large cluster of normal activity."
            ]
          },
          {
            "description": "A write or permission modification event occurs on a critical server configuration file or binary (e.g., web.config, httpd.conf, php.ini) initiated by a non-standard administrative process or user account.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of critical web, application, and database servers",
            "action": [
              "Symbolic: Enable file system auditing on a watchlist of critical configuration files and directories. Create a rule to alert on any 'WriteData' or 'AppendData' access events (from Windows Event ID 4663) where the process name is not on an approved list of administrative tools or deployment scripts (e.g., 'TrustedInstaller.exe', 'ConfigurationManager.exe').",
              "Statistical: Establish a baseline of users and processes that modify critical configuration files. Profile the frequency of modifications per file and the time of day these changes occur. Alert if a modification occurs outside of standard business or maintenance hours (e.g., 3 AM on a Tuesday), or if the user/process performing the change is statistically rare (e.g., has never modified the file before).",
              "ML: Develop an anomaly detection model using an autoencoder trained on features of legitimate file modification events. Features would include: user account, source IP of user session, process making the change, time of day, and day of week. Events that cannot be accurately reconstructed by the model (i.e., have a high reconstruction error) are flagged as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]