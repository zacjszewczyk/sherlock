[
  {
    "information_requirement": "Is the adversary maintaining persistence using BITS jobs?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1197",
        "name": "BITS Jobs",
        "evidence": [
          {
            "description": "A BITS job is created to download a file from a URL/IP on a threat intelligence feed, or the executable designated to run upon job completion has a known malicious file hash.",
            "data_sources": [
              "Windows Event ID 4688",
              "Microsoft-Windows-Bits-Client/Operational Event IDs 16391, 59",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['User Workstations', 'Application Servers', 'Internet Gateway/Web Proxy']",
            "action": [
              "Symbolic Logic: Filter for process creations (Windows Event ID 4688) of `bitsadmin.exe` or BITS operational logs (Event ID 16391, 59) to extract download URLs and command-line specified executables. Cross-reference the destination URLs/IPs against a threat intelligence feed of malicious indicators. Separately, calculate the hash of any executable specified via `/SetNotifyCmdLine` and match it against a database of known malware hashes.",
              "Statistical Method: For each BITS download, analyze the public suffix of the source domain (e.g., .com, .org, .ru). Establish a baseline of frequently used suffixes within the organization. Alert on downloads from statistically rare or top-level domains (TLDs) associated with high risk, especially if the second-level domain is also new or has a low reputation score.",
              "Machine Learning: Develop a classification model (e.g., Random Forest) to score the maliciousness of a BITS download URL. Train the model on features such as URL length, path depth, query parameter count, character entropy (to detect randomization), and domain reputation (age, registration history). Apply the model to all URLs extracted from BITS job creation events and alert on high-scoring URLs."
            ]
          },
          {
            "description": "A BITS job is created using command-line arguments or PowerShell cmdlets that configure a program to execute upon job completion or error, establishing a persistence mechanism.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['User Workstations', 'Domain Controllers', 'Member Servers']",
            "action": [
              "Symbolic Logic: Create a detection rule for process command lines (Windows Event ID 4688) containing `bitsadmin.exe` and the `/SetNotifyCmdLine` parameter. Similarly, monitor PowerShell script block logs (Event ID 4104) for `Set-BitsTransfer` or `Start-BitsTransfer` cmdlets that include the `-NotificationCmdlet` parameter. Alert on all occurrences.",
              "Statistical Method: Establish a per-host and per-user baseline for the frequency of `bitsadmin.exe` execution. Alert on any execution where the command line includes persistence-related parameters (`/SetNotifyCmdLine`) and the executing user or host deviates significantly (e.g., > 3 standard deviations) from its established baseline for `bitsadmin` usage.",
              "Machine Learning: Use an anomaly detection model (e.g., an autoencoder) trained on sequences of command-line arguments for `bitsadmin.exe` and PowerShell cmdlets. The model learns normal administrative patterns. Flag command sequences that have a high reconstruction error, indicating a deviation from normalcy, such as the sudden appearance of persistence parameters combined with other unusual arguments."
            ]
          },
          {
            "description": "A BITS job exhibits anomalous properties, such as an exceptionally long lifetime or retry delay, particularly when created by an interactive user account instead of the SYSTEM account.",
            "data_sources": [
              "Microsoft-Windows-Bits-Client/Operational Event IDs 16391, 59",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['User Workstations', 'Member Servers']",
            "action": [
              "Symbolic Logic: Alert on any BITS job created by a non-SYSTEM account that has a specified lifetime greater than the default of 90 days or includes the `/SetNotifyCmdLine` parameter to execute a program.",
              "Statistical Method: Analyze all BITS job creation events to calculate the 95th percentile for job lifetime and retry delay values across the enterprise. Flag any new job whose lifetime or retry delay exceeds this threshold, assigning a higher risk score if the job is created by a non-SYSTEM account or transfers an executable file type.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on BITS job metadata (creating user context, lifetime, retry delay, file count, total transfer size). Identify and investigate small clusters of jobs that are outliers, as these are distinct from the large, dense clusters representing legitimate software update and system activities."
            ]
          },
          {
            "description": "A consistent, recurring time correlation is observed between a BITS job completion event and the subsequent execution of a suspicious process, especially if this sequence survives a system reboot.",
            "data_sources": [
              "Microsoft-Windows-Bits-Client/Operational Event ID 16387",
              "Windows Event ID 4688",
              "Windows Event ID 12"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['User Workstations', 'Critical Servers']",
            "action": [
              "Symbolic Logic: Create a SIEM correlation rule that triggers when a BITS job completion/error event (Event ID 16387) is followed within a 60-second window by a process creation event (Windows Event ID 4688) for an unsigned executable or a process running from a user-writable directory (e.g., %APPDATA%).",
              "Statistical Method: For a given host, analyze the time delta between all BITS completion events and subsequent process creations. A recurring, fixed time delta (low jitter) for a specific process is a strong indicator of a programmatic link. Track the frequency of processes executed immediately after BITS completion and flag statistically rare processes.",
              "Machine Learning: Utilize a sequence analysis model (e.g., Hidden Markov Model) trained on event logs to learn normal sequences of system activity. The model can calculate the probability of a given event sequence. Flag sequences where a BITS completion event is followed by a rare or suspicious process creation, as this would have a very low probability under the learned model of normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using BITS jobs for defense evasion?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1197",
        "name": "BITS Jobs",
        "evidence": [
          {
            "description": "Network traffic generated by the BITS service shows connections to, or file transfers with, external destinations (IPs, URLs, domains) that are present on threat intelligence feeds.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['Internet Gateway/Web Proxy', 'DNS Servers', 'Firewall Egress Points']",
            "action": [
              "Symbolic Logic: Filter `Zeek http.log` for all requests containing a `Microsoft BITS` User-Agent string. Extract the destination host, URL, and IP from these logs and the corresponding `conn.log` entries. Match these indicators against a continuously updated threat intelligence feed of known malicious C2 servers, drop zones, and newly registered domains. Alert on any match.",
              "Statistical Method: Baseline the expected geographic and ASN distribution of destinations for legitimate BITS traffic (e.g., Microsoft, Google, Adobe CDNs). Calculate a rarity score for the destination country and ASN of all BITS connections. Alert on traffic to destinations with a high rarity score.",
              "Machine Learning: Train a classification model (e.g., Gradient Boosting) on network connection features (destination IP/ASN/country, port, bytes out, bytes in, protocol, domain reputation) to distinguish between benign update traffic and malicious C2 or exfiltration traffic. Apply this model in real-time to all connections identified as BITS traffic."
            ]
          },
          {
            "description": "A BITS job is created with a custom User-Agent header to evade network-based detection, or it is given a display name intended to masquerade as a legitimate system process.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['User Workstations', 'Member Servers', 'Internet Gateway/Web Proxy']",
            "action": [
              "Symbolic Logic: Monitor `bitsadmin.exe` command lines (Windows Event ID 4688) for the `/SetCustomHeaders` parameter. In parallel, filter `Zeek http.log` for any HTTP requests where the User-Agent does not match the standard pattern 'Microsoft BITS/7.x' but the traffic originates from a BITS process. Alert on all findings.",
              "Statistical Method: Maintain a dictionary of legitimate BITS job display names. For each new job name observed, calculate its Levenshtein distance to all names in the dictionary. Flag names that are very close but not identical (e.g., 'Mircosoft Update'), as these may be typosquatting attempts. Also, flag job names with a very low frequency across the enterprise.",
              "Machine Learning: Use a pre-trained Natural Language Processing (NLP) model to generate vector embeddings for BITS job display names. Train a classifier on these embeddings to distinguish between legitimate names and masqueraded names. This can identify deceptive names that are semantically similar to legitimate ones but syntactically different."
            ]
          },
          {
            "description": "BITS is used to transfer files with anomalous characteristics, such as unusual file types (executables, scripts), outlier sizes, or destinations to non-standard directories, especially when initiated by an interactive user.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log",
              "Windows Event ID 4688",
              "Microsoft-Windows-Bits-Client/Operational Event IDs 59, 60"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['User Workstations', 'File Servers', 'Internet Gateway/Web Proxy']",
            "action": [
              "Symbolic Logic: Create a rule to alert when BITS is used to download or upload file types not on an explicit allowlist (e.g., `.cab`, `.msu`). Pay special attention to transfers of `.exe`, `.dll`, `.ps1`, `.zip`, and `.rar` files, especially if the creating user is not SYSTEM and the destination path is a user-writable directory like `%TEMP%` or `%PUBLIC%`.",
              "Statistical Method: For all BITS transfers, baseline the distribution of file sizes per file type. Use z-score or interquartile range (IQR) analysis to detect transfers with outlier sizes (e.g., a 50MB `.dat` file when the 99th percentile is 5MB). A high z-score indicates a statistically significant anomaly.",
              "Machine Learning: Use a clustering model (e.g., K-Means) on features of BITS file transfers (file MIME type, size, source/destination context, target directory path). Investigate small clusters that are distant from the large, central cluster representing legitimate update activity, as these represent anomalous transfer patterns."
            ]
          },
          {
            "description": "Network traffic associated with BITS jobs exhibits patterns indicative of C2 beaconing or data exfiltration, such as periodic, low-volume uploads ('low-and-slow') or connections to a large number of disparate, low-reputation domains.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "['Firewall Egress Points', 'Internet Gateway/Web Proxy', 'DNS Servers']",
            "action": [
              "Symbolic Logic: Alert when a single internal host uses BITS to connect to more than N (e.g., 20) distinct external domains within a 24-hour period, excluding domains on an allowlist of known CDNs and update services.",
              "Statistical Method: For each host, analyze the time series of BITS upload volume from `Zeek conn.log`. A pattern of small, periodic uploads with low variance in size and timing is characteristic of 'low-and-slow' exfiltration and differs from legitimate, bursty downloads. Separately, calculate the Shannon entropy of destination IPs for a host's BITS traffic over a rolling window; a sustained high entropy value is anomalous and may indicate DGA-based C2.",
              "Machine Learning: Apply a time series forecasting model (e.g., LSTM) to each host's BITS connection data (bytes in/out, connection count). The model learns the host's normal 'rhythm' of BITS activity. An alert is generated when observed activity significantly deviates from the model's forecast, indicating a potential C2 channel or exfiltration."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]