[
  {
    "information_requirement": "Is the adversary transferring tools or files into the network?",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1105",
        "name": "Ingress Tool Transfer",
        "evidence": [
          {
            "description": "A network connection is established with an external IP address, domain, or TLS/SSL certificate subject known to be malicious, or a transferred file's hash matches a known malicious signature.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, external-facing web proxies, and DNS resolvers.",
            "action": [
              "Symbolic: Correlate destination IPs from Zeek conn.log, `host` and `uri` fields from Zeek http.log, `query` field from Zeek dns.log, and `server_name` field from Zeek ssl.log against a threat intelligence feed of known command-and-control (C2) servers and malware distribution points. Alert on any match.",
              "Statistical: For files extracted via Zeek files.log, calculate the Shannon entropy of the filename. Compare the entropy score against a baseline of typical filenames seen on the network. Filenames with entropy scores exceeding the 99th percentile may indicate randomly generated malware dropper names and should be flagged for review.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on features from Zeek logs (e.g., destination port, protocol, connection duration, byte counts, JA3/JA3S hash, domain name length) to predict the probability of a connection being malicious. Flag connections with a high probability score for investigation."
            ]
          },
          {
            "description": "A command-line interface event is observed executing a built-in utility (e.g., powershell.exe, certutil.exe, bitsadmin.exe, curl.exe, wget.exe) with arguments or flags explicitly used for downloading files from a remote URL.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, application servers, and domain controllers.",
            "action": [
              "Symbolic: Using regular expressions, search process command lines (Windows Event ID 4688) for known download patterns, such as `powershell` with `(New-Object Net.WebClient).DownloadFile`, `Invoke-WebRequest -Uri`, `certutil.exe -urlcache -split -f`, and `bitsadmin.exe /transfer`. Alert on any matches.",
              "Statistical: For each process (e.g., powershell.exe), calculate the frequency of command-line argument combinations across the enterprise. Identify and score command lines containing arguments that are statistically rare (e.g., using a TF-IDF model on command-line tokens). High scores indicate anomalous usage.",
              "Machine Learning: Train a one-class SVM or an autoencoder on benign command-line invocations for common utilities like PowerShell and certutil. Use the trained model to detect anomalous command lines that deviate significantly from normal usage patterns, which could indicate novel or obfuscated download commands."
            ]
          },
          {
            "description": "A network connection exhibits a data transfer volume where the ratio of received bytes to total bytes is anomalously high (e.g., > 0.95) for the given service, protocol, or host profile, suggesting a large file download.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress and ingress points, and server farm network segments.",
            "action": [
              "Symbolic: For all non-HTTP/S TCP connections in Zeek conn.log, create a rule to flag any session where the responder bytes (`resp_bytes`) are greater than 10MB and the originator bytes (`orig_bytes`) are less than 1KB, indicating a large download with minimal client request data.",
              "Statistical: For each host and destination port pair, establish a historical baseline of the ingress-to-total-bytes ratio (`resp_bytes` / (`orig_bytes` + `resp_bytes`)). Alert on any connection where this ratio exceeds 3 standard deviations above the mean for its specific baseline profile.",
              "Machine Learning: Apply time-series analysis (e.g., ARIMA) to model the expected daily/hourly data transfer volume (ingress and egress) for critical assets. Flag periods where the actual ingress volume significantly deviates from the forecasted volume, indicating a potential unscheduled large file transfer."
            ]
          },
          {
            "description": "A process (e.g., an Office application, web browser) spawns a command-line interpreter or networking utility, which subsequently writes a new executable file to an uncommon or user-writable directory (e.g., %APPDATA%, C:\\Users\\Public\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, virtual desktop infrastructure (VDI) fleet, and servers with user-interactive sessions.",
            "action": [
              "Symbolic: Create a detection rule that triggers when a parent process from a list of common targets (e.g., WINWORD.EXE, EXCEL.EXE, OUTLOOK.EXE) spawns a child process from a list of download-capable utilities (e.g., powershell.exe, cmd.exe, certutil.exe, curl.exe).",
              "Statistical: Build a baseline of normal parent-child process relationships across the environment. Calculate the rarity of each observed parent-child pair. Flag any pairs that fall below a low frequency threshold (e.g., seen less than 5 times in the last 30 days enterprise-wide) for investigation.",
              "Machine Learning: Use a graph-based algorithm to model process execution chains. Train a model to identify anomalous subgraphs, such as a browser spawning a shell which then makes a network connection (Windows Event ID 5156). Score chains based on the rarity of the sequence and the attributes of the nodes (process name, path, command line)."
            ]
          },
          {
            "description": "A network connection is made to a domain associated with a non-corporate cloud storage, file sharing, or code repository service, and the connection is initiated by a non-browser process.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateways, DNS resolvers, and endpoint process monitoring.",
            "action": [
              "Symbolic: Maintain a list of unsanctioned domains (e.g., pastebin.com, mega.nz, discord.com/cdn-cgi/) and a list of non-browser processes (e.g., powershell.exe, cscript.exe, rundll32.exe). Alert when a process from the second list initiates a network connection to a domain in the first list.",
              "Statistical: Categorize all domains visited into categories (e.g., Search, Social Media, Sanctioned Cloud, Unsanctioned Cloud). For each host, build a profile of the percentage of traffic going to each category. Alert when a host's traffic to the 'Unsanctioned Cloud' category increases by more than 2 standard deviations from its historical baseline.",
              "Machine Learning: Use an unsupervised learning algorithm like DBSCAN to cluster hosts based on their web access patterns (features like domains visited, categories, data volume). Identify outlier hosts that do not belong to any major cluster, as their unique patterns may indicate connections to unusual file-sharing services."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]