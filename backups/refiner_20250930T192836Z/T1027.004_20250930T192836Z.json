[
  {
    "information_requirement": "Is the adversary compiling code on-host to evade standard defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.004",
        "name": "Compile After Delivery",
        "evidence": [
          {
            "description": "A source code file (e.g., .cs, .c, .cpp, .go) or a newly compiled executable is created on a host, and its file hash matches a known malicious signature.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Developer endpoints, Production servers, Temporary file directories",
            "action": [
              "Symbolic: Monitor process creation (Windows Event ID 4688) and file creation (Windows Event ID 4663). Upon creation of source code or executable files in user-writable locations (e.g., %APPDATA%, %TEMP%), compute the file hash. Alert if the hash matches an entry in a threat intelligence feed of known malicious compilers, source code payloads, or post-compilation artifacts.",
              "Statistical: For each host, establish a baseline of file creations by extension in user-writable paths. Calculate the daily frequency of source code file extensions (.cs, .c, .go, etc.). Alert if the count of a specific source code file type on a non-developer machine exceeds the 95th percentile of its 30-day historical baseline, indicating an unusual burst of development-related activity.",
              "Machine Learning: Use a classification model (e.g., Random Forest) to predict if a newly created executable is malicious. Train the model with features such as file path, file name entropy, parent process that created the file, and user context. Alert when the model classifies a new executable originating from a recent compilation with a high confidence score (>0.90)."
            ]
          },
          {
            "description": "A known compiler process (e.g., csc.exe, gcc.exe, MSBuild.exe) is executed with command-line arguments indicative of malicious activity, such as sourcing from or outputting to a temporary directory, or being launched by a non-developer parent process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, User endpoints, Software development environments",
            "action": [
              "Symbolic: Create a detection rule that monitors process creation (Windows Event ID 4688) for known compiler processes. Alert if the command line includes suspicious arguments (e.g., `/out:%TEMP%\\`, `/out:%PUBLIC%\\`) or if the parent process is not a typical development tool (e.g., parent is winword.exe, excel.exe, powershell.exe).",
              "Statistical: Profile normal compiler usage per user, establishing a baseline for parent processes, common command-line arguments, and execution frequency. Calculate the entropy of compiler command-line arguments. Alert when a compiler is executed by a parent process not seen in the last 90 days for that user, or if the command-line entropy is more than 3 standard deviations above the user's historical average.",
              "Machine Learning: Implement an anomaly detection model (e.g., Isolation Forest) on compiler process execution events. Use features including parent process name, process path, user, and tokenized command-line arguments. Train the model on data from known developer workstations. Flag any compiler execution that the model identifies as a significant outlier from legitimate developer behavior."
            ]
          },
          {
            "description": "A time-correlated sequence of events occurs on a single host: a source code file is written to disk, a compiler process is executed targeting that file, and the resulting compiled binary is executed within a short time window.",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, User workstations, Web application servers, CI/CD pipeline servers",
            "action": [
              "Symbolic: Create a stateful detection rule that triggers on the following sequence on a single host within 5 minutes: 1) File creation of a source code file (.cs, .c, etc.) in a non-project directory (Event ID 4663). 2) A compiler process starts with the source file as an argument (Event ID 4688). 3) A new executable is created (Event ID 4663). 4) The new executable process starts (Event ID 4688). Alert on the completion of this full chain.",
              "Statistical: Graph the relationship between file write events and subsequent process executions. Calculate the time delta between a source code file write and a compiler process execution targeting that file. Alert on any non-developer host where this compilation delta is anomalously short (e.g., under 10 seconds), suggesting automated activity, which is outside the 5th percentile of normal developer interaction times.",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model or RNN) to identify the 'source write -> compile -> execute' chain. Train the model on event sequences from benign developer activity versus known malicious TTPs. The model will analyze a stream of host events and calculate the probability of it belonging to a malicious compilation sequence, alerting when the probability exceeds a defined threshold."
            ]
          },
          {
            "description": "A newly compiled executable, identified through its creation and execution chain, initiates outbound network connections to an external, untrusted, or anomalous destination shortly after execution.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points (Firewalls/Gateways), DNS servers, Endpoint network stacks, Proxy logs",
            "action": [
              "Symbolic: Correlate the execution of a newly compiled binary (from Windows Event ID 4688) with network connection logs (Zeek conn.log) within 2 minutes of execution. Alert if the process connects to an IP on a threat intelligence blocklist, a DGA-flagged domain (from Zeek dns.log), or uses a non-standard port for a common protocol.",
              "Statistical: For a newly compiled executable, analyze its network connections from Zeek conn.log. Calculate the entropy of destination ports and the JA3/JA3S hash of any TLS connections. Alert if the process connects to a destination country not seen in the organization's traffic over the last 90 days or uses a JA3/JA3S hash with a low prevalence score (e.g., seen in <1% of connections), indicating non-standard client behavior.",
              "Machine Learning: Employ a time-series model (e.g., ARIMA) to forecast a host's expected outbound data volume. Use the 'newly compiled executable executed' event as an input. Alert if, following the event, the actual network traffic significantly deviates from the forecast (e.g., a spike in data sent or an increase in unique destination IPs), indicating the new binary caused an anomalous change in network behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]