[
  {
    "information_requirement": "Is the adversary collecting proprietary source code or unsecured credentials from internal or private code repositories? (PIR)",
    "tactic_id": "TA0009",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1213.003",
        "name": "Code Repositories",
        "evidence": [
          {
            "description": "A network connection is made from an internal host to a code repository URL, domain, or IP address present on a cyber threat intelligence (CTI) feed of known malicious infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Resolvers, Web Proxies",
            "action": [
              "Symbolic: Join network logs (Zeek conn.log, dns.log, http.log) against a CTI feed of known malicious repository URLs, domains, and IPs. Generate an alert for any match.",
              "Statistical: For domains not on a CTI list, calculate the public suffix (e.g., '.com', '.io', '.xyz') and registrar rarity against a baseline of legitimate traffic. Flag connections to repositories on statistically rare or new public suffixes or registrars, which are often used for malicious hosting.",
              "Machine Learning: Utilize a pre-trained classification model to score requested repository URLs based on lexical features (e.g., length, character entropy, presence of keywords like 'leaks'). Alert on URLs that are classified as malicious with high confidence."
            ]
          },
          {
            "description": "A process execution event shows a git client command with arguments used for mass data collection, such as `git clone --mirror` or fetching all branches and remotes.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Developer Workstations, CI/CD Build Servers, Production Servers with Git clients",
            "action": [
              "Symbolic: From Windows Event ID 4688 logs, create a rule to alert on process command lines containing `git.exe` followed by high-risk argument patterns like `clone --mirror`, `fetch --all`, `pull --all`, or `bundle create`.",
              "Statistical: For each user, establish a baseline of normal git command usage frequency. Calculate the z-score for the daily count of high-risk commands (e.g., `clone --mirror`). Alert when a user's usage of a high-risk command exceeds a threshold (e.g., z-score > 3), indicating a significant deviation from their normal behavior.",
              "Machine Learning: Employ a sequence analysis model (e.g., Hidden Markov Model) trained on normal developer command line histories. The model should flag command sequences that have a low probability of occurring, such as a `git clone` command immediately followed by the execution of a compression utility (`7z.exe`, `tar.exe`) and a network transfer tool (`scp.exe`, `curl.exe`)."
            ]
          },
          {
            "description": "A single user or host initiates a network connection to a known code repository that results in a data transfer volume significantly larger than their established behavioral baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal Code Repository Servers",
            "action": [
              "Symbolic: Using Zeek conn.log, create a rule to alert on any single connection to a known code repository IP address where the total bytes transferred (`orig_bytes` + `resp_bytes`) exceeds a static, high-watermark threshold (e.g., 1 GB).",
              "Statistical: For each source IP, create a historical baseline of bytes transferred to code repositories over a 30-day window. Calculate the 95th percentile of transfer volume per session. Alert when a new session's data transfer volume exceeds this established 95th percentile for that specific source IP.",
              "Machine Learning: Implement a time series forecasting model (e.g., ARIMA) for each host's aggregate daily data transfer to code repositories. The model will predict the expected data volume for the next 24 hours with a confidence interval. Generate an alert if the actual observed data volume exceeds the upper bound of the predicted confidence interval."
            ]
          },
          {
            "description": "A user account, particularly a privileged or service account, accesses a number of distinct code repositories or specific sensitive repositories that is inconsistent with their role-based access baseline.",
            "data_sources": [
              "Zeek http.log",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Internal Code Repository Servers, Web Proxies",
            "action": [
              "Symbolic: Maintain an explicit allow-list of users for repositories tagged as 'highly sensitive'. Additionally, maintain a block-list of account types (e.g., Domain Admins, service accounts) that should never access any code repository. Alert on any access that violates these two rules.",
              "Statistical: For each user, calculate the number of unique repositories accessed per week by parsing Zeek http.log `host` and `uri` fields. Establish a baseline and alert when a user's weekly count exceeds their 99th percentile, indicating they are accessing an unusually broad range of projects.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features derived from access logs (e.g., number of repos accessed, time of day, data volume). This will group users into peer groups with similar behavior (e.g., 'frontend-devs', 'backend-devs', 'devops'). An alert is generated when a user is classified as an outlier or when their activity causes them to shift to a different, unexpected cluster."
            ]
          },
          {
            "description": "The git client (`git.exe`) is executed on a host not designated for software development (e.g., a domain controller, finance workstation), especially when followed by data compression or archiving activity.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Finance Department Workstations, HR Department Workstations, Executive Laptops",
            "action": [
              "Symbolic: Create and maintain a static asset list of hosts where git execution is prohibited (e.g., domain controllers, executive workstations). Monitor Windows Event ID 4688 and generate a high-severity alert if `NewProcessName` is `git.exe` on any host in this list.",
              "Statistical: On each host, calculate the conditional probability of a compression utility (`7z.exe`, `rar.exe`, `zip.exe`) being executed within 15 minutes after `git.exe` is executed. Establish a baseline for this probability on known developer machines. Alert if this probability on any given machine significantly deviates (e.g., > 3 standard deviations) from the established developer baseline.",
              "Machine Learning: Train a binary classification model (e.g., Random Forest) to determine if a host is a 'developer workstation' based on features like installed software, running services, and historical process execution data. Run this model on all hosts. Generate an alert for any `git.exe` execution (Event ID 4688) on a host that the model classifies as 'non-developer' with high confidence."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]