[
  {
    "information_requirement": "Is the adversary attempting to evade defenses using VBA stomping?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1564.007",
        "name": "VBA Stomping",
        "evidence": [
          {
            "description": "An Office application initiates a network connection to a destination IP address or domain matching a known threat intelligence indicator, or a document file hash matches a known malicious signature.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 3",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate web proxy, Endpoint devices",
            "action": [
              "Symbolic: Join network connection logs (Zeek conn.log, Windows Event ID 3) with a threat intelligence feed of known malicious C2 IP addresses and domains. Alert on any match originating from an MS Office parent process (e.g., winword.exe, excel.exe).",
              "Statistical: For connections from Office applications, calculate the historical frequency of connections to specific destination Autonomous System Numbers (ASNs). Alert if a connection is made to an ASN that falls below the 5th percentile of historical frequency for that user or host, indicating an unusually rare destination.",
              "ML: Train a classification model (e.g., Logistic Regression, Random Forest) on labeled network connection data. Use features such as destination port, data volume, domain name length, domain entropy, and IP/domain reputation scores to classify in real-time whether a new connection from an Office application is likely malicious."
            ]
          },
          {
            "description": "A static file analysis tool detects a structural discrepancy between the VBA source code and the compiled p-code within an MS Office document, indicative of VBA stomping.",
            "data_sources": [
              "File analysis sandbox report",
              "Olevba JSON output",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Automated file analysis sandbox, Network egress points, Email gateway",
            "action": [
              "Symbolic: Automate the extraction of MS Office files from network traffic (Zeek files.log) or email attachments. Scan each file with a tool like `olevba` and create an alert if the tool's output explicitly contains the string 'VBA Stomping'.",
              "Statistical: For all documents containing macros, extract the ratio of source code lines to p-code instruction count. Establish a baseline distribution for this ratio across the enterprise. Flag any document where this ratio is a statistical outlier (e.g., > 3 standard deviations from the mean or a ratio of zero), suggesting the source code is missing or disproportionately small compared to the compiled code.",
              "ML: Develop a classifier trained on features extracted from VBA projects (e.g., presence of suspicious keywords like 'CreateObject', 'Shell', 'Write', count of auto-executing functions, source/p-code keyword mismatch count). Use this model to score documents for the likelihood of containing malicious macros, including stomped ones that might evade simple keyword searches."
            ]
          },
          {
            "description": "An MS Office application spawns an anomalous child process, such as a command-line interpreter, scripting engine, or living-off-the-land binary (LOLBAS).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Remote Desktop Session Hosts, Corporate servers with MS Office installed",
            "action": [
              "Symbolic: Create a detection rule that alerts when a parent process name (e.g., `winword.exe`, `excel.exe`, `powerpnt.exe`) spawns a child process from a high-risk list (e.g., `powershell.exe`, `cmd.exe`, `wscript.exe`, `mshta.exe`, `rundll32.exe`).",
              "Statistical: For each user, build a profile of normal parent-child process relationships originating from Office applications. Calculate the historical frequency of each unique relationship. Generate an alert if a new relationship occurs that has a zero or near-zero historical frequency for that user or their peer group (e.g., first time `excel.exe` has spawned `certutil.exe` for anyone in the Accounting department).",
              "ML: Use an unsupervised learning model, such as a one-class SVM, trained on benign process creation events. Features should include parent process name, child process name, command-line length, and command-line entropy. The model will identify any new process creation event that deviates significantly from the learned 'normal' behavior."
            ]
          },
          {
            "description": "An MS Office application initiates an outbound network connection with anomalous characteristics, such as an unusual destination, protocol, data volume, or connection timing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, Endpoint devices",
            "action": [
              "Symbolic: Alert when an MS Office application (e.g., `winword.exe`, `excel.exe`) initiates a network connection over a non-standard port for HTTP/S traffic (i.e., not TCP/80 or TCP/443) or to a raw IP address instead of a fully qualified domain name.",
              "Statistical: For each host, model the daily outbound data volume from Office applications. Alert if the daily volume exceeds a dynamic threshold, such as the 99th percentile of the host's previous 30-day traffic. Additionally, calculate the entropy of DNS query names originating from Office processes and alert on values significantly higher than the baseline, which may indicate DGA activity.",
              "ML: Apply a time-series anomaly detection algorithm (e.g., ARIMA or LSTM) to the frequency and volume of network connections from Office applications on a per-host basis. The model should learn the typical 'heartbeat' and daily rhythm of network activity and flag any significant deviations from this pattern, such as a sudden, sustained stream of connections or a large data upload outside of business hours."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]