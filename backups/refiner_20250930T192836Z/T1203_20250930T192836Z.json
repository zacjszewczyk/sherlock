[
  {
    "information_requirement": "Has the adversary executed code on client systems via exploitation?",
    "tactic_id": "TA0002",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1203",
        "name": "Exploitation for Client Execution",
        "evidence": [
          {
            "description": "A client workstation initiates an outbound network connection to a domain, IP address, or URL that is present on a threat intelligence feed for exploit kits, malware distribution, or phishing. This includes traffic patterns matching known exploit signatures.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Internet gateway/proxy, DNS servers",
            "action": [
              "Symbolic (IOC Match): Correlate destination IPs from `Zeek conn.log` and `host`/`uri` fields from `Zeek http.log` against a high-confidence threat intelligence feed of known malicious indicators (e.g., exploit kit C2s, malware distribution points). Alert on any match.",
              "Statistical (Long-Tail Analysis): For all domains requested in `Zeek dns.log`, calculate the Public Suffix List (PSL) + 1 level domain. Establish a baseline of the top 10,000 most frequently requested domains across the enterprise over a 30-day rolling window. Flag any connection to a domain not in the top 10,000 that also involves a file download of a common exploit target type (e.g., .pdf, .doc, .swf) identified in `Zeek files.log`.",
              "Machine Learning (Time-Series Anomaly): Train a time-series anomaly detection model (e.g., ARIMA, LSTM) on the volume of connections per user to newly observed domains (domains not seen in the previous 30 days). An anomalous spike in connections to new domains for a specific user, especially when correlated with alerts from other security tools, indicates potential drive-by compromise activity."
            ]
          },
          {
            "description": "A common client application (e.g., WINWORD.EXE, chrome.exe, ACRORD32.EXE) spawns a command-line interpreter (e.g., cmd.exe, powershell.exe) as a child process, and the command line arguments contain high-confidence indicators of malicious execution like obfuscated scripts or download commands.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Terminal servers/VDI instances",
            "action": [
              "Symbolic (Rule-Based): Create a detection rule that triggers when a Parent Process Name (e.g., 'WINWORD.EXE', 'EXCEL.EXE', 'ACRORD32.EXE', 'chrome.exe', 'msedge.exe') spawns a Process Name of 'cmd.exe', 'powershell.exe', 'wscript.exe', or 'cscript.exe'. Further filter for command lines containing keywords like '-enc', '-nop', '-w hidden', 'IEX', 'DownloadString', 'certutil', 'bitsadmin', or base64 encoded strings using regular expressions. Alert on any match.",
              "Statistical (Entropy): For each parent-child process relationship (e.g., 'WINWORD.EXE' -> 'powershell.exe'), calculate the entropy of the command-line arguments. Establish a baseline entropy score for legitimate command lines. Flag any instance where the command-line entropy exceeds a high percentile (e.g., 99th percentile), indicating likely obfuscation or encoding.",
              "Machine Learning (Classification): Use a pre-trained NLP classification model (e.g., a fine-tuned BERT model) to classify command-line arguments as benign or malicious. Feed all command lines from Event ID 4688 where the parent is a client application into the model. An output classification of 'malicious' with a high confidence score should trigger an alert for analyst review."
            ]
          },
          {
            "description": "A client application spawns a child process that has never been observed for that parent process, or is statistically rare across the enterprise (e.g., WINWORD.EXE spawning ftp.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, DNS servers",
            "action": [
              "Symbolic (Static List): Define a static list of known-bad or highly suspicious parent-child process relationships originating from client applications (e.g., 'ACRORD32.EXE' -> 'rundll32.exe', 'chrome.exe' -> 'regsvr32.exe'). Create a detection rule to alert on any exact match from this list.",
              "Statistical (Frequency Analysis): For each client parent process (e.g., 'WINWORD.EXE'), build a frequency table of all its child processes across the enterprise over a 30-day period. Alert when a parent process spawns a child process that falls below a rarity threshold (e.g., observed in less than 0.01% of instances for that parent), indicating a deviation from the established baseline.",
              "Machine Learning (Graph Anomaly): Develop a process relationship graph for the environment using all Event ID 4688 data. Use a graph-based anomaly detection algorithm to identify anomalous edges (parent-child process creations) that have low probability given the learned structure of the graph. Correlate these process anomalies with subsequent anomalous network connections (from `Zeek conn.log`) made by the child process."
            ]
          },
          {
            "description": "A client application process (e.g., chrome.exe, WINWORD.EXE) creates a new file with an executable extension (.exe, .dll, .ps1, .vbs) in a non-standard directory (e.g., %APPDATA%, C:\\Users\\Public\\), or a file whose MIME type does not match its extension.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File shares",
            "action": [
              "Symbolic (Path Match): Monitor Sysmon Event ID 11 (FileCreate) events where the `Image` (process creating the file) is a common client application. Create a rule to alert if the `TargetFilename` has an executable extension (e.g., .exe, .dll, .scr, .ps1, .bat) AND the file path is within a suspicious directory such as `%APPDATA%`, `C:\\Users\\Public\\`, or `C:\\Perflogs\\`.",
              "Statistical (Rarity): For each client application process, build a baseline of common file write locations and file extensions from Sysmon Event ID 11 data. Use frequency analysis to identify rare combinations of (process, file path, file extension). For example, flag an instance where `WINWORD.EXE` writes a `.dll` file to a location that accounts for less than 1% of its total file write locations.",
              "Machine Learning (Classification): For each file creation event (Sysmon Event ID 11), use a classification model trained on file headers (magic bytes) to predict the true file type. Compare the model's prediction with the file's extension. Alert on any mismatch, especially for files written by browser or document-reader processes (e.g., a file named 'report.pdf' that the model classifies as 'PE executable')."
            ]
          },
          {
            "description": "A client application process initiates an outbound network connection that deviates from its established baseline, characterized by one or more of the following: a destination port rarely used by that application, a connection to a raw IP address (bypassing DNS), or a connection to a domain with high character entropy.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Internet gateway/proxy, DNS servers",
            "action": [
              "Symbolic (Logic Rule): From `Zeek conn.log`, create a rule to alert when a connection's destination IP address has no corresponding preceding request in `Zeek dns.log` within a 5-minute window, indicating a direct-to-IP connection. Exclude known internal IP ranges and whitelisted services.",
              "Statistical (Distribution/Entropy): For each client application, profile the distribution of destination ports used in `Zeek conn.log`. Flag any connection to a port that falls outside the top 95th percentile of common ports. Additionally, calculate the Shannon entropy for all requested domains in `Zeek dns.log`. Alert on requests for domains with an entropy score above a dynamically calculated threshold (e.g., > 3.5), indicative of DGA.",
              "Machine Learning (Unsupervised Anomaly): Train a user-specific or application-specific unsupervised anomaly detection model (e.g., Isolation Forest, One-Class SVM) on network connection features from `Zeek conn.log` (e.g., destination port, protocol, data volume, connection duration). The model learns the 'normal' network behavior for each entity. Any connection flagged as an outlier by the model should be investigated as a potential C2 channel."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]