[
  {
    "information_requirement": "Is the adversary using HTML Smuggling to deliver malicious payloads and evade network defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.006",
        "name": "HTML Smuggling",
        "evidence": [
          {
            "description": "An HTML file is downloaded from a source IP address or domain matching threat intelligence, or the file's hash matches a known malicious payload.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Firewall, Web Proxy, Network Security Monitoring Sensor",
            "action": [
              "Symbolic Logic: Create a rule that triggers an alert when a `source_ip` from Zeek conn.log or a `host` from Zeek http.log matches an entry in a threat intelligence feed categorized as malicious or suspicious. Concurrently, for every file transaction in Zeek files.log with a MIME type of `text/html`, calculate its SHA256 hash and match it against a database of known malicious file hashes. An alert is generated on any match.",
              "Statistical Method: For each source IP address observed in Zeek conn.log, calculate the historical rarity of that IP communicating with the internal network. Using a percentile-based approach, flag connections from IPs in the 99th percentile of rarity (i.e., very rarely seen IPs) that are associated with HTML file downloads. Combine this score with the reputation of the IP's ASN to create a composite risk score.",
              "Machine Learning: Utilize a supervised classification model (e.g., a Gradient Boosting Machine) trained on labeled datasets of benign and malicious network connections. Features for the model should include IP/domain reputation scores, ASN details, time of day, bytes transferred, and historical connection frequency. The model will predict the probability that a new connection associated with an HTML download is malicious. Alert on predictions exceeding a high-confidence threshold, such as a probability greater than 0.9."
            ]
          },
          {
            "description": "HTML or JavaScript file content includes a co-occurrence of specific JavaScript keywords used for file creation (e.g., 'Blob', 'atob') and download initiation (e.g., 'msSaveOrOpenBlob', 'download' attribute, '.click()').",
            "data_sources": [
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Content Filter, Network Intrusion Detection System (IDS), Network Security Monitoring Sensor",
            "action": [
              "Symbolic Logic: Using Zeek file extraction, scan the content of all files with MIME types `text/html` and `application/javascript`. Apply a YARA or regular expression rule to detect the simultaneous presence of keywords from two sets within the same script block: Set A (creation) `{'Blob', 'atob', 'DataURL'}` and Set B (download) `{'msSaveOrOpenBlob', 'download=', '.click()'}`. An alert is generated upon a match.",
              "Statistical Method: For each HTML/JS file containing keywords from the symbolic rule, calculate the Shannon entropy of the script blocks. Establish a baseline entropy score for legitimate JavaScript on the network. Flag files where script blocks containing these keywords have an entropy score that exceeds the 95th percentile of the established baseline, indicating probable obfuscation or packing.",
              "Machine Learning: Train a text classification model, such as one using a bag-of-words approach with TF-IDF, on a labeled dataset of benign and malicious JavaScript files. The model should learn to classify scripts as 'smuggling' or 'benign' based on the sequence and frequency of function calls, string literals, and overall code structure. Apply this model to newly downloaded JS/HTML files to predict the likelihood of HTML smuggling activity."
            ]
          },
          {
            "description": "A downloaded HTML file is an outlier in terms of its size, ratio of script content to HTML, and embedded data characteristics, when compared to a baseline of typical HTML files on the network.",
            "data_sources": [
              "Zeek http.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring Sensor, Web Proxy",
            "action": [
              "Symbolic Logic: Create a rule that flags any downloaded `text/html` file where the file size in Zeek files.log exceeds a static threshold, such as 5MB, as legitimate HTML pages are rarely this large. This serves as a coarse, high-speed filter for unusually large files that may contain embedded payloads.",
              "Statistical Method: For all downloaded HTML files, establish a multi-metric baseline using a 30-day rolling window. The metrics are: 1) file size, 2) ratio of JavaScript code length to total file length, and 3) total length of Base64-encoded strings. For each new HTML file, calculate a Z-score for each metric against the established baseline. A file is considered anomalous if it exceeds 3 standard deviations (Z-score > 3) on two or more metrics simultaneously.",
              "Machine Learning: Use an unsupervised clustering algorithm, such as DBSCAN, to group downloaded HTML files based on a feature vector including file size, script-to-HTML ratio, number and size of encoded strings, and entropy. Analyze the resulting clusters. Small, dense clusters far from the main cluster of 'normal' web pages represent anomalous file types. Investigate any new file that is assigned to one of these anomalous clusters."
            ]
          },
          {
            "description": "A browser process (e.g., chrome.exe, msedge.exe) spawns a script interpreter or an unsigned executable from a user's download directory within a short time window following the download of an HTML, ZIP, or ISO file.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Virtual Desktop Infrastructure (VDI) fleet, Terminal Servers",
            "action": [
              "Symbolic Logic: Create a SIEM correlation rule that triggers when: 1) A file download event is observed in Zeek files.log for a file with a .html, .zip, .iso, or .js extension. 2) Within 60 seconds on the same host, a Windows Event ID 4688 (Process Creation) event is logged where the `ParentProcessName` is a browser (e.g., `chrome.exe`, `firefox.exe`, `msedge.exe`) and the `NewProcessName` is a script interpreter (e.g., `powershell.exe`, `wscript.exe`, `cscript.exe`) or the process path points to a file in a user's `Downloads` or `AppData\\Local\\Temp` directory.",
              "Statistical Method: Establish a baseline of parent-child process relationships originating from browsers for each user and across the enterprise. Calculate the frequency of each unique parent-child-commandline combination. Generate a low-frequency alert when a browser spawns a process that is statistically rare, such as in the bottom 5th percentile of observed combinations, especially if the child process command line contains suspicious arguments.",
              "Machine Learning: Develop a time-series anomaly detection model that monitors the rate of process creation events originating from browsers on a per-host basis. The model should learn the normal diurnal and weekly patterns of user activity. An alert is generated if a sudden, anomalous spike in browser-spawned child processes is detected, which could indicate a user has opened a malicious file that is rapidly executing commands or dropping additional files."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]