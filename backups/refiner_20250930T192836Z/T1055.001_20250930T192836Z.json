[
  {
    "information_requirement": "Is the adversary attempting to escalate privileges using process injection? (PIR)",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.001",
        "name": "Dynamic-link Library Injection",
        "evidence": [
          {
            "description": "A loaded DLL's file hash (SHA256/MD5) matches an entry in a threat intelligence feed, or its filename matches a known malicious pattern.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, User Workstations",
            "action": [
              "Symbolic: Continuously monitor Sysmon Event ID 7 (Image Load) events. Correlate the 'Hashes' field (e.g., SHA256) of the loaded DLL ('ImageLoaded') against a high-confidence threat intelligence feed. Generate a high-priority alert on any match.",
              "Statistical: For privileged processes (e.g., lsass.exe, winlogon.exe), create a baseline of all normally loaded DLLs. Use frequency analysis to identify the loading of a statistically rare or never-before-seen DLL into these processes. An event in the 1st percentile of load frequency for a given process warrants investigation.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from Sysmon Event ID 7, such as the parent process, target process, DLL signature status, and DLL path characteristics (entropy, length). Use the model to predict and score the likelihood of a DLL load event being malicious."
            ]
          },
          {
            "description": "A process loads an unsigned DLL, or a DLL whose internal 'OriginalFileName' metadata does not match its on-disk filename.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical System Servers, User Workstations",
            "action": [
              "Symbolic: Filter Sysmon Event ID 7 (Image Load) events where 'Signed' is 'false' and the target 'Image' is a system-critical process (e.g., lsass.exe, services.exe, svchost.exe). Create an alert for any such occurrence, excluding known legitimate unsigned DLLs.",
              "Statistical: Calculate the percentage of unsigned DLLs loaded by each process across the enterprise. Establish a baseline for each process. Use a Z-score or percentile threshold (e.g., > 99th percentile) to detect processes that suddenly begin loading an anomalously high proportion of unsigned DLLs.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on DLL load events, using features like signature status, target process integrity level, and DLL path. Identify clusters of unsigned DLL loads into high-integrity processes that are distinct from normal, benign clusters."
            ]
          },
          {
            "description": "A process running at a 'Low' or 'Medium' integrity level creates a remote thread in a process running at a 'High' or 'System' integrity level.",
            "data_sources": [
              "Windows Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers, Domain Controllers",
            "action": [
              "Symbolic: Create a rule to trigger on any Sysmon Event ID 8 (Create Remote Thread) event where 'SourceProcessIntegrityLevel' is 'Medium' or 'Low' and 'TargetProcessIntegrityLevel' is 'High' or 'System', excluding known benign source/target pairs (e.g., specific updaters, monitoring tools).",
              "Statistical: Build a frequency distribution of all source-target process pairs for remote thread creation. Identify and alert on pairs that are statistically rare (e.g., occur less than 5 times in the last 30 days) and involve an integrity level increase.",
              "Machine Learning: Develop a time-series anomaly detection model on the count of low-to-high integrity remote thread creations per host. An anomalous spike in these events on a given machine, compared to its own baseline and its peers, indicates a potential privilege escalation attack."
            ]
          },
          {
            "description": "A privileged system process (e.g., svchost.exe) loads a DLL from a non-standard file path, such as a user's profile directory, a temporary folder, or a network share.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File Servers, User Workstations, Application Servers",
            "action": [
              "Symbolic: Monitor Sysmon Event ID 7 (Image Load) events. Create an alert for any event where the target 'Image' is a privileged process (e.g., svchost.exe, explorer.exe) and the 'ImageLoaded' path matches a suspicious pattern (e.g., 'C:\\Users\\*', 'C:\\Windows\\Temp\\*', 'C:\\ProgramData\\*', '\\\\*\\*').",
              "Statistical: For each system-critical process, build a baseline of all legitimate DLL load paths. Calculate the Shannon entropy of the directory path and filename for each new DLL loaded. A high entropy score, exceeding a baseline threshold (e.g., 3 standard deviations above the mean), can indicate randomized paths used by malware.",
              "Machine Learning: Use a one-class SVM (Support Vector Machine) trained on legitimate DLL load paths for critical processes. Any new DLL load path that falls outside the learned boundary is classified as an anomaly and flagged for investigation."
            ]
          },
          {
            "description": "A process obtains write access to the memory of a target process, immediately followed by creating a remote thread in that same target process, within a short time window (e.g., under 1 second).",
            "data_sources": [
              "Windows Event ID 10",
              "Windows Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Servers hosting sensitive applications",
            "action": [
              "Symbolic: Correlate Sysmon Event ID 10 (Process Access) and Event ID 8 (Create Remote Thread). Trigger an alert when the same 'SourceImage' and 'TargetImage' pair appears in both events within a 1-second window, and the 'GrantedAccess' field in Event ID 10 contains flags for memory modification (e.g., '0x1F0FFF', 'PROCESS_VM_WRITE').",
              "Statistical: Analyze the time delta between process memory access (Event ID 10) and remote thread creation (Event ID 8) for the same source/target pairs. A distribution of these deltas will show a long tail; events in the lowest percentile (e.g., < 1st percentile) represent a tightly coupled, suspicious sequence.",
              "Machine Learning: Model the sequence of Sysmon events (ProcessAccess -> CreateRemoteThread) as a state transition. Train a Hidden Markov Model (HMM) on benign system activity. A sequence of events that has a low probability under the trained benign model indicates anomalous behavior consistent with process injection."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary attempting to evade defenses using process injection? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.001",
        "name": "Dynamic-link Library Injection",
        "evidence": [
          {
            "description": "A common, trusted process (e.g., chrome.exe, svchost.exe) loads a DLL whose file hash matches a known malicious artifact or whose file path is associated with adversarial tools.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Web Proxies, Application Servers",
            "action": [
              "Symbolic: Monitor Sysmon Event ID 7 (Image Load) events. Create an alert where the parent 'Image' is a common trusted process (e.g., chrome.exe, firefox.exe, explorer.exe, svchost.exe) and the 'Hashes' or 'ImageLoaded' path of the DLL matches a known IOC from a CTI feed.",
              "Statistical: For each trusted process, profile the set of DLLs it normally loads. Use a Jaccard index to compare the set of DLLs loaded during a short time window (e.g., one hour) to the established baseline. A low similarity score indicates a significant deviation and potential injection.",
              "Machine Learning: Train an autoencoder neural network on feature vectors representing legitimate DLL loads into trusted processes (features: process name, DLL name, path, signature). A high reconstruction error for a new DLL load event suggests it is anomalous and potentially malicious."
            ]
          },
          {
            "description": "A process is created with command-line arguments indicative of loading and executing a DLL, especially involving suspicious file paths or anomalous parent-child process relationships.",
            "data_sources": [
              "Windows Event ID 1",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Servers, Domain Controllers",
            "action": [
              "Symbolic: Monitor Sysmon Event ID 1 (Process Creation) for command lines containing 'rundll32.exe' followed by a path to a DLL in a non-standard location (e.g., Temp, AppData) or a DLL with a suspicious name. Also, search for process ancestry where a Microsoft Office application spawns cmd.exe or powershell.exe.",
              "Statistical: Calculate the rarity of parent-child process relationships across the enterprise. Alert on the creation of a process (e.g., rundll32.exe, powershell.exe) by a parent that rarely spawns it (e.g., winword.exe, excel.exe), especially if the command line arguments have high entropy.",
              "Machine Learning: Use a sequence-based model like an LSTM (Long Short-Term Memory) network to analyze process command-line arguments. Train the model on benign command lines and use it to flag commands that are syntactically or semantically anomalous, which is common with obfuscated injection commands."
            ]
          },
          {
            "description": "Following the load of an anomalous DLL, a process initiates network connections to a destination with a low reputation score, a non-standard port, or exhibits periodic, 'heartbeat'-like traffic patterns.",
            "data_sources": [
              "Windows Event ID 7",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, User Workstations",
            "action": [
              "Symbolic: Correlate a suspicious DLL load (from Sysmon Event ID 7) with subsequent network connections from the same process. Using Zeek dns.log and conn.log, check if the resolved domain or destination IP is on a threat intelligence blocklist. Alert on a match.",
              "Statistical: For a process that has loaded a suspicious DLL, analyze its subsequent network connections in Zeek conn.log. Profile the time intervals between connections and the size of the data packets. Use a Fourier transform to detect periodicity (beaconing). Alert if a strong, regular frequency is detected that is uncharacteristic for the process.",
              "Machine Learning: Train a time-series forecasting model (e.g., ARIMA) on the normal network traffic volume for trusted processes. After a suspicious DLL load is detected, if the subsequent network traffic deviates significantly from the forecasted model (i.e., the residual error is high), flag it as anomalous C2 activity."
            ]
          },
          {
            "description": "A process loads a DLL where the associated 'ImageLoaded' path in the event log is null, malformed, or points to a temporary/user-writable directory.",
            "data_sources": [
              "Windows Event ID 7"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Web Servers",
            "action": [
              "Symbolic: Filter Sysmon Event ID 7 (Image Load) events for entries where the 'ImageLoaded' field is null, empty, or does not conform to a standard file path format (e.g., lacks 'C:\\\\'). Alert on any such event, as it may indicate reflective or memory-only loading.",
              "Statistical: For common processes, build a profile of legitimate DLL load locations. For each new load event, calculate the frequency of the source directory across the enterprise for that process. Alert if a DLL is loaded from a directory in the bottom percentile of usage frequency (e.g., <1st percentile), such as a user's Downloads folder.",
              "Machine Learning: Use an anomaly detection model on DLL path features. Extract features like path depth, directory name entropy, presence of keywords ('Temp', 'AppData'), and filename entropy. An Isolation Forest model can efficiently identify outlier paths that do not conform to normal patterns."
            ]
          },
          {
            "description": "A process not associated with debugging or system management (e.g., a web browser, office application) creates a remote thread in another process.",
            "data_sources": [
              "Windows Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Terminal Servers",
            "action": [
              "Symbolic: Create a hunting query for Sysmon Event ID 8 (Create Remote Thread) where the 'SourceImage' is a common user application (e.g., chrome.exe, winword.exe, acrobat.exe) and the 'TargetImage' is another common process (e.g., svchost.exe, explorer.exe, notepad.exe). Exclude known good pairs from your baseline.",
              "Statistical: Create a frequency table of all SourceImage/TargetImage pairs for remote thread creation. Calculate a rarity score for each pair (e.g., 1 / frequency) and alert on scores above a defined threshold, indicating a statistically uncommon process interaction.",
              "Machine Learning: Apply a graph-based anomaly detection algorithm. Model processes as nodes and remote thread creations as directed edges. Use algorithms to find anomalous edges (rare source-target connections) or subgraphs that deviate from the normal process interaction graph of the enterprise."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]