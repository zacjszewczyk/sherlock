[
  {
    "information_requirement": "Is the adversary exfiltrating data from the network over unencrypted non-C2 protocols? (PIR)",
    "tactic_id": "TA0010",
    "tactic_name": "Exfiltration",
    "indicators": [
      {
        "technique_id": "T1048.003",
        "name": "Exfiltration Over Unencrypted Non-C2 Protocol",
        "evidence": [
          {
            "description": "An outbound connection over an unencrypted protocol (e.g., HTTP, FTP) is established to an external destination IP or domain present on a threat intelligence feed of known exfiltration points.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Egress points of the network (e.g., firewalls, web proxies), DNS resolvers",
            "action": [
              "Symbolic: Correlate destination IP addresses from `Zeek conn.log` (on ports 21, 80) and `Host` headers from `Zeek http.log` against a threat intelligence feed of known malicious domains/IPs. Generate a high-priority alert on any match.",
              "Statistical: Analyze `Zeek dns.log` to identify domains with low prevalence across the enterprise (i.e., requested by only a few hosts) or domains that are newly registered (e.g., less than 30 days old). Calculate the rarity of a given domain request and flag requests in the bottom 5th percentile of prevalence.",
              "Machine Learning: Train a classification model (e.g., a Random Forest) on features from `Zeek conn.log` and `Zeek dns.log`, such as domain name length, entropy of the domain, TLD, and historical prevalence, to predict if a destination is malicious. Use a labeled dataset of known good and bad domains for training."
            ]
          },
          {
            "description": "A process is created with command-line arguments containing syntax for command-line utilities (e.g., certutil, bitsadmin) known to be used for data exfiltration over unencrypted protocols.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (e.g., domain controllers, database servers), user workstations, particularly those of privileged users",
            "action": [
              "Symbolic: Use regular expressions to search `Windows Event ID 4688` (Process Creation) command lines for known exfiltration tools and patterns, such as `bitsadmin /transfer`, `certutil -urlcache`, `powershell ... (New-Object System.Net.WebClient).UploadFile`, and `curl -T`. Alert on any matches.",
              "Statistical: For each process name, calculate the entropy of its command-line arguments. Establish a baseline entropy score for common processes (e.g., `svchost.exe`, `powershell.exe`). Flag instances where the command-line entropy for a given process exceeds 2 standard deviations above its historical mean, which could indicate obfuscated scripts or encoded data.",
              "Machine Learning: Develop a sequence analysis model (e.g., an LSTM) to detect anomalous parent-child process relationships. Train the model on normal process execution chains. An alert is generated when a typically non-networking process (like `7z.exe`) spawns a networking process (like `curl.exe` or `powershell.exe`) with command-line arguments pointing to an external destination."
            ]
          },
          {
            "description": "An internal host's outbound data volume over an unencrypted protocol (HTTP, FTP) significantly exceeds its own established baseline or the baseline of its peer group.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, internal network segments containing sensitive data repositories",
            "action": [
              "Symbolic: Create a hard-threshold rule that alerts on any single outbound connection over HTTP/FTP from a user workstation that exceeds a fixed size, for example, 100MB. This serves as a simple, high-volume tripwire.",
              "Statistical: For each internal host, calculate a rolling 30-day baseline of outbound bytes (`orig_bytes` in `Zeek conn.log`) per protocol. Use percentile-based alerting to flag any host whose daily total outbound traffic exceeds the 99th percentile of its own historical baseline, or whose connection byte ratio (`orig_bytes` vs `resp_bytes`) is an outlier compared to its peers.",
              "Machine Learning: Implement a time series anomaly detection model (e.g., ARIMA) for each host's outbound data volume on unencrypted protocols. The model will forecast the expected data volume for the next hour/day. Generate an alert if the actual observed volume significantly deviates from the forecasted range, indicating an unexpected spike in data transfer."
            ]
          },
          {
            "description": "Data transferred over unencrypted protocols exhibits high Shannon entropy or a mismatched MIME type, indicating that staged data has been encoded or compressed prior to exfiltration.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network tap points capable of deep packet inspection, web proxies",
            "action": [
              "Symbolic: Analyze `Zeek files.log` for files transferred over HTTP. Alert if the `mime_type` is `application/octet-stream` but the file extension is `.txt` or `.html`, suggesting a mismatch. Also, search HTTP POST bodies for magic bytes of common archive formats (e.g., `PK`, `7z`).",
              "Statistical: Utilize the pre-calculated Shannon entropy value in `Zeek files.log` for files transferred over unencrypted protocols. Establish a baseline entropy for common file types. Alert on any file transfer where the entropy is anomalously high (e.g., > 7.5 for a file with a `.txt` extension), suggesting compression or encoding.",
              "Machine Learning: Train a classification model to distinguish between legitimate and suspicious HTTP POST requests. Features could include the size of the POST body, the calculated entropy of the body, the user-agent, and the destination domain's reputation. The model would classify each POST request as benign or potentially exfiltration."
            ]
          },
          {
            "description": "A sequence of events is observed on a host where file archival is immediately followed by a network connection from an unexpected process to an external destination over an unencrypted protocol.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint Detection and Response (EDR) agents on hosts, network flow collectors, SIEM correlation engine",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when, on the same host within a 5-minute window: 1) A process creation event (`Windows Event ID 4688`) for a known archiving tool (e.g., `7z.exe`, `rar.exe`) is observed, followed by 2) a network connection event (`Windows Event ID 5156` or `Zeek conn.log`) from a non-browser process to an external IP on an unencrypted port.",
              "Statistical: Profile the frequency of process chains on endpoints. Identify rare sequences, such as `cmd.exe` spawning `7z.exe`, which then spawns `powershell.exe`. Assign a risk score based on the statistical rarity of the full event chain (parent process -> child process -> grandchild network connection). Alert when the cumulative rarity score for a sequence exceeds a defined threshold.",
              "Machine Learning: Use a graph-based anomaly detection algorithm. Model host activity as a graph where nodes are processes, files, and network destinations, and edges are the interactions between them. Train the model on benign activity graphs. Flag new subgraphs that exhibit patterns learned from known attack data, such as a staging-and-exfiltration sequence, as anomalous."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]