[
  {
    "information_requirement": "Is the adversary communicating with external infrastructure using web protocols for command and control?",
    "tactic_id": "TA0011",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1071.001",
        "name": "Web Protocols",
        "evidence": [
          {
            "description": "An internal host establishes an HTTP/S connection with an external destination IP, domain, or SSL/TLS certificate fingerprint that is present on a high-confidence threat intelligence feed of known C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points, DNS Servers, Proxy Servers",
            "action": [
              "Symbolic/Rule-Based: Continuously match destination IPs from Zeek conn.log, host headers from Zeek http.log, and server_name/certificate fingerprints from Zeek ssl.log against a list of known-malicious indicators from a threat intelligence platform. Generate an alert upon any match.",
              "Statistical: Calculate the prevalence of each destination domain, IP, and SSL certificate subject across the enterprise over a 24-hour window. Flag indicators that are extremely rare (e.g., appearing in the bottom 1st percentile of prevalence) and not on an allow-list, as C2 infrastructure is often unique to a target.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on features from Zeek logs (domain name length, entropy, TLD, IP reputation, certificate age) and labeled threat intelligence data. Apply the model to all new outbound connections to predict the probability of a connection being malicious C2. Alert on connections with a high probability score (e.g., > 0.90)."
            ]
          },
          {
            "description": "An outbound HTTP/S connection contains a User-Agent string, URI path, query parameter structure, or a JA3/JA3S TLS fingerprint that matches a known signature for a C2 framework (e.g., Cobalt Strike, Metasploit).",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points, Proxy Servers, All Endpoints and Servers",
            "action": [
              "Symbolic/Rule-Based: Apply a set of regular expressions to the user_agent and uri fields in Zeek http.log to detect patterns associated with known C2 frameworks. Maintain and apply a blocklist of JA3 and JA3S hashes from Zeek ssl.log that are known to be used by malware. Generate an alert on any match.",
              "Statistical: For each unique JA3 hash observed, calculate its prevalence across the organization. Flag JA3 hashes that are exceptionally rare (e.g., seen on fewer than 5 hosts), as custom malware or specific C2 tools often result in unique TLS client fingerprints. Compare the observed JA3 hashes against a public repository to identify those not associated with legitimate applications.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on features extracted from the URI, such as length, query parameter count, and character entropy. Identify clusters of URIs that do not conform to the dominant patterns of legitimate web traffic. Manually investigate representative samples from these anomalous clusters to identify potential C2 channels."
            ]
          },
          {
            "description": "A sequence of outbound connections from a single internal host to a single external destination over HTTP/S occurs at highly regular time intervals with low jitter, characteristic of C2 beaconing.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points, All Endpoints and Servers",
            "action": [
              "Symbolic/Rule-Based: For each source-destination IP pair, calculate the time difference between consecutive connections. Alert if the time difference is consistently within a narrow range (e.g., 60s +/- 2s) for a sustained period (e.g., over 10 consecutive connections).",
              "Statistical: For each unique source-destination pair in Zeek conn.log over a 1-hour window, calculate the standard deviation of the time deltas between connections. Flag pairs where the standard deviation is extremely low (e.g., < 2 seconds), indicating machine-like periodicity. Filter out pairs communicating with known-good update services.",
              "Machine Learning: Apply a time-series decomposition model to the connection event stream for each source-destination pair to separate trend, seasonality, and residual components. A strong seasonal component with a consistent period and low residual error indicates predictable beaconing. Use an anomaly detection algorithm (e.g., Isolation Forest) on features like connection frequency, periodicity, and duration to identify pairs that are outliers compared to normal network traffic."
            ]
          },
          {
            "description": "An outbound HTTP/S connection is initiated by a process that is not a standard web browser or approved application, or the process is executing from a non-standard file path (e.g., a temporary directory).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Endpoints and Servers, Domain Controllers",
            "action": [
              "Symbolic/Rule-Based: Create a list of approved processes that are allowed to make outbound web requests (e.g., chrome.exe, firefox.exe, svchost.exe). Correlate network events (Windows Event ID 5156 or Zeek conn.log) with process creation events (Windows Event ID 4688) and alert when an unauthorized process (e.g., powershell.exe, rundll32.exe) initiates an outbound connection on port 80 or 443.",
              "Statistical: Build a baseline of parent-child process relationships for processes that make network connections. Calculate the frequency of each relationship. Flag rare or never-before-seen relationships, such as winword.exe spawning powershell.exe which then connects to the internet. Also, calculate the prevalence of process execution paths and flag processes initiating network connections from low-prevalence directories like %APPDATA% or C:\\Users\\Public\\.",
              "Machine Learning: Train a classification model (e.g., Decision Tree) on features of process execution events that lead to network connections. Features should include process name, command line arguments, parent process name, and execution path. Use the model to classify each new network-bound process as benign or suspicious. Suspicious classifications should be investigated as potential C2 activity."
            ]
          },
          {
            "description": "An HTTP/S transaction exhibits one or more anomalous features, such as high Shannon entropy in the URI or headers, a URI length significantly longer than the norm, or a connection byte ratio where outbound data volume is substantially greater than inbound data volume.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway/Egress Points, Proxy Servers",
            "action": [
              "Symbolic/Rule-Based: Define static thresholds for suspicious activity. For example, create an alert if the uri field in Zeek http.log exceeds 2000 characters, or if the ratio of orig_bytes to resp_bytes in Zeek conn.log is greater than 10 for a connection lasting more than 5 seconds, indicating potential data exfiltration.",
              "Statistical: For fields like uri, user_agent, and host in Zeek http.log, calculate a rolling 30-day baseline for length and Shannon entropy. Flag any connection where a value exceeds a dynamic threshold, such as the 99th percentile or 3 standard deviations above the mean. This adapts to normal changes in traffic while still finding outliers.",
              "Machine Learning: Use an autoencoder to learn a compressed representation of normal HTTP request features (URI length, parameter count, header count, entropy scores). For each new request, calculate its reconstruction error. A high reconstruction error indicates the request is anomalous and does not fit the learned model of 'normal' traffic, suggesting it may be C2. Cluster these high-error events to identify new C2 patterns."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]