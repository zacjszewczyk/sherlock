[
  {
    "information_requirement": "Has the adversary gained initial access to the network via Wi-Fi?",
    "tactic_id": "TA0001",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1669",
        "name": "Wi-Fi Networks",
        "evidence": [
          {
            "description": "A successful or failed Wi-Fi connection event where the client MAC address or the connected BSSID is present on a threat intelligence watchlist of known malicious or unauthorized devices.",
            "data_sources": [
              "RADIUS authentication logs",
              "Zeek conn.log",
              "Wireless controller event logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate wireless controllers, RADIUS authentication servers, Network monitoring sensors at Wi-Fi segment boundaries",
            "action": [
              "Symbolic: Continuously join incoming wireless connection logs (client MAC, BSSID) against a maintained watchlist of known-bad MAC addresses and BSSIDs from threat intelligence feeds. Generate a high-severity alert upon any match.",
              "Statistical: Profile the Organizationally Unique Identifier (OUI) of all connecting client MAC addresses. Calculate the frequency of each OUI seen over a 30-day period. Flag new connections from OUIs that are in the bottom 5th percentile of frequency for investigation as potentially unauthorized hardware.",
              "Machine Learning: Train a classification model (e.g., Random Forest) on features from historical connection logs, including OUI, time of day, AP location, and connection duration, labeled with known legitimate and previously identified unauthorized devices. Use the model to score new connections and alert on those with a high probability of being unauthorized."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) on an endpoint where the new process name or command-line arguments match a known Wi-Fi attack tool (e.g., 'aircrack-ng.exe', 'ettercap', 'kismet').",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All corporate endpoints (especially laptops and mobile devices), Domain Controllers and SIEM for log aggregation",
            "action": [
              "Symbolic: Monitor Windows Event ID 4688 process creation logs for a watchlist of process names and command-line arguments associated with Wi-Fi hacking tools (e.g., 'aircrack-ng', 'reaver', 'ettercap', 'wireshark', 'kismet', 'aireplay-ng', '--deauth'). Alert on any match.",
              "Statistical: Calculate the entropy of command-line arguments for common network utilities (e.g., netsh.exe). A command with unusually high entropy may indicate obfuscated or complex commands used for reconnaissance or attack setup. Flag commands exceeding the 95th percentile of historical entropy values for that process for analyst review.",
              "Machine Learning: Use a time-series anomaly detection model on Zeek conn.log data for a given host. If a suspicious process execution is detected via a symbolic rule, analyze the host's subsequent network traffic (connection count, protocol mix, destination diversity) in the minutes following the event. An anomalous spike in network scanning or connections to unusual ports post-execution strengthens the alert."
            ]
          },
          {
            "description": "A detected wireless access point broadcasting a corporate SSID (or a visually similar one, e.g., 'CorpNet' vs 'Corp-Net') where the BSSID is not on the authorized list, or its reported security configuration differs from the corporate standard.",
            "data_sources": [
              "Wireless Intrusion Detection System (WIDS/WIPS) logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Physical office locations with Wi-Fi coverage, Wireless Intrusion Prevention System (WIPS) sensors, Corporate wireless controllers",
            "action": [
              "Symbolic: Maintain a static inventory of authorized corporate access point BSSIDs and their expected SSIDs and security configurations. Continuously monitor WIPS/WIDS logs for any device broadcasting a corporate SSID from an unlisted BSSID or with a mismatched configuration (e.g., Open, WEP, different WPA2-PSK). Alert immediately on any discrepancy.",
              "Statistical: For all detected APs broadcasting a corporate SSID, track their reported signal strength (RSSI) over time from multiple sensor locations. A legitimate AP should have a stable RSSI profile. Use a change point detection algorithm on the RSSI time-series data to flag the sudden appearance of a new, persistent BSSID broadcasting a corporate SSID.",
              "Machine Learning: Use clustering analysis (e.g., DBSCAN) on the physical location and radio-frequency characteristics (channel, signal strength, security type) of all detected APs. Authorized APs should form tight, known clusters. A new AP appearing as a new cluster or an outlier, especially if it mimics a corporate SSID, is a strong indicator of a rogue AP."
            ]
          },
          {
            "description": "A statistically significant increase in the volume of failed 802.1X authentication events within a short time window, either from a single source MAC address or across the entire wireless network.",
            "data_sources": [
              "RADIUS authentication logs",
              "Wireless controller event logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "RADIUS authentication servers, Corporate wireless controllers",
            "action": [
              "Symbolic: Create a rule to count failed authentication attempts per source MAC address. If the count exceeds a simple threshold (e.g., >20 failures in 5 minutes) from a single MAC, generate an alert for a potential brute-force attack.",
              "Statistical: Establish a baseline of failed authentication counts per hour for the entire wireless network using a 30-day moving average and standard deviation. Generate an alert if the current hourly count exceeds a dynamic threshold, such as the mean plus three standard deviations, indicating a network-wide event like a deauthentication attack.",
              "Machine Learning: Apply a time-series forecasting model (e.g., ARIMA) to the stream of authentication failure events. If the observed number of failures significantly deviates from the forecasted range (i.e., exceeds the prediction interval), flag it as an anomaly indicative of a coordinated attack."
            ]
          },
          {
            "description": "A successful 802.1X authentication from a client MAC address that is not registered in the asset or NAC inventory. Alternatively, observing a single MAC address associated with two physically impossible locations simultaneously.",
            "data_sources": [
              "RADIUS authentication logs",
              "Zeek conn.log",
              "DHCP logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Access Control (NAC) system, Asset Management Database, DHCP servers, Network switches, Wireless controllers",
            "action": [
              "Symbolic: For every successful wireless connection event, perform a real-time lookup of the client MAC address against a centrally managed asset inventory or NAC database of authorized devices. Alert on any successful connection from an unregistered MAC address.",
              "Statistical: Profile the typical roaming behavior of devices by tracking the sequence of APs they connect to. A sudden, non-sequential jump (e.g., from an AP on floor 1 to an AP on floor 5 in seconds) is physically impossible and indicates MAC spoofing. Flag any roaming transition with a very low historical probability.",
              "Machine Learning: Develop a 'device fingerprint' using passive analysis of network traffic (e.g., DHCP options from DHCP logs, User-Agent strings from Zeek http.log). Train a model to associate MAC addresses with these fingerprints. If a known MAC address suddenly presents a new, mismatched fingerprint, flag it as a potential MAC spoofing event."
            ]
          },
          {
            "description": "A single host, identified by hostname, possessing active IP addresses on both a wired corporate subnet and a wireless subnet simultaneously, and observed routing traffic between these interfaces.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156",
              "DHCP logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Core network switches, Endpoint devices, DNS and DHCP servers, Domain Controllers",
            "action": [
              "Symbolic: From DHCP logs, create a list of hostnames that have requested an IP on both wired and wireless scopes. Correlate this list with Windows Event ID 5156 (WFP permitted connection) where the service is 'SharedAccess' (Internet Connection Sharing), which is a definitive indicator of bridging.",
              "Statistical: Using Zeek conn.log, identify hosts with multiple IP addresses on different subnets. For these hosts, calculate the ratio of bytes and connections initiated from the wired IP versus the wireless IP. A host acting as a bridge may show a sudden shift in this ratio or have an unusually balanced ratio compared to a baseline of non-bridging multi-homed systems.",
              "Machine Learning: Use graph-based analysis on network flow data (Zeek conn.log). Create a graph where nodes are hosts and edges are connections. A dual-homed bridging host will appear as a critical 'bridge' node connecting two otherwise disconnected subgraphs (the wired and wireless networks). Use a betweenness centrality algorithm to score nodes and flag those that act as critical bridges between network segments."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]