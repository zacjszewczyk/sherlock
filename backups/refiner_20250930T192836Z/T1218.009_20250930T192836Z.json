[
  {
    "information_requirement": "Is the adversary bypassing application control or other defenses by proxying code execution through Regsvcs.exe or Regasm.exe? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1218.009",
        "name": "Regsvcs-Regasm",
        "evidence": [
          {
            "description": "Execution of Regsvcs.exe or Regasm.exe with a command-line argument pointing to a DLL or EXE whose SHA256 hash is present on a threat intelligence feed of known malicious indicators.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, particularly those accessible by standard users and processing external files.",
            "action": [
              "Symbolic: From process creation events (Windows Event ID 4688 or Sysmon Event ID 1) for Regsvcs.exe or Regasm.exe, extract the file path of the library specified in the command line. Calculate or retrieve the file's SHA256 hash. Query your threat intelligence platform (TIP) or a local indicator database for a hash match. Alert on any positive match.",
              "Statistical: For each Regsvcs/Regasm execution, analyze the prevalence of the executed library's hash across the enterprise over the last 90 days. Calculate the rarity of the hash using a simple frequency count. Flag any hash that appears on fewer than a statistically determined low number of machines (e.g., < 3) for manual investigation as a potentially unique or targeted payload.",
              "Machine Learning: Develop a file reputation classification model. Train a model (e.g., a Gradient Boosting Classifier) using features extracted from the binary, such as PE header information, imported functions, string entropy, and section names, with labels from threat intelligence (malicious/benign). When a new library is registered by Regsvcs/Regasm, use this model to predict its likelihood of being malicious in real-time."
            ]
          },
          {
            "description": "Execution of Regsvcs.exe or Regasm.exe where the command-line argument specifies a file path located in a directory with a low historical frequency for such registrations (e.g., C:\\Users\\Public\\, %APPDATA%, %TEMP%, C:\\PerfLogs\\).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations and multi-user servers (e.g., Remote Desktop Session Hosts) where temporary or user-writable directories are common.",
            "action": [
              "Symbolic: Create a SIEM rule that triggers on process creation events for Regsvcs.exe or Regasm.exe where the command line contains a file path matching a regex for non-standard, user-writable, or temporary locations (e.g., '\\\\Users\\\\.*', '\\\\Temp\\\\', '\\\\Windows\\\\Tasks\\\\', '\\\\PerfLogs\\\\').",
              "Statistical: Build a baseline of legitimate directories from which Regsvcs/Regasm registers assemblies. For each new execution, calculate the historical frequency (e.g., percentile rank) of the directory path being used for this purpose across the enterprise. An execution involving a directory in the bottom 5th percentile of historical usage should be flagged as anomalous and scored for risk.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on the features of command-line invocations (path tokens, argument flags, length). Identify clusters of 'normal' behavior based on historical data. Flag any new invocation that does not belong to an established cluster (i.e., is identified as a noise point/outlier) as highly suspicious."
            ]
          },
          {
            "description": "Execution of Regsvcs.exe or Regasm.exe initiated by a parent process not typically associated with software installation or development, such as an Office application (winword.exe), script interpreter (powershell.exe, wscript.exe), or browser (chrome.exe).",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, particularly those of users in non-technical roles where development tools and installers are not expected.",
            "action": [
              "Symbolic: Deploy a detection rule that alerts when the parent process name for Regsvcs.exe or Regasm.exe is in a list of unauthorized initiators, such as 'winword.exe', 'excel.exe', 'outlook.exe', 'powershell.exe', 'wscript.exe', 'cscript.exe', 'mshta.exe'.",
              "Statistical: For each host, build a baseline of normal parent-child process relationships involving Regsvcs/Regasm. Calculate the probability of a given parent process spawning Regsvcs/Regasm. Alert when this probability is below a certain threshold (e.g., P(Regsvcs | Parent=winword.exe) < 0.01) or when the parent process is statistically rare for this action (e.g., has a frequency count of < 5 in the last 90 days).",
              "Machine Learning: Model process ancestry chains as sequences. Use a sequence anomaly detection model (like an LSTM autoencoder) trained on legitimate process chains from software installations and updates. When a new Regsvcs/Regasm execution occurs, feed its ancestry chain (e.g., Grandparent -> Parent -> Child) to the model. A high reconstruction error from the autoencoder indicates an anomalous and potentially malicious sequence."
            ]
          },
          {
            "description": "One or more network connections to an external IP address are initiated from a host within 5 minutes following a Regsvcs.exe or Regasm.exe execution, where the destination IP, port, or associated DNS query is statistically anomalous.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and individual host network stacks.",
            "action": [
              "Symbolic: Correlate Regsvcs/Regasm process creation events with subsequent network connection logs (Zeek conn.log) from the same host IP within a 5-minute window. Alert if the destination IP is on a blocklist or if a preceding DNS query (Zeek dns.log) was for a known malicious domain.",
              "Statistical: For network connections following a Regsvcs/Regasm execution, calculate the rarity of the destination IP, ASN, and country. Use a scoring system where connections to destinations seen for the first time or with a low historical frequency receive a high risk score. Additionally, calculate the character-frequency entropy of the domain name in preceding DNS queries; a high entropy score (e.g., $$ H(X) = -\\sum_{i=1}^{n} p(x_i) \\log_2 p(x_i) $$ > 3.5) can indicate Domain Generation Algorithm (DGA) activity.",
              "Machine Learning: Use a time-series anomaly detection model (e.g., SARIMA) on network traffic features (bytes out, connection duration, packets per second) for each host. After a Regsvcs/Regasm execution, monitor these metrics. An anomalous spike or change in pattern detected by the model within a short time window should trigger an alert, suggesting a C2 connection has been established."
            ]
          },
          {
            "description": "A behavioral chain is observed on a host within a 10-minute window, consisting of: 1) A DLL/EXE file is created in a user-writable directory. 2) The same file is registered using Regsvcs.exe or Regasm.exe. 3) The host initiates one or more external network connections.",
            "data_sources": [
              "Sysmon Event ID 11",
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, File Servers) and user workstations, requiring correlation between host and network sensors.",
            "action": [
              "Symbolic: Build a SIEM correlation rule that links three events by hostname and file path/name within a 10-minute window: 1. Sysmon Event ID 11 (FileCreate) where TargetFilename is a DLL/EXE in a temp/user directory. 2. Sysmon Event ID 1 (ProcessCreate) where ProcessName is Regsvcs/Regasm and CommandLine contains the same TargetFilename. 3. Zeek conn.log record where id.orig_h is the host IP and id.resp_h is an external IP.",
              "Statistical: Assign a risk score to each event in the potential chain. For example, FileCreate in %APPDATA% (score: 5), Regsvcs execution (score: 2), external connection to a rare IP (score: 10). Sum the scores for events occurring in a sequence within a defined time window. A cumulative score exceeding a statistically determined threshold (e.g., 95th percentile of all observed sequence scores) generates an alert.",
              "Machine Learning: Represent the sequence of events (FileCreate, ProcessCreate, NetworkConnect) and their attributes as a graph. Use a graph-based anomaly detection algorithm to identify sequences that deviate from a learned baseline of normal activity graphs. A subgraph with this specific pattern (write->register->connect) that is structurally different from normal software installation graphs would be flagged as malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]