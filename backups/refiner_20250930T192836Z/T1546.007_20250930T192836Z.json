[
  {
    "information_requirement": "Is the adversary establishing persistence via Netsh Helper DLL?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1546.007",
        "name": "Netsh Helper DLL",
        "evidence": [
          {
            "description": "A new DLL is registered under HKLM\\SOFTWARE\\Microsoft\\Netsh and its file hash or name matches a known malicious indicator.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, Standard User Workstations, Privileged User Workstations",
            "action": [
              "Symbolic: Create a rule that triggers on Windows Event ID 4657 for writes to keys under HKLM\\SOFTWARE\\Microsoft\\Netsh. Extract the DLL path from the event, retrieve the file, calculate its hash, and compare the hash and filename against a threat intelligence feed of known malicious DLLs. Alert on any match.",
              "Statistical: For each new DLL registered as a Netsh helper, calculate the entropy of its filename. Establish a baseline of filename entropy for legitimate helper DLLs (e.g., ifmon.dll, dhcpcore.dll). Flag any new DLL registration where the filename entropy exceeds the 95th percentile of the established baseline, as this often indicates randomized or packed malware.",
              "Machine Learning: Train a random forest classifier on features of newly registered Netsh helper DLLs, including file path location (e.g., system vs. user directory), presence of a valid digital signature, and filename entropy. Use the model to classify each new registration as 'benign' or 'suspicious', flagging the latter for analyst review."
            ]
          },
          {
            "description": "The process netsh.exe is executed with command-line arguments containing 'add helper' followed by a DLL path.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, Standard User Workstations",
            "action": [
              "Symbolic: Create a detection rule that monitors for Windows Event ID 4688 where the ProcessName is 'netsh.exe' and the CommandLine contains the substring 'add helper'. Immediately alert on this activity if the parent process is not cmd.exe, powershell.exe, or a known administrative tool.",
              "Statistical: For all 'netsh.exe add helper' executions, create a baseline of parent processes and user accounts where this activity is observed. Use a frequency analysis to identify rare combinations. Alert when a new execution involves a parent process or user account that has never performed this action before or is in the bottom 5th percentile of historical frequency.",
              "Machine Learning: Use a clustering algorithm like DBSCAN on 'netsh.exe add helper' events. Use features such as the user account's role (admin vs. standard), parent process name, and time of day. Identify clusters of normal administrative behavior and flag any new executions that are marked as noise or outliers by the algorithm, indicating a deviation from established patterns."
            ]
          },
          {
            "description": "A newly registered Netsh helper DLL exhibits anomalous characteristics, such as being located in a non-standard directory (e.g., C:\\Users\\), being unsigned, or having a low prevalence across the enterprise.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Enterprise-wide endpoint fleet, File servers hosting user profiles",
            "action": [
              "Symbolic: Upon detection of a new Netsh helper DLL registration (Event ID 4657), check if the DLL path is in a user-writable directory (e.g., C:\\Users, C:\\Temp, C:\\ProgramData). Programmatically verify the file's digital signature. Generate a high-severity alert if the DLL is both unsigned and located in a user-writable path.",
              "Statistical: Maintain an enterprise-wide inventory of all registered Netsh helper DLLs by their hash. Calculate the prevalence of each DLL (i.e., the number of hosts it's on). Flag any new DLL registration where its prevalence is a statistical outlier, for example, falling below the 1st percentile of prevalence counts across the environment.",
              "Machine Learning: Develop a time series anomaly detection model (e.g., ARIMA) on the daily count of new, unique Netsh helper DLLs being registered across the enterprise. An anomalous spike in the time series, particularly of low-prevalence DLLs, could indicate a widespread campaign and should trigger an investigation."
            ]
          },
          {
            "description": "A Netsh helper DLL registry modification is followed within a short time window by netsh.exe execution that spawns a suspicious child process or initiates an external network connection.",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host-based sensors on endpoints and servers, Network egress points (e.g., firewalls, proxies monitored by Zeek)",
            "action": [
              "Symbolic: Create a stateful detection rule that triggers when: (1) Event ID 4657 shows a write to HKLM\\SOFTWARE\\Microsoft\\Netsh, followed by (2) Event ID 4688 on the same host shows netsh.exe executing, which then (3) spawns a child process like powershell.exe or cmd.exe within a 10-minute window.",
              "Statistical: Following a Netsh helper DLL registration (Event ID 4657), monitor subsequent netsh.exe executions on that host. For any resulting network connections (Zeek conn.log), analyze the destination IP and port. Compare the destination against a baseline of common destinations for that host. Calculate a risk score based on the rarity of the destination IP, port, and a low DNS query frequency for the domain (from Zeek dns.log). Alert if the score exceeds a statistically-derived threshold.",
              "Machine Learning: Use a sequence analysis model (e.g., a Hidden Markov Model) trained on event logs (4657, 4688, Zeek conn.log). Define states for 'Netsh DLL Registration', 'Netsh Execution', 'Anomalous Child Process Spawn', and 'External C2 Connection'. The model can learn legitimate sequences and identify low-probability, high-risk sequences indicative of adversarial persistence."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary escalating privileges via Netsh Helper DLL?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1546.007",
        "name": "Netsh Helper DLL",
        "evidence": [
          {
            "description": "A known malicious DLL is registered as a Netsh helper, and the process performing the registry modification is running with non-administrative privileges (e.g., Medium Integrity Level).",
            "data_sources": [
              "Windows Event ID 4657",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard User Workstations, Multi-user servers (e.g., Remote Desktop Session Hosts)",
            "action": [
              "Symbolic: Create a rule that triggers on Event ID 4657 (Registry write to HKLM\\SOFTWARE\\Microsoft\\Netsh) where the SubjectUserName is not a member of a privileged group OR the ProcessIntegrityLevel is 'Medium'. Cross-reference the written DLL hash against threat intelligence and alert on a match.",
              "Statistical: Baseline the user accounts and integrity levels that legitimately modify the HKLM\\SOFTWARE\\Microsoft\\Netsh registry key. Flag any modification made by a user account that has never done so before. A modification by a standard user account (low frequency) is a high-scoring anomaly compared to one by a system administrator (high frequency).",
              "Machine Learning: Train a binary classifier (e.g., Logistic Regression) to predict if a Netsh registry modification is part of a privilege escalation attempt. Features should include: user privilege level, process integrity level, if the DLL is in a user-writable path, and if the DLL is unsigned. The model can identify high-risk events that combine multiple suspicious attributes."
            ]
          },
          {
            "description": "A process running with standard user privileges (e.g., Medium Integrity Level) executes netsh.exe with the 'add helper' command and specifies a DLL in a user-writable directory.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Standard User Workstations, VDI Environments",
            "action": [
              "Symbolic: Alert on any Windows Event ID 4688 where ProcessName is 'netsh.exe', CommandLine contains 'add helper', the ProcessIntegrityLevel is 'Medium', AND the DLL path specified in the command line matches a regex for user-writable directories (^C:\\\\Users\\\\.*, ^C:\\\\Temp\\\\.*).",
              "Statistical: Group all 'netsh.exe add helper' executions by SubjectUserName. For each user, calculate the percentage of executions where the specified DLL is in a non-system directory. Establish a baseline; for most administrators, this percentage should be near 0%. Flag any user whose percentage deviates significantly or any single instance from a user who has never performed this action before.",
              "Machine Learning: Use an anomaly detection model like Isolation Forest on 'netsh.exe add helper' events. Features should include: process integrity level (encoded), a boolean for whether the DLL path is user-writable, and the entropy of the parent process name. The model can quickly isolate events that do not conform to the normal profile of administrative activity."
            ]
          },
          {
            "description": "An instance of netsh.exe running with 'High' or 'System' integrity level spawns a child process that inherits the elevated integrity and is not part of a known legitimate software process.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, Privileged User Workstations",
            "action": [
              "Symbolic: Create a rule to detect Windows Event ID 4688 where ParentProcessName is 'netsh.exe' and the ProcessName is a suspicious utility (e.g., powershell.exe, cmd.exe, whoami.exe, reg.exe, sc.exe). Trigger only when the parent netsh.exe process was running with 'High' or 'System' integrity, and the child process inherited it.",
              "Statistical: Build a profile of normal child processes for netsh.exe. For each host, maintain a list of (child process name, command line) tuples spawned by netsh.exe. Use frequency analysis to identify rare child processes. Alert when netsh.exe spawns a child process that has never been seen before on that host or is in the bottom 1st percentile of prevalence across the enterprise.",
              "Machine Learning: Apply Natural Language Processing (NLP) techniques, such as TF-IDF, to the command lines of processes spawned by netsh.exe. Train a classifier to distinguish between benign administrative commands and suspicious commands involving user creation, service modification, or downloading files. Flag any command line classified as suspicious."
            ]
          },
          {
            "description": "A netsh.exe process running with 'High' or 'System' integrity loads a helper DLL where the DLL file or its registry key has permissions allowing modification by a non-administrative user group (e.g., 'Authenticated Users: Write').",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4657"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Host-based configuration and permission audit data from all endpoints and servers",
            "action": [
              "Symbolic: Create a periodic audit query that: (1) Enumerates all DLLs under HKLM\\SOFTWARE\\Microsoft\\Netsh. (2) For each DLL and its registry key, check its Access Control List (ACL). (3) Alert if any ACL grants write or modify permissions to non-privileged groups like 'Everyone', 'Users', or 'Authenticated Users'.",
              "Statistical: On a scheduled basis, scan all Netsh helper DLLs and their registry keys for their permissions. Score the 'insecurity' of the permissions (e.g., score of 10 for 'Everyone: Full Control'). Create a histogram of these scores across the enterprise. Investigate hosts with DLLs that are statistical outliers with high insecurity scores.",
              "Machine Learning: Use a classifier to predict vulnerable hosts. Train a model on host features (OS version, installed software, user roles) to predict the likelihood of insecure Netsh helper DLL configurations. Use this model to prioritize hosts for manual audit and remediation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]