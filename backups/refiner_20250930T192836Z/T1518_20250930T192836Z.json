[
  {
    "information_requirement": "Is an adversary performing reconnaissance of installed software on the network?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1518",
        "name": "Software Discovery",
        "evidence": [
          {
            "description": "A process is created with a file hash matching a known software discovery tool or script from threat intelligence feeds.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical Application Servers, Domain Controllers, Standard User Endpoints",
            "action": [
              "Symbolic: Query process creation logs (Windows Event ID 4688) where the process hash matches a curated list of known malicious hashes associated with discovery tools like Seatbelt, SharpHound, or other actor-specific toolkits. Generate a high-priority alert on any match.",
              "Statistical: For any executed process hash, calculate its prevalence across the enterprise over the last 30 days. A hash that has executed on fewer than 1% of hosts and is not associated with a known software deployment is a statistical anomaly requiring investigation.",
              "Machine Learning: Utilize a trained classification model that uses process attributes (e.g., parent process, user context, command line arguments, hash) as features to predict maliciousness. A known malicious hash match would serve as a high-weight feature, confirming the model's classification of the event as high-risk."
            ]
          },
          {
            "description": "Execution of built-in software discovery commands or PowerShell cmdlets by a process or user account not associated with legitimate administrative or inventory functions.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, PowerShell execution environments",
            "action": [
              "Symbolic: Create a detection rule that searches process command lines (Windows Event ID 4688) and PowerShell script blocks (Windows Event ID 4104) for regular expressions matching commands such as 'wmic product get', 'Get-ItemProperty HKLM:\\\\Software\\\\*\\\\Uninstall', 'Get-Package', 'dpkg --list', or 'rpm -qa'. Alert if the parent process is not a known IT management tool (e.g., sccm.exe) or the executing user is not part of a designated IT administrator group.",
              "Statistical: For each host and user, establish a historical baseline of the frequency and variety of discovery commands executed. Calculate the daily command count and the entropy of the command strings. Generate an alert when the daily count exceeds the 95th percentile of the historical baseline or when the command entropy score spikes, indicating a broader-than-usual set of enumeration commands.",
              "Machine Learning: Employ a time-series anomaly detection model (e.g., ARIMA) on the frequency of discovery-related command executions per host. An anomalous spike that deviates significantly from the forecasted pattern suggests potential adversary reconnaissance and should be flagged."
            ]
          },
          {
            "description": "A single process makes an unusually high number of read requests to registry keys under 'HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\' or other software-related hives within a short time frame.",
            "data_sources": [
              "Windows Event ID 4663",
              "Sysmon Event ID 12",
              "Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Windows Registry on all endpoints and servers, Endpoint security agent logs",
            "action": [
              "Symbolic: Monitor for a process not on an allowlist of inventory tools (e.g., msiexec.exe, trustedinstaller.exe) that generates more than 50 registry read events (Sysmon Event ID 12/13 or Windows Event ID 4663 with Object Auditing enabled) targeting keys under 'HKLM:\\SOFTWARE' within a 1-minute window.",
              "Statistical: For each process on each host, calculate the rate of registry queries to software-related hives. Establish a per-process baseline (e.g., mean and standard deviation of queries per minute). Generate an alert if the query rate for a given process exceeds 3 standard deviations above its established mean, indicating rapid enumeration activity.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on process behavior, with features such as registry query volume, target hive path entropy, and parent process name. Processes that fall into sparse, anomalous clusters characterized by high-volume 'Uninstall' key queries should be flagged as outliers for investigation."
            ]
          },
          {
            "description": "A host, after exhibiting local software discovery behavior, either initiates an unusual pattern of internal network connections or exfiltrates a small data file consistent with an enumerated software list.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewalls, Proxies), Internal Network Segments (Core Switches), File Servers or internal staging hosts",
            "action": [
              "Symbolic: Create a correlation rule: IF a host triggers a software discovery alert (e.g., from excessive command-line or registry activity) AND within 10 minutes the same source IP is observed in 'Zeek files.log' transferring a file with a .txt, .csv, or .tmp extension to an external IP, THEN generate a high-severity exfiltration alert.",
              "Statistical: After a local discovery alert, monitor 'Zeek conn.log' for the source host's connection patterns. Calculate the number of unique internal destination IPs contacted by that host in the subsequent hour. Alert if this count exceeds the 99th percentile of the host's typical hourly unique connection count, suggesting network-wide scanning or enumeration.",
              "Machine Learning: Use a graph-based anomaly detection model to analyze host communication patterns. If a node (host) that recently performed local discovery suddenly forms a large number of short-lived, 'star-shaped' connections to other internal nodes, flag this change in the graph topology as anomalous behavior indicative of post-discovery lateral movement or further reconnaissance."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]