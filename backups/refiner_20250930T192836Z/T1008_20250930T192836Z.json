[
  {
    "information_requirement": "Is the adversary maintaining command and control using fallback channels? (PIR)",
    "tactic_id": "TA0011",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1008",
        "name": "Fallback Channels",
        "evidence": [
          {
            "description": "An outbound network connection's destination IP address, domain, or SSL/TLS server name matches an entry on a threat intelligence feed categorized as C2 infrastructure.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers, Internal DNS resolvers, DMZ servers",
            "action": [
              "Symbolic: Join Zeek conn.log, dns.log, and ssl.log records on UID. Compare the `id.resp_h`, `query`, and `server_name` fields against a curated list of known fallback C2 indicators from threat intelligence feeds. Generate an alert upon a direct match.",
              "Statistical: Calculate the reputation score of destination IPs and domains using multiple threat intelligence sources. Establish a baseline score for typical traffic. Flag connections where the destination's composite reputation score is in the lowest 5th percentile (indicating high risk) and the connection count is low, suggesting an uncommon or new channel.",
              "Machine Learning: Train a supervised classification model (e.g., Random Forest) using features from Zeek logs (destination IP, port, protocol, JA3/S hash, DNS query) and labeled threat intelligence data. Use the model to predict the probability that a new, unseen connection is C2 traffic. Investigate connections with a high probability score."
            ]
          },
          {
            "description": "DNS queries exhibit characteristics of data tunneling, such as an unusually high volume of TXT/NULL records, high-entropy subdomains, or a query-to-response size ratio greater than 10:1.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, Endpoint devices, Internet gateway/proxy servers",
            "action": [
              "Symbolic: Create a rule to alert on DNS queries where the record type is TXT or NULL and the query length exceeds 200 characters, or where the JA3/S hash from the underlying TLS connection (Zeek ssl.log) matches a known C2 framework's fingerprint.",
              "Statistical: For each source host, calculate the Shannon entropy of the subdomain portion of DNS queries over a 5-minute window. Establish a baseline entropy level for normal activity. Alert when a host's average query entropy exceeds the 98th percentile of the baseline, which indicates potential data encoding in subdomains.",
              "Machine Learning: Use a time-series forecasting model (e.g., ARIMA) on the volume of TXT and AAAA record queries per source host. An alert is triggered if the observed volume significantly deviates from the forecasted volume, suggesting a sudden shift to DNS-based C2 communication."
            ]
          },
          {
            "description": "A series of outbound connections from a single internal host to a single external destination exhibits a low standard deviation in inter-arrival time (< 2 seconds) and a low variance in payload size over a 10-minute window.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Servers hosting sensitive data, Internet gateway/proxy servers",
            "action": [
              "Symbolic: Correlate Windows Event ID 5156 (Filtering Platform Connection Permitted) with Zeek conn.log. Create a rule to flag any process that establishes more than 10 connections to the same destination IP and port within 1 minute with a consistent payload size (+/- 10 bytes).",
              "Statistical: Group connection events by source host and destination pair. For each group, calculate the standard deviation of the time delta between consecutive connections. Alert on pairs where the standard deviation is less than 2 seconds and the connection count is greater than 20 over a 30-minute period, indicating automated, periodic communication.",
              "Machine Learning: Apply a clustering algorithm like DBSCAN to a dataset of connection features (inter-arrival time, payload size, session duration). Identify clusters of connections that are tightly grouped by these features, as these represent potential beaconing patterns that might not be perfectly periodic but are highly regular."
            ]
          },
          {
            "description": "A network connection is initiated by a process not typically associated with network activity (e.g., notepad.exe, calc.exe) or uses a protocol inconsistent with its designated port (e.g., non-DNS traffic over UDP/53).",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoint devices, Domain controllers, Application servers",
            "action": [
              "Symbolic: Create a watchlist of non-network-aware processes (e.g., `calc.exe`, `mspaint.exe`, `services.exe` with an unexpected parent). Correlate Windows Event ID 4688 (Process Creation) with 5156 (Network Connection) to alert whenever a process on this list initiates an outbound network connection.",
              "Statistical: Establish a baseline of (process name, destination port, protocol) tuples from host and network logs. Use frequency analysis to identify the rarest 1% of combinations observed over a 24-hour period. Investigate these rare tuples as potential indicators of a fallback channel being used by a compromised process.",
              "Machine Learning: Develop an anomaly detection model using an autoencoder trained on features from process creation and network connection events (parent process, command line arguments, destination IP reputation, port). The model learns to reconstruct 'normal' activity. High reconstruction error on a new event indicates a significant deviation from normalcy, pointing to suspicious process behavior."
            ]
          },
          {
            "description": "An outbound connection's client-to-server data transfer ratio significantly deviates from the established baseline for its protocol, such as an HTTP/S connection where the client sends more than 10 times the data it receives.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers, DMZ servers, User workstations",
            "action": [
              "Symbolic: Create a rule to alert on any connection where the protocol is identified as HTTP, HTTPS, or DNS, and the number of bytes sent from the originator (`orig_bytes`) is greater than 10 times the number of bytes sent from the responder (`resp_bytes`), and `resp_bytes` is greater than 0.",
              "Statistical: For each common protocol (e.g., HTTP/S on port 80/443), calculate a baseline distribution of the ratio of `orig_bytes` to `resp_bytes`. Continuously monitor new connections and flag any session where this ratio exceeds the 99th percentile of the historical baseline for that protocol.",
              "Machine Learning: Use a clustering algorithm (e.g., K-Means) on connection data, using features like `orig_bytes`, `resp_bytes`, `duration`, and `proto`. Identify clusters that represent 'normal' browsing or 'large downloads'. Connections that do not fit well into any cluster or form a small, distinct cluster characterized by high `orig_bytes` and low `resp_bytes` are anomalous and warrant investigation for data exfiltration or C2."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]