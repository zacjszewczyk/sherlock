[
  {
    "information_requirement": "Is the adversary evading defenses by installing a malicious root certificate?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1553.004",
        "name": "Install Root Certificate",
        "evidence": [
          {
            "description": "A root certificate is observed on the network or installed on an endpoint where the certificate's thumbprint (SHA-1 hash) matches a known-malicious list or does not appear on an established enterprise allowlist of trusted root CAs.",
            "data_sources": [
              "Zeek ssl.log",
              "Windows Event Log (Microsoft-Windows-CAPI2/Operational)",
              "Windows Registry via Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Public-facing Web Servers, Enterprise Certificate Authority Servers, Endpoint devices, Centralized log aggregation platform (SIEM)",
            "action": [
              "Symbolic Logic: Create and maintain an allowlist of approved root certificate thumbprints for the enterprise. Continuously monitor Windows CAPI2 logs and registry modifications (Sysmon Event ID 13 for Registry Value Set in HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\) for new certificates. Compare the thumbprint of any new certificate against the allowlist and a blocklist of known-malicious certificate thumbprints sourced from threat intelligence feeds. Generate a high-severity alert for any certificate that is not on the allowlist or is on the blocklist.",
              "Statistical Method: From Zeek ssl.log data, calculate the prevalence of each root certificate issuer (ssl.log 'issuer' field) observed across the network over a 30-day rolling window. Identify certificates that fall below a low prevalence threshold (e.g., seen in less than 0.1% of all TLS sessions). For these rare certificates, analyze the distribution of hosts they are associated with. A certificate seen rarely but across a diverse set of hosts may be legitimate, whereas a rare certificate seen only on a single or small cluster of hosts warrants investigation.",
              "Machine Learning: Develop a classification model (e.g., Random Forest) to predict the legitimacy of a new root certificate. Train the model on features from both allowlisted and known-malicious certificates, including: certificate validity period, key length, signature algorithm, issuer/subject string entropy, and issuer/subject prevalence from historical network data. Use the model to score newly observed certificates in near real-time, flagging those classified as malicious with a high probability score for analyst review."
            ]
          },
          {
            "description": "Execution of command-line utilities (e.g., certutil.exe) or PowerShell cmdlets (e.g., Install-Certificate) with parameters specifically used to add or modify certificates in the system's root trust store.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4104"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, particularly Domain Controllers and administrative workstations.",
            "action": [
              "Symbolic Logic: Monitor process creation logs (Windows Event ID 4688) for command lines containing `certutil.exe` with arguments `-addstore` or `-delstore` followed by `Root`, or `powershell.exe` executing `Install-Certificate` or `Import-Certificate` with the `-CertStoreLocation` parameter pointing to `Cert:\\LocalMachine\\Root`. Create a high-fidelity alert for any execution matching these patterns that does not originate from a known software deployment or system management process.",
              "Statistical Method: For all executions of `certutil.exe` or PowerShell certificate cmdlets, calculate the Shannon entropy of the command-line arguments. Adversaries may use randomized or obfuscated certificate file paths. A command with unusually high argument entropy compared to the baseline of legitimate administrative commands could indicate malicious activity. Establish a baseline entropy score for legitimate certificate management commands and alert on executions that exceed the 95th percentile.",
              "Machine Learning: Train a sequence-based model (e.g., an LSTM) on parent-child process relationships and command-line argument sequences. Use the model to identify anomalous process execution chains leading to certificate manipulation. For example, a `certutil.exe -addstore Root` command spawned by `winword.exe` or an obfuscated PowerShell script would be flagged as a high-risk anomaly, as it deviates from the learned legitimate sequences where such commands are typically spawned by `explorer.exe` or a management service process."
            ]
          },
          {
            "description": "A new root certificate is installed on one or more endpoints, and the certificate's thumbprint has a low prevalence (is rare) when compared to the population of all certificates across all monitored enterprise systems.",
            "data_sources": [
              "Windows Event Log (Microsoft-Windows-CAPI2/Operational)",
              "Windows Registry via Sysmon Event ID 13",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized log aggregation platform (SIEM), All Windows Endpoints and Servers.",
            "action": [
              "Symbolic Logic: Build and maintain an inventory of all root certificate thumbprints present on every host. Create a rule that triggers when a certificate installation event occurs (e.g., Sysmon registry write to the cert store) and the new certificate's thumbprint is not found in the pre-existing inventory of any other machine. This acts as a 'first-seen-in-environment' trigger for further analysis.",
              "Statistical Method: Aggregate all root certificate thumbprints from all endpoints into a centralized data store. Calculate the prevalence of each certificate (i.e., the percentage of hosts on which it is installed). Use a percentile-based threshold to define rarity; flag any certificate installed on fewer than 1% of the total endpoints for investigation. This identifies outliers that are not part of a standard software deployment or operating system build.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) to group hosts based on their installed root certificate profiles (represented as a binary vector of certificate presence). Most hosts should fall into a few large clusters representing standard corporate builds. Hosts that are identified as noise points or belong to very small clusters are anomalous. Investigate these outlier hosts to determine why their certificate profile deviates from the norm."
            ]
          },
          {
            "description": "A root certificate installation is initiated by a process not associated with system administration (e.g., a web browser or office application), by a non-privileged user account, or at a time outside of established change control windows.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Registry via Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, Identity and Access Management (IAM) systems for user context, Change Management Database (CMDB) for maintenance window data.",
            "action": [
              "Symbolic Logic: For every process execution involving certificate utilities (e.g., `certutil.exe -addstore Root`), create a rule that checks the parent process name (`ParentProcessName` field). If the parent process is not on an allowlist of legitimate initiators (e.g., `explorer.exe`, `mmc.exe`, `gpupdate.exe`), generate an alert. Specifically, flag instances where the parent is a browser (`chrome.exe`), office application (`winword.exe`), or script interpreter running from a temporary user location.",
              "Statistical Method: Analyze the timing of root certificate installations over a 90-day period. Create a time-series model of installation events, identifying the typical days of the week and hours of the day when they occur. Use this model to calculate a baseline and standard deviation. Flag any installation that occurs at a time that is a statistical anomaly (e.g., more than 3 standard deviations from the mean hourly count, or on a weekend if no changes normally occur then).",
              "Machine Learning: Develop a user behavior analytics (UBA) model focused on administrative actions. Train the model on features like user role, time of day, source workstation, and the specific administrative commands executed. Use this model to score the risk of a certificate installation event. An installation by a user who has never performed certificate management before, from a non-standard workstation, and outside their normal working hours would receive a high anomaly score."
            ]
          },
          {
            "description": "After a new root certificate is installed on a host, that host's network traffic exhibits anomalous characteristics, such as initiating TLS connections to low-reputation or newly registered domains, or an increase in TLS sessions that fail validation on network sensors.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek dns.log",
              "Zeek conn.log",
              "Windows Registry via Sysmon Event ID 13"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Security Monitoring sensors (e.g., Zeek), DNS Resolvers, Endpoint log shippers, Centralized log aggregation platform (SIEM).",
            "action": [
              "Symbolic Logic: Correlate endpoint certificate installation events (Sysmon registry write to cert store) with subsequent network traffic from the same host. Within a 24-hour window following the installation, query for all DNS requests (Zeek dns.log) and TLS connections (Zeek ssl.log). Match the resolved IPs and Server Name Indication (SNI) values against threat intelligence feeds for known malicious domains/IPs. Generate a high-severity alert if a connection is made to a known-bad destination shortly after a new root certificate is installed.",
              "Statistical Method: For a host where a new root certificate was installed, establish a network activity baseline for the 7 days prior. Post-installation, monitor for a statistically significant increase in the ratio of self-signed or invalid TLS certificates (where Zeek ssl.log 'validation_status' is not 'ok'). A sharp increase in this metric compared to the baseline (e.g., exceeding the 99th percentile of historical daily values for that host) indicates a behavioral change warranting investigation.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., an autoencoder) for key network metrics per host, such as the volume of TLS traffic, number of unique domains contacted, and rate of TLS validation failures. When a certificate installation event is detected on a host, feed its subsequent network metrics into the model. The model, trained on normal behavior, will flag periods of anomalous activity post-installation that deviate from expected patterns, providing a prioritized lead for a potential adversary-in-the-middle attack."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]