[
  {
    "information_requirement": "Is the adversary establishing persistence by modifying MFA configurations?",
    "tactic_id": "TA0003",
    "tactic_name": "Persistence",
    "indicators": [
      {
        "technique_id": "T1556.006",
        "name": "Modify Multi-Factor Authentication",
        "evidence": [
          {
            "description": "A user account, especially a privileged one, is removed from an Active Directory security group that is used to enforce MFA.",
            "data_sources": [
              "Windows Event ID 4729",
              "Windows Event ID 4733",
              "Windows Event ID 4757"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers",
            "action": [
              "Create a watch list of Active Directory group SIDs responsible for MFA enforcement. Monitor for events where a user is removed from one of these groups (Windows Event ID 4729, 4733, 4757) and generate a high-priority alert, noting the subject user who performed the action.",
              "For each administrator, calculate a baseline and standard deviation for the number of MFA-related group removals they perform per day. Alert if an administrator's activity exceeds 3 standard deviations from their personal or peer group's baseline, indicating a potential compromise or malicious insider activity.",
              "Use a graph-based anomaly detection model on Active Directory change events. Model users, groups, and membership changes as a graph. Flag changes that significantly alter the 'centrality' or 'connectivity' of a privileged user in a way that moves them out of an MFA-enforced security context."
            ]
          },
          {
            "description": "A new MFA device or method is registered for a user account, immediately followed by a successful login from a geographically anomalous location.",
            "data_sources": [
              "Windows Event ID 4738",
              "Windows Event ID 4624",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Identity Provider Servers and VPN Concentrators",
            "action": [
              "Correlate an MFA device registration event (e.g., specific attribute change in Windows Event ID 4738 for on-prem, or specific cloud audit log) with a subsequent successful login (Windows Event ID 4624) for the same user within a 5-minute window. Alert if the login's source IP (from Zeek conn.log) is from a different country than the registration event's source IP.",
              "For each user, maintain a statistical profile of historical login locations (countries, ASNs). When a new MFA device is registered, score the first subsequent login's location against this profile. A login from a location not seen in the last 90 days or ranked in the bottom 5th percentile of frequency should be flagged.",
              "Implement a time-series model that tracks the sequence of events per user. Train the model to recognize normal sequences (e.g., login -> work -> logout). Flag the sequence 'MFA registration -> login from new IP -> high-volume data access' as a high-risk anomaly, indicating a compromised account is being used for data exfiltration."
            ]
          },
          {
            "description": "An adversary modifies the local hosts file to redirect MFA service calls to a local or null address, causing MFA to fail open.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Endpoints and Critical Servers",
            "action": [
              "Monitor for process creation events (Windows Event ID 4688) where a process writes to 'C:\\Windows\\System32\\drivers\\etc\\hosts'. Specifically, alert if the command line includes 'echo' and redirection operators ('>', '>>') targeting the hosts file.",
              "Establish a baseline hash (e.g., SHA256) of the approved 'hosts' file. Monitor for file modification events (Windows Event ID 4663 with Object Name ending in '\\hosts') and calculate the hash of the modified file. Alert if the new hash does not match the baseline or a set of approved variant hashes.",
              "Use a file integrity monitoring (FIM) agent that employs a classification model to analyze changes to critical system files. Train the model on legitimate changes (e.g., software installations) vs. malicious ones (e.g., adding a single line to redirect a security service). Flag any change to the hosts file classified as malicious."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses by bypassing or tampering with MFA?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1556.006",
        "name": "Modify Multi-Factor Authentication",
        "evidence": [
          {
            "description": "A process executes with command-line arguments designed to modify or disable MFA policies, such as via PowerShell cmdlets.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "ADFS Servers and Domain Controllers",
            "action": [
              "Monitor process creation events (Windows Event ID 4688) for command lines containing specific strings related to MFA configuration, such as 'Set-AdfsRelyingPartyTrust', 'Set-MsolUser', '-StrongAuthenticationRequirements', or '-Exclude'. Generate an alert for any non-administrative or automated script execution.",
              "Calculate the entropy of command-line arguments for PowerShell processes. Unusually high entropy can indicate obfuscated scripts. Flag commands with entropy scores exceeding the 99th percentile of the established baseline for administrative activity.",
              "Train a sequence-to-sequence (Seq2Seq) autoencoder on legitimate administrative PowerShell commands. Use the model to evaluate new commands; a high reconstruction error suggests the command is anomalous and potentially malicious, even if it doesn't contain specific known keywords."
            ]
          },
          {
            "description": "A critical authentication process, such as lsass.exe, makes an unexpected outbound network connection to an external IP address.",
            "data_sources": [
              "Windows Event ID 5156",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers and User Endpoints",
            "action": [
              "Create a strict rule to alert on any Windows Filtering Platform event (Windows Event ID 5156) where the Application path is 'lsass.exe' and the Destination Address is a non-private (RFC1918) IP address. Correlate with Zeek conn.log to verify the destination is external.",
              "Build a baseline of legitimate destination IPs and ports for critical system processes. For each new connection from a process like lsass.exe, check if the destination IP/port pair has been seen before. Alert if the pair is in the bottom 1st percentile of frequency (i.e., extremely rare).",
              "Use a one-class SVM (Support Vector Machine) model trained on legitimate network connection tuples (process_name, dest_ip, dest_port, protocol) from Zeek and host logs. Any new connection tuple that the model classifies as an outlier is a high-confidence indicator of compromise."
            ]
          },
          {
            "description": "An unauthorized process attempts to read from or write to files or registry keys belonging to an installed MFA agent (e.g., Duo, Okta).",
            "data_sources": [
              "Windows Event ID 4663",
              "Windows Event ID 4656"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Endpoints with Third-Party MFA Agents",
            "action": [
              "Enable object access auditing on MFA agent installation directories and registry hives. Create a rule to alert on any access attempt (Windows Event ID 4663, 4656) where the Process Name is not on a pre-defined allow list of the agent's own binaries and legitimate system processes (e.g., svchost.exe).",
              "For each sensitive MFA file/registry key, profile the frequency of access by different processes. Alert if a typically low-access process (e.g., 'powershell.exe', 'cmd.exe') suddenly accesses a resource, or if the total number of access events in a 1-hour window exceeds 3 standard deviations above the norm.",
              "Deploy a Host-based Intrusion Detection System (HIDS) that uses a kernel-level driver to monitor process behavior. Train a behavioral model to recognize normal process-to-file interactions. Alert when an anomaly is detected, such as 'explorer.exe' spawning a process that then attempts to read the MFA agent's configuration file."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary accessing credentials by exploiting bypassed or weakened MFA?",
    "tactic_id": "TA0006",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1556.006",
        "name": "Modify Multi-Factor Authentication",
        "evidence": [
          {
            "description": "A high-volume burst of MFA push notifications for a single account, followed by a successful login, indicating an MFA fatigue attack.",
            "data_sources": [
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers and Identity Providers",
            "action": [
              "Create a rule that triggers when, for a single user from a single source IP, more than 10 failed logins (Windows Event ID 4625) with a status code indicating MFA denial are logged within 5 minutes, immediately followed by a successful login (Windows Event ID 4624).",
              "Monitor the rate of failed logins per user per minute. Calculate the 99th percentile for this rate across all users. Generate an alert for any user whose failed login rate exceeds this threshold, as it indicates a statistically significant burst of attempts.",
              "Use a time-series anomaly detection model on the stream of authentication logs for each user. The model should be trained to recognize normal login cadences. A sudden, sharp spike in failed MFA attempts followed by a success would be flagged as a temporal anomaly indicative of a fatigue attack."
            ]
          },
          {
            "description": "A successful login occurs with a valid session token from an IP address associated with known Adversary-in-the-Middle (AiTM) phishing infrastructure.",
            "data_sources": [
              "Windows Event ID 4624",
              "Zeek conn.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet Gateway and VPN Concentrators",
            "action": [
              "Ingest a high-confidence threat intelligence feed of IP addresses and domains known to be part of AiTM toolkits (e.g., Evilginx2). For every successful remote login (Windows Event ID 4624, Logon Type 3 or 10), check if the source IP (from the event or Zeek conn.log) is on this list. An immediate, high-priority alert should be generated on a match.",
              "Analyze the JA3/JA3S TLS fingerprints from Zeek ssl.log for authentication sessions. Profile the common fingerprints used by corporate devices and browsers. Flag logins from sessions using rare or known malicious JA3/JA3S hashes, as AiTM tools often have unique TLS negotiation characteristics.",
              "Train a classification model (e.g., XGBoost) on login session features, including IP geolocation, ASN, JA3 hash, time-of-day, and user agent. Use the model to assign a risk score to each login. Logins with scores exceeding a dynamically adjusted threshold, especially if they use a rare JA3 hash, should be flagged for investigation."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]