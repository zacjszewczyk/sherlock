[
  {
    "information_requirement": "Is the adversary conducting reconnaissance by scanning our public-facing IP blocks?",
    "tactic_id": "TA0043",
    "tactic_name": "Reconnaissance",
    "indicators": [
      {
        "technique_id": "T1595.001",
        "name": "Scanning IP Blocks",
        "evidence": [
          {
            "description": "Inbound connection attempts or probes originate from a source IP address that is present on a high-confidence threat intelligence feed.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet-facing firewalls and network gateways",
            "action": [
              "Symbolic (IOC Match): Continuously correlate the source IP address (`id.orig_h`) of all inbound connections in `Zeek conn.log` and `Zeek icmp.log` against threat intelligence feeds for known scanners, botnet C2s, or TOR exit nodes. Trigger an alert on a direct match.",
              "Statistical (Reputation Scoring): For each source IP, calculate a reputation score based on the frequency and recency of its appearance on various threat intelligence lists over the past 30 days. Alert when a source IP's score crosses a predefined threshold, indicating persistent malicious activity.",
              "Machine Learning (Classification): Use a classification model (e.g., Logistic Regression, Random Forest) trained on features such as ASN, country of origin, and historical threat intelligence hits to predict the probability that a new, unseen source IP is a malicious scanner. Alert on a high probability score."
            ]
          },
          {
            "description": "Inbound network traffic contains protocol-level artifacts or request patterns, such as specific User-Agent strings or TCP flag combinations, that match signatures of known reconnaissance tools.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek software.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web application servers and internet-facing firewalls",
            "action": [
              "Symbolic (Signature Match): Apply regular expression rules to the `user_agent` field in `Zeek http.log` to detect signatures of scanning tools like 'Nmap Scripting Engine', 'masscan', or 'zmap'. Create rules to detect anomalous TCP flag combinations (e.g., FIN/PSH/URG, NULL scans) in `Zeek conn.log`.",
              "Statistical (Frequency Analysis): Calculate the frequency of all User-Agent strings in `Zeek http.log` over a 24-hour period. Flag source IPs that use User-Agents falling below the 1st percentile of commonality, as scanners often use rare, malformed, or unique strings.",
              "Machine Learning (Sequence Analysis): Train a sequence-based model, such as a Hidden Markov Model, on `Zeek conn.log` data to learn normal TCP session state transitions (e.g., 'S0', 'SF', 'REJ'). Flag source IPs whose connection sequences deviate significantly from learned benign patterns, which is indicative of scanning probes."
            ]
          },
          {
            "description": "A single external IP address initiates connections to the same port on a statistically significant number of distinct internal hosts within a defined time window (horizontal scan).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Demilitarized Zone (DMZ) network segments",
            "action": [
              "Symbolic (Threshold Rule): Create a rule that triggers when a single source IP (`id.orig_h`) attempts to connect to more than 50 unique destination IPs (`id.resp_h`) on the same destination port (`id.resp_p`) within a 5-minute window.",
              "Statistical (Percentile Threshold): For each source IP, calculate the count of unique destination hosts contacted per destination port over a 10-minute window. Establish a dynamic baseline for this metric across all external sources. Alert when a source IP's count exceeds the 99th percentile of this baseline.",
              "Machine Learning (Time-Series Anomaly Detection): Model the count of unique destination IPs per source IP as a time-series. Use an algorithm (e.g., SARIMA) to forecast the expected count for the next time interval. Alert when the observed count significantly exceeds the forecasted value and its confidence interval, indicating an anomalous burst of activity."
            ]
          },
          {
            "description": "A single external IP address initiates connections to a statistically significant number of distinct ports on a single internal host within a defined time window (vertical scan).",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing application servers and VPN concentrators",
            "action": [
              "Symbolic (Threshold Rule): Create a rule that triggers when a single source IP (`id.orig_h`) attempts to connect to more than 100 unique destination ports (`id.resp_p`) on a single destination IP (`id.resp_h`) within a 5-minute window.",
              "Statistical (Entropy Analysis): For each source IP/destination IP pair, calculate the Shannon entropy of the destination ports contacted in a 10-minute window. A high entropy score indicates a wide and varied port scan. Alert when the entropy score for a pair exceeds a predefined threshold (e.g., > 3.5).",
              "Machine Learning (Clustering): Employ a density-based clustering algorithm (e.g., DBSCAN) on connection events, using features like source IP, destination IP, and destination port. A dense cluster of points with the same source/destination IP but many different destination ports will be identified as an anomalous scan cluster, distinct from sparse, legitimate traffic."
            ]
          },
          {
            "description": "A single external IP address initiates ICMP requests or TCP/UDP probes to a sequential or near-sequential range of internal IP addresses within a public-facing block (network sweep).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek icmp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud network gateways (e.g., AWS Internet Gateway, Azure Virtual Network Gateway)",
            "action": [
              "Symbolic (Sequence Detection): For a given source IP, analyze the destination IPs it contacts from `Zeek conn.log` or `icmp.log`. Trigger an alert if the source contacts more than 10 IP addresses that are sequential in the last octet (e.g., x.x.x.1, x.x.x.2, ... x.x.x.11) within a 1-minute window.",
              "Statistical (Distribution Analysis): For each source IP scanning a /24 subnet, extract the last octet of all destination IPs contacted. Calculate the Gini coefficient or standard deviation of this set of numbers. A value near zero indicates a sequential sweep, while a value approaching the maximum indicates a full, uniform scan. Flag sources with distributions that deviate from a baseline of normal traffic.",
              "Machine Learning (Spatial Anomaly Detection): Model the connection attempts from a single source to a subnet as a spatial point process. Use a trained model to distinguish between random, legitimate traffic patterns and systematic, grid-like patterns characteristic of a network sweep. Flag sources whose connection patterns are classified as spatially anomalous."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]