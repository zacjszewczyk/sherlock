[
  {
    "information_requirement": "Is the adversary developing resources (exploits) for targeting?",
    "tactic_id": "TA0042",
    "tactic_name": "Resource Development",
    "indicators": [
      {
        "technique_id": "T1587.004",
        "name": "Exploits",
        "evidence": [
          {
            "description": "Network connection records show successful outbound connections from internal hosts to external IP addresses or domains identified in threat intelligence feeds as being associated with exploit development, testing, or hosting.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers",
            "action": [
              "Symbolic: Continuously match destination IPs and domains from Zeek conn.log and dns.log against an aggregated list of IOCs from threat intelligence feeds specifically tagged with 'exploit development', 'vulnerability research', or 'malware hosting'. Generate a high-priority alert for any successful connection.",
              "Statistical: For each threat intelligence source, calculate the historical hit rate within the organization. Assign a dynamic risk score to new IOCs based on the source's reliability and the IOC's age. Prioritize alerts where the IOC has a high-risk score and targets a high-value internal asset.",
              "Machine Learning: Use a supervised classification model (e.g., Logistic Regression) trained on historical alert data (true/false positives) to predict the likelihood that a new IOC match represents a genuine threat. Features could include IOC source, IOC age, internal asset criticality, and connection metadata (port, protocol)."
            ]
          },
          {
            "description": "HTTP request logs contain User-Agent strings, URI paths, or request body patterns that match signatures of known vulnerability scanners (e.g., Nmap, Nessus) or exploit development frameworks (e.g., Metasploit).",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing web servers",
            "action": [
              "Symbolic: Scan the 'user_agent' and 'uri' fields in Zeek http.log using a curated set of regular expressions for common scanning and exploitation tools. Generate an alert for any match originating from an external IP address not on an approved vulnerability scanner allowlist.",
              "Statistical: Calculate the Shannon entropy of URI paths and parameters for each source IP over a 5-minute window. A high entropy value, exceeding the 95th percentile of the baseline for normal traffic, can indicate fuzzing or scanning activity. Correlate high entropy with a high frequency of HTTP error codes (4xx/5xx) from the same source IP.",
              "Machine Learning: Train a time-series anomaly detection model (e.g., Seasonal-ARIMA) on the volume of requests per User-Agent. A sudden, anomalous spike in requests from a rare or suspicious User-Agent can indicate the start of a scanning campaign."
            ]
          },
          {
            "description": "A single external source IP establishes an unusually high number of connections to many unique destination ports (horizontal scan) or a high number of connections to a single destination port (vertical scan) on public-facing assets, especially ports associated with recently disclosed vulnerabilities.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internet gateway/proxy servers",
            "action": [
              "Symbolic: Create a rule that triggers when a single source IP connects to more than 50 unique destination ports on more than 10 unique hosts within a 1-minute window. Tune thresholds based on network size and baseline traffic.",
              "Statistical: For each external source IP, calculate the ratio of unique destination ports to total connections over a 5-minute window. A ratio approaching 1.0 indicates a horizontal scan. A low ratio with a high connection count to a single port indicates a vertical scan. Flag IPs where these metrics exceed 3 standard deviations from the norm.",
              "Machine Learning: Use a clustering algorithm (e.g., DBSCAN) on connection metadata (source IP, destination IP, destination port, protocol). Identify clusters of connections that represent scanning behavior (e.g., a dense cluster from one source to many ports/hosts). Classify source IPs as 'benign', 'scanner', or 'malicious' based on cluster characteristics."
            ]
          },
          {
            "description": "Connection logs show external traffic to a specific port associated with a high-severity vulnerability, where the session duration, bytes transferred, or TCP flag sequence deviates significantly from the established baseline for legitimate traffic to that service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing application servers",
            "action": [
              "Symbolic: Correlate a list of vulnerable ports/services from a vulnerability management system with inbound Zeek conn.log traffic. Alert on any external connection attempt to a known-vulnerable port from an IP not on a pre-approved allowlist.",
              "Statistical: For each vulnerable service, establish a baseline of normal session characteristics (e.g., mean/std dev of duration, bytes transferred). Use a Z-score calculation to flag any new connection whose characteristics are statistical outliers (e.g., Z-score > 3), suggesting a non-standard interaction like an exploit attempt.",
              "Machine Learning: Train an Isolation Forest model on legitimate connection data for a specific vulnerable service. Use the model to score new, incoming connections in real-time. A low anomaly score indicates a high probability of being an outlier and a potential exploit attempt."
            ]
          },
          {
            "description": "A public-facing server experiences an application crash (Windows Event ID 1000/1001) or an administrator-initiated reboot (Windows Event ID 1074) within 5 minutes following a connection from an untrusted external IP address.",
            "data_sources": [
              "Windows Event ID 1000",
              "Windows Event ID 1001",
              "Windows Event ID 1074",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Public-facing application servers",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a Windows Event ID 1000, 1001, or 1074 is logged on a server, and a review of Zeek conn.log shows a connection from an external, non-allowlisted IP to that server within the preceding 5 minutes.",
              "Statistical: Perform a time-series cross-correlation analysis between the event stream of application crashes on a server and the connection events from unique external IPs. A high correlation coefficient for a specific IP indicates a statistically significant relationship between its connections and system instability.",
              "Machine Learning: Use a Granger causality test to determine if the time series of connection attempts from a specific external IP is predictive of the time series of application crash events. A statistically significant result suggests the connections are likely causing the crashes, pointing to failed exploit attempts."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]