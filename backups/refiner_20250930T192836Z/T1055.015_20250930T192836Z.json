[
  {
    "information_requirement": "Has the adversary attempted to elevate privileges using ListPlanting?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1055.015",
        "name": "ListPlanting",
        "evidence": [
          {
            "description": "A file hash or memory signature matching a known ListPlanting-capable tool is detected on an endpoint.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Administrative workstations, Terminal servers",
            "action": [
              "Symbolic: Search process creation logs (Windows Event ID 4688, Sysmon Event ID 1) for file hashes matching a threat intelligence feed of known ListPlanting malware. Correlate with YARA scan results from memory that match signatures for ListPlanting code patterns.",
              "Statistical: Calculate the prevalence of file hashes across the enterprise. Alert on process creation events where the file hash has an extremely low prevalence score (e.g., seen on < 0.1% of endpoints), particularly when the process name is common (e.g., svchost.exe, explorer.exe).",
              "Machine Learning: Use a supervised classification model (e.g., Gradient Boosting) trained on process metadata (parent process, command line, file path, prevalence, user context) to predict if a newly executed file is malicious. A high probability score for a process associated with a GUI application warrants investigation for injection."
            ]
          },
          {
            "description": "A process with a low or medium integrity level obtains a handle to, allocates memory in, and sends LVM_* window messages to a process with a high or system integrity level within a short time frame.",
            "data_sources": [
              "Sysmon Event ID 10",
              "Sysmon Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Domain Controllers (if admin tools are used), Management servers",
            "action": [
              "Symbolic: Create a detection rule that triggers when the following sequence is observed from the same source/target process pair within 1 second: 1. A Sysmon Event ID 10 (ProcessAccess) where SourceImage has a lower integrity level than TargetImage. 2. A Sysmon Event ID 8 (CreateRemoteThread) or API log for VirtualAllocEx from SourceImage to TargetImage. 3. API logs showing the SourceImage sending LVM_SORTITEMS or LVM_SETITEMPOSITION messages to the TargetImage.",
              "Statistical: For each process, calculate the rate of cross-process memory allocation events (Sysmon Event ID 8) targeting high-integrity processes. Establish a baseline rate for each source process name. Alert when a process's rate exceeds a high percentile (e.g., 99th percentile) of its historical baseline, especially if it is not a known administrative or debugging tool.",
              "Machine Learning: Develop a time-series anomaly detection model for the frequency of specific Windows message types (LVM_*) sent between processes. A sudden, sharp spike in these messages from a non-GUI process or a low-integrity process to a high-integrity GUI process, flagged by the model, indicates potential ListPlanting activity."
            ]
          },
          {
            "description": "A process that is not a standard GUI application (e.g., a console app, a background service) generates a statistically significant volume of LVM_* window messages.",
            "data_sources": [
              "API Monitoring Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers",
            "action": [
              "Symbolic: Create a rule to alert when a process image path does not reside in 'C:\\\\Windows\\\\System32' or 'C:\\\\Program Files\\\\' and generates more than a threshold (e.g., 100) of `SendMessage`/`PostMessage` API calls with LVM_* arguments within a one-minute window.",
              "Statistical: For each process name, profile the normal distribution of `SendMessage`/`PostMessage` counts per minute. Alert when a running instance of a process exhibits a call count that is a significant outlier (e.g., > 3 standard deviations above the mean for its process type), especially for processes that normally have a mean near zero.",
              "Machine Learning: Use an unsupervised clustering algorithm (e.g., DBSCAN) on process features including API call frequencies, PE header information, and process path. Identify clusters of anomalous processes. Processes that cluster together due to high LVM_* message frequency but lack typical GUI application features should be flagged for investigation."
            ]
          },
          {
            "description": "A high-integrity GUI process, such as explorer.exe, spawns an unusual child process (e.g., cmd.exe, powershell.exe) or initiates a network connection to a rare external destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1",
              "Sysmon Event ID 3",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Network egress points, DNS servers",
            "action": [
              "Symbolic: Alert when a process with image path 'C:\\\\Windows\\\\explorer.exe' spawns a child process with an image name of 'cmd.exe', 'powershell.exe', 'cscript.exe', or 'wscript.exe', and the event is not associated with a known administrative task.",
              "Statistical: For each common parent process (like explorer.exe), maintain a frequency distribution of its child process names. Alert when a child process is spawned that falls below a low frequency threshold (e.g., seen less than 5 times in the last 90 days across the enterprise). Similarly, for network connections from explorer.exe, calculate the rarity of the destination IP/domain and alert on connections to destinations in a low percentile of popularity.",
              "Machine Learning: Use a peer group analysis model to compare the behavior of a specific instance of 'explorer.exe' to all other instances of 'explorer.exe' across the organization. Flag instances that exhibit anomalous behavior (e.g., unique child processes, network connections to different geolocations, unusual file modifications) compared to their peers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary using ListPlanting to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1055.015",
        "name": "ListPlanting",
        "evidence": [
          {
            "description": "A trusted GUI process like explorer.exe initiates a network connection to a destination IP or domain listed in threat intelligence feeds, or the traffic exhibits a known malicious signature.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek ssl.log",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Proxy servers, DNS resolvers",
            "action": [
              "Symbolic: Join network connection logs (Sysmon Event ID 3) with network flow data (Zeek conn.log). Alert when the source process is 'explorer.exe' and the destination IP in the Zeek log matches an IP from a high-confidence C2 threat intelligence list.",
              "Statistical: Calculate the entropy of server names (SNI) in Zeek ssl.log and requested domains in Zeek dns.log. Alert when 'explorer.exe' (identified via endpoint correlation) initiates a connection to a domain with an entropy score significantly higher than the average for user-initiated traffic, suggesting DGA.",
              "Machine Learning: Train a time-series model on the byte counts and connection duration for traffic originating from 'explorer.exe'. Use the model to forecast expected behavior and alert on significant deviations, such as periodic, low-volume 'heartbeat' connections indicative of C2 beaconing."
            ]
          },
          {
            "description": "A trusted GUI process loads a DLL from a non-standard directory or executes code from a memory region with RWX permissions that is not backed by a file on disk.",
            "data_sources": [
              "Sysmon Event ID 7",
              "Sysmon Event ID 8"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Critical servers with GUI management tools",
            "action": [
              "Symbolic: Alert when a Sysmon Event ID 7 (ImageLoad) for a trusted process (e.g., 'explorer.exe') shows a DLL loaded from a user-writable path (e.g., 'C:\\\\Users\\\\*', 'C:\\\\Temp\\\\*', 'C:\\\\ProgramData\\\\*').",
              "Statistical: Maintain a baseline of all DLLs loaded by 'explorer.exe' across the enterprise. Calculate the prevalence of each DLL. Alert when a DLL is loaded whose prevalence is below a critical threshold (e.g., loaded on < 1% of hosts), indicating it is not a standard system or application component.",
              "Machine Learning: Use a sequence analysis model (e.g., an LSTM) trained on sequences of API calls and system events (process creation, DLL load, memory allocation). Flag event sequences that are highly improbable based on the learned model of benign behavior, such as a remote memory allocation (Sysmon Event ID 8) followed by a non-backed image load (Sysmon Event ID 7) in 'explorer.exe'."
            ]
          },
          {
            "description": "The 'explorer.exe' process performs high-volume file read/write operations in user directories or creates archive files (e.g., .zip, .rar).",
            "data_sources": [
              "Sysmon Event ID 11",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File servers, User workstations, Document management systems",
            "action": [
              "Symbolic: Alert when a Sysmon Event ID 1 (ProcessCreate) event shows 'explorer.exe' as the parent process for an archiving utility (e.g., '7z.exe', 'rar.exe', 'tar.exe').",
              "Statistical: For each host, baseline the number of file creation events (Sysmon Event ID 11) per hour originating from 'explorer.exe'. Alert when the count exceeds a dynamic threshold, such as the 99th percentile of the host's historical baseline for that process, indicating potential mass file access or staging.",
              "Machine Learning: Use a peer group analysis model to compare the file I/O patterns of 'explorer.exe' on one machine to its peers. Flag an instance as anomalous if its feature vector (e.g., ratio of reads to writes, number of unique directories accessed, file types created) deviates significantly from the cluster centroid of its peer group."
            ]
          },
          {
            "description": "Network traffic from 'explorer.exe' exhibits periodic, fixed-interval connections (beaconing), connects to high-entropy domains, or results in an anomalously large volume of data exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Sysmon Event ID 3"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, Core switches",
            "action": [
              "Symbolic: Correlate Sysmon Event ID 3 from 'explorer.exe' with Zeek conn.log. Alert if the connection uses a non-standard port (not 80, 443) to an external IP and is not associated with a known application (e.g., OneDrive, Dropbox).",
              "Statistical: For each internal host, analyze the time delta between connections from 'explorer.exe' to the same destination IP in Zeek conn.log. If the standard deviation of these time deltas is very low over a sustained period (e.g., > 10 connections), alert for potential C2 beaconing activity.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) on features from benign 'explorer.exe' network connections (e.g., port, destination IP reputation, bytes sent/received, domain entropy). Use the trained model to score new connections in real-time and alert on any connection classified as an outlier, indicating it does not conform to the learned benign profile."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]