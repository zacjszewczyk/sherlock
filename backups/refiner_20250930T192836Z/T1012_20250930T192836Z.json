[
  {
    "information_requirement": "Is the adversary performing discovery using registry queries? (TA0007 - Discovery)",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1012",
        "name": "Query Registry",
        "evidence": [
          {
            "description": "Execution of registry queries with command-line arguments that exactly match signatures of known malicious tools or reconnaissance scripts.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Critical servers (Domain Controllers, database servers), Executive workstations, Developer workstations",
            "action": [
              "Symbolic: Create and maintain a watchlist of specific command-line strings used by known malware for registry discovery (e.g., 'reg.exe query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated'). Scan Windows Event ID 4688 command-line data for exact matches to this list for high-fidelity alerting.",
              "Statistical: For command lines matching a broader regex for registry queries, calculate the Jaccard similarity score against a corpus of known malicious query commands. Flag any command with a similarity score above a predefined threshold (e.g., 0.85) for further investigation.",
              "Machine Learning: Develop a logistic regression classifier trained on labeled command-line data (benign vs. malicious). Use features like command length, presence of specific keywords (e.g., 'query', 'HKLM', 'password'), and character distribution (entropy). Apply the model to new Windows Event ID 4688 events to classify them as potentially malicious."
            ]
          },
          {
            "description": "A process queries specific, high-value registry keys commonly targeted by adversaries for discovering security configurations, credentials, or system information.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, Authentication servers (e.g., Domain Controllers), Servers hosting sensitive applications",
            "action": [
              "Symbolic: Monitor process creation events (Windows Event ID 4688) for common query utilities (reg.exe, powershell.exe, wmic.exe). Use a regular expression or watchlist to detect queries targeting known sensitive paths (e.g., '...\\CurrentVersion\\Winlogon', '...\\PuTTY\\Sessions', '...\\Control\\Lsa', '...\\Terminal Server Client\\...', '...\\Security\\Cache').",
              "Statistical: Assign a risk score to different registry hives and keys based on their sensitivity. Sum the scores for all keys accessed by a single process within a 10-minute window. Alert if the cumulative score exceeds a statistically determined threshold (e.g., 3 standard deviations above the mean score for the host role).",
              "Machine Learning: Use a classification model (e.g., a Gradient Boosting Machine) to predict if a query to a sensitive key is malicious. Features should include the parent process name, the user context, time of day, and rarity of the specific key being queried in the environment. The model will learn legitimate access patterns and flag deviations."
            ]
          },
          {
            "description": "A single process or user session executes an unusually high volume or a wide variety of distinct registry queries in a short time frame, indicative of automated reconnaissance.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows endpoints and servers, especially those with standard user configurations where such activity is unexpected",
            "action": [
              "Symbolic: Create a rule that triggers if a single Process ID generates more than 100 registry query events within a 1-minute window. This simple threshold provides a basic tripwire for brute-force scanning.",
              "Statistical: For each host, aggregate Windows Event ID 4688 events by parent process ID over a 5-minute window. Calculate the Shannon entropy of the set of unique registry keys queried. Establish a baseline entropy level for common processes (e.g., explorer.exe) and alert when a process's query entropy exceeds the 98th percentile of its historical behavior, indicating unusually diverse scanning.",
              "Machine Learning: Implement a time-series anomaly detection model (e.g., ARIMA or LSTM) on the rate of registry query events per host. The model will learn the normal rhythm of system activity and alert on sudden, sustained bursts of queries that deviate significantly from the predicted pattern."
            ]
          },
          {
            "description": "A registry query process (e.g., reg.exe) is spawned by a non-standard parent process, such as an office application, web browser, or a process running from a temporary directory.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Mail servers, Web proxies",
            "action": [
              "Symbolic: Create a detection rule that alerts when the process name is 'reg.exe' or 'regedit.exe' and the parent process name is in a list of unauthorized spawners, such as 'OUTLOOK.EXE', 'WINWORD.EXE', 'EXCEL.EXE', 'CHROME.EXE', or 'msedge.exe'.",
              "Statistical: For each process that can query the registry (reg.exe, powershell.exe, etc.), build a frequency table of its legitimate parent processes across the enterprise. Alert when a parent-child process relationship occurs that is in the bottom 5th percentile of frequency, indicating it is extremely rare.",
              "Machine Learning: Use an unsupervised learning model like an autoencoder on process creation event features (parent process, child process, user, command-line arguments). The model learns to reconstruct normal events with low error. Events that are difficult to reconstruct (high reconstruction error), such as an unusual parent-child pairing, are flagged as anomalies."
            ]
          },
          {
            "description": "Registry queries targeting network settings, proxy configurations, or stored credentials are followed within a short time window by an outbound network connection from the same host.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS servers, Windows endpoints and servers",
            "action": [
              "Symbolic: Correlate Windows Event ID 4688 events containing command lines that query network-related keys (e.g., 'HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings') with Zeek conn.log events from the same host IP within a 2-minute window. Alert if the destination IP is on a known threat intelligence blocklist.",
              "Statistical: Identify hosts performing network-related registry queries. For these hosts, analyze subsequent outbound connections in Zeek conn.log. Calculate the rarity of the destination port, destination IP's Autonomous System Number (ASN), and JA3 hash. Alert if a combination of these metrics falls into a high-rarity category (e.g., rare port and rare ASN).",
              "Machine Learning: Develop a sequence analysis model (e.g., a Hidden Markov Model) that learns common sequences of system behavior. Train the model on event pairs (process event, network event). Flag sequences where a network-related registry query is followed by a network connection that is classified as anomalous by a separate network traffic anomaly detection model."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]