[
  {
    "information_requirement": "Is the adversary using steganography to evade defenses? (PIR)",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1027.003",
        "name": "Steganography",
        "evidence": [
          {
            "description": "A file hash observed on an endpoint or transferred over the network matches a known hash of a steganography tool or a file artifact from a threat campaign known to use steganography.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, File servers, Network egress points",
            "action": [
              "Symbolic Logic: Continuously scan process creation events (Windows Event ID 4688) and network file transfers (Zeek files.log) to collect file hashes. Correlate these hashes against a threat intelligence feed of known steganography tool hashes (e.g., Steghide, OpenStego, F5) and indicators of compromise (IOCs) from past campaigns. Alert on any exact match.",
              "Statistical Method: For files matching known steganography tool names (e.g., 'steghide.exe') but not matching a known-good hash, calculate the prevalence of the observed hash across the enterprise. Flag hashes that are rare (e.g., present on < 1% of endpoints) for further investigation, as this may indicate a modified or unknown version of the tool.",
              "Machine Learning: Train a classification model (e.g., Random Forest) using file metadata features (file size, entropy, file name, MIME type from Zeek files.log) from known-benign and known-malicious (steganography-related) files. Use the model to score all new executables or media files transferred over the network. High scores indicate a higher probability of being related to steganography."
            ]
          },
          {
            "description": "A process is executed with command-line arguments containing specific flags, keywords, and file extension patterns strongly associated with steganography tool operations like embedding or extracting data.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Application servers, Domain Controllers",
            "action": [
              "Symbolic Logic: Monitor Windows Event ID 4688 for process command-line arguments. Apply a set of regular expressions to detect patterns indicative of steganography tools, such as the presence of keywords ('embed', 'extract', 'cover'), specific flags ('-ef', '-sf', '-p'), and media file extensions (.png, .jpg, .wav) within the same command. Alert on any regex match.",
              "Statistical Method: Calculate the Shannon entropy of command-line arguments. Unusually high entropy in a command line that also references a media file may indicate obfuscated commands, such as those used in Invoke-PSImage. Establish a baseline entropy for common processes (e.g., powershell.exe, cmd.exe) and flag commands that exceed a high percentile threshold (e.g., 99th percentile) for that process name.",
              "Machine Learning: Use a sequence-based model (e.g., an LSTM) trained on a large dataset of benign and malicious command lines. The model learns the grammatical structure and common sequences of arguments. Flag any command line that the model classifies as anomalous or malicious, especially those involving media files, as potential steganography execution."
            ]
          },
          {
            "description": "A process execution chain is observed where a parent process not typically associated with media file handling (e.g., powershell.exe, python.exe) accesses a media file and subsequently spawns a child process that initiates an external network connection.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4663",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User workstations, Internal web servers, Developer environments",
            "action": [
              "Symbolic Logic: Define and monitor for explicit high-risk process chains, such as [Office App -> Scripting Engine -> Media File Access -> Network Connection]. Correlate Windows Event IDs 4688 (Process Creation) and 4663 (File Access) with Zeek conn.log data based on hostname and a short time window (e.g., within 2 minutes) to detect and alert on these specific sequences.",
              "Statistical Method: Build a probabilistic graph of common parent-child process relationships in the environment. For any observed process chain involving media file access, calculate the transition probability for each step. Alert on chains with an overall probability score below a statistically determined threshold (e.g., below the 1st percentile of all observed chain probabilities), indicating a rare and suspicious sequence of events.",
              "Machine Learning: Employ a sequence analysis model to analyze chains of events (process creation, file access, network connection) on each host. Train the model on normal activity to create a baseline. The model should flag sequences that deviate significantly from learned patterns, such as a script interpreter accessing a PNG file and then making a POST request to an unknown IP address."
            ]
          },
          {
            "description": "A media file (e.g., image, audio) exhibits statistical anomalies, such as byte entropy significantly higher than the baseline for its file type, or a file size that is a statistical outlier compared to other files with similar metadata (e.g., image dimensions).",
            "data_sources": [
              "Zeek files.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, File shares, Web content servers (DMZ)",
            "action": [
              "Symbolic Logic: For all media files extracted from network traffic (via Zeek files.log), apply a YARA rule designed to find specific steganographic tool signatures or artifacts, such as appended data after an IEND chunk in a PNG file or known magic bytes of steganography tools. Alert on any positive match.",
              "Statistical Method: For each media file type (e.g., PNG, JPEG, WAV), establish a baseline for byte entropy. For each new file observed in Zeek files.log, calculate this metric. Flag any file where the entropy exceeds a dynamic threshold, such as 3 standard deviations from the mean or the 98th percentile for its specific file type, for manual review.",
              "Machine Learning: Develop a regression model for each major file type to predict file size based on its metadata (e.g., predict JPEG size from image width and height). Use an unsupervised learning model like Isolation Forest on a feature set including entropy and the regression model's prediction error (residual). The model will identify files that are anomalous across multiple dimensions, which are strong candidates for containing hidden data."
            ]
          },
          {
            "description": "The transfer of media files over the network exhibits anomalous characteristics when compared to a user's or host's established baseline, including an unusual volume or frequency, transfers to rare external destinations, or usage of non-standard ports.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, User workstations, VPN concentrators",
            "action": [
              "Symbolic Logic: Monitor Zeek http.log and conn.log for media file transfers (based on MIME type or file extension in URI) to or from IP addresses or domains on a threat intelligence blocklist or a list of newly registered domains (NRDs). Alert on any such transfer.",
              "Statistical Method: For each user, create a baseline of media file transfer activity including total bytes transferred per hour and destination country diversity. Alert when a user's hourly media file data transfer exceeds a high threshold (e.g., mean + 3 standard deviations) or when a transfer is made to a destination country from which the user has never before communicated.",
              "Machine Learning: Implement a time-series forecasting model (e.g., ARIMA) for each user's media file data volume. The model predicts the expected volume for the next time interval based on historical patterns. Generate an alert if the actual observed volume significantly exceeds the model's prediction confidence interval, as this may indicate a sudden, uncharacteristic burst of data exfiltration disguised as media file transfers."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]