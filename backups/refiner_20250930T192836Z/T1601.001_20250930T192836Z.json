[
  {
    "information_requirement": "Has the adversary modified network device operating system images or memory to evade defenses?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1601.001",
        "name": "Patch System Image",
        "evidence": [
          {
            "description": "A network device OS image file's cryptographic hash (e.g., SHA256) matches a value present in a threat intelligence feed of known-bad firmware, or a YARA scan of the image file matches a rule for known firmware implants.",
            "data_sources": [
              "Network device configuration backups",
              "Threat Intelligence Feeds (Known-bad Hashes)",
              "YARA rulesets for firmware malware",
              "Zeek tftp.log",
              "Zeek ftp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network device configuration management servers, Core network switches and routers, Perimeter firewalls, TFTP/FTP servers used for device management",
            "action": [
              "Symbolic: From a central management server, periodically retrieve device OS images. Calculate the SHA256 hash of each image and compare it against a list of known-bad hashes from threat intelligence feeds. Also, scan each image file with a YARA ruleset designed to detect known firmware implants like SYNful Knock. Generate an alert upon a hash or YARA rule match.",
              "Statistical: Analyze Zeek conn.log and file transfer logs (e.g., tftp.log, ftp.log) for transfers of files with extensions like .bin or .img. Calculate the baseline frequency and file size distribution for these transfers per device. Flag any transfer whose file size is in the 99th percentile of historical sizes for that device type, or if the source IP of the transfer is statistically rare (e.g., seen for the first time in 90 days).",
              "Machine Learning: Develop a time-series anomaly detection model on the count of firmware image transfers per hour across the network. Train the model on historical Zeek log data (tftp.log, ftp.log, conn.log) to learn normal maintenance patterns. An alert should be triggered if the model detects a statistically significant spike in transfer activity outside of known maintenance windows."
            ]
          },
          {
            "description": "A network device's stored OS image file has a cryptographic hash that does not match the vendor-provided hash for that specific version, indicating unauthorized modification.",
            "data_sources": [
              "Network device configuration backups",
              "Vendor-provided firmware hashes (Golden Image Repository)",
              "Network device syslog"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Configuration Management Database (CMDB), Golden Image Repository server, Critical network infrastructure (e.g., core routers, edge firewalls)",
            "action": [
              "Symbolic: For each critical network device, maintain a 'golden hash' in a Configuration Management Database (CMDB) corresponding to the approved OS image version. Periodically, execute a script to retrieve the device's image, calculate its SHA256 hash, and compare it to the golden hash in the CMDB. Trigger an alert on any mismatch.",
              "Statistical: Analyze network device syslog messages for image verification or checksum failure events (e.g., '%PLATFORM-1-IMAGE_INTEGRITY_FAIL'). Establish a baseline for these errors, which should be near zero. An alert should be generated on any occurrence of such an event. Additionally, track the frequency of 'show version' commands per user; a user executing this command an anomalous number of times (e.g., > 3 standard deviations above their personal baseline) after a configuration change could be a sign of verifying a patch.",
              "Machine Learning: Use a classification model (e.g., a decision tree) to assess the risk of a configuration change event. Features could include: user role, time of day, presence of boot variable changes, and proximity to image file transfer events. Train the model on historical labeled data (authorized vs. unauthorized changes). A change classified as 'high-risk unauthorized' would trigger a follow-on, automated hash verification action."
            ]
          },
          {
            "description": "A sequence of commands executed on a network device, captured in audit logs, matches a known pattern for firmware modification, such as transferring an image, changing boot variables, and then erasing logs.",
            "data_sources": [
              "Network device syslog",
              "TACACS+/RADIUS authentication logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized syslog server, Authentication servers (TACACS+/RADIUS), Network management stations",
            "action": [
              "Symbolic: Create a SIEM correlation rule that triggers when the following sequence of events from a single source IP and user is observed within a 15-minute window: (1) a file transfer command (e.g., 'copy tftp: ...'), (2) a boot configuration command (e.g., 'boot system flash ...'), and (3) a logging modification or log clearing command (e.g., 'no logging ...' or 'clear logging'). Alert on any match.",
              "Statistical: Calculate the entropy of commands executed by each user on network devices per session. A session with unusually high entropy (a wide variety of rare commands) or very low entropy (highly repetitive, scripted commands) compared to the user's historical baseline could be anomalous. Flag sessions where the percentile rank of the session's command entropy is >98% for that user.",
              "Machine Learning: Train a sequence-based model (e.g., an LSTM or Hidden Markov Model) on streams of command-line activity from network devices. The model learns normal sequences of commands for administrative tasks. The model should flag any sequence of commands that has a low probability of occurring based on the learned normal patterns, indicating a potential novel attack sequence."
            ]
          },
          {
            "description": "A file transfer containing a network device OS image (identified by filename or size) exhibits anomalous characteristics, such as originating from an untrusted IP, using an insecure protocol when a secure one is mandated, or occurring outside of a scheduled maintenance window.",
            "data_sources": [
              "Zeek ftp.log",
              "Zeek tftp.log",
              "Zeek conn.log",
              "Network device syslog"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Taps/SPAN ports feeding Zeek sensors, Management network segment, File transfer servers (TFTP/FTP/SCP)",
            "action": [
              "Symbolic: Define an allow-list of authorized source IP addresses for firmware management and approved protocols (e.g., SCP). Create a SIEM rule that monitors Zeek logs (tftp.log, ftp.log, conn.log on port 22) for file transfers with names matching firmware patterns (e.g., '*.bin', 'cisco*.img') that either (a) use a disallowed protocol like TFTP or (b) originate from an IP not on the allow-list. Generate an alert on a match.",
              "Statistical: For all firmware file transfers, calculate a baseline of activity by hour of day and day of week. Use a percentile-based threshold (e.g., 99th percentile) on the volume of transfers to detect unusual spikes. Also, track the set of source-destination pairs for firmware transfers; alert if a new, never-before-seen pair is used.",
              "Machine Learning: Use a time-series decomposition model (e.g., STL) on Zeek file transfer data to separate seasonality (maintenance windows) and trend from the residual component. Apply an anomaly detection algorithm (e.g., Isolation Forest) on the residual data to identify transfers that are anomalous even after accounting for regular maintenance cycles."
            ]
          },
          {
            "description": "The execution of high-risk, privileged commands (e.g., debug, memory-write, or 'poke' commands) on a network device by an unauthorized user or outside of an approved change window.",
            "data_sources": [
              "Network device syslog",
              "TACACS+/RADIUS command authorization logs",
              "IT Service Management tool data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Centralized syslog server, AAA servers (TACACS+/RADIUS), ITSM platform",
            "action": [
              "Symbolic: Define a list of high-risk commands (e.g., 'debug memory', 'poke', 'system-view diag') and a corresponding allow-list of authorized administrative accounts. Create a SIEM rule to monitor network device audit logs for the execution of any high-risk command by a user not on the allow-list. Trigger an alert on a match.",
              "Statistical: For each administrator, establish a baseline frequency of high-risk command usage. Flag any administrator whose usage in a 24-hour period exceeds 3 standard deviations above their own historical average. This helps detect a compromised administrative account being used to probe or patch devices.",
              "Machine Learning: Train a one-class SVM (Support Vector Machine) model on features of authorized high-risk command execution, including user, source IP, time of day, and associated change ticket ID. The model learns the boundary of normal, authorized activity. Any new command execution that falls outside this learned boundary is flagged as a potential anomaly requiring investigation."
            ]
          },
          {
            "description": "A network device's boot configuration is modified to point to a new or unverified OS image file, change the boot order, or disable a security feature like secure boot, and this change is not associated with an authorized change record.",
            "data_sources": [
              "Network device syslog",
              "Configuration backup files",
              "IT Service Management tool data"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network configuration management servers, Centralized syslog server, ITSM platform",
            "action": [
              "Symbolic: Create a SIEM rule that triggers an alert whenever a configuration change event containing boot variable modification commands (e.g., 'boot system flash:', 'config-register') is detected in network device syslog, and there is no corresponding approved change ticket in the ITSM system for that device and time window.",
              "Statistical: Periodically run a configuration diffing script that compares the current boot configuration of a device against its last known-good state. Calculate a 'config drift' score based on the number and type of lines changed. A score exceeding a statistically defined threshold (e.g., 95th percentile of historical drift scores for maintenance activities) triggers an alert for manual review.",
              "Machine Learning: Use an NLP (Natural Language Processing) model to analyze the 'reason' or 'comment' field in change management tickets. Train the model to classify tickets as 'Firmware Upgrade', 'Security Patch', etc. When a boot configuration change is detected, correlate it with the associated ticket. If a boot change is associated with a ticket classified as something other than 'Firmware Upgrade', flag it as a high-risk anomaly."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]