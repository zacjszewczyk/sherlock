[
  {
    "information_requirement": "Is the adversary gathering information about the system time or time zone?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1124",
        "name": "System Time Discovery",
        "evidence": [
          {
            "description": "A process creation event is recorded where the file hash (e.g., SHA256) of the executable image matches an entry on a threat intelligence feed of known reconnaissance tools.",
            "data_sources": [
              "Windows Event ID 4688",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Executive Workstations, Domain Controllers, Critical Application Servers, Developer Endpoints",
            "action": [
              "Create a SIEM rule that triggers on every process creation event (Windows Event ID 4688, Sysmon Event ID 1). Extract the executable's file hash and compare it against a threat intelligence list of known malicious hashes. Generate a high-severity alert for any match."
            ]
          },
          {
            "description": "Execution of a built-in time discovery utility (e.g., `net.exe`, `w32tm.exe`, `Get-Date`) exhibits anomalous characteristics, such as an unusual parent process, high frequency, or occurring in a rapid sequence with other discovery commands.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows PowerShell Event ID 4104",
              "Sysmon Event ID 1"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "All Windows Endpoints and Servers, especially those not configured as time servers",
            "action": [
              "Create a detection rule that looks for process creation events where the command line contains `net time`, `w32tm /tz`, `w32tm /query`, `date /t`, or `time /t`, and the parent process is not `cmd.exe`, `explorer.exe`, or a known administrative script host. Also monitor PowerShell script blocks (Event ID 4104) for `Get-Date` or `[System.DateTime]` usage within obfuscated or suspicious scripts.",
              "For each user-host combination, establish a baseline for the hourly frequency of time discovery command executions over a 30-day period. Calculate the 99th percentile of execution counts. Generate a medium-severity alert when a user's execution count in an hour exceeds this statistical threshold. Additionally, calculate the Shannon entropy of command-line arguments executed by a single process ID within a 5-minute window; flag sessions where time discovery commands coincide with a high entropy score, indicating scripted reconnaissance.",
              "Train a classification model (e.g., Random Forest, Gradient Boosting) using labeled historical process data. Features should include: parent process name, user account type (e.g., user, system, service), command-line length, and the presence of specific keywords (`time`, `tz`, `date`). Use the model to score new time discovery events in real-time, alerting on those classified with high confidence as malicious."
            ]
          },
          {
            "description": "A host initiates Network Time Protocol (NTP) communications on UDP port 123 to an external IP address not on the organization's allowlist, or the volume of a host's NTP queries deviates significantly from its established baseline.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ntp.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, DNS Servers, Domain Controllers",
            "action": [
              "Create a SIEM rule to monitor all network connection logs (Zeek conn.log) for traffic on destination port 123 (UDP). Maintain an allowlist of approved internal and external NTP servers. Generate a high-severity alert for any host initiating a connection to an IP address not on this list.",
              "For each internal host IP, perform a time-series analysis on the volume of NTP connections (from Zeek conn.log where `id.resp_p` is 123) aggregated into 1-hour intervals over a 30-day period. Calculate the mean and standard deviation for each interval. Generate a medium-severity alert if the connection count in any given hour exceeds three standard deviations ($$ Z > 3 $$) above the mean for that interval.",
              "Implement an unsupervised machine learning model, such as an autoencoder, trained on historical Zeek ntp.log and conn.log data. The model should learn the normal patterns of NTP traffic, including source-destination pairs, packet volume, and timing. Use the model's reconstruction error to score new NTP events; a high reconstruction error indicates a significant deviation from the norm and should trigger an alert for analyst review."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]