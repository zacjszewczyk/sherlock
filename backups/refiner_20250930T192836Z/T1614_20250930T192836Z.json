[
  {
    "information_requirement": "Is the adversary attempting to discover the geographic location of systems on the network?",
    "tactic_id": "TA0007",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1614",
        "name": "System Location Discovery",
        "evidence": [
          {
            "description": "An outbound network connection (DNS, HTTP/S) from an internal host to a service known for public IP geolocation.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Internal DNS Resolvers",
            "action": [
              "Symbolic: Maintain a watchlist of domains and IP addresses for public IP geolocation services (e.g., ipinfo.io, ip-api.com, ifconfig.me). Create a detection rule to alert on any DNS query (from Zeek dns.log) or HTTP/S connection (from Zeek conn.log/http.log) to these destinations originating from server subnets or critical assets.",
              "Statistical: For each host, calculate a baseline of connections to 'Utilities & Web Services' destinations. Profile the frequency of connections to geolocation services. Flag any host whose connection count to these services exceeds the 99th percentile of its own historical baseline or the baseline of its peer group (e.g., other developer workstations).",
              "Machine Learning: Use a trained classifier to distinguish between benign (e.g., browser-initiated) and malicious (e.g., script-initiated) connections to geolocation services. Features could include the user-agent (from Zeek http.log), connection duration, data volume, and the parent process initiating the connection (if available from endpoint logs). A model scoring a connection as 'malicious' with high confidence should trigger an alert."
            ]
          },
          {
            "description": "Execution of specific commands, command sequences, or scripts used to query system locale, timezone, or keyboard layout settings via the command line.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Domain Controllers, Application Servers",
            "action": [
              "Symbolic: Create a detection rule that triggers on the execution of specific command-line strings indicative of location discovery in Windows Event ID 4688. Examples include: `powershell -c Get-Culture`, `powershell Get-TimeZone`, `systeminfo | findstr /i 'Time Zone'`, or execution of `tzutil /g` by a non-interactive or suspicious parent process (e.g., wscript.exe, mshta.exe, Office applications).",
              "Statistical: For each host and user, establish a baseline for the frequency and variety of system information commands. Calculate the Shannon entropy of commands executed within a sliding time window (e.g., 5 minutes). An anomalously high entropy score, indicating a rapid succession of different discovery commands, should be flagged for investigation.",
              "Machine Learning: Develop a sequence analysis model (e.g., using a Recurrent Neural Network or Hidden Markov Model) trained on known benign and malicious command sequences. Feed command-line execution logs (Windows Event ID 4688) for each session into the model. Flag any session that the model classifies as a malicious reconnaissance sequence with a high probability score."
            ]
          },
          {
            "description": "A process or user account executes location discovery commands that deviate from its established behavioral baseline in terms of frequency, timing, or context.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Privileged Access Workstations, Critical Servers",
            "action": [
              "Symbolic: Create a rule that alerts when a service account or a process typically associated with a server application (e.g., sqlservr.exe, iisexpress.exe) spawns a child process to execute a location discovery command (e.g., Get-Culture, tzutil).",
              "Statistical: For each user, model their command-line activity during business hours vs. non-business hours. Use a Z-score on the count of location discovery commands executed by a user outside of their typical working hours. A score greater than 3 (i.e., more than 3 standard deviations from the mean) indicates a significant anomaly and should be investigated.",
              "Machine Learning: Employ an unsupervised clustering algorithm (e.g., DBSCAN) to group hosts based on their command-line execution patterns. Features can include command frequency, command variety, and parent-child process relationships. Hosts that are flagged as outliers or fall into a small, distinct 'high-discovery-activity' cluster should be prioritized for analyst review."
            ]
          },
          {
            "description": "A host executes one or more location discovery commands, and within a short time window, initiates an outbound network connection to an unknown or low-reputation external destination.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, User Workstations, Servers with Internet Access",
            "action": [
              "Symbolic: Correlate Windows Event ID 4688 (for location discovery commands) with Zeek conn.log within a 5-minute window on the same host. Create a rule to alert if the subsequent outbound connection's destination IP is on a threat intelligence blocklist or is a newly registered domain (NRD) identified from DNS logs (Zeek dns.log).",
              "Statistical: For each host, calculate the probability of an outbound connection to a new, never-before-seen destination IP address. Then, calculate the conditional probability of this event occurring within 5 minutes after a location discovery command is executed. If P(New_IP | Discovery_Cmd) is statistically significantly higher than P(New_IP), flag the event as suspicious.",
              "Machine Learning: Use a time-series cross-correlation analysis to model the relationship between the time series of discovery command events and the time series of outbound C2-like connections (e.g., long-lived, high-entropy data transfers). A strong positive correlation with a short time lag (e.g., 1-5 minutes) between the two series for a specific host is a strong indicator of automated data exfiltration following reconnaissance."
            ]
          },
          {
            "description": "A compute instance makes a network request to the cloud provider's internal instance metadata service to retrieve location-specific information, such as region or availability zone.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688",
              "Windows Event ID 5156"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Cloud Compute Instances (e.g., AWS EC2, Azure VM), Cloud Network Flow Logs",
            "action": [
              "Symbolic: Create a detection rule to alert on any network connection (from Zeek conn.log or Windows Event ID 5156) from a host to the non-routable metadata service IP addresses (e.g., 169.254.169.254) that is not initiated by an expected startup or management script. Monitor command line logs (Windows Event ID 4688) for tools like `curl` or `Invoke-RestMethod` targeting these IPs.",
              "Statistical: Establish a baseline of legitimate metadata service access for each instance type or role. Alert if an instance's daily access count to location-specific metadata endpoints (e.g., /placement/availability-zone, /location) exceeds the 95th percentile of its peer group or its own historical behavior.",
              "Machine Learning: Train a classifier to distinguish legitimate from malicious metadata service access. Features could include the specific metadata path requested, the user agent, the parent process, and the time of day. A request classified as malicious, especially when correlated with other suspicious activity on the instance, should generate a high-severity alert."
            ]
          }
        ]
      }
    ],
    "version": "2.2",
    "date_created": "2025-05-04",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]