[
  {
    "information_requirement": "Has the adversary escalated privileges using access token manipulation?",
    "tactic_id": "TA0004",
    "tactic_name": "Privilege Escalation",
    "indicators": [
      {
        "technique_id": "T1134",
        "name": "Access Token Manipulation",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is observed where the new process name or command-line arguments match patterns of known token manipulation tools (e.g., JuicyPotato.exe, RottenPotato.exe, PrintSpoofer.exe).",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Application Servers, User Workstations",
            "action": [
              "Symbolic: Create a detection rule that triggers an alert when a process creation event (Windows Event ID 4688) contains a NewProcessName or CommandLine field matching a watch-list of known token manipulation tool names or their unique command-line arguments (e.g., `JuicyPotato.exe`, `-t * -l <port>`).",
              "Statistical: For each process creation event, calculate a threat score based on the rarity of command-line arguments using an n-gram frequency model trained on historical data. A process with arguments in the lowest percentile of frequency (e.g., < 1st percentile) that also involves a system process as a parent should be flagged for review.",
              "Machine Learning: Use a supervised classification model (e.g., Random Forest) trained on labeled process creation events. Features should include process name, parent process name, command-line length, and presence of special characters. The model will classify each new process event as benign or malicious, specifically identifying patterns associated with token-stealing exploits."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a parent process that is a critical system service (e.g., services.exe, lsass.exe, spoolsv.exe) spawning an unexpected child process, such as an interactive shell (cmd.exe, powershell.exe) or a non-native binary.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Critical Infrastructure Servers, Privileged Access Workstations",
            "action": [
              "Symbolic: Implement a rule to alert when a process creation event (Windows Event ID 4688) has a ParentProcessName from a list of sensitive services (`services.exe`, `lsass.exe`, `spoolsv.exe`, `wininit.exe`) and a NewProcessName that is not on an approved allow-list of child processes for that parent.",
              "Statistical: Develop a baseline of normal parent-child process relationships across the environment. Calculate the conditional probability P(Child | Parent) for all observed pairs. Alert when a new process creation event occurs with a probability below a statistically significant threshold (e.g., < 0.01%), indicating a rare and potentially malicious process chain.",
              "Machine Learning: Employ an unsupervised clustering algorithm (e.g., DBSCAN) on process creation events, using features like parent process name, child process name, and user context. Clusters that are small and isolated from the main clusters of benign activity represent anomalies that could indicate token manipulation, such as a service spawning a shell."
            ]
          },
          {
            "description": "A temporal correlation exists between a process created by a non-privileged user (Windows Event ID 4688) and a subsequent service logon event (Windows Event ID 4624, Logon Type 5) for the SYSTEM account, where the ProcessId in the logon event traces back to the user-created process lineage.",
            "data_sources": [
              "Windows Event ID 4688",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Authentication Servers, Application Servers, User Workstations",
            "action": [
              "Symbolic: Create a correlation rule that joins process creation events (4688) with logon events (4624) on the ProcessId. Trigger an alert if a process created by a non-privileged user account is followed within a short time window (e.g., < 5 seconds) by a Logon Type 5 event for `NT AUTHORITY\\SYSTEM` originating from the same process.",
              "Statistical: For each process, analyze the TokenElevationType field (from Event ID 4688). Establish a baseline of elevation types for common processes. Flag processes that show an elevation to TokenElevationTypeDefault (1) from a parent with a limited token, especially if the parent is not `consent.exe`. Calculate the frequency of such elevations per user/host and alert on statistical outliers (e.g., > 3 standard deviations from the user's mean).",
              "Machine Learning: Use a time-series analysis model to monitor the rate of SYSTEM-level service logons (Logon Type 5) per host. An anomalous spike in these events, especially when temporally correlated with unusual user process activity on the same host, can be flagged by the model as a potential token manipulation attack."
            ]
          },
          {
            "description": "A successful network logon event (Windows Event ID 4624, Logon Type 3) is recorded with a source network address of a loopback IP (127.0.0.1, ::1) and the target account is a high-privilege account like `NT AUTHORITY\\SYSTEM`, with the logon process originating from a non-system, user-level process.",
            "data_sources": [
              "Windows Event ID 4624",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Member Servers, User Endpoints",
            "action": [
              "Symbolic: Create a high-priority alert for any successful logon event (Windows Event ID 4624) where `LogonType` is 3, `IpAddress` is '127.0.0.1' or '::1', and `TargetUserName` is 'SYSTEM'. Correlate the `ProcessId` from this event with the creating process from Event ID 4688 to confirm it was not initiated by a legitimate system process.",
              "Statistical: Profile the frequency of localhost network logons (Logon Type 3) by user and process across the environment. Establish a baseline for legitimate applications. Generate an alert when a user or process initiates such a logon and the frequency exceeds a baseline threshold (e.g., more than 2 standard deviations above the mean for that user/process).",
              "Machine Learning: Train a decision tree classifier to identify 'Potato' family attacks. Features would include `LogonType`, `IpAddress`, `TargetUserName`, `ProcessName` (from the logon event), and parent process name (via correlation). The model can learn the specific combination of features (Logon Type 3, localhost IP, SYSTEM user, non-system process) that strongly indicates this attack pattern."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is the adversary evading defenses using access token manipulation?",
    "tactic_id": "TA0005",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1134",
        "name": "Access Token Manipulation",
        "evidence": [
          {
            "description": "A process creation event (Windows Event ID 4688) is observed for psexec.exe or a variant (paexec.exe) containing the -s command-line argument, indicating an attempt to run a process under the SYSTEM account context.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, IT Administrator Systems, Jump Servers",
            "action": [
              "Symbolic: Implement a detection rule that triggers a high-severity alert for any process creation event (Windows Event ID 4688) where the `NewProcessName` is `psexec.exe` or `paexec.exe` AND the `CommandLine` contains the `-s` flag.",
              "Statistical: Track the usage frequency of PsExec (and its variants) by user and source/destination hosts. Calculate a risk score based on the user's role and the rarity of the source-destination pair. Usage by a non-administrator account or at an unusual time (e.g., login time > 99th percentile for that user) should be flagged for investigation.",
              "Machine Learning: Use a sequence analysis model (e.g., Hidden Markov Model) to identify the attack chain associated with PsExec usage for defense evasion. A typical sequence might be: download/creation of `psexec.exe`, execution with `-s` flag, followed by suspicious child processes (e.g., `whoami.exe`, `net.exe`). The model can learn to recognize this entire sequence as a high-confidence malicious event."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) for `runas.exe` contains the `/netonly` argument, followed by network connection attempts (Zeek conn.log) from the host to remote systems using protocols like SMB (port 445) or WinRM (port 5985/5986).",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Network Egress/Ingress Points, Authentication Servers",
            "action": [
              "Symbolic: Create a correlation rule that triggers when a `runas.exe` process is created with `/netonly` in the command line (Event ID 4688), and is followed within a short time window (e.g., 2 minutes) by an outbound SMB or WinRM connection from the same host to a new internal destination IP address (Zeek conn.log).",
              "Statistical: Baseline the use of `runas.exe` per user. Alert when a user's execution of `runas /netonly` deviates from their historical pattern, such as targeting a different set of destination servers. Calculate the Jaccard similarity between the set of destination IPs in the current window and the historical set; a score below a defined threshold (e.g., 0.2) indicates anomalous behavior.",
              "Machine Learning: Employ a graph-based anomaly detection model where nodes are users, hosts, and processes. The sequence of a user running `runas /netonly` on a host, which then connects to a new remote host, forms a specific subgraph pattern. The model can identify rare or previously unseen subgraphs as potential threats."
            ]
          },
          {
            "description": "A typically non-networking system process (e.g., lsass.exe) or a process with a predictable network pattern (e.g., svchost.exe for Windows Updates) initiates an outbound network connection (Zeek conn.log) to a rare external IP address or over a non-standard port, suggesting its token has been compromised.",
            "data_sources": [
              "Zeek conn.log",
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points (Firewall, Proxy), Domain Controllers, Endpoint Security Agents",
            "action": [
              "Symbolic: Create a rule to alert if a process from a defined list of critical system processes (e.g., `lsass.exe`, `winlogon.exe`, `csrss.exe`) is observed as the source of any outbound network connection in network flow logs (Zeek conn.log).",
              "Statistical: For each key system process (e.g., `svchost.exe`), build a statistical baseline of its network behavior, including destination IPs, ports, and data volume. Use percentile-based thresholds to detect anomalies, such as a connection to a destination IP in the bottom 1% of popularity or a data transfer volume exceeding the 99th percentile for that process.",
              "Machine Learning: Use a time-series decomposition model on the network traffic volume generated by specific security or system processes. The model separates the time series into trend, seasonal, and residual components. A significant, unexplained spike in the residual component can indicate an anomaly, such as an adversary using a compromised process token for C2 communication."
            ]
          },
          {
            "description": "Within a short time frame, a single source host generates multiple successful network logon events (Windows Event ID 4624, Logon Type 3) to various destinations, where the set of `TargetUserName` values has high entropy, indicating the use of multiple stolen tokens for lateral movement.",
            "data_sources": [
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Domain Controllers, Centralized Log Aggregator (SIEM), Member Servers",
            "action": [
              "Symbolic: Create a rule that counts the number of unique `TargetUserName` values per `IpAddress` (source host) for Logon Type 3 events over a 1-hour window. Trigger an alert if this count exceeds a hard threshold (e.g., > 10 unique accounts from one non-server host).",
              "Statistical: For each source host, calculate the Shannon entropy of the `TargetUserName` set for successful network logons (Logon Type 3) within a sliding 30-minute window. Establish a baseline entropy level for different host types (workstations vs. servers) and alert when a host's account entropy exceeds a dynamic threshold (e.g., 3 standard deviations above its baseline).",
              "Machine Learning: Use peer group analysis to identify anomalous lateral movement. Group hosts by role or department (e.g., 'HR Dept Workstations'). The model learns the typical 'fan-out' behavior (number of remote logons to unique accounts/hosts) for each peer group. A host whose fan-out behavior significantly deviates from its peers is flagged as an outlier."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) shows a `ParentProcessName` that is inconsistent with a typical process tree (e.g., `cmd.exe` as a child of `services.exe`), or the `ParentProcessId` specified in the event does not exist or terminated prior to the child's creation, indicating Parent Process ID (PPID) spoofing.",
            "data_sources": [
              "Windows Event ID 4688"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "User Workstations, Application Servers, Developer Endpoints",
            "action": [
              "Symbolic: Implement a rule that alerts when a process creation event (Event ID 4688) has a `ParentProcessName` that is a common spoofing target (e.g., `explorer.exe`) but the child process (`NewProcessName`) is anomalous (e.g., `powershell.exe` without user interaction), or when the parent process is a terminated process.",
              "Statistical: Maintain a stateful table of running processes and their creation times. For each new process creation event (4688), check if the `ParentProcessId` exists in the table. Calculate the rate of 'orphaned' processes (processes with non-existent parents) per host. A spike in this rate above a statistical baseline (e.g., > 95th percentile) indicates potential PPID spoofing activity.",
              "Machine Learning: Train a graph neural network (GNN) on process-lineage graphs to learn the structural properties of normal process trees. When a new process is created, the updated graph is evaluated to identify anomalous structures, such as a node with an illogical parent or unusual depth, which are hallmarks of PPID spoofing."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "2.2",
    "date_created": "2025-05-04",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]