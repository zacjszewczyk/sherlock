[
  {
    "information_requirement": "Has an adversary's action resulted in a disruption of critical industrial processes, leading to a measurable loss of productivity or revenue?",
    "tactic_id": "TA0105",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T0855",
        "name": "Unauthorized Command Message",
        "evidence": [
          {
            "description": "A critical command message, such as a Modbus function code 0x05 (Write Single Coil) to an emergency stop relay or an EtherNet/IP 'Stop' command, is observed in Zeek ICS protocol logs. The command is considered unauthorized if: 1) It originates from a source IP or user account (correlated via Windows Event ID 4624) not on the documented allowlist for that specific command and target device. 2) The command occurs outside its normal operational window (e.g., after 10 PM local time) and lacks a corresponding change management ticket. 3) The command is part of a sequence that deviates from established operational workflows, such as a 'stop' command without a preceding 'ramp down' sequence.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Windows Event ID 4624",
              "Windows Event ID 4663",
              "Change Management System Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Engineering Workstations (EWS) and Operator Stations (HMI) for command origination context; ICS Control Network (Purdue Model Levels 1 & 2) for monitoring command transmission to PLCs/RTUs; Authentication Servers for user identity correlation; Change Management database for operational context.",
            "action": [
              "Maintain a granular allowlist of {source IP, user account, destination IP, command_type, target_address_range} tuples for authorized operations. Implement a real-time query on Zeek ICS protocol logs to generate a high-priority alert for any command that does not match an allowlist entry. Before finalizing the alert, automatically query the change management system API to check for an approved change record matching the command parameters and timeframe, suppressing the alert if one is found.",
              "For each authorized {user, command_type} pair, profile the timing (hour of day, day of week) and frequency of commands over a 30-day period to establish a statistical baseline. Alert if a critical command is issued at an hour that falls outside the 99th percentile of its typical execution time distribution. For command sequences, model the process workflow using a first-order Markov chain. Alert if a transition between two command states occurs that has a historically observed probability of less than 0.01, indicating a dangerously abnormal sequence of operations.",
              "Train a One-Class SVM model on feature vectors representing normal command sequences originating from authorized users. Engineer features to include source IP, categorical user ID, categorical command type, command parameters, and the time delta since the user's last command. Deploy the model to score new commands in real-time. Alert on any command identified as an outlier, and escalate the priority if the anomalous command is correlated with preceding anomalous host activity, such as unauthorized access to HMI project files (Windows Event ID 4663) on the source workstation within the last hour."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Has an adversary attempted to impair process control by sending unauthorized command messages to industrial control system devices? (PIR)",
    "tactic_id": "TA0106",
    "tactic_name": "Impair Process Control",
    "indicators": [
      {
        "technique_id": "T0855",
        "name": "Unauthorized Command Message",
        "evidence": [
          {
            "description": "An ICS write/operate command (e.g., Modbus function codes 0x06, 0x10; DNP3 function code 0x01) is observed in Zeek protocol logs where the source IP in the `id.orig_h` field is not on the 'Approved_ICS_Command_Initiators' allow-list of authorized Engineering Workstations, HMIs, and control servers.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments, including network taps/sensors monitoring traffic to/from PLCs, RTUs, and field controllers at the Level 3.5 Industrial Demilitarized Zone (IDMZ), Level 3 Manufacturing Operations Management (MOM) Layer, and Level 2 Control System Layer.",
            "action": [
              "Create and maintain an explicit allow-list of IP addresses for all authorized devices permitted to send critical command messages. Implement a SIEM rule to compare the `id.orig_h` field from Zeek ICS protocol logs against this allow-list and generate a high-priority alert for any command originating from a non-listed IP address.",
              "Over a 30-day rolling window, aggregate daily command counts per source IP (`id.orig_h`) from Zeek ICS logs. Identify any source IP not seen in the past 30 days. Separately, calculate the 99th percentile of daily command counts for all established IPs. Generate a medium-priority alert if a newly observed IP's daily command count exceeds this 99th percentile threshold.",
              "Deploy a pre-trained supervised classification model, such as a Gradient Boosting or Random Forest classifier, to analyze real-time ICS events. Use features from Zeek conn.log and protocol-specific logs (e.g., source/destination IP, protocol, service, command type, duration, bytes transferred). Generate an alert if the model classifies an event as 'unauthorized' with a confidence score greater than 0.90."
            ]
          },
          {
            "description": "An ICS command message (e.g., Modbus, DNP3, S7comm) is observed in Zeek protocol logs with a timestamp (`ts` field) that falls outside of pre-defined, approved operational schedules or maintenance windows. This includes commands executed during off-hours, weekends, or holidays when such activity is not expected.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "SCADA/HMI server segments, data historians, network taps, and industrial firewalls monitoring HMI, SCADA server, and PLC/RTU communications within the ICS network, including Level 1 Basic Control Layer and Level 0 Process Layer.",
            "action": [
              "Define and maintain a SIEM lookup table of approved operational schedules and maintenance windows for ICS command execution. Create a rule that compares the `ts` timestamp of each command from Zeek logs against this schedule. Generate a high-priority alert for any command executed outside of its approved time window.",
              "For each critical command type and source device pair, establish an hourly and daily activity baseline over a 90-day period. Calculate the historical mean and standard deviation of command counts for each time slice (e.g., Monday at 2 PM). Generate a medium-priority alert if the current command count in a given time slice exceeds its historical mean by more than 3 standard deviations.",
              "Train a time-series anomaly detection model, such as Prophet or an LSTM Autoencoder, on at least 90 days of historical ICS command data (timestamp and command type) from Zeek logs. Deploy the model to analyze the command stream in real-time and generate an alert when the model flags a command's timing with an anomaly score exceeding a pre-determined threshold, indicating a deviation from learned temporal patterns."
            ]
          },
          {
            "description": "A process creation event (Windows Event ID 4688) on an HMI or EWS shows a critical ICS application (e.g., 'Siemens.WinCC.exe', 'Rockwell.FactoryTalk.exe') being spawned by a non-standard parent process (e.g., 'powershell.exe', 'cmd.exe'). This host event is temporally correlated within a 60-second window with subsequent outbound ICS protocol traffic from that host to a control system device, as seen in Zeek logs.",
            "data_sources": [
              "Windows Event ID 4688",
              "Zeek conn.log",
              "Zeek modbus.log",
              "Zeek enip.log",
              "Zeek s7comm.log",
              "Zeek dnp3.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Human-Machine Interfaces (HMIs), Engineering Workstations (EWS), and SCADA/Historian Servers within the control network.",
            "action": [
              "Maintain a whitelist of approved parent processes for each critical ICS application. Deploy a SIEM rule to monitor Windows Event ID 4688 for any instance where a critical ICS application is created by a parent process not on its specific whitelist. Correlate this event by host IP and timestamp with Zeek logs to confirm outbound ICS traffic within 60 seconds, generating a critical alert upon confirmation.",
              "From Windows Event ID 4688 logs over a 60-day baseline, calculate the frequency of all unique parent-child process pairs involving critical ICS applications. Identify any observed pair that has a historical frequency in the bottom 1st percentile (i.e., is extremely rare). Escalate the priority if the parent is a scripting engine or command shell and the event correlates with outbound ICS network traffic from the same host.",
              "Model process creation activity from Windows Event ID 4688 logs as a directed graph of parent-child relationships. Train a graph-based anomaly detection algorithm (e.g., GraphSAGE) to learn normal process lineage structures. Score new process creation events in real-time based on their deviation from the learned graph, and generate a high-priority alert for anomalous process chains that involve critical ICS applications and are temporally correlated with outbound ICS protocol traffic."
            ]
          },
          {
            "description": "An ICS write/operate command (e.g., Modbus Write, DNP3 Operate) observed in Zeek protocol logs contains a value or parameter that violates the defined physical or logical constraints of the target system. This includes a data value (e.g., from the `modbus.log` `write_value` field) outside its safe operational range, or the use of a function code (from the `func` field) not permitted for the target device or its current process state.",
            "data_sources": [
              "Zeek modbus.log",
              "Zeek dnp3.log",
              "Zeek enip.log",
              "Zeek s7comm.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Process Control Network (PCN) segments, with a focus on traffic destined for critical final control elements (e.g., actuators, valves), safety instrumented systems (SIS), Programmable Logic Controllers (PLCs), Remote Terminal Units (RTUs), and Intelligent Electronic Devices (IEDs).",
            "action": [
              "Develop and maintain a 'process specification' lookup in collaboration with process engineers, defining, per control point, the target device IP, valid function codes, valid register addresses, and safe min/max values. Create a SIEM rule to parse Zeek ICS logs and cross-reference command parameters (`id.resp_h`, `func`, `addr`, value) against this specification. Generate a critical alert for any command violating the defined rules.",
              "For each critical register address, profile the distribution of its written values over a 90-day baseline from Zeek logs, calculating the mean, standard deviation, and interquartile range (IQR). Generate an alert if a new write value is a statistical outlier (e.g., exceeds 3 standard deviations from the mean or 1.5 * IQR from the quartiles). Separately, calculate the Shannon entropy of the value field in 1-hour windows to detect potential fuzzing, alerting on significant entropy changes.",
              "For each critical control device, train an unsupervised anomaly detection model, such as an Autoencoder, on the historical multivariate distribution of its command parameters (function, address, value) from Zeek logs. In real-time, calculate the reconstruction error for new commands. Generate an alert if the error exceeds a dynamically tuned threshold, indicating the command's parameters are inconsistent with learned normal behavior."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.5",
    "date_created": "2025-09-25",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]