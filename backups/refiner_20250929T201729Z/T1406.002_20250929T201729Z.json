[
  {
    "information_requirement": "Is an adversary using packed or obfuscated applications to evade detection on our mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1406.002",
        "name": "Software Packing",
        "evidence": [
          {
            "description": "An Android Application Package (APK) file, identified via network transfer or file creation events, exhibits a calculated Shannon entropy score that falls in the upper percentile (e.g., >95th) of a baseline established from known-good, corporate-approved mobile applications, indicating the presence of packed or encrypted code.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log",
              "Windows Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress/ingress points, Corporate Wi-Fi access points, VPN termination points, Developer workstations and build servers, Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) application inventories.",
            "action": "1. (Symbolic) From Zeek http.log, identify all downloads of files with MIME type 'application/vnd.android.package-archive' (APKs). Correlate the source domain and IP address (from conn.log) against threat intelligence feeds for known malicious hosts or malware distribution points. Generate an alert for any match. 2. (Statistical) Continuously monitor Zeek files.log and Windows Sysmon Event ID 11 for new APK files. For each new APK, calculate its byte-level Shannon entropy. Maintain a statistical baseline (mean, standard deviation, percentiles) of entropy scores for all applications currently approved in the MDM. Flag any new APK with an entropy score exceeding the 95th percentile of the baseline for manual review. 3. (Machine Learning) Develop and deploy a classification model (e.g., Random Forest, Gradient Boosting) trained on a labeled dataset of benign and packed APKs. Extract features including Shannon entropy, file size, and network context from Zeek logs (e.g., source ASN, domain age from dns.log, TLS JA3 hash). An APK classified as 'packed/malicious' with high confidence (>0.9) should trigger an automated analysis or high-priority alert."
          },
          {
            "description": "An APK file contains specific byte sequences, strings, or executable section names (e.g., '.UPX0', '.aspack', '.pdata') that are characteristic of known software packers like UPX, FTT, DexProtector, or other commercial obfuscators.",
            "data_sources": [
              "Zeek files.log",
              "Windows Sysmon Event ID 11"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems on developer and user endpoints, Corporate application repositories, Network file transfer inspection points, Sandboxed analysis environments.",
            "action": "1. (Symbolic) Configure Zeek's file extraction framework to carve all APK files from network traffic. Automate the scanning of these extracted files, and files from Sysmon Event ID 11, using a YARA ruleset specifically designed to detect signatures of mobile application packers. A YARA rule match constitutes a high-fidelity alert. 2. (Statistical) For each APK, parse its internal structure to extract all executable section names. Establish a baseline of common section names (e.g., '.text', '.data', '.rodata', '.dex') from the approved MDM application inventory. Calculate the frequency of non-standard section names for each new APK. An APK with a high count of unusual section names (e.g., > 2 standard deviations above the mean of the baseline) should be flagged for investigation. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) on the daily/hourly count of YARA rule hits for packed applications. A statistically significant spike in detections that deviates from the established seasonal pattern could indicate a new adversary campaign. This anomaly should trigger a proactive threat hunt."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]