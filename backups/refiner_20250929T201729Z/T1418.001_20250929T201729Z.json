[
  {
    "information_requirement": "Is the adversary attempting to discover security software on our managed mobile devices? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1418.001",
        "name": "Security Software Discovery",
        "evidence": [
          {
            "description": "A mobile application, within 5 minutes of its first-seen launch on a device, initiates a DNS query for a domain with low prevalence (queried by <1% of all devices) and subsequently establishes a TCP/UDP connection involving a data transfer of over 1KB to the resolved IP address.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek conn.log",
              "MDM Application Inventory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, VPN Concentrators, DNS Resolvers, MDM/EMM Servers",
            "action": "Correlate MDM logs showing a new application installation with network logs from the associated device IP. For DNS requests from the device, execute the following checks: 1. (Symbolic) Match the queried domain in Zeek dns.log against threat intelligence feeds for known C2 infrastructure, newly registered domains (NRDs), or dynamic DNS providers. In parallel, inspect Zeek ssl.log for connections using known malicious JA3/JA3S hashes. 2. (Statistical) For domains not on an organizational allow-list, calculate their query prevalence across all mobile devices over a 30-day window. Alert on any domain queried by fewer than 5 devices or falling below the 1st percentile of query frequency. Additionally, alert if the Shannon entropy of the fully qualified domain name exceeds a threshold of 3.5, suggesting DGA or data tunneling. 3. (ML) Train a per-device time-series anomaly detection model (e.g., SARIMA) on outbound data volume (bytes_out from Zeek conn.log) aggregated in 1-minute intervals. Alert if an anomalous spike occurs within 5 minutes of a new application installation event from MDM logs, especially when correlated with a low-prevalence DNS query."
          },
          {
            "description": "A mobile application sends an HTTP/S POST request with a body size exceeding the 99th percentile of its established 30-day baseline, or contains a URI with a Shannon entropy greater than 3.5, directed to a low-reputation or uncategorized Server Name Indication (SNI).",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network Egress Points, Web Application Firewalls, Forward Proxies, VPN Concentrators",
            "action": "For traffic from mobile device subnets, establish application-specific baselines for HTTP/S activity. Implement the following detections: 1. (Symbolic) In Zeek http.log and ssl.log, match destination domains and SNIs against threat intelligence lists of known malicious sites. Additionally, alert on HTTP requests containing non-standard User-Agent strings (e.g., 'curl', 'python-requests') that deviate from typical mobile browser or application agents. 2. (Statistical) For each application, baseline its POST request size and URI entropy. Alert if a request's size exceeds the 99th percentile or if its URI entropy is more than 3 standard deviations above the mean. Separately, baseline the set of destination SNIs per application and alert if an application communicates with an SNI that has never been seen for that app across the enterprise. 3. (ML) Train an unsupervised Isolation Forest model on HTTP/S session features extracted from Zeek logs, including URI length, request method, request body length, SNI prevalence across the enterprise, User-Agent string rarity, and response MIME type. Flag sessions identified as strong outliers for analyst review."
          },
          {
            "description": "A newly installed mobile application or an update to an existing application on a managed device requests the 'android.permission.QUERY_ALL_PACKAGES' permission or is observed using private APIs like 'LSApplicationWorkspace' for application enumeration, where this behavior is not justified by its app store category and description.",
            "data_sources": [
              "MDM/EMM Application Manifest Scans",
              "Mobile App Vetting Service Reports"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) / Enterprise Mobility Management (EMM) Platform, Third-party Application Vetting System",
            "action": "Leverage MDM/EMM and app vetting platforms to analyze application manifests and behavior. 1. (Symbolic) Continuously scan MDM application inventories. Generate an immediate alert for any application not on a pre-approved 'Device Management' or 'Security Tools' allow-list that is found with the 'QUERY_ALL_PACKAGES' permission in its manifest. 2. (Statistical) Calculate the prevalence of the 'QUERY_ALL_PACKAGES' permission across the entire mobile application inventory. Flag any application where this permission is statistically rare (e.g., present in <5% of apps) and the app's category (e.g., 'Game', 'Social') does not justify its use. Also, calculate a co-occurrence matrix for all permissions and alert on apps that request a rare combination, such as 'QUERY_ALL_PACKAGES' with 'INTERNET' and 'READ_CONTACTS', if the combination falls below the 1st percentile. 3. (ML) Develop a gradient boosting classifier to predict application risk. Use features such as: presence of 'QUERY_ALL_PACKAGES' (high weight), total number of requested permissions, developer reputation, app store rating, review sentiment, and whether the app is available on an official app store. Alert when an app's predicted risk score surpasses a tuned threshold."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]