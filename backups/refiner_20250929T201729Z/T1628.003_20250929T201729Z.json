[
  {
    "information_requirement": "Is the adversary concealing captured multimedia files on mobile devices? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1628.003",
        "name": "Conceal Multimedia Files",
        "evidence": [
          {
            "description": "A file creation event on an Android device for a file named exactly '.nomedia', where the creating process is not a known benign media management application or system process, and/or the parent directory path exhibits high Shannon entropy, suggesting a randomly generated name.",
            "data_sources": [
              "Mobile EDR File System Auditing Logs",
              "Mobile MDM Application Inventory Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "File systems of corporate-managed Android devices, specifically user-writable directories such as /storage/emulated/0/DCIM/, /storage/emulated/0/Pictures/, /storage/emulated/0/Download/, and application-specific data folders.",
            "action": "1. (Symbolic) Query Mobile EDR logs for all file creation events where the filename is '.nomedia'. Correlate the creating process name with a pre-defined allowlist of benign media applications (e.g., Google Photos, Gallery, system media scanners). Alert on any event where the creating process is not on the allowlist. 2. (Statistical) For each '.nomedia' file creation event, calculate the Shannon entropy of the parent directory's full path. Concurrently, retrieve the installation timestamp of the creating application from MDM logs. Generate a high-severity alert if the directory path entropy exceeds a threshold (e.g., 4.0) and the application was installed within the last 7 days. 3. (Machine Learning) Train a Random Forest classifier using features from Mobile EDR and MDM logs, including: creating process name, parent directory entropy, application installation age in days, number of permissions requested by the app, and a boolean for whether the app was installed from an official app store. Apply the model to all '.nomedia' creation events; an event with a high probability score (e.g., > 0.85) for being malicious should be flagged for immediate investigation as potential spyware."
          },
          {
            "description": "An outbound network connection from a mobile device transferring a significant volume of data identified as a multimedia file type (e.g., image/jpeg, video/mp4, image/png) to a destination IP address or domain that is either low-prevalence, newly-observed for that device, or listed on a threat intelligence feed.",
            "data_sources": [
              "Zeek files.log",
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points monitoring traffic from mobile device subnets, including corporate Wi-Fi gateways, VPN concentrators, and Cloud Access Security Brokers (CASB).",
            "action": "1. (Symbolic) Continuously compare the destination IP (id.resp_h in conn.log) and server name (host in http.log, query in dns.log) from all network connections originating from the mobile device IP space against a threat intelligence feed of known malicious C2 infrastructure. Generate an alert if a match is found and Zeek files.log confirms a multimedia mime_type was transferred in the associated session. 2. (Statistical) For each mobile device, establish a 30-day rolling baseline of outbound data volume (tx_bytes in conn.log) per destination Autonomous System Number (ASN). Additionally, maintain a set of unique destination domains seen per device over the last 60 days. Alert if a connection's tx_bytes to a specific ASN exceeds the 95th percentile of that device's baseline AND the destination domain is new for that device. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., Seasonal-ARIMA) on the total volume of outbound multimedia file bytes (aggregated from files.log) per device, per hour. Flag any time window where the observed volume is a statistically significant outlier compared to the model's forecast. Enrich alerts by using a clustering algorithm (e.g., DBSCAN) on connection features from conn.log (e.g., id.resp_p, proto, duration) to identify connections that are structurally dissimilar from the device's normal traffic clusters."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]