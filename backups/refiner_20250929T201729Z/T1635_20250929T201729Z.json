[
  {
    "information_requirement": "Is an adversary stealing application access tokens from our mobile devices to gain unauthorized credential access? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1635",
        "name": "Steal Application Access Token",
        "evidence": [
          {
            "description": "An HTTP GET request originating from a corporate mobile device contains OAuth authorization parameters (e.g., `response_type`, `client_id`, `scope`, `redirect_uri`) where the `redirect_uri` parameter value specifies a domain or full URI that is not on the corporate allowlist of approved application callback URIs.",
            "data_sources": [
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log",
              "Zeek notice.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate network egress points, including firewalls, VPN concentrators, and Cloud Access Security Brokers (CASBs) inspecting traffic from corporate Wi-Fi and VPN-connected mobile devices; Mobile Device Management (MDM) / Unified Endpoint Management (UEM) platforms.",
            "action": "Using a SIEM query on Zeek http.log, filter for events from mobile IP subnets where the URI contains OAuth parameters (`response_type`, `client_id`, `redirect_uri`). Extract the domain from the `redirect_uri` parameter. First, apply symbolic logic by matching this domain against a pre-populated allowlist of approved OAuth callback domains. Any domain not on the list generates a medium-severity alert. Second, for all non-allowlisted `redirect_uri` domains, apply a statistical method by calculating the Shannon entropy of the fully qualified domain name (FQDN). Compare this value against a historical baseline of entropy scores for legitimate callback domains. If the entropy score is greater than the 95th percentile ($$ P_{95} $$) of the baseline distribution, indicating potential use of a Domain Generation Algorithm (DGA), escalate the alert severity to high. Third, use a machine learning model by feeding features from the request into a pre-trained logistic regression classifier to predict maliciousness. Features should include: (1) `redirect_uri` domain entropy, (2) presence of sensitive keywords (e.g., 'login', 'account', 'oauth') in the URI path, (3) URI length, (4) number of query parameters, (5) domain age from passive DNS enrichment, and (6) the TLD's rank in popularity. If the model returns a probability score $$ p(malicious) > 0.90 $$, escalate the alert to critical for immediate analyst review."
          },
          {
            "description": "A mobile device's network traffic shows a connection to a URL with a low reputation score or a known phishing categorization, followed within a short time window (e.g., 60 seconds) by an HTTP redirect or a new connection that initiates an OAuth flow.",
            "data_sources": [
              "Zeek http.log",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web proxy logs and network sensor data (e.g., Zeek) at the internet gateway, capturing the full browsing session of mobile devices; Threat intelligence platform feeds integrated with network sensors.",
            "action": "First, use symbolic logic by creating a SIEM correlation rule that triggers on a two-part sequence from a single source IP in the mobile device range. Part 1: A connection (in Zeek conn.log or dns.log) to a domain flagged as 'phishing' or 'malicious' by an integrated threat intelligence feed. Part 2: Within 60 seconds, an HTTP request (in Zeek http.log) containing OAuth initiation parameters (e.g., `response_type=code`, `client_id`). A match on this sequence generates a high-severity alert. Second, apply a statistical method. For any triggered sequence, analyze the destination domain of the OAuth request. Establish a baseline of OAuth provider domains accessed by each user over the last 90 days. If the new OAuth domain is not on the user's historical baseline and is also rare across the entire organization (e.g., accessed by <1% of users), increase the alert's risk score by 50%. This identifies anomalous provider usage. Third, apply a machine learning model. Employ a time-series anomaly detection model (e.g., an LSTM autoencoder) trained on sequences of user browsing activity (domain category transitions). Feed the sequence `[low-reputation-category -> oauth-provider-category]` into the model. If the model's reconstruction error for this sequence exceeds a dynamic threshold (e.g., 3 standard deviations above the mean reconstruction error), it signifies a highly anomalous behavioral pattern. Escalate the alert to critical and trigger an automated response, such as device quarantine via MDM."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]