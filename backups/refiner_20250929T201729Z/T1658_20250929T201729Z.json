[
  {
    "information_requirement": "Is an adversary executing arbitrary code on corporate mobile devices by exploiting client application vulnerabilities? (TA0041 - Execution)",
    "tactic_id": "TA0041",
    "tactic_name": "Execution",
    "indicators": [
      {
        "technique_id": "T1658",
        "name": "Exploitation for Client Execution",
        "evidence": [
          {
            "description": "A mobile application, such as a browser (Safari, Chrome) or messaging app (iMessage, WhatsApp), spawns a shell process (e.g., /bin/sh, /bin/bash) or initiates a network connection to a domain with suspicious characteristics (e.g., newly registered, high entropy, known malicious).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "Mobile EDR/MDM process logs",
              "Mobile OS crash logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, Cloud-based mobile security gateways, Mobile Device Management (MDM) servers, Endpoint mobile devices",
            "action": "1. (Symbolic) Query Zeek dns.log for requests originating from the corporate mobile IP address space. Join each query against a threat intelligence feed of known C2 domains and a list of Newly Registered Domains (NRDs) less than 30 days old. Alert on any match and correlate with Zeek conn.log within a 1-minute window to confirm a connection was established. 2. (Statistical) Using a 30-day rolling window of MDM process logs, compute the frequency of every unique parent-child process pair for the entire mobile fleet (e.g., 'com.apple.mobilesafari' -> '/bin/sh'). Store this as a rarity score (e.g., 1/frequency). Alert if a device logs a process pair with a rarity score in the top 1% (i.e., rarest 1%) for the fleet. Additionally, for each device, calculate the 95th percentile of hourly outbound data volume from its 30-day Zeek conn.log history; alert if this threshold is breached. 3. (Machine Learning) Train a Random Forest classifier on labeled DNS and connection data. Features should include: from Zeek dns.log (query length, subdomain count, query entropy, TLD popularity) and from Zeek conn.log (destination port, connection duration, outbound bytes, inbound/outbound byte ratio). Use the trained model to score all new connections from mobile devices, alerting on any connection with a 'malicious' probability score above 0.9."
          },
          {
            "description": "A mobile device experiences a spike in application or OS-level crashes, temporally correlated (within 60 minutes) with the installation of an unapproved application or a new configuration profile not pushed by MDM policy.",
            "data_sources": [
              "Mobile OS crash logs",
              "Mobile Device Management (MDM) application inventory logs",
              "Mobile Device Management (MDM) configuration profile logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) servers, Endpoint mobile devices, Corporate Wi-Fi network gateways",
            "action": "1. (Symbolic) Maintain a watchlist of unauthorized application bundle IDs and profile identifiers. Ingest MDM inventory and profile logs in real-time. Trigger an immediate alert if a watchlisted item is detected. As an enrichment step, query for any crash logs (e.g., 'kernel_panic', 'SpringBoard', 'WebKit') from the same device in the preceding 24 hours. 2. (Statistical) For each device model and OS version, calculate a baseline crash rate (crashes per hour) from a 30-day window of MDM crash logs. Alert if any device's crash rate exceeds 3 standard deviations above the mean for its peer group. Following a crash alert, scan Zeek conn.log for that device's traffic in the next 15 minutes. Flag any connections to IPs with no prior DNS lookup in dns.log or where the outbound-to-inbound byte ratio exceeds the 98th percentile for that device. 3. (Machine Learning) Use a time-series anomaly detection model (e.g., Prophet) to monitor the fleet-wide count of specific crash types (e.g., 'WebKit Process Crash'). An anomalous spike across multiple devices with the same OS version is a strong indicator of a widespread 0-day exploit. Separately, use an unsupervised clustering algorithm (e.g., DBSCAN) on features from MDM inventory logs (app name, install date, requested permissions, signing certificate details) to identify outlier applications. An application identified as a noise point, especially if installed shortly after a crash event, is highly suspicious."
          },
          {
            "description": "Anomalous peer-to-peer network traffic, such as Apple Wireless Direct Link (AWDL), is observed between devices on the corporate wireless network, particularly if followed by a system crash, unauthorized process execution, or data exfiltration.",
            "data_sources": [
              "Zeek conn.log",
              "Mobile OS crash logs",
              "Mobile EDR/MDM process logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, Endpoint mobile devices",
            "action": "1. (Symbolic) Create a rule to monitor Zeek conn.log for traffic patterns consistent with AWDL (e.g., IPv6 link-local addresses, specific multicast groups) or other P2P protocols on the corporate wireless network. Alert on any such traffic, as it is often disabled by policy in enterprise environments. Correlate with process logs to see if a known P2P application was running. 2. (Statistical) If P2P is permitted for some users, establish a per-device baseline for P2P traffic volume (bytes) and connection count per hour. Alert if a device's hourly P2P traffic exceeds the 99th percentile of its own 30-day historical baseline. Further raise the alert's priority if it is temporally correlated (within 5 minutes) with a crash log event on the device. 3. (Machine Learning) Use an unsupervised anomaly detection model (e.g., Isolation Forest) on features from intra-WLAN traffic in Zeek conn.log, including port, protocol, duration, byte counts, and connection state. Train the model to learn normal device-to-device communication patterns. A connection flagged with a high anomaly score, especially if it does not correlate with known user-initiated actions, could indicate a zero-click exploit attempt over a protocol like AWDL."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]