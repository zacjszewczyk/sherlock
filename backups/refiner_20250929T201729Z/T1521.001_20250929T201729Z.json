[
  {
    "information_requirement": "Is an adversary using symmetric cryptography for command and control (C2) communications originating from managed mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1521.001",
        "name": "Symmetric Cryptography",
        "evidence": [
          {
            "description": "A mobile application on a managed device establishes periodic network connections to a single destination where the inter-arrival time has a standard deviation below 5 seconds. The payload of these connections has a calculated Shannon entropy score greater than 7.5, and the destination port is non-standard for the observed protocol or does not match a known application profile.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek files.log",
              "Mobile Device Management (MDM) network flow logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, Corporate Wi-Fi network sensors, VPN concentrators, Internet Gateway / Egress Firewall",
            "action": "1. (Symbolic) Correlate destination IPs and domains from network flows against threat intelligence feeds for known C2 servers. Generate a critical alert for any match originating from a mobile device. 2. (Statistical) For each source mobile IP, group connections by destination. Calculate the standard deviation of inter-arrival times for each group over a 1-hour window. Flag groups where the standard deviation is below the 5th percentile for all mobile device traffic. For flagged flows, if payload data is available (e.g., from Zeek file extraction), calculate the Shannon entropy. Create a risk score by adding points for low inter-arrival time deviation, high entropy (>7.5), and use of a non-standard port. Alert when a device's risk score exceeds 3 standard deviations from its own 30-day baseline. 3. (Machine Learning) Implement a time-series anomaly detection model (e.g., SARIMA) on per-device metrics like outbound connection counts and data volume to detect unusual spikes. Separately, train a Random Forest classifier using features like inter-arrival time standard deviation, payload entropy, connection duration, bytes sent/received, destination port, and destination IP reputation to classify flows as 'C2 Beaconing' or 'Benign'. Use MDM data to attribute the flagged flow to a specific application for further investigation."
          },
          {
            "description": "Network traffic from a mobile device is observed on a standard service port (e.g., TCP/443, UDP/53) but does not conform to the expected application-layer protocol. This is specifically evidenced by a TCP connection on port 443 with no corresponding TLS handshake (no Zeek ssl.log entry) or a UDP connection on port 53 with no corresponding DNS query (no Zeek dns.log entry).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Internal DNS resolvers, Cloud Access Security Broker (CASB) logs, Core network switches",
            "action": "1. (Symbolic) Join network connection logs (Zeek conn.log) with application-layer logs (Zeek ssl.log, dns.log) on the connection UID. Create a deny list of destination Autonomous Systems (ASNs) not associated with typical business services (e.g., residential ISPs, known bulletproof hosting). Alert on any connection from a mobile device to a denied ASN where the protocol does not match the port (e.g., non-TLS on 443). 2. (Statistical) For each mobile device, calculate the daily ratio of mismatched protocol connections (e.g., non-TLS on 443) to total connections on that port. Establish a 30-day rolling average of this ratio as a baseline for each device. Alert when a device's daily mismatch ratio exceeds its 95th percentile or is a significant outlier (e.g., > 3 Median Absolute Deviations) when compared to the population of all mobile devices. 3. (Machine Learning) Train an unsupervised anomaly detection model, such as an Isolation Forest, on features derived from Zeek logs for normal traffic. Include features like port, protocol, duration, bytes sent, bytes received, the Zeek 'service' field, the 'history' string, and a boolean flag for 'has_matching_app_log' (e.g., ssl.log, dns.log). Use the trained model to score new connections; connections with high anomaly scores are strong candidates for tunneled C2 traffic and should be flagged for analyst review."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]