[
  {
    "information_requirement": "Is an adversary using out-of-band channels for command and control on mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1644",
        "name": "Out of Band Data",
        "evidence": [
          {
            "description": "An Android application, not on the approved whitelist for 'Notification Access', is granted the permission and subsequently initiates network connections to known malicious domains, newly registered domains, or exhibits anomalous traffic patterns such as high-entropy DNS requests.",
            "data_sources": [
              "MDM application inventory logs",
              "Android OS security logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed and BYOD Android devices, Mobile Device Management (MDM) servers, Network egress points, DNS resolvers, VPN concentrators",
            "action": "1. (Symbolic) Query MDM logs to identify all Android applications with 'Notification Access' enabled. Compare this list against an internal whitelist of approved applications and a threat intelligence feed of known malicious package names. Generate an alert for any non-whitelisted or known-malicious application with this permission. 2. (Statistical) For each non-whitelisted application with 'Notification Access', aggregate its network activity from Zeek conn.log and dns.log over a 30-day rolling window. Establish a baseline for each application's typical outbound data volume (bytes_out) and connection count. Alert if daily activity exceeds the 95th percentile of this baseline. Additionally, calculate the Shannon entropy of destination domains requested in dns.log; a sustained high entropy score (e.g., > 3.5) for a single application's DNS lookups can indicate DGA activity and should trigger an alert. 3. (Machine Learning) For high-value applications or users, train a time-series forecasting model (e.g., Prophet, ARIMA) on historical network traffic volume (bytes_out) and connection frequency from Zeek conn.log. Use the model to predict the expected traffic volume and connection count for the next 24-hour period. Generate a high-priority alert if the actual observed traffic deviates significantly from the predicted range (e.g., falls outside the 99% confidence interval)."
          },
          {
            "description": "A received SMS/MMS message on a managed mobile device contains a URL pointing to a low-reputation or newly registered domain, or the message body has a character-level entropy score exceeding a statistically-derived threshold (e.g., > 4.5), suggesting obfuscation.",
            "data_sources": [
              "Carrier SMS/MMS detail records",
              "MDM security event logs",
              "Threat Intelligence Feeds",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Telecommunication provider gateways for corporate mobile accounts, Corporate mobile devices, SIEM/Log aggregator, Threat Intelligence Platform",
            "action": "1. (Symbolic) Ingest carrier SMS/MMS logs or MDM security logs containing message content. Extract all URLs from message bodies. Match the domains against a threat intelligence feed of malicious domains and a list of newly registered domains (e.g., created in the last 30 days). Generate an alert for any match and correlate with subsequent outbound network connections from the recipient's device (via Zeek conn.log) to the identified malicious URL. 2. (Statistical) For each incoming SMS/MMS message, calculate the character-level Shannon entropy of the message body. Establish a baseline entropy score for typical benign messages within the organization (e.g., mean of 3.5, std dev of 0.5). Alert on any message with an entropy score greater than 2 standard deviations above the mean (e.g., > 4.5). Additionally, track the frequency of sender phone numbers and flag messages from numbers not previously seen in the last 90 days as a low-priority event for correlation. 3. (Machine Learning) Develop a classification model (e.g., Gradient Boosting classifier) trained on a labeled dataset of benign and malicious SMS messages. Engineer features such as message length, presence of URLs, sender reputation (e.g., is the number in the user's contacts), special character count, and the entropy score. Deploy the model to score all incoming SMS messages in real-time, generating a high-confidence alert for any message classified as malicious with a score greater than 0.90."
          },
          {
            "description": "A corporate mobile device establishes a Bluetooth or NFC connection with an unknown device not on an approved list, followed by a data transfer that exceeds a user-specific baseline, especially when occurring within a geofenced sensitive area.",
            "data_sources": [
              "MDM security logs",
              "Mobile OS Bluetooth/NFC logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Physically controlled spaces (e.g., executive suites, R&D labs), Corporate-managed mobile devices with Bluetooth/NFC enabled",
            "action": "1. (Symbolic) Define geofences for sensitive locations (e.g., data centers, executive floors) in the MDM platform. Create a whitelist of approved Bluetooth peripherals (e.g., corporate headsets, keyboards). Using MDM logs, generate an alert for any new Bluetooth/NFC pairing event that occurs within a defined geofence to a device not on the whitelist. 2. (Statistical) Using MDM logs, establish a 30-day baseline for each user's Bluetooth/NFC activity, including the number of new device pairings per day and the typical data transfer size (if available). Generate an alert if a user's daily count of new, non-whitelisted pairings exceeds the 99th percentile of their individual baseline. If data transfer size is logged, alert if a single transfer to a non-whitelisted device is more than 3 standard deviations above the user's average transfer size. 3. (Machine Learning) Collect Bluetooth/NFC pairing event data from MDM logs, including user ID, source device ID, paired device ID, location (if available), and timestamp. Use a density-based clustering algorithm like DBSCAN to identify anomalous patterns. Features could include the frequency of pairings, the number of unique devices paired, and the time between pairings. The model can identify outliers that represent suspicious activity, such as a single device rapidly pairing with multiple other devices in a short time span ('walk-by' attack) or pairings in unusual locations."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]