[
  {
    "information_requirement": "Is an adversary performing an Adversary-in-the-Middle (AitM) attack to intercept or manipulate traffic from corporate mobile devices?",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1638",
        "name": "Adversary-in-the-Middle",
        "evidence": [
          {
            "description": "A network connection from a managed mobile device presents an invalid SSL/TLS certificate, characterized by a `validation_status` in Zeek's `ssl.log` other than 'ok', such as 'self signed certificate in certificate chain' or 'unable to get local issuer certificate'.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network segments, network egress points, DNS resolvers, and network sensor collectors (e.g., Zeek cluster).",
            "action": "1. (Symbolic) Ingest Zeek ssl.log and x509.log. Create a rule that joins records on the `uid` field. Trigger an alert when a connection originates from a known mobile device IP range and `ssl.log:validation_status` is not 'ok', prioritizing statuses like 'self signed certificate in certificate chain'. Enrich alerts with the certificate issuer (`x509.log:certificate.issuer`) and subject (`x509.log:certificate.subject`). 2. (Statistical) For each mobile IP subnet, establish a 30-day rolling baseline of the count of distinct `validation_status` values per hour. Alert if the hourly count of non-'ok' statuses for a given subnet exceeds the 95th percentile of its baseline, indicating a potential widespread interception event. 3. (Machine Learning) Train a time-series anomaly detection model (e.g., Prophet or LSTM) on the volume of certificate validation errors per network segment. An unexplained spike in the error count that deviates significantly from the forecasted model's confidence interval should trigger an alert for investigation."
          },
          {
            "description": "A managed mobile device establishes a long-duration, high-volume network connection over a common VPN port (e.g., UDP 500, UDP 4500, TCP 1194) to a destination IP address not on the sanctioned list of corporate VPN gateways.",
            "data_sources": [
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, VPN concentrators, corporate firewalls, and MDM/UEM servers (for VPN configuration profiles).",
            "action": "1. (Symbolic) Maintain an allow-list of sanctioned corporate VPN gateway IP addresses. Create a SIEM rule to alert on any connection from a mobile device IP range to a destination IP not on this list, using common VPN ports (e.g., UDP/500, UDP/4500, TCP/1194, TCP/443 for SSL VPNs). The rule should trigger if the `duration` in conn.log exceeds 10 minutes. 2. (Statistical) From `Zeek conn.log`, group connections by source mobile IP (`id.orig_h`). For each source IP, calculate the 90th percentile for `orig_bytes` and `duration` over a 30-day baseline. Alert if a new connection exceeds both of these historical percentile thresholds for that specific device. 3. (Machine Learning) Use a clustering algorithm (e.g., DBSCAN) on connection metadata from `Zeek conn.log` (destination IP, destination port, protocol, total bytes, duration). Classify connections from the mobile IP space and flag connections identified as outliers (noise points) that exhibit long durations and high data volumes for analyst review."
          },
          {
            "description": "A temporal sequence of events from a single mobile device IP shows: 1) a DNS query for a high-entropy or newly registered domain, followed within seconds by 2) an HTTP/S connection to the resolved IP, and 3) a significant data upload (`orig_bytes`) observed in the corresponding connection log.",
            "data_sources": [
              "Zeek dns.log",
              "Zeek http.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate DNS resolvers, web proxies/egress points, and threat intelligence platform feeds.",
            "action": "1. (Symbolic) Correlate Zeek `dns.log` queries against threat intelligence feeds for known malicious, newly registered (NRD), or DGA domains. If a match occurs from a mobile device IP, create a high-priority alert if it is followed by an HTTP POST request (`http.log:method`) or a large data upload (`conn.log:orig_bytes` > 1MB) to the same destination within a 60-second window. 2. (Statistical) For all domains in `Zeek dns.log` queried by mobile devices, calculate the Shannon entropy of the query name. Establish a baseline and alert on any domain whose entropy score exceeds the 98th percentile. Additionally, stack count the public suffix + 1 of the domain and alert on domains requested by fewer than 3 devices in the organization. 3. (Machine Learning) Develop a sequence classification model (e.g., LSTM or GRU) trained on legitimate user session event sequences (DNS query -> HTTP request -> Connection stats). Feed real-time event sequences from mobile devices into the model. An event sequence classified as anomalous, particularly one matching the 'DNS -> HTTP -> Upload' pattern with suspicious domain features, should be flagged."
          },
          {
            "description": "An Android device is observed downloading an application package (APK) from a non-sanctioned source, followed by network traffic patterns indicating local file exfiltration, such as connections to unapproved cloud storage providers or direct IP connections with large data uploads.",
            "data_sources": [
              "Zeek files.log",
              "Zeek conn.log",
              "MDM/UEM logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile devices, MDM/UEM servers, network egress points, and the corporate application store.",
            "action": "1. (Symbolic) Monitor `Zeek files.log` for file transfers with mime-type 'application/vnd.android.package-archive' (APK) from sources not on an approved list of app stores. Correlate with MDM/UEM logs to confirm the app is not managed. If such a download is seen, create an alert if the device subsequently initiates a large upload (`conn.log:orig_bytes` > 5MB) to an un-categorized or suspicious destination. 2. (Statistical) For each mobile device, baseline the daily volume of data uploaded to common cloud storage domains. Alert if a device's daily upload volume to a non-corporate storage provider exceeds 3 standard deviations from its own 30-day average, especially within 24 hours of a new application installation event from the MDM/UEM logs. 3. (Machine Learning) Train a classifier (e.g., Random Forest) on features from `conn.log` and MDM/UEM data to predict malicious exfiltration. Features could include: `is_new_app_installed_recently`, `destination_ip_rarity`, `destination_port`, `total_bytes`, `connection_duration`, and `is_destination_sanctioned`. The model would classify each connection as benign or potentially malicious, alerting on the latter."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.2",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]