[
  {
    "information_requirement": "Has an adversary gained initial access to our mobile device fleet through a compromised hardware supply chain? (PIR)",
    "tactic_id": "TA0027",
    "tactic_name": "Initial Access",
    "indicators": [
      {
        "technique_id": "T1474.002",
        "name": "Compromise Hardware Supply Chain",
        "evidence": [
          {
            "description": "A mobile device reports a boot-level security state change, such as a bootloader status of 'unlocked' or a secure boot integrity check result of 'failed', that is not attributable to an authorized IT maintenance action or a registered developer device profile.",
            "data_sources": [
              "MDM device attestation logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM platform servers, asset management database, and endpoint mobile devices.",
            "action": "1. (Symbolic) Construct a SIEM query to detect events from MDM device attestation logs where 'bootloader_status' is 'unlocked' or 'secure_boot_check' is 'failed'. Join these events with a change management database and a list of authorized developer devices on 'device_id'. Alert on any event that does not have a corresponding authorized change ticket or developer registration within a 24-hour window. 2. (Statistical) For each device model and OS version combination, create a 30-day rolling baseline of the daily attestation failure rate. Calculate the daily z-score for the failure rate of each group. An alert is triggered if the z-score exceeds 3, indicating a statistically significant deviation from the norm that could signify a compromised batch of devices. 3. (Machine Learning) Develop a Random Forest classification model to predict the likelihood of a malicious attestation failure. Use features including 'device_model', 'os_version', 'user_role', 'device_age_in_days', 'time_of_day', and 'is_weekend'. Train the model on historical labeled data. Escalate any new failure event where the model's predicted probability of being malicious exceeds 0.85."
          },
          {
            "description": "A device enrolled from a new procurement batch reports hardware or firmware identifiers (e.g., baseband version, build number, kernel version) that are statistical outliers or do not match manufacturer specifications for that batch.",
            "data_sources": [
              "MDM device inventory logs",
              "Procurement records"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "MDM platform and asset management database.",
            "action": "1. (Symbolic) Upon enrollment of a new device batch, execute a script that queries the MDM inventory for all devices associated with the 'procurement_batch_id'. For each device, compare the reported 'baseband_version', 'build_number', and 'kernel_version' against a golden image manifest for that specific model and purchase order. Flag any device with a non-matching identifier for physical inspection. 2. (Statistical) For a given 'procurement_batch_id', calculate the frequency distribution for each key identifier ('baseband_version', 'build_number', 'kernel_version'). Any identifier value that appears in less than 1% of the devices in the batch, or is a unique singleton, should be flagged as a high-confidence anomaly. 3. (Machine Learning) For a new procurement batch, create a feature vector for each device using its hardware and firmware identifiers. Apply a density-based clustering algorithm like DBSCAN to these vectors. Devices that the algorithm classifies as noise points (i.e., not belonging to any cluster) are considered outliers and should be automatically quarantined by the MDM and flagged for physical inspection."
          },
          {
            "description": "Within the first 60 minutes following MDM enrollment, a new mobile device initiates network connections to a destination IP or FQDN that is not on a pre-approved allow-list for device provisioning and OS updates.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log",
              "MDM enrollment logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, DNS resolvers, and the MDM platform server.",
            "action": "1. (Symbolic) Create a SIEM rule that triggers on MDM enrollment events. For the source IP of the newly enrolled device, monitor all network connections in Zeek conn.log and DNS queries in Zeek dns.log for the next 60 minutes. Compare the 'id.resp_h' (destination IP) and 'query' (FQDN) fields against an allow-list of known-good domains/IPs for manufacturers, OS updates, and corporate services. Any connection to an unlisted destination generates a high-severity alert. 2. (Statistical) For all DNS queries from the device in the initial 60-minute window, calculate the Shannon entropy of the second-level domain (SLD) of each queried FQDN. Compare this entropy score against a pre-computed 95th percentile threshold derived from all corporate DNS traffic. A query with an entropy score exceeding this threshold is a potential indicator of a Domain Generation Algorithm (DGA) and should be flagged. 3. (Machine Learning) Train a time-series autoencoder (e.g., LSTM-based) on sequences of network connection metadata (destination port, protocol, bytes_out, bytes_in, connection_duration) from thousands of known-good device provisioning sessions. For a new device, feed its initial 60-minute network activity sequence into the model. A high reconstruction error score indicates a significant deviation from normal provisioning behavior."
          }
        ]
      }
    ],
    "version": "1.2",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]