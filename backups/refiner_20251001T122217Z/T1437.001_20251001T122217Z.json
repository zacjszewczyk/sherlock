[
  {
    "information_requirement": "Is an adversary using web protocols for command and control on corporate mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command And Control",
    "indicators": [
      {
        "technique_id": "T1437.001",
        "name": "Web Protocols",
        "evidence": [
          {
            "description": "Anomalous web traffic from a managed mobile device indicating command and control, characterized by one or more of the following: periodic 'heartbeat' connections to a single destination (standard deviation of inter-arrival times less than 1.5 seconds); HTTP/S requests to low-reputation or newly registered domains; use of statistically rare HTTP User-Agent strings not on an established allowlist; high-entropy URI paths or query parameters (Shannon entropy score above the 98th percentile); or a highly asymmetric ratio of bytes sent versus received (e.g., a ratio greater than 10.0 or less than 0.1).",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network egress points, VPN concentrators, Mobile Device Management (MDM) gateways, forward/reverse proxies, and central DNS resolvers that process traffic from managed mobile device subnets or enrolled devices.",
            "action": [
              "Match destination fully qualified domain names (FQDNs) and IP addresses from Zeek dns.log and http.log against a threat intelligence feed of known command and control servers. An exact match triggers a high-priority alert.",
              "For each mobile device source IP, calculate statistical metrics over a rolling 24-hour window. First, analyze Zeek conn.log to detect beaconing by calculating the standard deviation of inter-arrival times for connections to the same destination IP; flag destinations where the standard deviation is below a low threshold (e.g., 1.5 seconds). Second, calculate the data transfer ratio (orig_bytes / resp_bytes); flag sessions with a highly asymmetric ratio (e.g., > 10.0 or < 0.1). Third, analyze Zeek http.log to calculate the Shannon entropy of the 'uri' field; flag requests where the entropy exceeds the 98th percentile established for the source device.",
              "Train an unsupervised anomaly detection model, such as an Isolation Forest, on a feature set derived from Zeek logs (conn.log, http.log, ssl.log). Features should include connection duration, byte counts, URI length, User-Agent rarity, JA3 hash prevalence, and inter-arrival time standard deviation. After training on a baseline of normal mobile device traffic, use the model to assign an anomaly score to new sessions. Sessions with scores exceeding a predetermined threshold are flagged for investigation. This model can be supplemented with a per-device time-series forecast (e.g., ARIMA) on outbound data volume, alerting when observed volume significantly exceeds the predicted confidence interval."
            ]
          },
          {
            "description": "A TLS session from a managed mobile device presents a client (JA3) or server (JA3S) fingerprint that is indicative of malicious tooling. This is evidenced by: the JA3 or JA3S hash matching a known malicious hash on a threat intelligence feed; the JA3 hash being statistically rare within the enterprise (e.g., occurring in less than 1% of sessions) and not on an application allowlist; or the JA3S hash corresponding to a server certificate that is self-signed or newly issued for a low-reputation domain.",
            "data_sources": [
              "Zeek ssl.log",
              "Zeek conn.log",
              "Zeek x509.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network sensors at key chokepoints with visibility into traffic from managed mobile devices, including corporate Wi-Fi egress points, VPN concentrators, Mobile Device Management (MDM) gateways, and forward proxies capable of inspecting TLS handshakes to generate Zeek log data.",
            "action": [
              "Match the 'ja3' and 'ja3s' fields from Zeek ssl.log records against a continuously updated threat intelligence feed of known malicious TLS fingerprints. An exact match generates a high-confidence alert.",
              "Calculate the frequency distribution of all 'ja3' hashes from Zeek ssl.log over a 30-day rolling window to establish a baseline of common clients. For each new TLS session from a mobile device, if its JA3 hash is not on an established allowlist of approved applications, flag it for review if its frequency falls below a rarity threshold (e.g., the 1st percentile). Enrich this finding by cross-referencing the session ID (uid) with Zeek x509.log to determine if the server's certificate is self-signed or has a 'validity.not_before' date within the last 30 days.",
              "Develop a supervised classification model (e.g., Random Forest, XGBoost) to predict the likelihood that a given TLS session is malicious. Train the model using features extracted from the TLS Client Hello message, including the ordered list of cipher suites, extensions, and supported elliptic curves. Use a labeled dataset of known-good traffic (from allowlisted corporate apps) and known-malicious traffic (from malware sandboxes). Deploy the trained model to score new, unclassified sessions from mobile devices, generating an alert when the malicious probability score exceeds a tuned threshold (e.g., 0.90)."
            ]
          }
        ]
      }
    ],
    "last_updated": "2025-09-30",
    "version": "1.4",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]