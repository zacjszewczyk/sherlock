[
  {
    "information_requirement": "Is an adversary using standard application protocols for command and control on our mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1437",
        "name": "Application Layer Protocol",
        "evidence": [
          {
            "description": "A mobile device establishes connections over HTTP/S or other application protocols to a single destination IP/domain at highly regular intervals, exhibiting a low coefficient of variation (<0.2) in inter-arrival times, with consistently small and uniform payload sizes (e.g., standard deviation < 100 bytes), indicative of automated C2 beaconing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, Corporate Wi-Fi infrastructure, VPN concentrators",
            "action": "1. (Symbolic) Continuously query network logs (Zeek conn.log, http.log) against an ingested threat intelligence feed of known C2 server IPs and domains. Generate a high-severity alert for any connection from a mobile device IP to a blacklisted destination. 2. (Statistical) For each unique mobile source IP, aggregate connection data from Zeek conn.log over a rolling 24-hour window, grouping by destination IP. For each source-destination pair, calculate the time difference between consecutive connections and compute the coefficient of variation (standard deviation / mean). Simultaneously, calculate the standard deviation of payload sizes for both originator ('orig_bytes') and responder ('resp_bytes'). Trigger an alert for investigation if a pair exhibits a coefficient of variation for time delta < 0.2 AND a standard deviation for both originator and responder payload sizes < 100 bytes, indicating non-interactive, automated beaconing. 3. (ML) Implement a DBSCAN clustering model on mobile device traffic from Zeek conn.log. Engineer features including destination port, protocol, coefficient of variation for inter-arrival times, and the mean and standard deviation of payload sizes. The model will group connections into clusters. Analyze the resulting clusters: large, diffuse clusters typically represent normal user browsing, while small, dense clusters with low variance in their features represent anomalous, machine-like beaconing behavior that requires analyst investigation."
          },
          {
            "description": "DNS traffic from a mobile device shows signs of data channel abuse, characterized by an unusually high query volume to a specific registered domain (>100 queries/hour), a high ratio of unique subdomains to a single domain, FQDNs with high Shannon entropy (>4.5) in the subdomain portion, or DNS responses containing large payloads (>512 bytes), especially within TXT records.",
            "data_sources": [
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Internal DNS resolvers, DNS forwarders, Network egress points",
            "action": "1. (Symbolic) Scan the 'query' field in Zeek dns.log in real-time for domains matching regular expressions or explicit entries from a threat intelligence feed of known DGA and DNS tunneling C2 providers. Generate a high-severity alert for any match originating from a mobile device IP address. 2. (Statistical) For each mobile source IP, calculate the Shannon entropy of the subdomain portion of the 'query' field in Zeek dns.log. Concurrently, measure the length of the 'answers' field, particularly for TXT record types. Establish a 30-day baseline to determine the 99th percentile for both entropy and TXT record answer size. Generate an alert when a query from a mobile device exceeds both the entropy threshold (e.g., >4.5) and the 99th percentile for response size, as this combination strongly indicates data encoding and exfiltration via DNS. 3. (ML) Train a Random Forest classifier using a labeled dataset of benign and malicious (DGA/tunneling) DNS queries. Engineer features from Zeek dns.log including: query length, subdomain entropy, ratio of numeric to alphabetic characters in the subdomain, query type distribution per source IP (e.g., A, AAAA, TXT), and TXT record response size. Deploy the trained model to classify live DNS queries from mobile devices, flagging queries that the model classifies as 'malicious' with a high confidence score for immediate analyst review."
          },
          {
            "description": "An HTTP/S request originating from a mobile device presents a client signature, such as a User-Agent string (HTTP) or a JA3/JA3S TLS fingerprint pair (HTTPS), that is either on a blocklist of known malicious indicators or is statistically rare, with a prevalence of less than 0.1% across the entire mobile device population over a 30-day baseline.",
            "data_sources": [
              "Zeek http.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Web Application Firewalls (WAFs), Reverse proxies, Internet gateways",
            "action": "1. (Symbolic) Continuously scan Zeek http.log ('user_agent' field) and Zeek ssl.log ('ja3' and 'ja3s' fields) against a threat intelligence list of User-Agent strings and JA3/JA3S hashes associated with known mobile malware and C2 frameworks. Generate an immediate alert upon any exact match from a mobile device's IP address. 2. (Statistical) For all mobile devices, create and maintain a frequency table of all observed User-Agent strings (from http.log) and JA3 hashes (from ssl.log) over a rolling 30-day period. Calculate the prevalence of each signature as a percentage of the total. Generate a medium-severity alert for any User-Agent or JA3 hash that has a prevalence of less than 0.1% or is observed on fewer than 3 unique devices, as this indicates a rare client that warrants investigation for potential malicious activity. 3. (ML) Utilize an Isolation Forest anomaly detection model trained on benign mobile client traffic signatures. From Zeek logs, extract and engineer features such as User-Agent string length, the count of tokens within the User-Agent, and the categorical JA3 hash. The model will learn a profile of normal client behavior. Score new connections in real-time and flag those with high anomaly scores, which represent significant deviations from the established baseline of legitimate mobile application clients and could indicate a custom C2 client."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]