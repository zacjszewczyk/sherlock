[
  {
    "information_requirement": "Is an adversary using out-of-band channels for command and control on mobile devices? (PIR)",
    "tactic_id": "TA0037",
    "tactic_name": "Command and Control",
    "indicators": [
      {
        "technique_id": "T1644",
        "name": "Out of Band Data",
        "evidence": [
          {
            "description": "An Android application, not present on a pre-defined 'Notification Access' whitelist, is granted the permission and is subsequently observed initiating network connections to domains on threat intelligence lists, domains registered within the last 30 days, or generating DNS queries with a Shannon entropy score greater than 3.5.",
            "data_sources": [
              "MDM application inventory logs",
              "Android OS security logs",
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed and BYOD Android devices, Mobile Device Management (MDM) servers, Network egress points, DNS resolvers, VPN concentrators",
            "action": "1. (Symbolic) Query MDM logs to identify all Android applications with 'Notification Access' enabled. Join this list with an internal application whitelist and a threat intelligence feed of known malicious package names. Generate an alert for any application that has the permission but is not on the whitelist or appears on the malicious feed. 2. (Statistical) For each non-whitelisted application with 'Notification Access', query network logs (Zeek conn.log) to aggregate its outbound data volume (bytes_out) and connection count over a 30-day rolling window, establishing a per-application baseline. Alert if daily activity exceeds the 95th percentile of this baseline. Concurrently, calculate the Shannon entropy of destination domains requested by the application in Zeek dns.log; a sustained score greater than 3.5 can indicate DGA activity and should trigger an alert. 3. (Machine Learning) For high-risk applications or users, apply a pre-trained time-series forecasting model (e.g., ARIMA) to their historical network traffic volume (bytes_out from Zeek conn.log). Use the model to predict the expected traffic for the next 24-hour period. Generate a high-priority alert if the observed traffic deviates significantly from the prediction by falling outside the 99% confidence interval."
          },
          {
            "description": "An inbound SMS/MMS message on a managed mobile device contains either a URL with a domain matching threat intelligence feeds or a newly registered domain list, or the message body's character-level Shannon entropy score exceeds 2 standard deviations above the established organizational baseline.",
            "data_sources": [
              "Carrier SMS/MMS detail records",
              "MDM security event logs",
              "Threat Intelligence Feeds",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Telecommunication provider gateways for corporate mobile accounts, Corporate mobile devices, SIEM/Log aggregator, Threat Intelligence Platform",
            "action": "1. (Symbolic) Ingest and parse all inbound SMS/MMS messages from carrier or MDM logs to extract URLs from the message body. Compare the extracted domains against a threat intelligence feed of malicious domains and a dynamic list of newly registered domains (e.g., created in the last 30 days). Generate an alert for any match and correlate with subsequent outbound network connections from the recipient's device to the flagged URL using Zeek conn.log and http.log. 2. (Statistical) For each incoming SMS/MMS message, calculate the character-level Shannon entropy of the message body. Establish and maintain a baseline entropy score (mean and standard deviation) for typical benign messages within the organization. Alert on any message with an entropy score greater than 2 standard deviations above the mean. Additionally, track sender phone number frequency and flag messages from numbers not seen in the last 90 days as a low-priority event for correlation. 3. (Machine Learning) Deploy a pre-trained classification model (e.g., Gradient Boosting classifier) to score all incoming SMS messages in real-time. Engineer features for the model including message length, presence of URLs, sender reputation, special character count, and the entropy score. Generate a high-confidence alert for any message that the model classifies as malicious with a probability score greater than 0.90."
          },
          {
            "description": "A corporate mobile device initiates a Bluetooth or NFC pairing with a device not on the approved peripheral whitelist within a designated sensitive geofenced area, and the connection is followed by a data transfer volume exceeding the 99th percentile of the user's historical baseline.",
            "data_sources": [
              "MDM security logs",
              "Mobile OS Bluetooth/NFC logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Physically controlled spaces (e.g., executive suites, R&D labs), Corporate-managed mobile devices with Bluetooth/NFC enabled",
            "action": "1. (Symbolic) Define geofences for sensitive locations (e.g., data centers, executive floors) in the MDM platform and maintain a whitelist of approved Bluetooth peripherals. Using MDM logs, create a rule that generates an immediate alert for any new Bluetooth/NFC pairing event that occurs within a defined geofence to a device not on the whitelist. 2. (Statistical) Using MDM logs, establish a 30-day baseline for each user's Bluetooth/NFC activity, including the number of new device pairings per day and the typical data transfer size. Generate an alert if a user's daily count of new, non-whitelisted pairings exceeds the 99th percentile of their individual baseline. If data transfer size is logged, alert if a single transfer to a non-whitelisted device is more than 3 standard deviations above the user's average transfer size. 3. (Machine Learning) Collect Bluetooth/NFC pairing event data from MDM logs, including user ID, source device ID, paired device ID, location, and timestamp. Use a density-based clustering algorithm like DBSCAN to identify anomalous patterns. Features for the model should include the frequency of pairings, the number of unique devices paired, and the time between pairings. The model will identify outliers representing suspicious activity, such as a single device rapidly pairing with multiple other devices ('walk-by' attack) or pairings in unusual locations."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]