[
  {
    "information_requirement": "Is an adversary performing network discovery on a compromised mobile device? (PIR)",
    "tactic_id": "TA0032",
    "tactic_name": "Discovery",
    "indicators": [
      {
        "technique_id": "T1422.001",
        "name": "Internet Connection Discovery",
        "evidence": [
          {
            "description": "A process such as 'netstat', 'ping', 'ifconfig', or 'getprop' is executed on a mobile endpoint, where the parent process is not on a pre-defined allowlist of authorized system or administrative tools. The execution is initiated from a remote shell context, such as one established via the Android Debug Bridge (ADB), outside of a documented administrative or development session.",
            "data_sources": [
              "Mobile EDR process execution logs",
              "Android Debug Bridge (ADB) logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices (Android, iOS), Mobile Device Management (MDM) servers, Endpoint Detection and Response (EDR) platform consoles",
            "action": [
              "Implement a SIEM correlation rule that triggers when a process execution event is observed on a mobile endpoint with a command line containing 'netstat', 'ping', 'ifconfig', or 'getprop net.dns1' AND the parent process name is not on a pre-defined allowlist of legitimate system or administrative tools. Immediately enrich the resulting alert with device ownership and posture data from the MDM platform.",
              "For each mobile device, establish a 30-day rolling baseline of all executed command-line processes. Calculate the fleet-wide rarity score for each command using inverse document frequency. Generate a high-priority alert if a network discovery command is executed and its rarity score exceeds a defined threshold (e.g., top 5% rarest commands), or if the daily execution count of such commands for a single device exceeds the 99th percentile of its own historical daily command volume.",
              "Deploy a pre-trained random forest classifier that ingests mobile process execution events. Use features including parent process name, command-line arguments, process privileges, execution hour-of-day, and a binary feature indicating if the session is a remote shell (derived from ADB logs). An alert is generated when the model's prediction score for a given event surpasses a calibrated threshold, indicating a high probability of malicious discovery."
            ]
          },
          {
            "description": "A single mobile device IP generates a pattern of outbound network activity within a 60-second window characterized by: a high count of DNS queries ($$>10$$) for distinct, high-availability domains (e.g., google.com, amazon.com); a high ratio of short-lived connections ($$duration < 1s$$); and low data transfer per connection ($$orig_bytes + resp_bytes < 1024$$). This combination is indicative of automated connectivity probing, not user-driven browsing.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek dns.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points, corporate Wi-Fi controllers, VPN concentrators, Internal DNS resolvers",
            "action": [
              "Create a SIEM rule that triggers when a mobile device's IP address makes an outbound connection (from Zeek conn.log) to a destination IP present on a threat intelligence feed of known adversary C2 or proxy infrastructure. Upon alert, automatically enrich with the corresponding DNS query from Zeek dns.log and the device's identity from DHCP and MDM logs.",
              "Using a SIEM or data analytics platform, aggregate Zeek conn.log and dns.log data for each mobile device IP into 1-minute tumbling windows. For each window, calculate a composite anomaly score based on the count of unique destination domains queried, the Shannon entropy of destination IP addresses, and the ratio of DNS queries to established TCP connections. Establish a 28-day baseline for this score for each device. Trigger an alert when the score for any given minute exceeds 3 standard deviations from the device's mean baseline.",
              "Implement an Isolation Forest model to detect anomalies in network traffic patterns per mobile device. For each 1-minute window of activity, engineer features such as: connection count, total bytes transferred, ratio of connections with duration $$<1s$$, destination port entropy, and count of distinct destination Autonomous Systems (ASNs). Anomalies identified by the model represent significant deviations from normal behavior and should be investigated as potential discovery activity."
            ]
          }
        ]
      }
    ],
    "version": "1.4",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-30",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]