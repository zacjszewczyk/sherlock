[
  {
    "information_requirement": "Are adversaries accessing credentials stored on corporate mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1634",
        "name": "Credentials from Password Store",
        "evidence": [
          {
            "description": "A mobile device's compliance status changes to 'non-compliant' due to 'jailbreak' or 'root' detection in MDM/UEM logs. Within 24 hours of this event, the device's user account is associated with a high volume of failed logins (Windows Event ID 4625) across the enterprise, and the device's IP address exhibits an outbound data volume spike greater than 3 standard deviations from its 30-day baseline in Zeek conn.log.",
            "data_sources": [
              "MDM/UEM device compliance logs",
              "Zeek conn.log",
              "Windows Event ID 4625",
              "Windows Event ID 4624"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate MDM/UEM management server; Network egress points instrumented with Zeek sensors; VPN concentrators; Corporate Wi-Fi Access Point Controllers; Domain Controllers and Authentication Servers.",
            "action": "1. Symbolic Match: Create a rule that triggers when an MDM/UEM log shows a device `compliance_status` changing to 'non-compliant' with a `reason` of 'jailbreak_detected' or 'root_detected'. For the affected user, query Windows Security logs for a subsequent spike (e.g., >10 events in 5 minutes) in failed logon events (Event ID 4625) from multiple source workstations. Correlate the mobile device's IP address with Zeek conn.log and alert on any connection to an IP or domain on a threat intelligence blocklist.\n2. Statistical Analysis: For each device flagged for jailbreaking, establish a 30-day rolling baseline of its daily outbound data volume (`orig_bytes` in Zeek conn.log). Generate an alert if the daily volume exceeds 3 standard deviations from its own mean or the 95th percentile of its assigned peer group (e.g., 'Executive Team Mobile Devices'). Additionally, calculate the entropy of destination countries for the user's sessions over a 24-hour period; a sudden increase in entropy post-jailbreak indicates anomalous targeting. Monitor the ratio of outbound to inbound bytes (`orig_bytes` / `resp_bytes`); a ratio exceeding 10:1 and also 2 standard deviations above the user's historical mean ratio indicates potential data exfiltration.\n3. Machine Learning Application: Deploy a time-series anomaly detection model (e.g., Prophet, ARIMA) on per-device, per-hour outbound byte counts and distinct connection counts. A significant, unexplained spike following a jailbreak event should be flagged as a high-risk anomaly. Train a classification model (e.g., XGBoost) to produce a 'credential compromise risk score' for each user. Features should include `is_jailbroken` (binary), `outbound_bytes_24hr_vs_30d_avg_zscore`, `failed_login_spike_count_for_user`, `destination_country_rarity_score`, and `connection_count_vs_peer_group_percentile`."
          },
          {
            "description": "An application not present on the corporate MDM/UEM allowlist is installed on a mobile device. Subsequently, that device is observed in Zeek logs generating DNS queries for domains with Shannon entropy scores above 3.5, or it initiates periodic, low-volume, direct-to-IP connections with a low variance (<10s) in inter-arrival time.",
            "data_sources": [
              "MDM/UEM application inventory logs",
              "Zeek dns.log",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate MDM/UEM management server; Corporate DNS resolvers logging to Zeek; Network egress points instrumented with Zeek sensors; Cloud Access Security Broker (CASB) logs.",
            "action": "1. Symbolic Match: Continuously ingest MDM/UEM application inventory logs. For each new application, compare its package name and signing certificate hash against a corporate allowlist and a threat intelligence feed of known malicious indicators. For any non-allowlisted app, create a rule to alert if its associated device IP initiates connections in Zeek conn.log that have no corresponding successful DNS query in Zeek dns.log within a 5-minute lookback window, especially to IPs in unallocated or suspicious Autonomous Systems (ASNs).\n2. Statistical Analysis: For traffic from devices with unauthorized apps, calculate the Shannon entropy of all requested second-level domains in Zeek dns.log over a 1-hour sliding window. An average entropy score greater than 3.5 should trigger an alert for potential Domain Generation Algorithm (DGA) activity. For direct-to-IP connections from these devices, calculate the standard deviation of the inter-arrival time between connections to the same destination IP in Zeek conn.log over a 24-hour period. A standard deviation of less than 10 seconds for a connection series with more than 10 events is a strong statistical indicator of automated C2 beaconing.\n3. Machine Learning Application: Use a clustering algorithm (e.g., DBSCAN) on features extracted from Zeek conn.log for traffic originating from unauthorized apps. Features should include `protocol`, `destination_port`, `connection_duration`, `total_bytes_sent`, `periodicity_score` (derived from the variance of inter-arrival times), and `dns_query_entropy_score`. Clusters that are small and distant from the large, central cluster of 'normal' traffic represent high-confidence anomalies. A supervised classifier (e.g., Random Forest) can also be trained to identify C2 beaconing by using labeled historical data with features representing the periodicity, data volume, destination reputation, and protocol of connections over time."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]