[
  {
    "information_requirement": "Is an adversary evading defenses by abusing accessibility services to perform actions on behalf of the user? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1516",
        "name": "Input Injection",
        "evidence": [
          {
            "description": "A mobile device, within 15 minutes of an MDM log event indicating an application was granted 'BIND_ACCESSIBILITY_SERVICE' permission, generates network traffic that matches known malicious indicators or is a statistical anomaly. Malicious indicators include connections to C2 domains/IPs or the use of non-standard TLS parameters. Anomalies include a high-entropy distribution of destination ports suggesting scanning, highly regular connection intervals indicating C2 beaconing, or an unusually large data upload to a new destination.",
            "data_sources": [
              "MDM Logs",
              "Zeek conn.log",
              "Zeek notice.log",
              "Zeek dns.log",
              "Zeek ssl.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate Wi-Fi network gateways, VPN terminators, Mobile Device Management (MDM) platform, and DNS resolvers used by mobile devices.",
            "action": "For each 'BIND_ACCESSIBILITY_SERVICE' permission grant event from MDM logs, correlate the device with its network IP address and analyze its network activity in the subsequent 15-minute window. 1. (Symbolic) Join the MDM event with Zeek logs on device IP and timestamp. Query Zeek dns.log for requested domains and ssl.log for server names, matching them against a threat intelligence feed of known mobile malware C2 infrastructure. Check ssl.log for unusual certificate issuers or self-signed certificates not previously associated with the device. Alert on any match or on specific entries in notice.log such as 'SSL::Invalid_Server_Cert'. 2. (Statistical) For the analysis window, calculate the Shannon entropy of destination ports in conn.log; an entropy score exceeding the 98th percentile of the device's 30-day historical baseline suggests port scanning. Calculate the standard deviation of inter-arrival times for connections to a single destination IP; a value below 1 second suggests automated beaconing. Count the number of distinct destination IPs contacted and alert if it exceeds the 99th percentile of the device's baseline. 3. (Machine Learning) Use a one-class anomaly detection model (e.g., Isolation Forest) trained on a baseline of the device's normal network behavior (e.g., past 30 days). Features should include: session duration, total bytes, protocol, number of DNS queries, Shannon entropy of destination ports, the JA3 hash, and the SSL issuer. Apply this model to the 15-minute window to flag any network session scored as a high-confidence anomaly."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  },
  {
    "information_requirement": "Is an adversary causing impact by programmatically interacting with sensitive applications (e.g., financial, messaging) to steal data or funds? (PIR)",
    "tactic_id": "TA0034",
    "tactic_name": "Impact",
    "indicators": [
      {
        "technique_id": "T1516",
        "name": "Input Injection",
        "evidence": [
          {
            "description": "A mobile device generates network traffic to known financial, enterprise SSO, or cloud service FQDNs that deviates significantly from established user baselines. Deviations include highly periodic connections (e.g., a heartbeat interval with jitter less than 1 second), outbound data volumes exceeding the 99th percentile of the user's history for that service, or the use of TLS/HTTP parameters (e.g., JA3 hash, User-Agent) not associated with the legitimate mobile application for that service.",
            "data_sources": [
              "Zeek conn.log",
              "Zeek ssl.log",
              "Zeek dns.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network segments for corporate and guest Wi-Fi, cloud service provider network ranges, known financial service IP blocks, and internet gateways.",
            "action": "Continuously monitor and analyze network flows from mobile devices to domains categorized as financial, corporate SSO, or cloud services. 1. (Symbolic) Filter http.log for traffic to sensitive API endpoints. Create rules to alert on sessions that use User-Agent strings associated with known malicious frameworks or non-standard libraries. Inspect ssl.log and alert if the JA3/JA3S fingerprint pair for a connection to a known service (e.g., mybank.com) does not match the set of whitelisted fingerprints for the legitimate app. 2. (Statistical) For each user-service pair, establish a 30-day baseline of outbound data volume (orig_bytes from conn.log). Alert if a new session's volume exceeds the 99th percentile. Calculate the autocorrelation of connection start times over a 1-hour window; a high correlation value at a non-zero lag indicates periodicity. Also, alert if the ratio of orig_bytes to resp_bytes is a statistical outlier (> 95th percentile), suggesting data exfiltration. 3. (Machine Learning) Use a supervised classification model (e.g., Random Forest) trained on labeled network flows to classify sessions as 'benign user' or 'malicious automation'. Features should include: session duration, orig_bytes, resp_bytes, protocol, destination service category, JA3 hash, SSL issuer, URI length, and HTTP method (e.g., POST). A high-probability 'malicious automation' classification for traffic to a sensitive application should generate a critical alert."
          }
        ]
      }
    ],
    "version": "1.3",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-29",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]