[
  {
    "information_requirement": "Is an adversary attempting to intercept credentials or access tokens by hijacking URI schemes on mobile devices? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1635.001",
        "name": "URI Hijacking",
        "evidence": [
          {
            "description": "A potentially malicious application registers a URI scheme that conflicts with a legitimate, trusted application. Maliciousness is inferred from a combination of factors: the application is not from an official app store (sideloaded), its signing certificate is untrusted, it requests an excessive number of permissions, and/or it has a low threat intelligence reputation score.",
            "data_sources": [
              "MDM/UEM Inventory (fields: device_id, app_name, package_id, is_sideloaded, signing_certificate_subject, registered_uri_schemes)",
              "MTD Agent Scans (fields: device_id, package_id, requested_permissions, malware_verdict)",
              "Threat Intelligence Feeds (mapping package_id to reputation_score)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile endpoints (iOS, Android), Mobile Device Management (MDM) Platform, Mobile Threat Defense (MTD) Console, Application Vetting and Signing Infrastructure, Network Egress Points (e.g., WiFi Access Points, VPN Concentrators)",
            "action": "Symbolic Logic: Define and maintain an allowlist of trusted applications and their associated URI schemes (`trusted_schemes` table: `package_id`, `uri_scheme`). On a scheduled basis (e.g., hourly), query the complete mobile application inventory (`all_apps` table: `device_id`, `package_id`, `app_name`, `uri_scheme`, `is_sideloaded`). Generate an alert for any application where `all_apps.uri_scheme` is in `trusted_schemes.uri_scheme` but `all_apps.package_id` is not in `trusted_schemes.package_id`. Prioritize alerts for sideloaded apps (`is_sideloaded = true`).\nStatistical Analysis: For each sensitive URI scheme (e.g., 'msauth://', 'corp-sso://'), calculate the number of unique package IDs registered to it across the fleet. Establish a baseline count for each scheme. Trigger an alert if the count of unique package IDs for a sensitive scheme increases by more than 2 in a 24-hour period. Additionally, calculate the fleet-wide prevalence (percentage of devices) for each app package. Alert if a package with <1% prevalence registers a scheme used by a package with >90% prevalence.\nMachine Learning: Develop a risk scoring model (e.g., Logistic Regression or Gradient Boosting) to classify each newly observed application-scheme registration. Engineer features such as: `is_sideloaded` (boolean), `is_untrusted_signer` (boolean), `permission_count` (integer), `scheme_is_sensitive` (boolean), `package_prevalence_percentile` (float), `threat_intel_score` (float). Train the model on historical data labeled by security analysts. In production, score each new registration and generate a high-severity alert for scores above a tuned threshold (e.g., > 0.8)."
          },
          {
            "description": "A user's device generates multiple 'application chooser' dialogs for a single sensitive URI scheme (e.g., 'okta://') in a short period, or exhibits a rate of these events that is anomalous compared to the user's own baseline or the fleet-wide average. This suggests a conflict where a malicious app is competing with a legitimate app to handle an authentication flow.",
            "data_sources": [
              "MTD Agent Security Logs (event_type: 'app_chooser_dialog', fields: timestamp, device_id, user_id, uri_scheme)",
              "Android Logcat (via MTD, filtering for 'IntentResolver')",
              "Zeek conn.log",
              "Zeek http.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile endpoints (iOS, Android), Mobile Threat Defense (MTD) Platform, Network Egress Points (e.g., WiFi Access Points, VPN Concentrators)",
            "action": "Symbolic Logic: Create a SIEM rule that triggers on MTD logs where `event_type = 'app_chooser_dialog'`. Maintain a watchlist of sensitive URI schemes related to authentication and SSO. Generate a high-severity alert if a single `device_id` produces more than 2 events for the same sensitive `uri_scheme` within a 5-minute window. Correlate the device IP at the time of the event (from MTD logs or Zeek conn.log) with `http.log` to inspect the referring URL for signs of a phishing attempt.\nStatistical Analysis: For each user, establish a 30-day baseline of 'app_chooser_dialog' events per day. Calculate the daily mean and standard deviation for each user. Generate a medium-severity alert if a user's daily count exceeds their personal mean by more than 3 standard deviations. This detects user-specific anomalies that may not be visible at the fleet level. Also, calculate the 95th percentile for this event count across all users to identify global outliers.\nMachine Learning: Implement a time-series anomaly detection model (e.g., Seasonal-Hybrid ESD) on the total count of 'app_chooser_dialog' events per hour across the entire mobile fleet. The model should account for normal business-hour patterns and weekly seasonality. An alert is triggered when the observed event count significantly exceeds the model's expected forecast band. Enrich the alert with the specific URI schemes and package names involved in the spike."
          }
        ]
      }
    ],
    "last_updated": "2025-09-29",
    "version": "1.3",
    "date_created": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk",
      "Ask Sage"
    ]
  }
]