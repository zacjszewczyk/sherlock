[
  {
    "information_requirement": "Is an adversary attempting to steal credentials on corporate mobile devices via GUI impersonation? (PIR)",
    "tactic_id": "TA0031",
    "tactic_name": "Credential Access",
    "indicators": [
      {
        "technique_id": "T1417.002",
        "name": "GUI Input Capture",
        "evidence": [
          {
            "description": "An application installed on a managed mobile device has been granted the 'SYSTEM_ALERT_WINDOW' permission, which allows it to draw overlays on top of other applications. This is a primary capability for overlay attacks.",
            "data_sources": [
              "Mobile Device Management (MDM) App Inventory Report",
              "Mobile EDR Agent Logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Device Management (MDM) platform",
            "action": "Periodically query the MDM/EDR platform for a complete list of installed applications and their granted permissions across the entire mobile device fleet. Isolate the list of applications that have been granted the 'SYSTEM_ALERT_WINDOW' permission. For each application on this list, establish a baseline of its prevalence (install count) in the environment. Use descriptive statistics to identify outlier applications (e.g., apps installed on fewer than 1% of devices). Cross-reference this list against an allowlist of known-good applications that require this permission for legitimate functionality (e.g., screen sharing apps, chat heads). Any application with this permission that is not on the allowlist is a high-priority candidate for immediate investigation."
          },
          {
            "description": "A newly installed application has a name or icon that is highly similar to a known, legitimate application (e.g., a corporate SSO app, banking app, or widely used productivity app), but has a different developer signature or package name.",
            "data_sources": [
              "Mobile Device Management (MDM) App Inventory Report",
              "App Vetting Service Report"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Mobile Application Management (MAM) platform",
            "action": "From the MDM application inventory data, extract all application names and their corresponding package names and developer signatures. Use a string similarity algorithm (e.g., Levenshtein distance) to compare each application name against a curated list of high-value and commonly targeted application names. Flag any application with a high similarity score (e.g., >0.85) but a mismatched package name or developer signature compared to the legitimate version. These flagged applications are strong candidates for being malicious impersonators."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  },
  {
    "information_requirement": "Is an adversary attempting to collect sensitive data from users on corporate mobile devices using deceptive GUI overlays? (PIR)",
    "tactic_id": "TA0035",
    "tactic_name": "Collection",
    "indicators": [
      {
        "technique_id": "T1417.002",
        "name": "GUI Input Capture",
        "evidence": [
          {
            "description": "An application with the ability to create overlays is observed running in the foreground at the same time as, or immediately after, a sensitive application (e.g., banking, corporate VPN, password manager), followed by anomalous network traffic from the device.",
            "data_sources": [
              "Mobile EDR Agent Logs",
              "Zeek conn.log"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Managed mobile device fleet and corporate network egress points",
            "action": "Using Mobile EDR logs, monitor for events where an application known to possess the 'SYSTEM_ALERT_WINDOW' permission becomes the foreground process immediately after a sensitive application is launched or used. Correlate the device ID and timestamp of this activity with network connection logs (Zeek conn.log). Analyze network connections originating from that device in the subsequent 1-5 minute window. Look for anomalous connections, such as traffic to a newly seen domain, a low-reputation IP address, or patterns indicative of data exfiltration (e.g., large upload volume over DNS, HTTP POSTs with unusual user agents). Calculate the entropy of DNS queries from the device; a sudden spike in high-entropy domain name requests may indicate C2 communication via a Domain Generation Algorithm (DGA)."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]