[
  {
    "information_requirement": "Is an adversary attempting to evade our mobile analysis or sandbox environments? (PIR)",
    "tactic_id": "TA0030",
    "tactic_name": "Defense Evasion",
    "indicators": [
      {
        "technique_id": "T1633.001",
        "name": "System Checks",
        "evidence": [
          {
            "description": "An application queries for system properties or files known to be associated with emulators or sandboxes (e.g., specific build properties, known emulator file paths, or generic device identifiers).",
            "data_sources": [
              "Mobile EDR logs (API call monitoring)",
              "Mobile Application Vetting (MAV) sandbox dynamic analysis logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Application sandboxing environment",
            "action": "During dynamic analysis of mobile applications, monitor for and log all attempts to read system properties (e.g., via Android's 'getprop' or 'System.getProperty'). Create a watchlist of property names frequently used for virtualization detection (e.g., 'ro.hardware', 'ro.product.brand', 'ro.build.fingerprint'). Use descriptive statistics to establish a baseline for the number of properties queried by benign applications. Flag any application that queries a number of properties exceeding two standard deviations from this baseline or queries for specific high-confidence emulator properties."
          },
          {
            "description": "An application checks for the presence or absence of specific hardware sensors (e.g., accelerometer, gyroscope, thermometer) that are typically not emulated or are absent in virtual test environments.",
            "data_sources": [
              "Mobile EDR logs (API call monitoring)",
              "MAV sandbox dynamic analysis logs"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Corporate-managed mobile devices",
            "action": "Monitor API calls related to hardware sensor management (e.g., Android's 'SensorManager'). Profile legitimate applications to baseline normal sensor interaction. Develop a rule to detect applications that query for the presence of multiple sensors upon initialization but then fail to register a listener or use the sensor data. A high-risk score should be assigned if this behavior is immediately followed by application termination or a significant change in network activity (e.g., ceasing C2 communication)."
          },
          {
            "description": "An application inspects network adapter details (e.g., MAC address, DHCP server) to identify common virtualization network configurations, then alters its behavior based on the findings.",
            "data_sources": [
              "Zeek conn.log",
              "Mobile EDR logs (network interface queries)"
            ],
            "data_platforms": [
              "TBD"
            ],
            "nai": "Network egress points for mobile devices (e.g., corporate Wi-Fi, VPN gateway)",
            "action": "Correlate mobile EDR logs showing queries for network interface information with network traffic logs (Zeek) from the same device. Hunt for applications that query network adapter details and subsequently exhibit no or limited benign network activity (e.g., connecting only to google.com). Calculate the entropy of destination IPs or domain names before and after the network check; a sharp decrease in entropy could indicate a shift to 'safe' behavior after detecting a monitored network. This pattern is highly indicative of sandbox evasion."
          }
        ]
      }
    ],
    "version": "1.0",
    "date_created": "2025-09-26",
    "last_updated": "2025-09-26",
    "contributors": [
      "Zachary Szewczyk"
    ]
  }
]