[
    {
        "information_requirement": "Has the adversary escalated privileges using ptrace system calls?",
        "tactic_id": "TA0004",
        "tactic_name": "Privilege Escalation",
        "indicators": [
            {
                "technique_id": "T1055.008",
                "name": "Ptrace System Calls",
                "evidence": [
                    {
                        "description": "A process targeted by ptrace makes network connections to IP addresses or domains on a threat intelligence feed.",
                        "data_sources": [
                            "Zeek conn.log",
                            "Zeek dns.log",
                            "Linux Auditd logs"
                        ],
                        "data_platforms": [
                            "Network devices",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Correlate process IDs from suspicious ptrace events (from Linux Auditd logs) with network connection events from the same host (Zeek conn.log). Inner join destination IP addresses and queried domains (Zeek dns.log) against a high-confidence threat intelligence feed of known malicious infrastructure. Alert on any matches originating from a process that was recently the target of a ptrace call."
                    },
                    {
                        "description": "A process not associated with legitimate debugging or system tracing makes a 'ptrace' system call, especially targeting a process with higher privileges.",
                        "data_sources": [
                            "Linux Auditd logs"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Create and maintain an allowlist of legitimate processes known to use ptrace (e.g., gdb, strace, ltrace, system profilers, container runtimes like dockerd). Monitor Linux Auditd logs for `syscall=ptrace` events. Alert on any ptrace call initiated by a process executable (`exe`) not on this allowlist. Prioritize alerts where the source process UID is different from the target process UID (e.g., non-root user ptracing a root process)."
                    },
                    {
                        "description": "A low-privilege process uses ptrace to attach to a high-privilege process, followed by the target process loading an unexpected shared library or executing suspicious child processes.",
                        "data_sources": [
                            "Linux Auditd logs",
                            "Sysmon for Linux Event ID 7"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for a sequence of events: 1. A ptrace syscall is recorded in Auditd where the source process UID is non-zero and the target process UID is 0 (root). 2. Correlate using the target process ID (PID) to find subsequent events. 3. Look for the target PID loading a shared object from an unusual location like `/tmp` or `/dev/shm` (Sysmon for Linux Event ID 7) or executing a new process (Auditd `execve` syscall) that is not a typical child process for that target. Use correlation analysis on the PID and a short time window (e.g., 5 seconds) to link these events."
                    },
                    {
                        "description": "Anomalous ptrace activity where the rate or source/target pairings deviate significantly from an established baseline, indicating potential misuse for privilege escalation.",
                        "data_sources": [
                            "Linux Auditd logs"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Establish a statistical baseline of legitimate ptrace activity on critical servers, capturing frequency, source process names, and target process names. Use time series analysis to detect anomalous spikes in ptrace calls. Use descriptive statistics and frequency analysis to identify rare or never-before-seen source-to-target ptrace relationships. Flag pairings that deviate significantly from the baseline (e.g., using Z-score or percentile analysis)."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    },
    {
        "information_requirement": "Is the adversary evading defenses using ptrace system calls?",
        "tactic_id": "TA0005",
        "tactic_name": "Defense Evasion",
        "indicators": [
            {
                "technique_id": "T1055.008",
                "name": "Ptrace System Calls",
                "evidence": [
                    {
                        "description": "A known security agent process (e.g., EDR, antivirus) is the target of a 'ptrace' system call from an unexpected or unauthorized source process.",
                        "data_sources": [
                            "Linux Auditd logs"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Create a specific list of security agent process names running on Linux hosts (e.g., 'falco', 'osqueryd', EDR agent names). Monitor Linux Auditd logs for `syscall=ptrace` events where the target process name is on this list. Filter out legitimate ptrace calls from the security tool's own processes. Alert on any remaining ptrace event targeting a security agent, as this is a strong indicator of a defense evasion attempt."
                    },
                    {
                        "description": "A legitimate, commonly used process (e.g., a web server or browser) executes shell commands or makes network connections inconsistent with its normal function after being targeted by ptrace.",
                        "data_sources": [
                            "Linux Auditd logs",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Servers",
                            "Endpoints",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for sequences where a common process (e.g., 'nginx', 'apache2', 'firefox') is targeted by a `ptrace` call (Auditd). Following this event, monitor the same process ID for suspicious child processes like `/bin/sh` or `/bin/bash` (`execve` syscall in Auditd). Correlate with Zeek conn.log to detect if the process initiates network connections to unusual ports or IP addresses not consistent with its established baseline behavior. Use frequency analysis to baseline normal child processes and network destinations, and alert on deviations."
                    },
                    {
                        "description": "A process, after being targeted by ptrace, opens and reads from sensitive user or system files, or writes a new executable file to a world-writable directory.",
                        "data_sources": [
                            "Linux Auditd logs"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Define a behavioral sequence: 1. A process is targeted by a ptrace syscall. 2. Within a short time window (e.g., 30 seconds), the same process ID opens sensitive files (e.g., `/etc/shadow`, `~/.ssh/id_rsa`, `~/.bash_history`) or writes a file to a directory like `/tmp` or `/dev/shm` and subsequently changes its permissions to executable (`chmod` syscall). Use correlation analysis on the process ID to detect this chain of events. Calculate the entropy of file paths accessed by a process post-ptrace; a sudden increase could indicate malicious discovery."
                    },
                    {
                        "description": "A process targeted by ptrace subsequently attempts to establish a listening network socket or a reverse shell connection, indicative of backdoor installation for defense evasion.",
                        "data_sources": [
                            "Linux Auditd logs",
                            "Zeek conn.log"
                        ],
                        "data_platforms": [
                            "Endpoints",
                            "Servers",
                            "Network devices"
                        ],
                        "nai": "Insert site-specific NAI here",
                        "action": "Monitor for a ptrace event in Auditd logs. Following the event, track the target process ID's activity. Alert if the process executes a sequence of `socket`, `bind`, and `listen` syscalls on a non-standard port. Alternatively, monitor for the process executing a child process (e.g., `/bin/sh -i`) and correlate this with an outbound network connection from the host in Zeek conn.log, which is characteristic of a reverse shell. Use linear regression to see if ptrace events are a predictor for an increase in anomalous outbound connections from a host."
                    }
                ]
            }
        ],
        "version": "2.1",
        "date_created": "2025-05-04",
        "last_updated": "2025-07-20",
        "contributors": [
            "Zachary Szewczyk"
        ]
    }
]
