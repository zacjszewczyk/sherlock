
[
  {
    "Is the adversary developing resources using Artificial Intelligence to support future operations? (TA0042 - Resource Development)": {
      "Indicators": {
        "T1588.007 - Artificial Intelligence": {
          "Receipt of phishing communications or network connections to/from domains/IPs identified in threat intelligence as associated with campaigns known to leverage AI-generated content or tools.": {
            "Data": "Zeek conn.log; Zeek dns.log; Zeek smtp.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Correlate entries in Zeek conn.log (destination IPs/ports), Zeek dns.log (resolved domains), and Zeek smtp.log (sender domains, URLs/attachments in email metadata) against continuously updated Cyber Threat Intelligence (CTI) feeds. Prioritize feeds that specifically flag indicators from campaigns confirmed or strongly suspected to use AI for content generation (e.g., sophisticated phishing lures, malware delivery sites hosted on AI-generated domains). Alert on matches and investigate for related activity, using descriptive statistics to track frequency of such alerts."
          },
          "Anomalous usage of specific code libraries, functions, or structural characteristics in scripts (e.g., PowerShell, Python) that align with known outputs or common artifacts of AI code generation tools when used for malicious purposes.": {
            "Data": "Windows Event ID 4104; Zeek files.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze decoded PowerShell script blocks (Windows Event ID 4104) and scripts extracted from network traffic (Zeek files.log) for specific patterns. These include: 1. Unusual combinations or sequences of commands/APIs not typically seen in legitimate scripts. 2. Overly complex or verbose code for simple tasks. 3. Presence of distinctive comments, variable naming conventions, or structural artifacts researchers associate with AI code generators. Maintain and apply a library of YARA rules incorporating these patterns, updated based on ongoing research into AI-generated malicious scripts. Use correlation analysis to link script execution with other suspicious behaviors."
          },
          "Network traffic to/from domains or URLs exhibiting characteristics of AI-generation (e.g., high linguistic complexity score for domain name, unusual TLD combinations, patterns of rapid registration and short-lived use) and associated with phishing or malware distribution.": {
            "Data": "Zeek http.log; Zeek dns.log; Zeek conn.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze Zeek http.log, dns.log, and conn.log for connections to newly registered domains (NRDs) or domains with low reputation scores. Apply statistical analysis: calculate domain/URL string entropy, n-gram analysis of domain segments, and linguistic complexity scores for domain names to identify candidates for AI generation. Use time series analysis to detect clusters of activity involving short-lived domains. Correlate these features with threat intelligence feeds. Use regression analysis to model and predict the likelihood of a domain being maliciously AI-generated based on these features."
          },
          "Execution of unusually complex or heavily obfuscated scripts (e.g., PowerShell, VBScript, Python) where the obfuscation techniques or logical structures suggest AI-assisted generation or refinement for enhanced evasion.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4688 (process creation, focusing on script interpreters) and Windows Event ID 4104 (PowerShell script block logging) for execution of scripts. Apply entropy analysis to script content to quantify obfuscation levels. Utilize machine learning models or heuristics trained to detect characteristics of AI-generated or AI-enhanced obfuscation (e.g., polymorphic code patterns, multi-layered encoding not typical of human authors). Use time series analysis on the frequency of high-entropy script executions; sudden increases may indicate a new campaign using AI-generated evasive scripts."
          },
          "Rapid or clustered creation, modification, and execution of multiple script or executable files with diverse or algorithmically generated naming conventions on a host, suggesting an automated or AI-driven development/testing pipeline.": {
            "Data": "Windows Event ID 4656; Windows Event ID 4688; Windows Event ID 4104",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor Windows Event ID 4656 (Object Access, filtered for file/directory creation/modification of .ps1, .py, .exe, .dll, etc.), Event ID 4688 (process creation for compilers/interpreters), and Event ID 4104 (PowerShell execution). Correlate these events within short time windows (e.g., minutes to hours) on individual hosts to identify bursts of file operations and executions. Analyze file names for high entropy or programmatic patterns. Use frequency analysis and time series analysis to detect unusual spikes in such activity, potentially indicative of an adversary using AI tools to iterate on malware/scripts locally."
          },
          "Anomalous patterns of outbound network traffic from internal systems to a diverse range of public information sources (search engines, social media, code repositories, paste sites) using sophisticated or varied query parameters, potentially indicative of AI-driven reconnaissance for resource development.": {
            "Data": "Zeek http.log; Zeek dns.log; Zeek conn.log",
            "Data Platform": "Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor outbound HTTP/S traffic (Zeek http.log, dns.log, conn.log) for unusual querying behavior from internal hosts. Establish baselines for normal research/browsing activity per user/host group. Look for: 1. High volume of diverse queries to search engines or their APIs from a single source. 2. Use of complex, programmatically structured search terms (high entropy in query strings). 3. Rapid automated browsing across many unrelated sites or specific targets. 4. Access to numerous paste sites, specialized forums, or code repositories for specific exploits or tools. Use entropy measures on query parameters and requested URLs/domains. Correlate with unusual user agent strings or connection patterns (e.g., non-browser UAs making many search queries). Box-plots for query counts per source can identify outliers."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
