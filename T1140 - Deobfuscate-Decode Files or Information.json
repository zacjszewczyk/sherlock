
[
  {
    "Is the adversary using deobfuscation or decoding techniques to evade defenses? (TA0005 - Defense Evasion)": {
      "Indicators": {
        "T1140 - Deobfuscate-Decode Files or Information": {
          "Execution of a process with a file hash matching a known malicious deobfuscation tool, or a script containing unique strings from known malware deobfuscation routines.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104; Zeek files.log",
            "Data Platform": "Endpoints, Servers, Network devices",
            "NAI": "Insert site-specific NAI here",
            "Action": "Continuously monitor process creation events (Windows Event ID 4688) and compare the file hash of the executed process against a CTI feed of known malicious decoders or standalone tools. Additionally, monitor PowerShell script block logs (Windows Event ID 4104) or files extracted from network traffic (Zeek files.log) for unique, hardcoded variable names, function names, or comments associated with known malware deobfuscation stubs. Alert on any matches."
          },
          "Execution of the certutil.exe utility with command-line arguments specifically used for decoding files, such as '-decode' or '-decodehex'.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for executions of 'certutil.exe'. Create a high-fidelity alert for any command line containing the arguments '-decode', '-decodehex', or the '-urlcache -split -f' combination often used to download and save files. Use frequency analysis to establish a baseline of normal certutil.exe usage and flag rare argument combinations. Correlate these events with the parent process; execution by non-standard processes (e.g., winword.exe, excel.exe) significantly increases suspicion."
          },
          "Execution of PowerShell with command-line arguments or script content containing common deobfuscation methods, such as Base64 decoding, character array reassembly, or XOR operations.": {
            "Data": "Windows Event ID 4688; Windows Event ID 4104",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for `powershell.exe` using the '-EncodedCommand' or '-e' flag. Analyze PowerShell Script Block logs (Windows Event ID 4104) for content containing strings like `[System.Convert]::FromBase64String`, `IEX`, `Invoke-Expression`, `[System.Text.Encoding]`, `[char[]]`, or `-bxor`. Apply entropy calculation (Shannon entropy) to script blocks; blocks with unusually high entropy are strong indicators of packed or encrypted code requiring deobfuscation before execution. Correlate high-entropy blocks with subsequent suspicious network activity or file modification."
          },
          "Use of command-line utilities like 'copy' or 'type' to reassemble a file from multiple parts, a common technique for evading static analysis of the final payload.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Monitor process creation events (Windows Event ID 4688) for `cmd.exe` executing commands like 'copy /b' or 'type'. Flag instances where multiple source files are concatenated into a single output file, especially if the output file has an executable extension (.exe, .dll, .ps1, .bat) or is written to a non-standard directory (e.g., %PUBLIC%, %TEMP%, AppData). Use frequency analysis on the parent processes and destination directories to identify anomalous usage patterns."
          },
          "A process downloads a file from an external source, which is subsequently read by a decoding utility or scripting interpreter, leading to the creation of a new executable file or a network connection.": {
            "Data": "Zeek http.log; Windows Event ID 4688; Windows Event ID 4663; Zeek conn.log",
            "Data Platform": "Network devices, Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Establish a detection sequence by correlating multiple data sources: 1. A process (e.g., bitsadmin, curl, powershell, certutil) downloads a file from an external URL (Zeek http.log, Windows Event ID 4688). 2. The downloaded file is then accessed (Windows Event ID 4663 - Object Access) or passed as an argument to a second process known for decoding (e.g., certutil, powershell). 3. The second process then either creates a new executable file (monitored via Windows Event ID 4663 on .exe/.dll paths) or initiates an outbound network connection (Zeek conn.log) to a new or low-prevalence IP address. Use correlation analysis on process IDs, file paths, and timestamps within a short window (e.g., 1-5 minutes) to link the chain of events."
          },
          "A non-browser process (e.g., Microsoft Office application, script host) spawns a child process that performs decoding or deobfuscation, indicating a malicious payload delivered via a document or another initial access vector.": {
            "Data": "Windows Event ID 4688",
            "Data Platform": "Endpoints, Servers",
            "NAI": "Insert site-specific NAI here",
            "Action": "Analyze process lineage using Windows Event ID 4688. Create a baseline of normal parent-child process relationships for common applications. Flag any instance where a known deobfuscation command (e.g., `certutil -decode`, `powershell -e`, `wscript.exe` with suspicious arguments) is executed by a parent process that is not an interactive shell or expected management tool, particularly `winword.exe`, `excel.exe`, `outlook.exe`, or `mshta.exe`. Use regression analysis or a simple frequency-based model to score the rarity of a given parent-child relationship and identify significant outliers representing this behavior."
          }
        }
      },
      "version": "2.0",
      "last_updated": "2025-05-11"
    }
  }
]
